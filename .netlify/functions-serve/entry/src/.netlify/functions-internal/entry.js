var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key2, value) => key2 in obj ? __defProp(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
var __spreadValues = (a2, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp.call(b2, prop))
      __defNormalProp(a2, prop, b2[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b2)) {
      if (__propIsEnum.call(b2, prop))
        __defNormalProp(a2, prop, b2[prop]);
    }
  return a2;
};
var __spreadProps = (a2, b2) => __defProps(a2, __getOwnPropDescs(b2));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all5) => {
  for (var name in all5)
    __defProp(target, name, { get: all5[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key2 of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key2) && (copyDefault || key2 !== "default"))
        __defProp(target, key2, { get: () => module2[key2], enumerable: !(desc = __getOwnPropDesc(module2, key2)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};

// node_modules/data-uri-to-buffer/dist/index.js
function dataUriToBuffer(uri) {
  if (!/^data:/i.test(uri)) {
    throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
  }
  uri = uri.replace(/\r?\n/g, "");
  const firstComma = uri.indexOf(",");
  if (firstComma === -1 || firstComma <= 4) {
    throw new TypeError("malformed data: URI");
  }
  const meta = uri.substring(5, firstComma).split(";");
  let charset = "";
  let base64 = false;
  const type = meta[0] || "text/plain";
  let typeFull = type;
  for (let i3 = 1; i3 < meta.length; i3++) {
    if (meta[i3] === "base64") {
      base64 = true;
    } else {
      typeFull += `;${meta[i3]}`;
      if (meta[i3].indexOf("charset=") === 0) {
        charset = meta[i3].substring(8);
      }
    }
  }
  if (!meta[0] && !charset.length) {
    typeFull += ";charset=US-ASCII";
    charset = "US-ASCII";
  }
  const encoding = base64 ? "base64" : "ascii";
  const data3 = unescape(uri.substring(firstComma + 1));
  const buffer3 = Buffer.from(data3, encoding);
  buffer3.type = type;
  buffer3.typeFull = typeFull;
  buffer3.charset = charset;
  return buffer3;
}
var dist_default;
var init_dist = __esm({
  "node_modules/data-uri-to-buffer/dist/index.js"() {
    dist_default = dataUriToBuffer;
  }
});

// node_modules/web-streams-polyfill/dist/ponyfill.es2018.js
var require_ponyfill_es2018 = __commonJS({
  "node_modules/web-streams-polyfill/dist/ponyfill.es2018.js"(exports, module2) {
    (function(global2, factory2) {
      typeof exports === "object" && typeof module2 !== "undefined" ? factory2(exports) : typeof define === "function" && define.amd ? define(["exports"], factory2) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory2(global2.WebStreamsPolyfill = {}));
    })(exports, function(exports2) {
      "use strict";
      const SymbolPolyfill2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol : (description) => `Symbol(${description})`;
      function noop3() {
        return void 0;
      }
      function getGlobals() {
        if (typeof self !== "undefined") {
          return self;
        } else if (typeof window !== "undefined") {
          return window;
        } else if (typeof global !== "undefined") {
          return global;
        }
        return void 0;
      }
      const globals = getGlobals();
      function typeIsObject2(x3) {
        return typeof x3 === "object" && x3 !== null || typeof x3 === "function";
      }
      const rethrowAssertionErrorRejection2 = noop3;
      const originalPromise2 = Promise;
      const originalPromiseThen2 = Promise.prototype.then;
      const originalPromiseResolve2 = Promise.resolve.bind(originalPromise2);
      const originalPromiseReject2 = Promise.reject.bind(originalPromise2);
      function newPromise2(executor) {
        return new originalPromise2(executor);
      }
      function promiseResolvedWith2(value) {
        return originalPromiseResolve2(value);
      }
      function promiseRejectedWith2(reason) {
        return originalPromiseReject2(reason);
      }
      function PerformPromiseThen2(promise, onFulfilled, onRejected) {
        return originalPromiseThen2.call(promise, onFulfilled, onRejected);
      }
      function uponPromise2(promise, onFulfilled, onRejected) {
        PerformPromiseThen2(PerformPromiseThen2(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection2);
      }
      function uponFulfillment2(promise, onFulfilled) {
        uponPromise2(promise, onFulfilled);
      }
      function uponRejection2(promise, onRejected) {
        uponPromise2(promise, void 0, onRejected);
      }
      function transformPromiseWith2(promise, fulfillmentHandler, rejectionHandler) {
        return PerformPromiseThen2(promise, fulfillmentHandler, rejectionHandler);
      }
      function setPromiseIsHandledToTrue2(promise) {
        PerformPromiseThen2(promise, void 0, rethrowAssertionErrorRejection2);
      }
      const queueMicrotask2 = (() => {
        const globalQueueMicrotask = globals && globals.queueMicrotask;
        if (typeof globalQueueMicrotask === "function") {
          return globalQueueMicrotask;
        }
        const resolvedPromise = promiseResolvedWith2(void 0);
        return (fn) => PerformPromiseThen2(resolvedPromise, fn);
      })();
      function reflectCall2(F3, V, args) {
        if (typeof F3 !== "function") {
          throw new TypeError("Argument is not a function");
        }
        return Function.prototype.apply.call(F3, V, args);
      }
      function promiseCall2(F3, V, args) {
        try {
          return promiseResolvedWith2(reflectCall2(F3, V, args));
        } catch (value) {
          return promiseRejectedWith2(value);
        }
      }
      const QUEUE_MAX_ARRAY_SIZE2 = 16384;
      class SimpleQueue2 {
        constructor() {
          this._cursor = 0;
          this._size = 0;
          this._front = {
            _elements: [],
            _next: void 0
          };
          this._back = this._front;
          this._cursor = 0;
          this._size = 0;
        }
        get length() {
          return this._size;
        }
        push(element6) {
          const oldBack = this._back;
          let newBack = oldBack;
          if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE2 - 1) {
            newBack = {
              _elements: [],
              _next: void 0
            };
          }
          oldBack._elements.push(element6);
          if (newBack !== oldBack) {
            this._back = newBack;
            oldBack._next = newBack;
          }
          ++this._size;
        }
        shift() {
          const oldFront = this._front;
          let newFront = oldFront;
          const oldCursor = this._cursor;
          let newCursor = oldCursor + 1;
          const elements = oldFront._elements;
          const element6 = elements[oldCursor];
          if (newCursor === QUEUE_MAX_ARRAY_SIZE2) {
            newFront = oldFront._next;
            newCursor = 0;
          }
          --this._size;
          this._cursor = newCursor;
          if (oldFront !== newFront) {
            this._front = newFront;
          }
          elements[oldCursor] = void 0;
          return element6;
        }
        forEach(callback) {
          let i3 = this._cursor;
          let node = this._front;
          let elements = node._elements;
          while (i3 !== elements.length || node._next !== void 0) {
            if (i3 === elements.length) {
              node = node._next;
              elements = node._elements;
              i3 = 0;
              if (elements.length === 0) {
                break;
              }
            }
            callback(elements[i3]);
            ++i3;
          }
        }
        peek() {
          const front = this._front;
          const cursor = this._cursor;
          return front._elements[cursor];
        }
      }
      function ReadableStreamReaderGenericInitialize2(reader, stream) {
        reader._ownerReadableStream = stream;
        stream._reader = reader;
        if (stream._state === "readable") {
          defaultReaderClosedPromiseInitialize2(reader);
        } else if (stream._state === "closed") {
          defaultReaderClosedPromiseInitializeAsResolved2(reader);
        } else {
          defaultReaderClosedPromiseInitializeAsRejected2(reader, stream._storedError);
        }
      }
      function ReadableStreamReaderGenericCancel2(reader, reason) {
        const stream = reader._ownerReadableStream;
        return ReadableStreamCancel2(stream, reason);
      }
      function ReadableStreamReaderGenericRelease2(reader) {
        if (reader._ownerReadableStream._state === "readable") {
          defaultReaderClosedPromiseReject2(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
        } else {
          defaultReaderClosedPromiseResetToRejected2(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
        }
        reader._ownerReadableStream._reader = void 0;
        reader._ownerReadableStream = void 0;
      }
      function readerLockException2(name) {
        return new TypeError("Cannot " + name + " a stream using a released reader");
      }
      function defaultReaderClosedPromiseInitialize2(reader) {
        reader._closedPromise = newPromise2((resolve2, reject) => {
          reader._closedPromise_resolve = resolve2;
          reader._closedPromise_reject = reject;
        });
      }
      function defaultReaderClosedPromiseInitializeAsRejected2(reader, reason) {
        defaultReaderClosedPromiseInitialize2(reader);
        defaultReaderClosedPromiseReject2(reader, reason);
      }
      function defaultReaderClosedPromiseInitializeAsResolved2(reader) {
        defaultReaderClosedPromiseInitialize2(reader);
        defaultReaderClosedPromiseResolve2(reader);
      }
      function defaultReaderClosedPromiseReject2(reader, reason) {
        if (reader._closedPromise_reject === void 0) {
          return;
        }
        setPromiseIsHandledToTrue2(reader._closedPromise);
        reader._closedPromise_reject(reason);
        reader._closedPromise_resolve = void 0;
        reader._closedPromise_reject = void 0;
      }
      function defaultReaderClosedPromiseResetToRejected2(reader, reason) {
        defaultReaderClosedPromiseInitializeAsRejected2(reader, reason);
      }
      function defaultReaderClosedPromiseResolve2(reader) {
        if (reader._closedPromise_resolve === void 0) {
          return;
        }
        reader._closedPromise_resolve(void 0);
        reader._closedPromise_resolve = void 0;
        reader._closedPromise_reject = void 0;
      }
      const AbortSteps2 = SymbolPolyfill2("[[AbortSteps]]");
      const ErrorSteps2 = SymbolPolyfill2("[[ErrorSteps]]");
      const CancelSteps2 = SymbolPolyfill2("[[CancelSteps]]");
      const PullSteps2 = SymbolPolyfill2("[[PullSteps]]");
      const NumberIsFinite2 = Number.isFinite || function(x3) {
        return typeof x3 === "number" && isFinite(x3);
      };
      const MathTrunc2 = Math.trunc || function(v2) {
        return v2 < 0 ? Math.ceil(v2) : Math.floor(v2);
      };
      function isDictionary2(x3) {
        return typeof x3 === "object" || typeof x3 === "function";
      }
      function assertDictionary2(obj, context) {
        if (obj !== void 0 && !isDictionary2(obj)) {
          throw new TypeError(`${context} is not an object.`);
        }
      }
      function assertFunction2(x3, context) {
        if (typeof x3 !== "function") {
          throw new TypeError(`${context} is not a function.`);
        }
      }
      function isObject2(x3) {
        return typeof x3 === "object" && x3 !== null || typeof x3 === "function";
      }
      function assertObject2(x3, context) {
        if (!isObject2(x3)) {
          throw new TypeError(`${context} is not an object.`);
        }
      }
      function assertRequiredArgument2(x3, position3, context) {
        if (x3 === void 0) {
          throw new TypeError(`Parameter ${position3} is required in '${context}'.`);
        }
      }
      function assertRequiredField2(x3, field, context) {
        if (x3 === void 0) {
          throw new TypeError(`${field} is required in '${context}'.`);
        }
      }
      function convertUnrestrictedDouble2(value) {
        return Number(value);
      }
      function censorNegativeZero2(x3) {
        return x3 === 0 ? 0 : x3;
      }
      function integerPart2(x3) {
        return censorNegativeZero2(MathTrunc2(x3));
      }
      function convertUnsignedLongLongWithEnforceRange2(value, context) {
        const lowerBound = 0;
        const upperBound = Number.MAX_SAFE_INTEGER;
        let x3 = Number(value);
        x3 = censorNegativeZero2(x3);
        if (!NumberIsFinite2(x3)) {
          throw new TypeError(`${context} is not a finite number`);
        }
        x3 = integerPart2(x3);
        if (x3 < lowerBound || x3 > upperBound) {
          throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);
        }
        if (!NumberIsFinite2(x3) || x3 === 0) {
          return 0;
        }
        return x3;
      }
      function assertReadableStream2(x3, context) {
        if (!IsReadableStream2(x3)) {
          throw new TypeError(`${context} is not a ReadableStream.`);
        }
      }
      function AcquireReadableStreamDefaultReader2(stream) {
        return new ReadableStreamDefaultReader2(stream);
      }
      function ReadableStreamAddReadRequest2(stream, readRequest) {
        stream._reader._readRequests.push(readRequest);
      }
      function ReadableStreamFulfillReadRequest2(stream, chunk, done) {
        const reader = stream._reader;
        const readRequest = reader._readRequests.shift();
        if (done) {
          readRequest._closeSteps();
        } else {
          readRequest._chunkSteps(chunk);
        }
      }
      function ReadableStreamGetNumReadRequests2(stream) {
        return stream._reader._readRequests.length;
      }
      function ReadableStreamHasDefaultReader2(stream) {
        const reader = stream._reader;
        if (reader === void 0) {
          return false;
        }
        if (!IsReadableStreamDefaultReader2(reader)) {
          return false;
        }
        return true;
      }
      class ReadableStreamDefaultReader2 {
        constructor(stream) {
          assertRequiredArgument2(stream, 1, "ReadableStreamDefaultReader");
          assertReadableStream2(stream, "First parameter");
          if (IsReadableStreamLocked2(stream)) {
            throw new TypeError("This stream has already been locked for exclusive reading by another reader");
          }
          ReadableStreamReaderGenericInitialize2(this, stream);
          this._readRequests = new SimpleQueue2();
        }
        get closed() {
          if (!IsReadableStreamDefaultReader2(this)) {
            return promiseRejectedWith2(defaultReaderBrandCheckException2("closed"));
          }
          return this._closedPromise;
        }
        cancel(reason = void 0) {
          if (!IsReadableStreamDefaultReader2(this)) {
            return promiseRejectedWith2(defaultReaderBrandCheckException2("cancel"));
          }
          if (this._ownerReadableStream === void 0) {
            return promiseRejectedWith2(readerLockException2("cancel"));
          }
          return ReadableStreamReaderGenericCancel2(this, reason);
        }
        read() {
          if (!IsReadableStreamDefaultReader2(this)) {
            return promiseRejectedWith2(defaultReaderBrandCheckException2("read"));
          }
          if (this._ownerReadableStream === void 0) {
            return promiseRejectedWith2(readerLockException2("read from"));
          }
          let resolvePromise;
          let rejectPromise;
          const promise = newPromise2((resolve2, reject) => {
            resolvePromise = resolve2;
            rejectPromise = reject;
          });
          const readRequest = {
            _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
            _closeSteps: () => resolvePromise({ value: void 0, done: true }),
            _errorSteps: (e3) => rejectPromise(e3)
          };
          ReadableStreamDefaultReaderRead2(this, readRequest);
          return promise;
        }
        releaseLock() {
          if (!IsReadableStreamDefaultReader2(this)) {
            throw defaultReaderBrandCheckException2("releaseLock");
          }
          if (this._ownerReadableStream === void 0) {
            return;
          }
          if (this._readRequests.length > 0) {
            throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
          }
          ReadableStreamReaderGenericRelease2(this);
        }
      }
      Object.defineProperties(ReadableStreamDefaultReader2.prototype, {
        cancel: { enumerable: true },
        read: { enumerable: true },
        releaseLock: { enumerable: true },
        closed: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(ReadableStreamDefaultReader2.prototype, SymbolPolyfill2.toStringTag, {
          value: "ReadableStreamDefaultReader",
          configurable: true
        });
      }
      function IsReadableStreamDefaultReader2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_readRequests")) {
          return false;
        }
        return x3 instanceof ReadableStreamDefaultReader2;
      }
      function ReadableStreamDefaultReaderRead2(reader, readRequest) {
        const stream = reader._ownerReadableStream;
        stream._disturbed = true;
        if (stream._state === "closed") {
          readRequest._closeSteps();
        } else if (stream._state === "errored") {
          readRequest._errorSteps(stream._storedError);
        } else {
          stream._readableStreamController[PullSteps2](readRequest);
        }
      }
      function defaultReaderBrandCheckException2(name) {
        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);
      }
      const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {
      }).prototype);
      class ReadableStreamAsyncIteratorImpl2 {
        constructor(reader, preventCancel) {
          this._ongoingPromise = void 0;
          this._isFinished = false;
          this._reader = reader;
          this._preventCancel = preventCancel;
        }
        next() {
          const nextSteps = () => this._nextSteps();
          this._ongoingPromise = this._ongoingPromise ? transformPromiseWith2(this._ongoingPromise, nextSteps, nextSteps) : nextSteps();
          return this._ongoingPromise;
        }
        return(value) {
          const returnSteps = () => this._returnSteps(value);
          return this._ongoingPromise ? transformPromiseWith2(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
        }
        _nextSteps() {
          if (this._isFinished) {
            return Promise.resolve({ value: void 0, done: true });
          }
          const reader = this._reader;
          if (reader._ownerReadableStream === void 0) {
            return promiseRejectedWith2(readerLockException2("iterate"));
          }
          let resolvePromise;
          let rejectPromise;
          const promise = newPromise2((resolve2, reject) => {
            resolvePromise = resolve2;
            rejectPromise = reject;
          });
          const readRequest = {
            _chunkSteps: (chunk) => {
              this._ongoingPromise = void 0;
              queueMicrotask2(() => resolvePromise({ value: chunk, done: false }));
            },
            _closeSteps: () => {
              this._ongoingPromise = void 0;
              this._isFinished = true;
              ReadableStreamReaderGenericRelease2(reader);
              resolvePromise({ value: void 0, done: true });
            },
            _errorSteps: (reason) => {
              this._ongoingPromise = void 0;
              this._isFinished = true;
              ReadableStreamReaderGenericRelease2(reader);
              rejectPromise(reason);
            }
          };
          ReadableStreamDefaultReaderRead2(reader, readRequest);
          return promise;
        }
        _returnSteps(value) {
          if (this._isFinished) {
            return Promise.resolve({ value, done: true });
          }
          this._isFinished = true;
          const reader = this._reader;
          if (reader._ownerReadableStream === void 0) {
            return promiseRejectedWith2(readerLockException2("finish iterating"));
          }
          if (!this._preventCancel) {
            const result = ReadableStreamReaderGenericCancel2(reader, value);
            ReadableStreamReaderGenericRelease2(reader);
            return transformPromiseWith2(result, () => ({ value, done: true }));
          }
          ReadableStreamReaderGenericRelease2(reader);
          return promiseResolvedWith2({ value, done: true });
        }
      }
      const ReadableStreamAsyncIteratorPrototype2 = {
        next() {
          if (!IsReadableStreamAsyncIterator2(this)) {
            return promiseRejectedWith2(streamAsyncIteratorBrandCheckException2("next"));
          }
          return this._asyncIteratorImpl.next();
        },
        return(value) {
          if (!IsReadableStreamAsyncIterator2(this)) {
            return promiseRejectedWith2(streamAsyncIteratorBrandCheckException2("return"));
          }
          return this._asyncIteratorImpl.return(value);
        }
      };
      if (AsyncIteratorPrototype !== void 0) {
        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype2, AsyncIteratorPrototype);
      }
      function AcquireReadableStreamAsyncIterator2(stream, preventCancel) {
        const reader = AcquireReadableStreamDefaultReader2(stream);
        const impl = new ReadableStreamAsyncIteratorImpl2(reader, preventCancel);
        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype2);
        iterator._asyncIteratorImpl = impl;
        return iterator;
      }
      function IsReadableStreamAsyncIterator2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_asyncIteratorImpl")) {
          return false;
        }
        try {
          return x3._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl2;
        } catch (_a8) {
          return false;
        }
      }
      function streamAsyncIteratorBrandCheckException2(name) {
        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);
      }
      const NumberIsNaN2 = Number.isNaN || function(x3) {
        return x3 !== x3;
      };
      function CreateArrayFromList2(elements) {
        return elements.slice();
      }
      function CopyDataBlockBytes2(dest, destOffset, src2, srcOffset, n2) {
        new Uint8Array(dest).set(new Uint8Array(src2, srcOffset, n2), destOffset);
      }
      function TransferArrayBuffer2(O2) {
        return O2;
      }
      function IsDetachedBuffer2(O2) {
        return false;
      }
      function ArrayBufferSlice2(buffer3, begin, end) {
        if (buffer3.slice) {
          return buffer3.slice(begin, end);
        }
        const length = end - begin;
        const slice2 = new ArrayBuffer(length);
        CopyDataBlockBytes2(slice2, 0, buffer3, begin, length);
        return slice2;
      }
      function IsNonNegativeNumber2(v2) {
        if (typeof v2 !== "number") {
          return false;
        }
        if (NumberIsNaN2(v2)) {
          return false;
        }
        if (v2 < 0) {
          return false;
        }
        return true;
      }
      function CloneAsUint8Array2(O2) {
        const buffer3 = ArrayBufferSlice2(O2.buffer, O2.byteOffset, O2.byteOffset + O2.byteLength);
        return new Uint8Array(buffer3);
      }
      function DequeueValue2(container) {
        const pair = container._queue.shift();
        container._queueTotalSize -= pair.size;
        if (container._queueTotalSize < 0) {
          container._queueTotalSize = 0;
        }
        return pair.value;
      }
      function EnqueueValueWithSize2(container, value, size) {
        if (!IsNonNegativeNumber2(size) || size === Infinity) {
          throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
        }
        container._queue.push({ value, size });
        container._queueTotalSize += size;
      }
      function PeekQueueValue2(container) {
        const pair = container._queue.peek();
        return pair.value;
      }
      function ResetQueue2(container) {
        container._queue = new SimpleQueue2();
        container._queueTotalSize = 0;
      }
      class ReadableStreamBYOBRequest2 {
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get view() {
          if (!IsReadableStreamBYOBRequest2(this)) {
            throw byobRequestBrandCheckException2("view");
          }
          return this._view;
        }
        respond(bytesWritten) {
          if (!IsReadableStreamBYOBRequest2(this)) {
            throw byobRequestBrandCheckException2("respond");
          }
          assertRequiredArgument2(bytesWritten, 1, "respond");
          bytesWritten = convertUnsignedLongLongWithEnforceRange2(bytesWritten, "First parameter");
          if (this._associatedReadableByteStreamController === void 0) {
            throw new TypeError("This BYOB request has been invalidated");
          }
          if (IsDetachedBuffer2(this._view.buffer))
            ;
          ReadableByteStreamControllerRespond2(this._associatedReadableByteStreamController, bytesWritten);
        }
        respondWithNewView(view) {
          if (!IsReadableStreamBYOBRequest2(this)) {
            throw byobRequestBrandCheckException2("respondWithNewView");
          }
          assertRequiredArgument2(view, 1, "respondWithNewView");
          if (!ArrayBuffer.isView(view)) {
            throw new TypeError("You can only respond with array buffer views");
          }
          if (this._associatedReadableByteStreamController === void 0) {
            throw new TypeError("This BYOB request has been invalidated");
          }
          if (IsDetachedBuffer2(view.buffer))
            ;
          ReadableByteStreamControllerRespondWithNewView2(this._associatedReadableByteStreamController, view);
        }
      }
      Object.defineProperties(ReadableStreamBYOBRequest2.prototype, {
        respond: { enumerable: true },
        respondWithNewView: { enumerable: true },
        view: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(ReadableStreamBYOBRequest2.prototype, SymbolPolyfill2.toStringTag, {
          value: "ReadableStreamBYOBRequest",
          configurable: true
        });
      }
      class ReadableByteStreamController2 {
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get byobRequest() {
          if (!IsReadableByteStreamController2(this)) {
            throw byteStreamControllerBrandCheckException2("byobRequest");
          }
          return ReadableByteStreamControllerGetBYOBRequest2(this);
        }
        get desiredSize() {
          if (!IsReadableByteStreamController2(this)) {
            throw byteStreamControllerBrandCheckException2("desiredSize");
          }
          return ReadableByteStreamControllerGetDesiredSize2(this);
        }
        close() {
          if (!IsReadableByteStreamController2(this)) {
            throw byteStreamControllerBrandCheckException2("close");
          }
          if (this._closeRequested) {
            throw new TypeError("The stream has already been closed; do not close it again!");
          }
          const state = this._controlledReadableByteStream._state;
          if (state !== "readable") {
            throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);
          }
          ReadableByteStreamControllerClose2(this);
        }
        enqueue(chunk) {
          if (!IsReadableByteStreamController2(this)) {
            throw byteStreamControllerBrandCheckException2("enqueue");
          }
          assertRequiredArgument2(chunk, 1, "enqueue");
          if (!ArrayBuffer.isView(chunk)) {
            throw new TypeError("chunk must be an array buffer view");
          }
          if (chunk.byteLength === 0) {
            throw new TypeError("chunk must have non-zero byteLength");
          }
          if (chunk.buffer.byteLength === 0) {
            throw new TypeError(`chunk's buffer must have non-zero byteLength`);
          }
          if (this._closeRequested) {
            throw new TypeError("stream is closed or draining");
          }
          const state = this._controlledReadableByteStream._state;
          if (state !== "readable") {
            throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);
          }
          ReadableByteStreamControllerEnqueue2(this, chunk);
        }
        error(e3 = void 0) {
          if (!IsReadableByteStreamController2(this)) {
            throw byteStreamControllerBrandCheckException2("error");
          }
          ReadableByteStreamControllerError2(this, e3);
        }
        [CancelSteps2](reason) {
          ReadableByteStreamControllerClearPendingPullIntos2(this);
          ResetQueue2(this);
          const result = this._cancelAlgorithm(reason);
          ReadableByteStreamControllerClearAlgorithms2(this);
          return result;
        }
        [PullSteps2](readRequest) {
          const stream = this._controlledReadableByteStream;
          if (this._queueTotalSize > 0) {
            const entry = this._queue.shift();
            this._queueTotalSize -= entry.byteLength;
            ReadableByteStreamControllerHandleQueueDrain2(this);
            const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);
            readRequest._chunkSteps(view);
            return;
          }
          const autoAllocateChunkSize = this._autoAllocateChunkSize;
          if (autoAllocateChunkSize !== void 0) {
            let buffer3;
            try {
              buffer3 = new ArrayBuffer(autoAllocateChunkSize);
            } catch (bufferE) {
              readRequest._errorSteps(bufferE);
              return;
            }
            const pullIntoDescriptor = {
              buffer: buffer3,
              bufferByteLength: autoAllocateChunkSize,
              byteOffset: 0,
              byteLength: autoAllocateChunkSize,
              bytesFilled: 0,
              elementSize: 1,
              viewConstructor: Uint8Array,
              readerType: "default"
            };
            this._pendingPullIntos.push(pullIntoDescriptor);
          }
          ReadableStreamAddReadRequest2(stream, readRequest);
          ReadableByteStreamControllerCallPullIfNeeded2(this);
        }
      }
      Object.defineProperties(ReadableByteStreamController2.prototype, {
        close: { enumerable: true },
        enqueue: { enumerable: true },
        error: { enumerable: true },
        byobRequest: { enumerable: true },
        desiredSize: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(ReadableByteStreamController2.prototype, SymbolPolyfill2.toStringTag, {
          value: "ReadableByteStreamController",
          configurable: true
        });
      }
      function IsReadableByteStreamController2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_controlledReadableByteStream")) {
          return false;
        }
        return x3 instanceof ReadableByteStreamController2;
      }
      function IsReadableStreamBYOBRequest2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_associatedReadableByteStreamController")) {
          return false;
        }
        return x3 instanceof ReadableStreamBYOBRequest2;
      }
      function ReadableByteStreamControllerCallPullIfNeeded2(controller) {
        const shouldPull = ReadableByteStreamControllerShouldCallPull2(controller);
        if (!shouldPull) {
          return;
        }
        if (controller._pulling) {
          controller._pullAgain = true;
          return;
        }
        controller._pulling = true;
        const pullPromise = controller._pullAlgorithm();
        uponPromise2(pullPromise, () => {
          controller._pulling = false;
          if (controller._pullAgain) {
            controller._pullAgain = false;
            ReadableByteStreamControllerCallPullIfNeeded2(controller);
          }
        }, (e3) => {
          ReadableByteStreamControllerError2(controller, e3);
        });
      }
      function ReadableByteStreamControllerClearPendingPullIntos2(controller) {
        ReadableByteStreamControllerInvalidateBYOBRequest2(controller);
        controller._pendingPullIntos = new SimpleQueue2();
      }
      function ReadableByteStreamControllerCommitPullIntoDescriptor2(stream, pullIntoDescriptor) {
        let done = false;
        if (stream._state === "closed") {
          done = true;
        }
        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor2(pullIntoDescriptor);
        if (pullIntoDescriptor.readerType === "default") {
          ReadableStreamFulfillReadRequest2(stream, filledView, done);
        } else {
          ReadableStreamFulfillReadIntoRequest2(stream, filledView, done);
        }
      }
      function ReadableByteStreamControllerConvertPullIntoDescriptor2(pullIntoDescriptor) {
        const bytesFilled = pullIntoDescriptor.bytesFilled;
        const elementSize = pullIntoDescriptor.elementSize;
        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
      }
      function ReadableByteStreamControllerEnqueueChunkToQueue2(controller, buffer3, byteOffset, byteLength) {
        controller._queue.push({ buffer: buffer3, byteOffset, byteLength });
        controller._queueTotalSize += byteLength;
      }
      function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue2(controller, pullIntoDescriptor) {
        const elementSize = pullIntoDescriptor.elementSize;
        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
        let totalBytesToCopyRemaining = maxBytesToCopy;
        let ready = false;
        if (maxAlignedBytes > currentAlignedBytes) {
          totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
          ready = true;
        }
        const queue = controller._queue;
        while (totalBytesToCopyRemaining > 0) {
          const headOfQueue = queue.peek();
          const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
          const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
          CopyDataBlockBytes2(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
          if (headOfQueue.byteLength === bytesToCopy) {
            queue.shift();
          } else {
            headOfQueue.byteOffset += bytesToCopy;
            headOfQueue.byteLength -= bytesToCopy;
          }
          controller._queueTotalSize -= bytesToCopy;
          ReadableByteStreamControllerFillHeadPullIntoDescriptor2(controller, bytesToCopy, pullIntoDescriptor);
          totalBytesToCopyRemaining -= bytesToCopy;
        }
        return ready;
      }
      function ReadableByteStreamControllerFillHeadPullIntoDescriptor2(controller, size, pullIntoDescriptor) {
        pullIntoDescriptor.bytesFilled += size;
      }
      function ReadableByteStreamControllerHandleQueueDrain2(controller) {
        if (controller._queueTotalSize === 0 && controller._closeRequested) {
          ReadableByteStreamControllerClearAlgorithms2(controller);
          ReadableStreamClose2(controller._controlledReadableByteStream);
        } else {
          ReadableByteStreamControllerCallPullIfNeeded2(controller);
        }
      }
      function ReadableByteStreamControllerInvalidateBYOBRequest2(controller) {
        if (controller._byobRequest === null) {
          return;
        }
        controller._byobRequest._associatedReadableByteStreamController = void 0;
        controller._byobRequest._view = null;
        controller._byobRequest = null;
      }
      function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue2(controller) {
        while (controller._pendingPullIntos.length > 0) {
          if (controller._queueTotalSize === 0) {
            return;
          }
          const pullIntoDescriptor = controller._pendingPullIntos.peek();
          if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue2(controller, pullIntoDescriptor)) {
            ReadableByteStreamControllerShiftPendingPullInto2(controller);
            ReadableByteStreamControllerCommitPullIntoDescriptor2(controller._controlledReadableByteStream, pullIntoDescriptor);
          }
        }
      }
      function ReadableByteStreamControllerPullInto2(controller, view, readIntoRequest) {
        const stream = controller._controlledReadableByteStream;
        let elementSize = 1;
        if (view.constructor !== DataView) {
          elementSize = view.constructor.BYTES_PER_ELEMENT;
        }
        const ctor = view.constructor;
        const buffer3 = TransferArrayBuffer2(view.buffer);
        const pullIntoDescriptor = {
          buffer: buffer3,
          bufferByteLength: buffer3.byteLength,
          byteOffset: view.byteOffset,
          byteLength: view.byteLength,
          bytesFilled: 0,
          elementSize,
          viewConstructor: ctor,
          readerType: "byob"
        };
        if (controller._pendingPullIntos.length > 0) {
          controller._pendingPullIntos.push(pullIntoDescriptor);
          ReadableStreamAddReadIntoRequest2(stream, readIntoRequest);
          return;
        }
        if (stream._state === "closed") {
          const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
          readIntoRequest._closeSteps(emptyView);
          return;
        }
        if (controller._queueTotalSize > 0) {
          if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue2(controller, pullIntoDescriptor)) {
            const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor2(pullIntoDescriptor);
            ReadableByteStreamControllerHandleQueueDrain2(controller);
            readIntoRequest._chunkSteps(filledView);
            return;
          }
          if (controller._closeRequested) {
            const e3 = new TypeError("Insufficient bytes to fill elements in the given buffer");
            ReadableByteStreamControllerError2(controller, e3);
            readIntoRequest._errorSteps(e3);
            return;
          }
        }
        controller._pendingPullIntos.push(pullIntoDescriptor);
        ReadableStreamAddReadIntoRequest2(stream, readIntoRequest);
        ReadableByteStreamControllerCallPullIfNeeded2(controller);
      }
      function ReadableByteStreamControllerRespondInClosedState2(controller, firstDescriptor) {
        const stream = controller._controlledReadableByteStream;
        if (ReadableStreamHasBYOBReader2(stream)) {
          while (ReadableStreamGetNumReadIntoRequests2(stream) > 0) {
            const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto2(controller);
            ReadableByteStreamControllerCommitPullIntoDescriptor2(stream, pullIntoDescriptor);
          }
        }
      }
      function ReadableByteStreamControllerRespondInReadableState2(controller, bytesWritten, pullIntoDescriptor) {
        ReadableByteStreamControllerFillHeadPullIntoDescriptor2(controller, bytesWritten, pullIntoDescriptor);
        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
          return;
        }
        ReadableByteStreamControllerShiftPendingPullInto2(controller);
        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
        if (remainderSize > 0) {
          const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
          const remainder = ArrayBufferSlice2(pullIntoDescriptor.buffer, end - remainderSize, end);
          ReadableByteStreamControllerEnqueueChunkToQueue2(controller, remainder, 0, remainder.byteLength);
        }
        pullIntoDescriptor.bytesFilled -= remainderSize;
        ReadableByteStreamControllerCommitPullIntoDescriptor2(controller._controlledReadableByteStream, pullIntoDescriptor);
        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue2(controller);
      }
      function ReadableByteStreamControllerRespondInternal2(controller, bytesWritten) {
        const firstDescriptor = controller._pendingPullIntos.peek();
        ReadableByteStreamControllerInvalidateBYOBRequest2(controller);
        const state = controller._controlledReadableByteStream._state;
        if (state === "closed") {
          ReadableByteStreamControllerRespondInClosedState2(controller);
        } else {
          ReadableByteStreamControllerRespondInReadableState2(controller, bytesWritten, firstDescriptor);
        }
        ReadableByteStreamControllerCallPullIfNeeded2(controller);
      }
      function ReadableByteStreamControllerShiftPendingPullInto2(controller) {
        const descriptor = controller._pendingPullIntos.shift();
        return descriptor;
      }
      function ReadableByteStreamControllerShouldCallPull2(controller) {
        const stream = controller._controlledReadableByteStream;
        if (stream._state !== "readable") {
          return false;
        }
        if (controller._closeRequested) {
          return false;
        }
        if (!controller._started) {
          return false;
        }
        if (ReadableStreamHasDefaultReader2(stream) && ReadableStreamGetNumReadRequests2(stream) > 0) {
          return true;
        }
        if (ReadableStreamHasBYOBReader2(stream) && ReadableStreamGetNumReadIntoRequests2(stream) > 0) {
          return true;
        }
        const desiredSize = ReadableByteStreamControllerGetDesiredSize2(controller);
        if (desiredSize > 0) {
          return true;
        }
        return false;
      }
      function ReadableByteStreamControllerClearAlgorithms2(controller) {
        controller._pullAlgorithm = void 0;
        controller._cancelAlgorithm = void 0;
      }
      function ReadableByteStreamControllerClose2(controller) {
        const stream = controller._controlledReadableByteStream;
        if (controller._closeRequested || stream._state !== "readable") {
          return;
        }
        if (controller._queueTotalSize > 0) {
          controller._closeRequested = true;
          return;
        }
        if (controller._pendingPullIntos.length > 0) {
          const firstPendingPullInto = controller._pendingPullIntos.peek();
          if (firstPendingPullInto.bytesFilled > 0) {
            const e3 = new TypeError("Insufficient bytes to fill elements in the given buffer");
            ReadableByteStreamControllerError2(controller, e3);
            throw e3;
          }
        }
        ReadableByteStreamControllerClearAlgorithms2(controller);
        ReadableStreamClose2(stream);
      }
      function ReadableByteStreamControllerEnqueue2(controller, chunk) {
        const stream = controller._controlledReadableByteStream;
        if (controller._closeRequested || stream._state !== "readable") {
          return;
        }
        const buffer3 = chunk.buffer;
        const byteOffset = chunk.byteOffset;
        const byteLength = chunk.byteLength;
        const transferredBuffer = TransferArrayBuffer2(buffer3);
        if (controller._pendingPullIntos.length > 0) {
          const firstPendingPullInto = controller._pendingPullIntos.peek();
          if (IsDetachedBuffer2(firstPendingPullInto.buffer))
            ;
          firstPendingPullInto.buffer = TransferArrayBuffer2(firstPendingPullInto.buffer);
        }
        ReadableByteStreamControllerInvalidateBYOBRequest2(controller);
        if (ReadableStreamHasDefaultReader2(stream)) {
          if (ReadableStreamGetNumReadRequests2(stream) === 0) {
            ReadableByteStreamControllerEnqueueChunkToQueue2(controller, transferredBuffer, byteOffset, byteLength);
          } else {
            if (controller._pendingPullIntos.length > 0) {
              ReadableByteStreamControllerShiftPendingPullInto2(controller);
            }
            const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
            ReadableStreamFulfillReadRequest2(stream, transferredView, false);
          }
        } else if (ReadableStreamHasBYOBReader2(stream)) {
          ReadableByteStreamControllerEnqueueChunkToQueue2(controller, transferredBuffer, byteOffset, byteLength);
          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue2(controller);
        } else {
          ReadableByteStreamControllerEnqueueChunkToQueue2(controller, transferredBuffer, byteOffset, byteLength);
        }
        ReadableByteStreamControllerCallPullIfNeeded2(controller);
      }
      function ReadableByteStreamControllerError2(controller, e3) {
        const stream = controller._controlledReadableByteStream;
        if (stream._state !== "readable") {
          return;
        }
        ReadableByteStreamControllerClearPendingPullIntos2(controller);
        ResetQueue2(controller);
        ReadableByteStreamControllerClearAlgorithms2(controller);
        ReadableStreamError2(stream, e3);
      }
      function ReadableByteStreamControllerGetBYOBRequest2(controller) {
        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
          const byobRequest = Object.create(ReadableStreamBYOBRequest2.prototype);
          SetUpReadableStreamBYOBRequest2(byobRequest, controller, view);
          controller._byobRequest = byobRequest;
        }
        return controller._byobRequest;
      }
      function ReadableByteStreamControllerGetDesiredSize2(controller) {
        const state = controller._controlledReadableByteStream._state;
        if (state === "errored") {
          return null;
        }
        if (state === "closed") {
          return 0;
        }
        return controller._strategyHWM - controller._queueTotalSize;
      }
      function ReadableByteStreamControllerRespond2(controller, bytesWritten) {
        const firstDescriptor = controller._pendingPullIntos.peek();
        const state = controller._controlledReadableByteStream._state;
        if (state === "closed") {
          if (bytesWritten !== 0) {
            throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
          }
        } else {
          if (bytesWritten === 0) {
            throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
          }
          if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {
            throw new RangeError("bytesWritten out of range");
          }
        }
        firstDescriptor.buffer = TransferArrayBuffer2(firstDescriptor.buffer);
        ReadableByteStreamControllerRespondInternal2(controller, bytesWritten);
      }
      function ReadableByteStreamControllerRespondWithNewView2(controller, view) {
        const firstDescriptor = controller._pendingPullIntos.peek();
        const state = controller._controlledReadableByteStream._state;
        if (state === "closed") {
          if (view.byteLength !== 0) {
            throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
          }
        } else {
          if (view.byteLength === 0) {
            throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
          }
        }
        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
          throw new RangeError("The region specified by view does not match byobRequest");
        }
        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {
          throw new RangeError("The buffer of view has different capacity than byobRequest");
        }
        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {
          throw new RangeError("The region specified by view is larger than byobRequest");
        }
        const viewByteLength = view.byteLength;
        firstDescriptor.buffer = TransferArrayBuffer2(view.buffer);
        ReadableByteStreamControllerRespondInternal2(controller, viewByteLength);
      }
      function SetUpReadableByteStreamController2(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
        controller._controlledReadableByteStream = stream;
        controller._pullAgain = false;
        controller._pulling = false;
        controller._byobRequest = null;
        controller._queue = controller._queueTotalSize = void 0;
        ResetQueue2(controller);
        controller._closeRequested = false;
        controller._started = false;
        controller._strategyHWM = highWaterMark;
        controller._pullAlgorithm = pullAlgorithm;
        controller._cancelAlgorithm = cancelAlgorithm;
        controller._autoAllocateChunkSize = autoAllocateChunkSize;
        controller._pendingPullIntos = new SimpleQueue2();
        stream._readableStreamController = controller;
        const startResult = startAlgorithm();
        uponPromise2(promiseResolvedWith2(startResult), () => {
          controller._started = true;
          ReadableByteStreamControllerCallPullIfNeeded2(controller);
        }, (r3) => {
          ReadableByteStreamControllerError2(controller, r3);
        });
      }
      function SetUpReadableByteStreamControllerFromUnderlyingSource2(stream, underlyingByteSource, highWaterMark) {
        const controller = Object.create(ReadableByteStreamController2.prototype);
        let startAlgorithm = () => void 0;
        let pullAlgorithm = () => promiseResolvedWith2(void 0);
        let cancelAlgorithm = () => promiseResolvedWith2(void 0);
        if (underlyingByteSource.start !== void 0) {
          startAlgorithm = () => underlyingByteSource.start(controller);
        }
        if (underlyingByteSource.pull !== void 0) {
          pullAlgorithm = () => underlyingByteSource.pull(controller);
        }
        if (underlyingByteSource.cancel !== void 0) {
          cancelAlgorithm = (reason) => underlyingByteSource.cancel(reason);
        }
        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
        if (autoAllocateChunkSize === 0) {
          throw new TypeError("autoAllocateChunkSize must be greater than 0");
        }
        SetUpReadableByteStreamController2(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
      }
      function SetUpReadableStreamBYOBRequest2(request, controller, view) {
        request._associatedReadableByteStreamController = controller;
        request._view = view;
      }
      function byobRequestBrandCheckException2(name) {
        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);
      }
      function byteStreamControllerBrandCheckException2(name) {
        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);
      }
      function AcquireReadableStreamBYOBReader2(stream) {
        return new ReadableStreamBYOBReader2(stream);
      }
      function ReadableStreamAddReadIntoRequest2(stream, readIntoRequest) {
        stream._reader._readIntoRequests.push(readIntoRequest);
      }
      function ReadableStreamFulfillReadIntoRequest2(stream, chunk, done) {
        const reader = stream._reader;
        const readIntoRequest = reader._readIntoRequests.shift();
        if (done) {
          readIntoRequest._closeSteps(chunk);
        } else {
          readIntoRequest._chunkSteps(chunk);
        }
      }
      function ReadableStreamGetNumReadIntoRequests2(stream) {
        return stream._reader._readIntoRequests.length;
      }
      function ReadableStreamHasBYOBReader2(stream) {
        const reader = stream._reader;
        if (reader === void 0) {
          return false;
        }
        if (!IsReadableStreamBYOBReader2(reader)) {
          return false;
        }
        return true;
      }
      class ReadableStreamBYOBReader2 {
        constructor(stream) {
          assertRequiredArgument2(stream, 1, "ReadableStreamBYOBReader");
          assertReadableStream2(stream, "First parameter");
          if (IsReadableStreamLocked2(stream)) {
            throw new TypeError("This stream has already been locked for exclusive reading by another reader");
          }
          if (!IsReadableByteStreamController2(stream._readableStreamController)) {
            throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
          }
          ReadableStreamReaderGenericInitialize2(this, stream);
          this._readIntoRequests = new SimpleQueue2();
        }
        get closed() {
          if (!IsReadableStreamBYOBReader2(this)) {
            return promiseRejectedWith2(byobReaderBrandCheckException2("closed"));
          }
          return this._closedPromise;
        }
        cancel(reason = void 0) {
          if (!IsReadableStreamBYOBReader2(this)) {
            return promiseRejectedWith2(byobReaderBrandCheckException2("cancel"));
          }
          if (this._ownerReadableStream === void 0) {
            return promiseRejectedWith2(readerLockException2("cancel"));
          }
          return ReadableStreamReaderGenericCancel2(this, reason);
        }
        read(view) {
          if (!IsReadableStreamBYOBReader2(this)) {
            return promiseRejectedWith2(byobReaderBrandCheckException2("read"));
          }
          if (!ArrayBuffer.isView(view)) {
            return promiseRejectedWith2(new TypeError("view must be an array buffer view"));
          }
          if (view.byteLength === 0) {
            return promiseRejectedWith2(new TypeError("view must have non-zero byteLength"));
          }
          if (view.buffer.byteLength === 0) {
            return promiseRejectedWith2(new TypeError(`view's buffer must have non-zero byteLength`));
          }
          if (IsDetachedBuffer2(view.buffer))
            ;
          if (this._ownerReadableStream === void 0) {
            return promiseRejectedWith2(readerLockException2("read from"));
          }
          let resolvePromise;
          let rejectPromise;
          const promise = newPromise2((resolve2, reject) => {
            resolvePromise = resolve2;
            rejectPromise = reject;
          });
          const readIntoRequest = {
            _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
            _closeSteps: (chunk) => resolvePromise({ value: chunk, done: true }),
            _errorSteps: (e3) => rejectPromise(e3)
          };
          ReadableStreamBYOBReaderRead2(this, view, readIntoRequest);
          return promise;
        }
        releaseLock() {
          if (!IsReadableStreamBYOBReader2(this)) {
            throw byobReaderBrandCheckException2("releaseLock");
          }
          if (this._ownerReadableStream === void 0) {
            return;
          }
          if (this._readIntoRequests.length > 0) {
            throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
          }
          ReadableStreamReaderGenericRelease2(this);
        }
      }
      Object.defineProperties(ReadableStreamBYOBReader2.prototype, {
        cancel: { enumerable: true },
        read: { enumerable: true },
        releaseLock: { enumerable: true },
        closed: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(ReadableStreamBYOBReader2.prototype, SymbolPolyfill2.toStringTag, {
          value: "ReadableStreamBYOBReader",
          configurable: true
        });
      }
      function IsReadableStreamBYOBReader2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_readIntoRequests")) {
          return false;
        }
        return x3 instanceof ReadableStreamBYOBReader2;
      }
      function ReadableStreamBYOBReaderRead2(reader, view, readIntoRequest) {
        const stream = reader._ownerReadableStream;
        stream._disturbed = true;
        if (stream._state === "errored") {
          readIntoRequest._errorSteps(stream._storedError);
        } else {
          ReadableByteStreamControllerPullInto2(stream._readableStreamController, view, readIntoRequest);
        }
      }
      function byobReaderBrandCheckException2(name) {
        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);
      }
      function ExtractHighWaterMark2(strategy, defaultHWM) {
        const { highWaterMark } = strategy;
        if (highWaterMark === void 0) {
          return defaultHWM;
        }
        if (NumberIsNaN2(highWaterMark) || highWaterMark < 0) {
          throw new RangeError("Invalid highWaterMark");
        }
        return highWaterMark;
      }
      function ExtractSizeAlgorithm2(strategy) {
        const { size } = strategy;
        if (!size) {
          return () => 1;
        }
        return size;
      }
      function convertQueuingStrategy2(init2, context) {
        assertDictionary2(init2, context);
        const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
        const size = init2 === null || init2 === void 0 ? void 0 : init2.size;
        return {
          highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble2(highWaterMark),
          size: size === void 0 ? void 0 : convertQueuingStrategySize2(size, `${context} has member 'size' that`)
        };
      }
      function convertQueuingStrategySize2(fn, context) {
        assertFunction2(fn, context);
        return (chunk) => convertUnrestrictedDouble2(fn(chunk));
      }
      function convertUnderlyingSink2(original, context) {
        assertDictionary2(original, context);
        const abort = original === null || original === void 0 ? void 0 : original.abort;
        const close = original === null || original === void 0 ? void 0 : original.close;
        const start3 = original === null || original === void 0 ? void 0 : original.start;
        const type = original === null || original === void 0 ? void 0 : original.type;
        const write = original === null || original === void 0 ? void 0 : original.write;
        return {
          abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback2(abort, original, `${context} has member 'abort' that`),
          close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback2(close, original, `${context} has member 'close' that`),
          start: start3 === void 0 ? void 0 : convertUnderlyingSinkStartCallback2(start3, original, `${context} has member 'start' that`),
          write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback2(write, original, `${context} has member 'write' that`),
          type
        };
      }
      function convertUnderlyingSinkAbortCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return (reason) => promiseCall2(fn, original, [reason]);
      }
      function convertUnderlyingSinkCloseCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return () => promiseCall2(fn, original, []);
      }
      function convertUnderlyingSinkStartCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return (controller) => reflectCall2(fn, original, [controller]);
      }
      function convertUnderlyingSinkWriteCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return (chunk, controller) => promiseCall2(fn, original, [chunk, controller]);
      }
      function assertWritableStream2(x3, context) {
        if (!IsWritableStream2(x3)) {
          throw new TypeError(`${context} is not a WritableStream.`);
        }
      }
      function isAbortSignal3(value) {
        if (typeof value !== "object" || value === null) {
          return false;
        }
        try {
          return typeof value.aborted === "boolean";
        } catch (_a8) {
          return false;
        }
      }
      const supportsAbortController = typeof AbortController === "function";
      function createAbortController() {
        if (supportsAbortController) {
          return new AbortController();
        }
        return void 0;
      }
      class WritableStream2 {
        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {
          if (rawUnderlyingSink === void 0) {
            rawUnderlyingSink = null;
          } else {
            assertObject2(rawUnderlyingSink, "First parameter");
          }
          const strategy = convertQueuingStrategy2(rawStrategy, "Second parameter");
          const underlyingSink = convertUnderlyingSink2(rawUnderlyingSink, "First parameter");
          InitializeWritableStream2(this);
          const type = underlyingSink.type;
          if (type !== void 0) {
            throw new RangeError("Invalid type is specified");
          }
          const sizeAlgorithm = ExtractSizeAlgorithm2(strategy);
          const highWaterMark = ExtractHighWaterMark2(strategy, 1);
          SetUpWritableStreamDefaultControllerFromUnderlyingSink2(this, underlyingSink, highWaterMark, sizeAlgorithm);
        }
        get locked() {
          if (!IsWritableStream2(this)) {
            throw streamBrandCheckException$22("locked");
          }
          return IsWritableStreamLocked2(this);
        }
        abort(reason = void 0) {
          if (!IsWritableStream2(this)) {
            return promiseRejectedWith2(streamBrandCheckException$22("abort"));
          }
          if (IsWritableStreamLocked2(this)) {
            return promiseRejectedWith2(new TypeError("Cannot abort a stream that already has a writer"));
          }
          return WritableStreamAbort2(this, reason);
        }
        close() {
          if (!IsWritableStream2(this)) {
            return promiseRejectedWith2(streamBrandCheckException$22("close"));
          }
          if (IsWritableStreamLocked2(this)) {
            return promiseRejectedWith2(new TypeError("Cannot close a stream that already has a writer"));
          }
          if (WritableStreamCloseQueuedOrInFlight2(this)) {
            return promiseRejectedWith2(new TypeError("Cannot close an already-closing stream"));
          }
          return WritableStreamClose2(this);
        }
        getWriter() {
          if (!IsWritableStream2(this)) {
            throw streamBrandCheckException$22("getWriter");
          }
          return AcquireWritableStreamDefaultWriter2(this);
        }
      }
      Object.defineProperties(WritableStream2.prototype, {
        abort: { enumerable: true },
        close: { enumerable: true },
        getWriter: { enumerable: true },
        locked: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(WritableStream2.prototype, SymbolPolyfill2.toStringTag, {
          value: "WritableStream",
          configurable: true
        });
      }
      function AcquireWritableStreamDefaultWriter2(stream) {
        return new WritableStreamDefaultWriter2(stream);
      }
      function CreateWritableStream2(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
        const stream = Object.create(WritableStream2.prototype);
        InitializeWritableStream2(stream);
        const controller = Object.create(WritableStreamDefaultController2.prototype);
        SetUpWritableStreamDefaultController2(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
        return stream;
      }
      function InitializeWritableStream2(stream) {
        stream._state = "writable";
        stream._storedError = void 0;
        stream._writer = void 0;
        stream._writableStreamController = void 0;
        stream._writeRequests = new SimpleQueue2();
        stream._inFlightWriteRequest = void 0;
        stream._closeRequest = void 0;
        stream._inFlightCloseRequest = void 0;
        stream._pendingAbortRequest = void 0;
        stream._backpressure = false;
      }
      function IsWritableStream2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_writableStreamController")) {
          return false;
        }
        return x3 instanceof WritableStream2;
      }
      function IsWritableStreamLocked2(stream) {
        if (stream._writer === void 0) {
          return false;
        }
        return true;
      }
      function WritableStreamAbort2(stream, reason) {
        var _a8;
        if (stream._state === "closed" || stream._state === "errored") {
          return promiseResolvedWith2(void 0);
        }
        stream._writableStreamController._abortReason = reason;
        (_a8 = stream._writableStreamController._abortController) === null || _a8 === void 0 ? void 0 : _a8.abort();
        const state = stream._state;
        if (state === "closed" || state === "errored") {
          return promiseResolvedWith2(void 0);
        }
        if (stream._pendingAbortRequest !== void 0) {
          return stream._pendingAbortRequest._promise;
        }
        let wasAlreadyErroring = false;
        if (state === "erroring") {
          wasAlreadyErroring = true;
          reason = void 0;
        }
        const promise = newPromise2((resolve2, reject) => {
          stream._pendingAbortRequest = {
            _promise: void 0,
            _resolve: resolve2,
            _reject: reject,
            _reason: reason,
            _wasAlreadyErroring: wasAlreadyErroring
          };
        });
        stream._pendingAbortRequest._promise = promise;
        if (!wasAlreadyErroring) {
          WritableStreamStartErroring2(stream, reason);
        }
        return promise;
      }
      function WritableStreamClose2(stream) {
        const state = stream._state;
        if (state === "closed" || state === "errored") {
          return promiseRejectedWith2(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));
        }
        const promise = newPromise2((resolve2, reject) => {
          const closeRequest = {
            _resolve: resolve2,
            _reject: reject
          };
          stream._closeRequest = closeRequest;
        });
        const writer = stream._writer;
        if (writer !== void 0 && stream._backpressure && state === "writable") {
          defaultWriterReadyPromiseResolve2(writer);
        }
        WritableStreamDefaultControllerClose2(stream._writableStreamController);
        return promise;
      }
      function WritableStreamAddWriteRequest2(stream) {
        const promise = newPromise2((resolve2, reject) => {
          const writeRequest = {
            _resolve: resolve2,
            _reject: reject
          };
          stream._writeRequests.push(writeRequest);
        });
        return promise;
      }
      function WritableStreamDealWithRejection2(stream, error3) {
        const state = stream._state;
        if (state === "writable") {
          WritableStreamStartErroring2(stream, error3);
          return;
        }
        WritableStreamFinishErroring2(stream);
      }
      function WritableStreamStartErroring2(stream, reason) {
        const controller = stream._writableStreamController;
        stream._state = "erroring";
        stream._storedError = reason;
        const writer = stream._writer;
        if (writer !== void 0) {
          WritableStreamDefaultWriterEnsureReadyPromiseRejected2(writer, reason);
        }
        if (!WritableStreamHasOperationMarkedInFlight2(stream) && controller._started) {
          WritableStreamFinishErroring2(stream);
        }
      }
      function WritableStreamFinishErroring2(stream) {
        stream._state = "errored";
        stream._writableStreamController[ErrorSteps2]();
        const storedError = stream._storedError;
        stream._writeRequests.forEach((writeRequest) => {
          writeRequest._reject(storedError);
        });
        stream._writeRequests = new SimpleQueue2();
        if (stream._pendingAbortRequest === void 0) {
          WritableStreamRejectCloseAndClosedPromiseIfNeeded2(stream);
          return;
        }
        const abortRequest = stream._pendingAbortRequest;
        stream._pendingAbortRequest = void 0;
        if (abortRequest._wasAlreadyErroring) {
          abortRequest._reject(storedError);
          WritableStreamRejectCloseAndClosedPromiseIfNeeded2(stream);
          return;
        }
        const promise = stream._writableStreamController[AbortSteps2](abortRequest._reason);
        uponPromise2(promise, () => {
          abortRequest._resolve();
          WritableStreamRejectCloseAndClosedPromiseIfNeeded2(stream);
        }, (reason) => {
          abortRequest._reject(reason);
          WritableStreamRejectCloseAndClosedPromiseIfNeeded2(stream);
        });
      }
      function WritableStreamFinishInFlightWrite2(stream) {
        stream._inFlightWriteRequest._resolve(void 0);
        stream._inFlightWriteRequest = void 0;
      }
      function WritableStreamFinishInFlightWriteWithError2(stream, error3) {
        stream._inFlightWriteRequest._reject(error3);
        stream._inFlightWriteRequest = void 0;
        WritableStreamDealWithRejection2(stream, error3);
      }
      function WritableStreamFinishInFlightClose2(stream) {
        stream._inFlightCloseRequest._resolve(void 0);
        stream._inFlightCloseRequest = void 0;
        const state = stream._state;
        if (state === "erroring") {
          stream._storedError = void 0;
          if (stream._pendingAbortRequest !== void 0) {
            stream._pendingAbortRequest._resolve();
            stream._pendingAbortRequest = void 0;
          }
        }
        stream._state = "closed";
        const writer = stream._writer;
        if (writer !== void 0) {
          defaultWriterClosedPromiseResolve2(writer);
        }
      }
      function WritableStreamFinishInFlightCloseWithError2(stream, error3) {
        stream._inFlightCloseRequest._reject(error3);
        stream._inFlightCloseRequest = void 0;
        if (stream._pendingAbortRequest !== void 0) {
          stream._pendingAbortRequest._reject(error3);
          stream._pendingAbortRequest = void 0;
        }
        WritableStreamDealWithRejection2(stream, error3);
      }
      function WritableStreamCloseQueuedOrInFlight2(stream) {
        if (stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0) {
          return false;
        }
        return true;
      }
      function WritableStreamHasOperationMarkedInFlight2(stream) {
        if (stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0) {
          return false;
        }
        return true;
      }
      function WritableStreamMarkCloseRequestInFlight2(stream) {
        stream._inFlightCloseRequest = stream._closeRequest;
        stream._closeRequest = void 0;
      }
      function WritableStreamMarkFirstWriteRequestInFlight2(stream) {
        stream._inFlightWriteRequest = stream._writeRequests.shift();
      }
      function WritableStreamRejectCloseAndClosedPromiseIfNeeded2(stream) {
        if (stream._closeRequest !== void 0) {
          stream._closeRequest._reject(stream._storedError);
          stream._closeRequest = void 0;
        }
        const writer = stream._writer;
        if (writer !== void 0) {
          defaultWriterClosedPromiseReject2(writer, stream._storedError);
        }
      }
      function WritableStreamUpdateBackpressure2(stream, backpressure) {
        const writer = stream._writer;
        if (writer !== void 0 && backpressure !== stream._backpressure) {
          if (backpressure) {
            defaultWriterReadyPromiseReset2(writer);
          } else {
            defaultWriterReadyPromiseResolve2(writer);
          }
        }
        stream._backpressure = backpressure;
      }
      class WritableStreamDefaultWriter2 {
        constructor(stream) {
          assertRequiredArgument2(stream, 1, "WritableStreamDefaultWriter");
          assertWritableStream2(stream, "First parameter");
          if (IsWritableStreamLocked2(stream)) {
            throw new TypeError("This stream has already been locked for exclusive writing by another writer");
          }
          this._ownerWritableStream = stream;
          stream._writer = this;
          const state = stream._state;
          if (state === "writable") {
            if (!WritableStreamCloseQueuedOrInFlight2(stream) && stream._backpressure) {
              defaultWriterReadyPromiseInitialize2(this);
            } else {
              defaultWriterReadyPromiseInitializeAsResolved2(this);
            }
            defaultWriterClosedPromiseInitialize2(this);
          } else if (state === "erroring") {
            defaultWriterReadyPromiseInitializeAsRejected2(this, stream._storedError);
            defaultWriterClosedPromiseInitialize2(this);
          } else if (state === "closed") {
            defaultWriterReadyPromiseInitializeAsResolved2(this);
            defaultWriterClosedPromiseInitializeAsResolved2(this);
          } else {
            const storedError = stream._storedError;
            defaultWriterReadyPromiseInitializeAsRejected2(this, storedError);
            defaultWriterClosedPromiseInitializeAsRejected2(this, storedError);
          }
        }
        get closed() {
          if (!IsWritableStreamDefaultWriter2(this)) {
            return promiseRejectedWith2(defaultWriterBrandCheckException2("closed"));
          }
          return this._closedPromise;
        }
        get desiredSize() {
          if (!IsWritableStreamDefaultWriter2(this)) {
            throw defaultWriterBrandCheckException2("desiredSize");
          }
          if (this._ownerWritableStream === void 0) {
            throw defaultWriterLockException2("desiredSize");
          }
          return WritableStreamDefaultWriterGetDesiredSize2(this);
        }
        get ready() {
          if (!IsWritableStreamDefaultWriter2(this)) {
            return promiseRejectedWith2(defaultWriterBrandCheckException2("ready"));
          }
          return this._readyPromise;
        }
        abort(reason = void 0) {
          if (!IsWritableStreamDefaultWriter2(this)) {
            return promiseRejectedWith2(defaultWriterBrandCheckException2("abort"));
          }
          if (this._ownerWritableStream === void 0) {
            return promiseRejectedWith2(defaultWriterLockException2("abort"));
          }
          return WritableStreamDefaultWriterAbort2(this, reason);
        }
        close() {
          if (!IsWritableStreamDefaultWriter2(this)) {
            return promiseRejectedWith2(defaultWriterBrandCheckException2("close"));
          }
          const stream = this._ownerWritableStream;
          if (stream === void 0) {
            return promiseRejectedWith2(defaultWriterLockException2("close"));
          }
          if (WritableStreamCloseQueuedOrInFlight2(stream)) {
            return promiseRejectedWith2(new TypeError("Cannot close an already-closing stream"));
          }
          return WritableStreamDefaultWriterClose2(this);
        }
        releaseLock() {
          if (!IsWritableStreamDefaultWriter2(this)) {
            throw defaultWriterBrandCheckException2("releaseLock");
          }
          const stream = this._ownerWritableStream;
          if (stream === void 0) {
            return;
          }
          WritableStreamDefaultWriterRelease2(this);
        }
        write(chunk = void 0) {
          if (!IsWritableStreamDefaultWriter2(this)) {
            return promiseRejectedWith2(defaultWriterBrandCheckException2("write"));
          }
          if (this._ownerWritableStream === void 0) {
            return promiseRejectedWith2(defaultWriterLockException2("write to"));
          }
          return WritableStreamDefaultWriterWrite2(this, chunk);
        }
      }
      Object.defineProperties(WritableStreamDefaultWriter2.prototype, {
        abort: { enumerable: true },
        close: { enumerable: true },
        releaseLock: { enumerable: true },
        write: { enumerable: true },
        closed: { enumerable: true },
        desiredSize: { enumerable: true },
        ready: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(WritableStreamDefaultWriter2.prototype, SymbolPolyfill2.toStringTag, {
          value: "WritableStreamDefaultWriter",
          configurable: true
        });
      }
      function IsWritableStreamDefaultWriter2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_ownerWritableStream")) {
          return false;
        }
        return x3 instanceof WritableStreamDefaultWriter2;
      }
      function WritableStreamDefaultWriterAbort2(writer, reason) {
        const stream = writer._ownerWritableStream;
        return WritableStreamAbort2(stream, reason);
      }
      function WritableStreamDefaultWriterClose2(writer) {
        const stream = writer._ownerWritableStream;
        return WritableStreamClose2(stream);
      }
      function WritableStreamDefaultWriterCloseWithErrorPropagation2(writer) {
        const stream = writer._ownerWritableStream;
        const state = stream._state;
        if (WritableStreamCloseQueuedOrInFlight2(stream) || state === "closed") {
          return promiseResolvedWith2(void 0);
        }
        if (state === "errored") {
          return promiseRejectedWith2(stream._storedError);
        }
        return WritableStreamDefaultWriterClose2(writer);
      }
      function WritableStreamDefaultWriterEnsureClosedPromiseRejected2(writer, error3) {
        if (writer._closedPromiseState === "pending") {
          defaultWriterClosedPromiseReject2(writer, error3);
        } else {
          defaultWriterClosedPromiseResetToRejected2(writer, error3);
        }
      }
      function WritableStreamDefaultWriterEnsureReadyPromiseRejected2(writer, error3) {
        if (writer._readyPromiseState === "pending") {
          defaultWriterReadyPromiseReject2(writer, error3);
        } else {
          defaultWriterReadyPromiseResetToRejected2(writer, error3);
        }
      }
      function WritableStreamDefaultWriterGetDesiredSize2(writer) {
        const stream = writer._ownerWritableStream;
        const state = stream._state;
        if (state === "errored" || state === "erroring") {
          return null;
        }
        if (state === "closed") {
          return 0;
        }
        return WritableStreamDefaultControllerGetDesiredSize2(stream._writableStreamController);
      }
      function WritableStreamDefaultWriterRelease2(writer) {
        const stream = writer._ownerWritableStream;
        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);
        WritableStreamDefaultWriterEnsureReadyPromiseRejected2(writer, releasedError);
        WritableStreamDefaultWriterEnsureClosedPromiseRejected2(writer, releasedError);
        stream._writer = void 0;
        writer._ownerWritableStream = void 0;
      }
      function WritableStreamDefaultWriterWrite2(writer, chunk) {
        const stream = writer._ownerWritableStream;
        const controller = stream._writableStreamController;
        const chunkSize = WritableStreamDefaultControllerGetChunkSize2(controller, chunk);
        if (stream !== writer._ownerWritableStream) {
          return promiseRejectedWith2(defaultWriterLockException2("write to"));
        }
        const state = stream._state;
        if (state === "errored") {
          return promiseRejectedWith2(stream._storedError);
        }
        if (WritableStreamCloseQueuedOrInFlight2(stream) || state === "closed") {
          return promiseRejectedWith2(new TypeError("The stream is closing or closed and cannot be written to"));
        }
        if (state === "erroring") {
          return promiseRejectedWith2(stream._storedError);
        }
        const promise = WritableStreamAddWriteRequest2(stream);
        WritableStreamDefaultControllerWrite2(controller, chunk, chunkSize);
        return promise;
      }
      const closeSentinel2 = {};
      class WritableStreamDefaultController2 {
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get abortReason() {
          if (!IsWritableStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException$22("abortReason");
          }
          return this._abortReason;
        }
        get signal() {
          if (!IsWritableStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException$22("signal");
          }
          if (this._abortController === void 0) {
            throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
          }
          return this._abortController.signal;
        }
        error(e3 = void 0) {
          if (!IsWritableStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException$22("error");
          }
          const state = this._controlledWritableStream._state;
          if (state !== "writable") {
            return;
          }
          WritableStreamDefaultControllerError2(this, e3);
        }
        [AbortSteps2](reason) {
          const result = this._abortAlgorithm(reason);
          WritableStreamDefaultControllerClearAlgorithms2(this);
          return result;
        }
        [ErrorSteps2]() {
          ResetQueue2(this);
        }
      }
      Object.defineProperties(WritableStreamDefaultController2.prototype, {
        abortReason: { enumerable: true },
        signal: { enumerable: true },
        error: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(WritableStreamDefaultController2.prototype, SymbolPolyfill2.toStringTag, {
          value: "WritableStreamDefaultController",
          configurable: true
        });
      }
      function IsWritableStreamDefaultController2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_controlledWritableStream")) {
          return false;
        }
        return x3 instanceof WritableStreamDefaultController2;
      }
      function SetUpWritableStreamDefaultController2(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
        controller._controlledWritableStream = stream;
        stream._writableStreamController = controller;
        controller._queue = void 0;
        controller._queueTotalSize = void 0;
        ResetQueue2(controller);
        controller._abortReason = void 0;
        controller._abortController = createAbortController();
        controller._started = false;
        controller._strategySizeAlgorithm = sizeAlgorithm;
        controller._strategyHWM = highWaterMark;
        controller._writeAlgorithm = writeAlgorithm;
        controller._closeAlgorithm = closeAlgorithm;
        controller._abortAlgorithm = abortAlgorithm;
        const backpressure = WritableStreamDefaultControllerGetBackpressure2(controller);
        WritableStreamUpdateBackpressure2(stream, backpressure);
        const startResult = startAlgorithm();
        const startPromise = promiseResolvedWith2(startResult);
        uponPromise2(startPromise, () => {
          controller._started = true;
          WritableStreamDefaultControllerAdvanceQueueIfNeeded2(controller);
        }, (r3) => {
          controller._started = true;
          WritableStreamDealWithRejection2(stream, r3);
        });
      }
      function SetUpWritableStreamDefaultControllerFromUnderlyingSink2(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
        const controller = Object.create(WritableStreamDefaultController2.prototype);
        let startAlgorithm = () => void 0;
        let writeAlgorithm = () => promiseResolvedWith2(void 0);
        let closeAlgorithm = () => promiseResolvedWith2(void 0);
        let abortAlgorithm = () => promiseResolvedWith2(void 0);
        if (underlyingSink.start !== void 0) {
          startAlgorithm = () => underlyingSink.start(controller);
        }
        if (underlyingSink.write !== void 0) {
          writeAlgorithm = (chunk) => underlyingSink.write(chunk, controller);
        }
        if (underlyingSink.close !== void 0) {
          closeAlgorithm = () => underlyingSink.close();
        }
        if (underlyingSink.abort !== void 0) {
          abortAlgorithm = (reason) => underlyingSink.abort(reason);
        }
        SetUpWritableStreamDefaultController2(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
      }
      function WritableStreamDefaultControllerClearAlgorithms2(controller) {
        controller._writeAlgorithm = void 0;
        controller._closeAlgorithm = void 0;
        controller._abortAlgorithm = void 0;
        controller._strategySizeAlgorithm = void 0;
      }
      function WritableStreamDefaultControllerClose2(controller) {
        EnqueueValueWithSize2(controller, closeSentinel2, 0);
        WritableStreamDefaultControllerAdvanceQueueIfNeeded2(controller);
      }
      function WritableStreamDefaultControllerGetChunkSize2(controller, chunk) {
        try {
          return controller._strategySizeAlgorithm(chunk);
        } catch (chunkSizeE) {
          WritableStreamDefaultControllerErrorIfNeeded2(controller, chunkSizeE);
          return 1;
        }
      }
      function WritableStreamDefaultControllerGetDesiredSize2(controller) {
        return controller._strategyHWM - controller._queueTotalSize;
      }
      function WritableStreamDefaultControllerWrite2(controller, chunk, chunkSize) {
        try {
          EnqueueValueWithSize2(controller, chunk, chunkSize);
        } catch (enqueueE) {
          WritableStreamDefaultControllerErrorIfNeeded2(controller, enqueueE);
          return;
        }
        const stream = controller._controlledWritableStream;
        if (!WritableStreamCloseQueuedOrInFlight2(stream) && stream._state === "writable") {
          const backpressure = WritableStreamDefaultControllerGetBackpressure2(controller);
          WritableStreamUpdateBackpressure2(stream, backpressure);
        }
        WritableStreamDefaultControllerAdvanceQueueIfNeeded2(controller);
      }
      function WritableStreamDefaultControllerAdvanceQueueIfNeeded2(controller) {
        const stream = controller._controlledWritableStream;
        if (!controller._started) {
          return;
        }
        if (stream._inFlightWriteRequest !== void 0) {
          return;
        }
        const state = stream._state;
        if (state === "erroring") {
          WritableStreamFinishErroring2(stream);
          return;
        }
        if (controller._queue.length === 0) {
          return;
        }
        const value = PeekQueueValue2(controller);
        if (value === closeSentinel2) {
          WritableStreamDefaultControllerProcessClose2(controller);
        } else {
          WritableStreamDefaultControllerProcessWrite2(controller, value);
        }
      }
      function WritableStreamDefaultControllerErrorIfNeeded2(controller, error3) {
        if (controller._controlledWritableStream._state === "writable") {
          WritableStreamDefaultControllerError2(controller, error3);
        }
      }
      function WritableStreamDefaultControllerProcessClose2(controller) {
        const stream = controller._controlledWritableStream;
        WritableStreamMarkCloseRequestInFlight2(stream);
        DequeueValue2(controller);
        const sinkClosePromise = controller._closeAlgorithm();
        WritableStreamDefaultControllerClearAlgorithms2(controller);
        uponPromise2(sinkClosePromise, () => {
          WritableStreamFinishInFlightClose2(stream);
        }, (reason) => {
          WritableStreamFinishInFlightCloseWithError2(stream, reason);
        });
      }
      function WritableStreamDefaultControllerProcessWrite2(controller, chunk) {
        const stream = controller._controlledWritableStream;
        WritableStreamMarkFirstWriteRequestInFlight2(stream);
        const sinkWritePromise = controller._writeAlgorithm(chunk);
        uponPromise2(sinkWritePromise, () => {
          WritableStreamFinishInFlightWrite2(stream);
          const state = stream._state;
          DequeueValue2(controller);
          if (!WritableStreamCloseQueuedOrInFlight2(stream) && state === "writable") {
            const backpressure = WritableStreamDefaultControllerGetBackpressure2(controller);
            WritableStreamUpdateBackpressure2(stream, backpressure);
          }
          WritableStreamDefaultControllerAdvanceQueueIfNeeded2(controller);
        }, (reason) => {
          if (stream._state === "writable") {
            WritableStreamDefaultControllerClearAlgorithms2(controller);
          }
          WritableStreamFinishInFlightWriteWithError2(stream, reason);
        });
      }
      function WritableStreamDefaultControllerGetBackpressure2(controller) {
        const desiredSize = WritableStreamDefaultControllerGetDesiredSize2(controller);
        return desiredSize <= 0;
      }
      function WritableStreamDefaultControllerError2(controller, error3) {
        const stream = controller._controlledWritableStream;
        WritableStreamDefaultControllerClearAlgorithms2(controller);
        WritableStreamStartErroring2(stream, error3);
      }
      function streamBrandCheckException$22(name) {
        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);
      }
      function defaultControllerBrandCheckException$22(name) {
        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);
      }
      function defaultWriterBrandCheckException2(name) {
        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);
      }
      function defaultWriterLockException2(name) {
        return new TypeError("Cannot " + name + " a stream using a released writer");
      }
      function defaultWriterClosedPromiseInitialize2(writer) {
        writer._closedPromise = newPromise2((resolve2, reject) => {
          writer._closedPromise_resolve = resolve2;
          writer._closedPromise_reject = reject;
          writer._closedPromiseState = "pending";
        });
      }
      function defaultWriterClosedPromiseInitializeAsRejected2(writer, reason) {
        defaultWriterClosedPromiseInitialize2(writer);
        defaultWriterClosedPromiseReject2(writer, reason);
      }
      function defaultWriterClosedPromiseInitializeAsResolved2(writer) {
        defaultWriterClosedPromiseInitialize2(writer);
        defaultWriterClosedPromiseResolve2(writer);
      }
      function defaultWriterClosedPromiseReject2(writer, reason) {
        if (writer._closedPromise_reject === void 0) {
          return;
        }
        setPromiseIsHandledToTrue2(writer._closedPromise);
        writer._closedPromise_reject(reason);
        writer._closedPromise_resolve = void 0;
        writer._closedPromise_reject = void 0;
        writer._closedPromiseState = "rejected";
      }
      function defaultWriterClosedPromiseResetToRejected2(writer, reason) {
        defaultWriterClosedPromiseInitializeAsRejected2(writer, reason);
      }
      function defaultWriterClosedPromiseResolve2(writer) {
        if (writer._closedPromise_resolve === void 0) {
          return;
        }
        writer._closedPromise_resolve(void 0);
        writer._closedPromise_resolve = void 0;
        writer._closedPromise_reject = void 0;
        writer._closedPromiseState = "resolved";
      }
      function defaultWriterReadyPromiseInitialize2(writer) {
        writer._readyPromise = newPromise2((resolve2, reject) => {
          writer._readyPromise_resolve = resolve2;
          writer._readyPromise_reject = reject;
        });
        writer._readyPromiseState = "pending";
      }
      function defaultWriterReadyPromiseInitializeAsRejected2(writer, reason) {
        defaultWriterReadyPromiseInitialize2(writer);
        defaultWriterReadyPromiseReject2(writer, reason);
      }
      function defaultWriterReadyPromiseInitializeAsResolved2(writer) {
        defaultWriterReadyPromiseInitialize2(writer);
        defaultWriterReadyPromiseResolve2(writer);
      }
      function defaultWriterReadyPromiseReject2(writer, reason) {
        if (writer._readyPromise_reject === void 0) {
          return;
        }
        setPromiseIsHandledToTrue2(writer._readyPromise);
        writer._readyPromise_reject(reason);
        writer._readyPromise_resolve = void 0;
        writer._readyPromise_reject = void 0;
        writer._readyPromiseState = "rejected";
      }
      function defaultWriterReadyPromiseReset2(writer) {
        defaultWriterReadyPromiseInitialize2(writer);
      }
      function defaultWriterReadyPromiseResetToRejected2(writer, reason) {
        defaultWriterReadyPromiseInitializeAsRejected2(writer, reason);
      }
      function defaultWriterReadyPromiseResolve2(writer) {
        if (writer._readyPromise_resolve === void 0) {
          return;
        }
        writer._readyPromise_resolve(void 0);
        writer._readyPromise_resolve = void 0;
        writer._readyPromise_reject = void 0;
        writer._readyPromiseState = "fulfilled";
      }
      const NativeDOMException = typeof DOMException !== "undefined" ? DOMException : void 0;
      function isDOMExceptionConstructor(ctor) {
        if (!(typeof ctor === "function" || typeof ctor === "object")) {
          return false;
        }
        try {
          new ctor();
          return true;
        } catch (_a8) {
          return false;
        }
      }
      function createDOMExceptionPolyfill() {
        const ctor = function DOMException4(message, name) {
          this.message = message || "";
          this.name = name || "Error";
          if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
          }
        };
        ctor.prototype = Object.create(Error.prototype);
        Object.defineProperty(ctor.prototype, "constructor", { value: ctor, writable: true, configurable: true });
        return ctor;
      }
      const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();
      function ReadableStreamPipeTo2(source, dest, preventClose, preventAbort, preventCancel, signal) {
        const reader = AcquireReadableStreamDefaultReader2(source);
        const writer = AcquireWritableStreamDefaultWriter2(dest);
        source._disturbed = true;
        let shuttingDown = false;
        let currentWrite = promiseResolvedWith2(void 0);
        return newPromise2((resolve2, reject) => {
          let abortAlgorithm;
          if (signal !== void 0) {
            abortAlgorithm = () => {
              const error3 = new DOMException$1("Aborted", "AbortError");
              const actions = [];
              if (!preventAbort) {
                actions.push(() => {
                  if (dest._state === "writable") {
                    return WritableStreamAbort2(dest, error3);
                  }
                  return promiseResolvedWith2(void 0);
                });
              }
              if (!preventCancel) {
                actions.push(() => {
                  if (source._state === "readable") {
                    return ReadableStreamCancel2(source, error3);
                  }
                  return promiseResolvedWith2(void 0);
                });
              }
              shutdownWithAction(() => Promise.all(actions.map((action) => action())), true, error3);
            };
            if (signal.aborted) {
              abortAlgorithm();
              return;
            }
            signal.addEventListener("abort", abortAlgorithm);
          }
          function pipeLoop() {
            return newPromise2((resolveLoop, rejectLoop) => {
              function next(done) {
                if (done) {
                  resolveLoop();
                } else {
                  PerformPromiseThen2(pipeStep(), next, rejectLoop);
                }
              }
              next(false);
            });
          }
          function pipeStep() {
            if (shuttingDown) {
              return promiseResolvedWith2(true);
            }
            return PerformPromiseThen2(writer._readyPromise, () => {
              return newPromise2((resolveRead, rejectRead) => {
                ReadableStreamDefaultReaderRead2(reader, {
                  _chunkSteps: (chunk) => {
                    currentWrite = PerformPromiseThen2(WritableStreamDefaultWriterWrite2(writer, chunk), void 0, noop3);
                    resolveRead(false);
                  },
                  _closeSteps: () => resolveRead(true),
                  _errorSteps: rejectRead
                });
              });
            });
          }
          isOrBecomesErrored(source, reader._closedPromise, (storedError) => {
            if (!preventAbort) {
              shutdownWithAction(() => WritableStreamAbort2(dest, storedError), true, storedError);
            } else {
              shutdown(true, storedError);
            }
          });
          isOrBecomesErrored(dest, writer._closedPromise, (storedError) => {
            if (!preventCancel) {
              shutdownWithAction(() => ReadableStreamCancel2(source, storedError), true, storedError);
            } else {
              shutdown(true, storedError);
            }
          });
          isOrBecomesClosed(source, reader._closedPromise, () => {
            if (!preventClose) {
              shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation2(writer));
            } else {
              shutdown();
            }
          });
          if (WritableStreamCloseQueuedOrInFlight2(dest) || dest._state === "closed") {
            const destClosed = new TypeError("the destination writable stream closed before all data could be piped to it");
            if (!preventCancel) {
              shutdownWithAction(() => ReadableStreamCancel2(source, destClosed), true, destClosed);
            } else {
              shutdown(true, destClosed);
            }
          }
          setPromiseIsHandledToTrue2(pipeLoop());
          function waitForWritesToFinish() {
            const oldCurrentWrite = currentWrite;
            return PerformPromiseThen2(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0);
          }
          function isOrBecomesErrored(stream, promise, action) {
            if (stream._state === "errored") {
              action(stream._storedError);
            } else {
              uponRejection2(promise, action);
            }
          }
          function isOrBecomesClosed(stream, promise, action) {
            if (stream._state === "closed") {
              action();
            } else {
              uponFulfillment2(promise, action);
            }
          }
          function shutdownWithAction(action, originalIsError, originalError) {
            if (shuttingDown) {
              return;
            }
            shuttingDown = true;
            if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight2(dest)) {
              uponFulfillment2(waitForWritesToFinish(), doTheRest);
            } else {
              doTheRest();
            }
            function doTheRest() {
              uponPromise2(action(), () => finalize(originalIsError, originalError), (newError) => finalize(true, newError));
            }
          }
          function shutdown(isError, error3) {
            if (shuttingDown) {
              return;
            }
            shuttingDown = true;
            if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight2(dest)) {
              uponFulfillment2(waitForWritesToFinish(), () => finalize(isError, error3));
            } else {
              finalize(isError, error3);
            }
          }
          function finalize(isError, error3) {
            WritableStreamDefaultWriterRelease2(writer);
            ReadableStreamReaderGenericRelease2(reader);
            if (signal !== void 0) {
              signal.removeEventListener("abort", abortAlgorithm);
            }
            if (isError) {
              reject(error3);
            } else {
              resolve2(void 0);
            }
          }
        });
      }
      class ReadableStreamDefaultController2 {
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get desiredSize() {
          if (!IsReadableStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException$12("desiredSize");
          }
          return ReadableStreamDefaultControllerGetDesiredSize2(this);
        }
        close() {
          if (!IsReadableStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException$12("close");
          }
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue2(this)) {
            throw new TypeError("The stream is not in a state that permits close");
          }
          ReadableStreamDefaultControllerClose2(this);
        }
        enqueue(chunk = void 0) {
          if (!IsReadableStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException$12("enqueue");
          }
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue2(this)) {
            throw new TypeError("The stream is not in a state that permits enqueue");
          }
          return ReadableStreamDefaultControllerEnqueue2(this, chunk);
        }
        error(e3 = void 0) {
          if (!IsReadableStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException$12("error");
          }
          ReadableStreamDefaultControllerError2(this, e3);
        }
        [CancelSteps2](reason) {
          ResetQueue2(this);
          const result = this._cancelAlgorithm(reason);
          ReadableStreamDefaultControllerClearAlgorithms2(this);
          return result;
        }
        [PullSteps2](readRequest) {
          const stream = this._controlledReadableStream;
          if (this._queue.length > 0) {
            const chunk = DequeueValue2(this);
            if (this._closeRequested && this._queue.length === 0) {
              ReadableStreamDefaultControllerClearAlgorithms2(this);
              ReadableStreamClose2(stream);
            } else {
              ReadableStreamDefaultControllerCallPullIfNeeded2(this);
            }
            readRequest._chunkSteps(chunk);
          } else {
            ReadableStreamAddReadRequest2(stream, readRequest);
            ReadableStreamDefaultControllerCallPullIfNeeded2(this);
          }
        }
      }
      Object.defineProperties(ReadableStreamDefaultController2.prototype, {
        close: { enumerable: true },
        enqueue: { enumerable: true },
        error: { enumerable: true },
        desiredSize: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(ReadableStreamDefaultController2.prototype, SymbolPolyfill2.toStringTag, {
          value: "ReadableStreamDefaultController",
          configurable: true
        });
      }
      function IsReadableStreamDefaultController2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_controlledReadableStream")) {
          return false;
        }
        return x3 instanceof ReadableStreamDefaultController2;
      }
      function ReadableStreamDefaultControllerCallPullIfNeeded2(controller) {
        const shouldPull = ReadableStreamDefaultControllerShouldCallPull2(controller);
        if (!shouldPull) {
          return;
        }
        if (controller._pulling) {
          controller._pullAgain = true;
          return;
        }
        controller._pulling = true;
        const pullPromise = controller._pullAlgorithm();
        uponPromise2(pullPromise, () => {
          controller._pulling = false;
          if (controller._pullAgain) {
            controller._pullAgain = false;
            ReadableStreamDefaultControllerCallPullIfNeeded2(controller);
          }
        }, (e3) => {
          ReadableStreamDefaultControllerError2(controller, e3);
        });
      }
      function ReadableStreamDefaultControllerShouldCallPull2(controller) {
        const stream = controller._controlledReadableStream;
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue2(controller)) {
          return false;
        }
        if (!controller._started) {
          return false;
        }
        if (IsReadableStreamLocked2(stream) && ReadableStreamGetNumReadRequests2(stream) > 0) {
          return true;
        }
        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize2(controller);
        if (desiredSize > 0) {
          return true;
        }
        return false;
      }
      function ReadableStreamDefaultControllerClearAlgorithms2(controller) {
        controller._pullAlgorithm = void 0;
        controller._cancelAlgorithm = void 0;
        controller._strategySizeAlgorithm = void 0;
      }
      function ReadableStreamDefaultControllerClose2(controller) {
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue2(controller)) {
          return;
        }
        const stream = controller._controlledReadableStream;
        controller._closeRequested = true;
        if (controller._queue.length === 0) {
          ReadableStreamDefaultControllerClearAlgorithms2(controller);
          ReadableStreamClose2(stream);
        }
      }
      function ReadableStreamDefaultControllerEnqueue2(controller, chunk) {
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue2(controller)) {
          return;
        }
        const stream = controller._controlledReadableStream;
        if (IsReadableStreamLocked2(stream) && ReadableStreamGetNumReadRequests2(stream) > 0) {
          ReadableStreamFulfillReadRequest2(stream, chunk, false);
        } else {
          let chunkSize;
          try {
            chunkSize = controller._strategySizeAlgorithm(chunk);
          } catch (chunkSizeE) {
            ReadableStreamDefaultControllerError2(controller, chunkSizeE);
            throw chunkSizeE;
          }
          try {
            EnqueueValueWithSize2(controller, chunk, chunkSize);
          } catch (enqueueE) {
            ReadableStreamDefaultControllerError2(controller, enqueueE);
            throw enqueueE;
          }
        }
        ReadableStreamDefaultControllerCallPullIfNeeded2(controller);
      }
      function ReadableStreamDefaultControllerError2(controller, e3) {
        const stream = controller._controlledReadableStream;
        if (stream._state !== "readable") {
          return;
        }
        ResetQueue2(controller);
        ReadableStreamDefaultControllerClearAlgorithms2(controller);
        ReadableStreamError2(stream, e3);
      }
      function ReadableStreamDefaultControllerGetDesiredSize2(controller) {
        const state = controller._controlledReadableStream._state;
        if (state === "errored") {
          return null;
        }
        if (state === "closed") {
          return 0;
        }
        return controller._strategyHWM - controller._queueTotalSize;
      }
      function ReadableStreamDefaultControllerHasBackpressure2(controller) {
        if (ReadableStreamDefaultControllerShouldCallPull2(controller)) {
          return false;
        }
        return true;
      }
      function ReadableStreamDefaultControllerCanCloseOrEnqueue2(controller) {
        const state = controller._controlledReadableStream._state;
        if (!controller._closeRequested && state === "readable") {
          return true;
        }
        return false;
      }
      function SetUpReadableStreamDefaultController2(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
        controller._controlledReadableStream = stream;
        controller._queue = void 0;
        controller._queueTotalSize = void 0;
        ResetQueue2(controller);
        controller._started = false;
        controller._closeRequested = false;
        controller._pullAgain = false;
        controller._pulling = false;
        controller._strategySizeAlgorithm = sizeAlgorithm;
        controller._strategyHWM = highWaterMark;
        controller._pullAlgorithm = pullAlgorithm;
        controller._cancelAlgorithm = cancelAlgorithm;
        stream._readableStreamController = controller;
        const startResult = startAlgorithm();
        uponPromise2(promiseResolvedWith2(startResult), () => {
          controller._started = true;
          ReadableStreamDefaultControllerCallPullIfNeeded2(controller);
        }, (r3) => {
          ReadableStreamDefaultControllerError2(controller, r3);
        });
      }
      function SetUpReadableStreamDefaultControllerFromUnderlyingSource2(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
        const controller = Object.create(ReadableStreamDefaultController2.prototype);
        let startAlgorithm = () => void 0;
        let pullAlgorithm = () => promiseResolvedWith2(void 0);
        let cancelAlgorithm = () => promiseResolvedWith2(void 0);
        if (underlyingSource.start !== void 0) {
          startAlgorithm = () => underlyingSource.start(controller);
        }
        if (underlyingSource.pull !== void 0) {
          pullAlgorithm = () => underlyingSource.pull(controller);
        }
        if (underlyingSource.cancel !== void 0) {
          cancelAlgorithm = (reason) => underlyingSource.cancel(reason);
        }
        SetUpReadableStreamDefaultController2(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
      }
      function defaultControllerBrandCheckException$12(name) {
        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);
      }
      function ReadableStreamTee2(stream, cloneForBranch2) {
        if (IsReadableByteStreamController2(stream._readableStreamController)) {
          return ReadableByteStreamTee2(stream);
        }
        return ReadableStreamDefaultTee2(stream);
      }
      function ReadableStreamDefaultTee2(stream, cloneForBranch2) {
        const reader = AcquireReadableStreamDefaultReader2(stream);
        let reading = false;
        let readAgain = false;
        let canceled1 = false;
        let canceled2 = false;
        let reason1;
        let reason2;
        let branch1;
        let branch2;
        let resolveCancelPromise;
        const cancelPromise = newPromise2((resolve2) => {
          resolveCancelPromise = resolve2;
        });
        function pullAlgorithm() {
          if (reading) {
            readAgain = true;
            return promiseResolvedWith2(void 0);
          }
          reading = true;
          const readRequest = {
            _chunkSteps: (chunk) => {
              queueMicrotask2(() => {
                readAgain = false;
                const chunk1 = chunk;
                const chunk2 = chunk;
                if (!canceled1) {
                  ReadableStreamDefaultControllerEnqueue2(branch1._readableStreamController, chunk1);
                }
                if (!canceled2) {
                  ReadableStreamDefaultControllerEnqueue2(branch2._readableStreamController, chunk2);
                }
                reading = false;
                if (readAgain) {
                  pullAlgorithm();
                }
              });
            },
            _closeSteps: () => {
              reading = false;
              if (!canceled1) {
                ReadableStreamDefaultControllerClose2(branch1._readableStreamController);
              }
              if (!canceled2) {
                ReadableStreamDefaultControllerClose2(branch2._readableStreamController);
              }
              if (!canceled1 || !canceled2) {
                resolveCancelPromise(void 0);
              }
            },
            _errorSteps: () => {
              reading = false;
            }
          };
          ReadableStreamDefaultReaderRead2(reader, readRequest);
          return promiseResolvedWith2(void 0);
        }
        function cancel1Algorithm(reason) {
          canceled1 = true;
          reason1 = reason;
          if (canceled2) {
            const compositeReason = CreateArrayFromList2([reason1, reason2]);
            const cancelResult = ReadableStreamCancel2(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function cancel2Algorithm(reason) {
          canceled2 = true;
          reason2 = reason;
          if (canceled1) {
            const compositeReason = CreateArrayFromList2([reason1, reason2]);
            const cancelResult = ReadableStreamCancel2(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function startAlgorithm() {
        }
        branch1 = CreateReadableStream2(startAlgorithm, pullAlgorithm, cancel1Algorithm);
        branch2 = CreateReadableStream2(startAlgorithm, pullAlgorithm, cancel2Algorithm);
        uponRejection2(reader._closedPromise, (r3) => {
          ReadableStreamDefaultControllerError2(branch1._readableStreamController, r3);
          ReadableStreamDefaultControllerError2(branch2._readableStreamController, r3);
          if (!canceled1 || !canceled2) {
            resolveCancelPromise(void 0);
          }
        });
        return [branch1, branch2];
      }
      function ReadableByteStreamTee2(stream) {
        let reader = AcquireReadableStreamDefaultReader2(stream);
        let reading = false;
        let readAgainForBranch1 = false;
        let readAgainForBranch2 = false;
        let canceled1 = false;
        let canceled2 = false;
        let reason1;
        let reason2;
        let branch1;
        let branch2;
        let resolveCancelPromise;
        const cancelPromise = newPromise2((resolve2) => {
          resolveCancelPromise = resolve2;
        });
        function forwardReaderError(thisReader) {
          uponRejection2(thisReader._closedPromise, (r3) => {
            if (thisReader !== reader) {
              return;
            }
            ReadableByteStreamControllerError2(branch1._readableStreamController, r3);
            ReadableByteStreamControllerError2(branch2._readableStreamController, r3);
            if (!canceled1 || !canceled2) {
              resolveCancelPromise(void 0);
            }
          });
        }
        function pullWithDefaultReader() {
          if (IsReadableStreamBYOBReader2(reader)) {
            ReadableStreamReaderGenericRelease2(reader);
            reader = AcquireReadableStreamDefaultReader2(stream);
            forwardReaderError(reader);
          }
          const readRequest = {
            _chunkSteps: (chunk) => {
              queueMicrotask2(() => {
                readAgainForBranch1 = false;
                readAgainForBranch2 = false;
                const chunk1 = chunk;
                let chunk2 = chunk;
                if (!canceled1 && !canceled2) {
                  try {
                    chunk2 = CloneAsUint8Array2(chunk);
                  } catch (cloneE) {
                    ReadableByteStreamControllerError2(branch1._readableStreamController, cloneE);
                    ReadableByteStreamControllerError2(branch2._readableStreamController, cloneE);
                    resolveCancelPromise(ReadableStreamCancel2(stream, cloneE));
                    return;
                  }
                }
                if (!canceled1) {
                  ReadableByteStreamControllerEnqueue2(branch1._readableStreamController, chunk1);
                }
                if (!canceled2) {
                  ReadableByteStreamControllerEnqueue2(branch2._readableStreamController, chunk2);
                }
                reading = false;
                if (readAgainForBranch1) {
                  pull1Algorithm();
                } else if (readAgainForBranch2) {
                  pull2Algorithm();
                }
              });
            },
            _closeSteps: () => {
              reading = false;
              if (!canceled1) {
                ReadableByteStreamControllerClose2(branch1._readableStreamController);
              }
              if (!canceled2) {
                ReadableByteStreamControllerClose2(branch2._readableStreamController);
              }
              if (branch1._readableStreamController._pendingPullIntos.length > 0) {
                ReadableByteStreamControllerRespond2(branch1._readableStreamController, 0);
              }
              if (branch2._readableStreamController._pendingPullIntos.length > 0) {
                ReadableByteStreamControllerRespond2(branch2._readableStreamController, 0);
              }
              if (!canceled1 || !canceled2) {
                resolveCancelPromise(void 0);
              }
            },
            _errorSteps: () => {
              reading = false;
            }
          };
          ReadableStreamDefaultReaderRead2(reader, readRequest);
        }
        function pullWithBYOBReader(view, forBranch2) {
          if (IsReadableStreamDefaultReader2(reader)) {
            ReadableStreamReaderGenericRelease2(reader);
            reader = AcquireReadableStreamBYOBReader2(stream);
            forwardReaderError(reader);
          }
          const byobBranch = forBranch2 ? branch2 : branch1;
          const otherBranch = forBranch2 ? branch1 : branch2;
          const readIntoRequest = {
            _chunkSteps: (chunk) => {
              queueMicrotask2(() => {
                readAgainForBranch1 = false;
                readAgainForBranch2 = false;
                const byobCanceled = forBranch2 ? canceled2 : canceled1;
                const otherCanceled = forBranch2 ? canceled1 : canceled2;
                if (!otherCanceled) {
                  let clonedChunk;
                  try {
                    clonedChunk = CloneAsUint8Array2(chunk);
                  } catch (cloneE) {
                    ReadableByteStreamControllerError2(byobBranch._readableStreamController, cloneE);
                    ReadableByteStreamControllerError2(otherBranch._readableStreamController, cloneE);
                    resolveCancelPromise(ReadableStreamCancel2(stream, cloneE));
                    return;
                  }
                  if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView2(byobBranch._readableStreamController, chunk);
                  }
                  ReadableByteStreamControllerEnqueue2(otherBranch._readableStreamController, clonedChunk);
                } else if (!byobCanceled) {
                  ReadableByteStreamControllerRespondWithNewView2(byobBranch._readableStreamController, chunk);
                }
                reading = false;
                if (readAgainForBranch1) {
                  pull1Algorithm();
                } else if (readAgainForBranch2) {
                  pull2Algorithm();
                }
              });
            },
            _closeSteps: (chunk) => {
              reading = false;
              const byobCanceled = forBranch2 ? canceled2 : canceled1;
              const otherCanceled = forBranch2 ? canceled1 : canceled2;
              if (!byobCanceled) {
                ReadableByteStreamControllerClose2(byobBranch._readableStreamController);
              }
              if (!otherCanceled) {
                ReadableByteStreamControllerClose2(otherBranch._readableStreamController);
              }
              if (chunk !== void 0) {
                if (!byobCanceled) {
                  ReadableByteStreamControllerRespondWithNewView2(byobBranch._readableStreamController, chunk);
                }
                if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond2(otherBranch._readableStreamController, 0);
                }
              }
              if (!byobCanceled || !otherCanceled) {
                resolveCancelPromise(void 0);
              }
            },
            _errorSteps: () => {
              reading = false;
            }
          };
          ReadableStreamBYOBReaderRead2(reader, view, readIntoRequest);
        }
        function pull1Algorithm() {
          if (reading) {
            readAgainForBranch1 = true;
            return promiseResolvedWith2(void 0);
          }
          reading = true;
          const byobRequest = ReadableByteStreamControllerGetBYOBRequest2(branch1._readableStreamController);
          if (byobRequest === null) {
            pullWithDefaultReader();
          } else {
            pullWithBYOBReader(byobRequest._view, false);
          }
          return promiseResolvedWith2(void 0);
        }
        function pull2Algorithm() {
          if (reading) {
            readAgainForBranch2 = true;
            return promiseResolvedWith2(void 0);
          }
          reading = true;
          const byobRequest = ReadableByteStreamControllerGetBYOBRequest2(branch2._readableStreamController);
          if (byobRequest === null) {
            pullWithDefaultReader();
          } else {
            pullWithBYOBReader(byobRequest._view, true);
          }
          return promiseResolvedWith2(void 0);
        }
        function cancel1Algorithm(reason) {
          canceled1 = true;
          reason1 = reason;
          if (canceled2) {
            const compositeReason = CreateArrayFromList2([reason1, reason2]);
            const cancelResult = ReadableStreamCancel2(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function cancel2Algorithm(reason) {
          canceled2 = true;
          reason2 = reason;
          if (canceled1) {
            const compositeReason = CreateArrayFromList2([reason1, reason2]);
            const cancelResult = ReadableStreamCancel2(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function startAlgorithm() {
          return;
        }
        branch1 = CreateReadableByteStream2(startAlgorithm, pull1Algorithm, cancel1Algorithm);
        branch2 = CreateReadableByteStream2(startAlgorithm, pull2Algorithm, cancel2Algorithm);
        forwardReaderError(reader);
        return [branch1, branch2];
      }
      function convertUnderlyingDefaultOrByteSource2(source, context) {
        assertDictionary2(source, context);
        const original = source;
        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;
        const cancel = original === null || original === void 0 ? void 0 : original.cancel;
        const pull = original === null || original === void 0 ? void 0 : original.pull;
        const start3 = original === null || original === void 0 ? void 0 : original.start;
        const type = original === null || original === void 0 ? void 0 : original.type;
        return {
          autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange2(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),
          cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback2(cancel, original, `${context} has member 'cancel' that`),
          pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback2(pull, original, `${context} has member 'pull' that`),
          start: start3 === void 0 ? void 0 : convertUnderlyingSourceStartCallback2(start3, original, `${context} has member 'start' that`),
          type: type === void 0 ? void 0 : convertReadableStreamType2(type, `${context} has member 'type' that`)
        };
      }
      function convertUnderlyingSourceCancelCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return (reason) => promiseCall2(fn, original, [reason]);
      }
      function convertUnderlyingSourcePullCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return (controller) => promiseCall2(fn, original, [controller]);
      }
      function convertUnderlyingSourceStartCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return (controller) => reflectCall2(fn, original, [controller]);
      }
      function convertReadableStreamType2(type, context) {
        type = `${type}`;
        if (type !== "bytes") {
          throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);
        }
        return type;
      }
      function convertReaderOptions2(options, context) {
        assertDictionary2(options, context);
        const mode = options === null || options === void 0 ? void 0 : options.mode;
        return {
          mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode2(mode, `${context} has member 'mode' that`)
        };
      }
      function convertReadableStreamReaderMode2(mode, context) {
        mode = `${mode}`;
        if (mode !== "byob") {
          throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);
        }
        return mode;
      }
      function convertIteratorOptions2(options, context) {
        assertDictionary2(options, context);
        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
        return { preventCancel: Boolean(preventCancel) };
      }
      function convertPipeOptions2(options, context) {
        assertDictionary2(options, context);
        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;
        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;
        const signal = options === null || options === void 0 ? void 0 : options.signal;
        if (signal !== void 0) {
          assertAbortSignal2(signal, `${context} has member 'signal' that`);
        }
        return {
          preventAbort: Boolean(preventAbort),
          preventCancel: Boolean(preventCancel),
          preventClose: Boolean(preventClose),
          signal
        };
      }
      function assertAbortSignal2(signal, context) {
        if (!isAbortSignal3(signal)) {
          throw new TypeError(`${context} is not an AbortSignal.`);
        }
      }
      function convertReadableWritablePair2(pair, context) {
        assertDictionary2(pair, context);
        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;
        assertRequiredField2(readable, "readable", "ReadableWritablePair");
        assertReadableStream2(readable, `${context} has member 'readable' that`);
        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;
        assertRequiredField2(writable, "writable", "ReadableWritablePair");
        assertWritableStream2(writable, `${context} has member 'writable' that`);
        return { readable, writable };
      }
      class ReadableStream3 {
        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {
          if (rawUnderlyingSource === void 0) {
            rawUnderlyingSource = null;
          } else {
            assertObject2(rawUnderlyingSource, "First parameter");
          }
          const strategy = convertQueuingStrategy2(rawStrategy, "Second parameter");
          const underlyingSource = convertUnderlyingDefaultOrByteSource2(rawUnderlyingSource, "First parameter");
          InitializeReadableStream2(this);
          if (underlyingSource.type === "bytes") {
            if (strategy.size !== void 0) {
              throw new RangeError("The strategy for a byte stream cannot have a size function");
            }
            const highWaterMark = ExtractHighWaterMark2(strategy, 0);
            SetUpReadableByteStreamControllerFromUnderlyingSource2(this, underlyingSource, highWaterMark);
          } else {
            const sizeAlgorithm = ExtractSizeAlgorithm2(strategy);
            const highWaterMark = ExtractHighWaterMark2(strategy, 1);
            SetUpReadableStreamDefaultControllerFromUnderlyingSource2(this, underlyingSource, highWaterMark, sizeAlgorithm);
          }
        }
        get locked() {
          if (!IsReadableStream2(this)) {
            throw streamBrandCheckException$12("locked");
          }
          return IsReadableStreamLocked2(this);
        }
        cancel(reason = void 0) {
          if (!IsReadableStream2(this)) {
            return promiseRejectedWith2(streamBrandCheckException$12("cancel"));
          }
          if (IsReadableStreamLocked2(this)) {
            return promiseRejectedWith2(new TypeError("Cannot cancel a stream that already has a reader"));
          }
          return ReadableStreamCancel2(this, reason);
        }
        getReader(rawOptions = void 0) {
          if (!IsReadableStream2(this)) {
            throw streamBrandCheckException$12("getReader");
          }
          const options = convertReaderOptions2(rawOptions, "First parameter");
          if (options.mode === void 0) {
            return AcquireReadableStreamDefaultReader2(this);
          }
          return AcquireReadableStreamBYOBReader2(this);
        }
        pipeThrough(rawTransform, rawOptions = {}) {
          if (!IsReadableStream2(this)) {
            throw streamBrandCheckException$12("pipeThrough");
          }
          assertRequiredArgument2(rawTransform, 1, "pipeThrough");
          const transform3 = convertReadableWritablePair2(rawTransform, "First parameter");
          const options = convertPipeOptions2(rawOptions, "Second parameter");
          if (IsReadableStreamLocked2(this)) {
            throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
          }
          if (IsWritableStreamLocked2(transform3.writable)) {
            throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
          }
          const promise = ReadableStreamPipeTo2(this, transform3.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
          setPromiseIsHandledToTrue2(promise);
          return transform3.readable;
        }
        pipeTo(destination, rawOptions = {}) {
          if (!IsReadableStream2(this)) {
            return promiseRejectedWith2(streamBrandCheckException$12("pipeTo"));
          }
          if (destination === void 0) {
            return promiseRejectedWith2(`Parameter 1 is required in 'pipeTo'.`);
          }
          if (!IsWritableStream2(destination)) {
            return promiseRejectedWith2(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));
          }
          let options;
          try {
            options = convertPipeOptions2(rawOptions, "Second parameter");
          } catch (e3) {
            return promiseRejectedWith2(e3);
          }
          if (IsReadableStreamLocked2(this)) {
            return promiseRejectedWith2(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"));
          }
          if (IsWritableStreamLocked2(destination)) {
            return promiseRejectedWith2(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"));
          }
          return ReadableStreamPipeTo2(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
        }
        tee() {
          if (!IsReadableStream2(this)) {
            throw streamBrandCheckException$12("tee");
          }
          const branches = ReadableStreamTee2(this);
          return CreateArrayFromList2(branches);
        }
        values(rawOptions = void 0) {
          if (!IsReadableStream2(this)) {
            throw streamBrandCheckException$12("values");
          }
          const options = convertIteratorOptions2(rawOptions, "First parameter");
          return AcquireReadableStreamAsyncIterator2(this, options.preventCancel);
        }
      }
      Object.defineProperties(ReadableStream3.prototype, {
        cancel: { enumerable: true },
        getReader: { enumerable: true },
        pipeThrough: { enumerable: true },
        pipeTo: { enumerable: true },
        tee: { enumerable: true },
        values: { enumerable: true },
        locked: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(ReadableStream3.prototype, SymbolPolyfill2.toStringTag, {
          value: "ReadableStream",
          configurable: true
        });
      }
      if (typeof SymbolPolyfill2.asyncIterator === "symbol") {
        Object.defineProperty(ReadableStream3.prototype, SymbolPolyfill2.asyncIterator, {
          value: ReadableStream3.prototype.values,
          writable: true,
          configurable: true
        });
      }
      function CreateReadableStream2(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
        const stream = Object.create(ReadableStream3.prototype);
        InitializeReadableStream2(stream);
        const controller = Object.create(ReadableStreamDefaultController2.prototype);
        SetUpReadableStreamDefaultController2(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
        return stream;
      }
      function CreateReadableByteStream2(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
        const stream = Object.create(ReadableStream3.prototype);
        InitializeReadableStream2(stream);
        const controller = Object.create(ReadableByteStreamController2.prototype);
        SetUpReadableByteStreamController2(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0);
        return stream;
      }
      function InitializeReadableStream2(stream) {
        stream._state = "readable";
        stream._reader = void 0;
        stream._storedError = void 0;
        stream._disturbed = false;
      }
      function IsReadableStream2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_readableStreamController")) {
          return false;
        }
        return x3 instanceof ReadableStream3;
      }
      function IsReadableStreamLocked2(stream) {
        if (stream._reader === void 0) {
          return false;
        }
        return true;
      }
      function ReadableStreamCancel2(stream, reason) {
        stream._disturbed = true;
        if (stream._state === "closed") {
          return promiseResolvedWith2(void 0);
        }
        if (stream._state === "errored") {
          return promiseRejectedWith2(stream._storedError);
        }
        ReadableStreamClose2(stream);
        const reader = stream._reader;
        if (reader !== void 0 && IsReadableStreamBYOBReader2(reader)) {
          reader._readIntoRequests.forEach((readIntoRequest) => {
            readIntoRequest._closeSteps(void 0);
          });
          reader._readIntoRequests = new SimpleQueue2();
        }
        const sourceCancelPromise = stream._readableStreamController[CancelSteps2](reason);
        return transformPromiseWith2(sourceCancelPromise, noop3);
      }
      function ReadableStreamClose2(stream) {
        stream._state = "closed";
        const reader = stream._reader;
        if (reader === void 0) {
          return;
        }
        defaultReaderClosedPromiseResolve2(reader);
        if (IsReadableStreamDefaultReader2(reader)) {
          reader._readRequests.forEach((readRequest) => {
            readRequest._closeSteps();
          });
          reader._readRequests = new SimpleQueue2();
        }
      }
      function ReadableStreamError2(stream, e3) {
        stream._state = "errored";
        stream._storedError = e3;
        const reader = stream._reader;
        if (reader === void 0) {
          return;
        }
        defaultReaderClosedPromiseReject2(reader, e3);
        if (IsReadableStreamDefaultReader2(reader)) {
          reader._readRequests.forEach((readRequest) => {
            readRequest._errorSteps(e3);
          });
          reader._readRequests = new SimpleQueue2();
        } else {
          reader._readIntoRequests.forEach((readIntoRequest) => {
            readIntoRequest._errorSteps(e3);
          });
          reader._readIntoRequests = new SimpleQueue2();
        }
      }
      function streamBrandCheckException$12(name) {
        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);
      }
      function convertQueuingStrategyInit2(init2, context) {
        assertDictionary2(init2, context);
        const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
        assertRequiredField2(highWaterMark, "highWaterMark", "QueuingStrategyInit");
        return {
          highWaterMark: convertUnrestrictedDouble2(highWaterMark)
        };
      }
      const byteLengthSizeFunction2 = (chunk) => {
        return chunk.byteLength;
      };
      try {
        Object.defineProperty(byteLengthSizeFunction2, "name", {
          value: "size",
          configurable: true
        });
      } catch (_a8) {
      }
      class ByteLengthQueuingStrategy2 {
        constructor(options) {
          assertRequiredArgument2(options, 1, "ByteLengthQueuingStrategy");
          options = convertQueuingStrategyInit2(options, "First parameter");
          this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;
        }
        get highWaterMark() {
          if (!IsByteLengthQueuingStrategy2(this)) {
            throw byteLengthBrandCheckException2("highWaterMark");
          }
          return this._byteLengthQueuingStrategyHighWaterMark;
        }
        get size() {
          if (!IsByteLengthQueuingStrategy2(this)) {
            throw byteLengthBrandCheckException2("size");
          }
          return byteLengthSizeFunction2;
        }
      }
      Object.defineProperties(ByteLengthQueuingStrategy2.prototype, {
        highWaterMark: { enumerable: true },
        size: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(ByteLengthQueuingStrategy2.prototype, SymbolPolyfill2.toStringTag, {
          value: "ByteLengthQueuingStrategy",
          configurable: true
        });
      }
      function byteLengthBrandCheckException2(name) {
        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);
      }
      function IsByteLengthQueuingStrategy2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_byteLengthQueuingStrategyHighWaterMark")) {
          return false;
        }
        return x3 instanceof ByteLengthQueuingStrategy2;
      }
      const countSizeFunction2 = () => {
        return 1;
      };
      try {
        Object.defineProperty(countSizeFunction2, "name", {
          value: "size",
          configurable: true
        });
      } catch (_a8) {
      }
      class CountQueuingStrategy2 {
        constructor(options) {
          assertRequiredArgument2(options, 1, "CountQueuingStrategy");
          options = convertQueuingStrategyInit2(options, "First parameter");
          this._countQueuingStrategyHighWaterMark = options.highWaterMark;
        }
        get highWaterMark() {
          if (!IsCountQueuingStrategy2(this)) {
            throw countBrandCheckException2("highWaterMark");
          }
          return this._countQueuingStrategyHighWaterMark;
        }
        get size() {
          if (!IsCountQueuingStrategy2(this)) {
            throw countBrandCheckException2("size");
          }
          return countSizeFunction2;
        }
      }
      Object.defineProperties(CountQueuingStrategy2.prototype, {
        highWaterMark: { enumerable: true },
        size: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(CountQueuingStrategy2.prototype, SymbolPolyfill2.toStringTag, {
          value: "CountQueuingStrategy",
          configurable: true
        });
      }
      function countBrandCheckException2(name) {
        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);
      }
      function IsCountQueuingStrategy2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_countQueuingStrategyHighWaterMark")) {
          return false;
        }
        return x3 instanceof CountQueuingStrategy2;
      }
      function convertTransformer2(original, context) {
        assertDictionary2(original, context);
        const flush = original === null || original === void 0 ? void 0 : original.flush;
        const readableType = original === null || original === void 0 ? void 0 : original.readableType;
        const start3 = original === null || original === void 0 ? void 0 : original.start;
        const transform3 = original === null || original === void 0 ? void 0 : original.transform;
        const writableType = original === null || original === void 0 ? void 0 : original.writableType;
        return {
          flush: flush === void 0 ? void 0 : convertTransformerFlushCallback2(flush, original, `${context} has member 'flush' that`),
          readableType,
          start: start3 === void 0 ? void 0 : convertTransformerStartCallback2(start3, original, `${context} has member 'start' that`),
          transform: transform3 === void 0 ? void 0 : convertTransformerTransformCallback2(transform3, original, `${context} has member 'transform' that`),
          writableType
        };
      }
      function convertTransformerFlushCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return (controller) => promiseCall2(fn, original, [controller]);
      }
      function convertTransformerStartCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return (controller) => reflectCall2(fn, original, [controller]);
      }
      function convertTransformerTransformCallback2(fn, original, context) {
        assertFunction2(fn, context);
        return (chunk, controller) => promiseCall2(fn, original, [chunk, controller]);
      }
      class TransformStream2 {
        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {
          if (rawTransformer === void 0) {
            rawTransformer = null;
          }
          const writableStrategy = convertQueuingStrategy2(rawWritableStrategy, "Second parameter");
          const readableStrategy = convertQueuingStrategy2(rawReadableStrategy, "Third parameter");
          const transformer2 = convertTransformer2(rawTransformer, "First parameter");
          if (transformer2.readableType !== void 0) {
            throw new RangeError("Invalid readableType specified");
          }
          if (transformer2.writableType !== void 0) {
            throw new RangeError("Invalid writableType specified");
          }
          const readableHighWaterMark = ExtractHighWaterMark2(readableStrategy, 0);
          const readableSizeAlgorithm = ExtractSizeAlgorithm2(readableStrategy);
          const writableHighWaterMark = ExtractHighWaterMark2(writableStrategy, 1);
          const writableSizeAlgorithm = ExtractSizeAlgorithm2(writableStrategy);
          let startPromise_resolve;
          const startPromise = newPromise2((resolve2) => {
            startPromise_resolve = resolve2;
          });
          InitializeTransformStream2(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
          SetUpTransformStreamDefaultControllerFromTransformer2(this, transformer2);
          if (transformer2.start !== void 0) {
            startPromise_resolve(transformer2.start(this._transformStreamController));
          } else {
            startPromise_resolve(void 0);
          }
        }
        get readable() {
          if (!IsTransformStream2(this)) {
            throw streamBrandCheckException2("readable");
          }
          return this._readable;
        }
        get writable() {
          if (!IsTransformStream2(this)) {
            throw streamBrandCheckException2("writable");
          }
          return this._writable;
        }
      }
      Object.defineProperties(TransformStream2.prototype, {
        readable: { enumerable: true },
        writable: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(TransformStream2.prototype, SymbolPolyfill2.toStringTag, {
          value: "TransformStream",
          configurable: true
        });
      }
      function InitializeTransformStream2(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
        function startAlgorithm() {
          return startPromise;
        }
        function writeAlgorithm(chunk) {
          return TransformStreamDefaultSinkWriteAlgorithm2(stream, chunk);
        }
        function abortAlgorithm(reason) {
          return TransformStreamDefaultSinkAbortAlgorithm2(stream, reason);
        }
        function closeAlgorithm() {
          return TransformStreamDefaultSinkCloseAlgorithm2(stream);
        }
        stream._writable = CreateWritableStream2(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
        function pullAlgorithm() {
          return TransformStreamDefaultSourcePullAlgorithm2(stream);
        }
        function cancelAlgorithm(reason) {
          TransformStreamErrorWritableAndUnblockWrite2(stream, reason);
          return promiseResolvedWith2(void 0);
        }
        stream._readable = CreateReadableStream2(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
        stream._backpressure = void 0;
        stream._backpressureChangePromise = void 0;
        stream._backpressureChangePromise_resolve = void 0;
        TransformStreamSetBackpressure2(stream, true);
        stream._transformStreamController = void 0;
      }
      function IsTransformStream2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_transformStreamController")) {
          return false;
        }
        return x3 instanceof TransformStream2;
      }
      function TransformStreamError2(stream, e3) {
        ReadableStreamDefaultControllerError2(stream._readable._readableStreamController, e3);
        TransformStreamErrorWritableAndUnblockWrite2(stream, e3);
      }
      function TransformStreamErrorWritableAndUnblockWrite2(stream, e3) {
        TransformStreamDefaultControllerClearAlgorithms2(stream._transformStreamController);
        WritableStreamDefaultControllerErrorIfNeeded2(stream._writable._writableStreamController, e3);
        if (stream._backpressure) {
          TransformStreamSetBackpressure2(stream, false);
        }
      }
      function TransformStreamSetBackpressure2(stream, backpressure) {
        if (stream._backpressureChangePromise !== void 0) {
          stream._backpressureChangePromise_resolve();
        }
        stream._backpressureChangePromise = newPromise2((resolve2) => {
          stream._backpressureChangePromise_resolve = resolve2;
        });
        stream._backpressure = backpressure;
      }
      class TransformStreamDefaultController2 {
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get desiredSize() {
          if (!IsTransformStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException2("desiredSize");
          }
          const readableController = this._controlledTransformStream._readable._readableStreamController;
          return ReadableStreamDefaultControllerGetDesiredSize2(readableController);
        }
        enqueue(chunk = void 0) {
          if (!IsTransformStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException2("enqueue");
          }
          TransformStreamDefaultControllerEnqueue2(this, chunk);
        }
        error(reason = void 0) {
          if (!IsTransformStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException2("error");
          }
          TransformStreamDefaultControllerError2(this, reason);
        }
        terminate() {
          if (!IsTransformStreamDefaultController2(this)) {
            throw defaultControllerBrandCheckException2("terminate");
          }
          TransformStreamDefaultControllerTerminate2(this);
        }
      }
      Object.defineProperties(TransformStreamDefaultController2.prototype, {
        enqueue: { enumerable: true },
        error: { enumerable: true },
        terminate: { enumerable: true },
        desiredSize: { enumerable: true }
      });
      if (typeof SymbolPolyfill2.toStringTag === "symbol") {
        Object.defineProperty(TransformStreamDefaultController2.prototype, SymbolPolyfill2.toStringTag, {
          value: "TransformStreamDefaultController",
          configurable: true
        });
      }
      function IsTransformStreamDefaultController2(x3) {
        if (!typeIsObject2(x3)) {
          return false;
        }
        if (!Object.prototype.hasOwnProperty.call(x3, "_controlledTransformStream")) {
          return false;
        }
        return x3 instanceof TransformStreamDefaultController2;
      }
      function SetUpTransformStreamDefaultController2(stream, controller, transformAlgorithm, flushAlgorithm) {
        controller._controlledTransformStream = stream;
        stream._transformStreamController = controller;
        controller._transformAlgorithm = transformAlgorithm;
        controller._flushAlgorithm = flushAlgorithm;
      }
      function SetUpTransformStreamDefaultControllerFromTransformer2(stream, transformer2) {
        const controller = Object.create(TransformStreamDefaultController2.prototype);
        let transformAlgorithm = (chunk) => {
          try {
            TransformStreamDefaultControllerEnqueue2(controller, chunk);
            return promiseResolvedWith2(void 0);
          } catch (transformResultE) {
            return promiseRejectedWith2(transformResultE);
          }
        };
        let flushAlgorithm = () => promiseResolvedWith2(void 0);
        if (transformer2.transform !== void 0) {
          transformAlgorithm = (chunk) => transformer2.transform(chunk, controller);
        }
        if (transformer2.flush !== void 0) {
          flushAlgorithm = () => transformer2.flush(controller);
        }
        SetUpTransformStreamDefaultController2(stream, controller, transformAlgorithm, flushAlgorithm);
      }
      function TransformStreamDefaultControllerClearAlgorithms2(controller) {
        controller._transformAlgorithm = void 0;
        controller._flushAlgorithm = void 0;
      }
      function TransformStreamDefaultControllerEnqueue2(controller, chunk) {
        const stream = controller._controlledTransformStream;
        const readableController = stream._readable._readableStreamController;
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue2(readableController)) {
          throw new TypeError("Readable side is not in a state that permits enqueue");
        }
        try {
          ReadableStreamDefaultControllerEnqueue2(readableController, chunk);
        } catch (e3) {
          TransformStreamErrorWritableAndUnblockWrite2(stream, e3);
          throw stream._readable._storedError;
        }
        const backpressure = ReadableStreamDefaultControllerHasBackpressure2(readableController);
        if (backpressure !== stream._backpressure) {
          TransformStreamSetBackpressure2(stream, true);
        }
      }
      function TransformStreamDefaultControllerError2(controller, e3) {
        TransformStreamError2(controller._controlledTransformStream, e3);
      }
      function TransformStreamDefaultControllerPerformTransform2(controller, chunk) {
        const transformPromise = controller._transformAlgorithm(chunk);
        return transformPromiseWith2(transformPromise, void 0, (r3) => {
          TransformStreamError2(controller._controlledTransformStream, r3);
          throw r3;
        });
      }
      function TransformStreamDefaultControllerTerminate2(controller) {
        const stream = controller._controlledTransformStream;
        const readableController = stream._readable._readableStreamController;
        ReadableStreamDefaultControllerClose2(readableController);
        const error3 = new TypeError("TransformStream terminated");
        TransformStreamErrorWritableAndUnblockWrite2(stream, error3);
      }
      function TransformStreamDefaultSinkWriteAlgorithm2(stream, chunk) {
        const controller = stream._transformStreamController;
        if (stream._backpressure) {
          const backpressureChangePromise = stream._backpressureChangePromise;
          return transformPromiseWith2(backpressureChangePromise, () => {
            const writable = stream._writable;
            const state = writable._state;
            if (state === "erroring") {
              throw writable._storedError;
            }
            return TransformStreamDefaultControllerPerformTransform2(controller, chunk);
          });
        }
        return TransformStreamDefaultControllerPerformTransform2(controller, chunk);
      }
      function TransformStreamDefaultSinkAbortAlgorithm2(stream, reason) {
        TransformStreamError2(stream, reason);
        return promiseResolvedWith2(void 0);
      }
      function TransformStreamDefaultSinkCloseAlgorithm2(stream) {
        const readable = stream._readable;
        const controller = stream._transformStreamController;
        const flushPromise = controller._flushAlgorithm();
        TransformStreamDefaultControllerClearAlgorithms2(controller);
        return transformPromiseWith2(flushPromise, () => {
          if (readable._state === "errored") {
            throw readable._storedError;
          }
          ReadableStreamDefaultControllerClose2(readable._readableStreamController);
        }, (r3) => {
          TransformStreamError2(stream, r3);
          throw readable._storedError;
        });
      }
      function TransformStreamDefaultSourcePullAlgorithm2(stream) {
        TransformStreamSetBackpressure2(stream, false);
        return stream._backpressureChangePromise;
      }
      function defaultControllerBrandCheckException2(name) {
        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);
      }
      function streamBrandCheckException2(name) {
        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);
      }
      exports2.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy2;
      exports2.CountQueuingStrategy = CountQueuingStrategy2;
      exports2.ReadableByteStreamController = ReadableByteStreamController2;
      exports2.ReadableStream = ReadableStream3;
      exports2.ReadableStreamBYOBReader = ReadableStreamBYOBReader2;
      exports2.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest2;
      exports2.ReadableStreamDefaultController = ReadableStreamDefaultController2;
      exports2.ReadableStreamDefaultReader = ReadableStreamDefaultReader2;
      exports2.TransformStream = TransformStream2;
      exports2.TransformStreamDefaultController = TransformStreamDefaultController2;
      exports2.WritableStream = WritableStream2;
      exports2.WritableStreamDefaultController = WritableStreamDefaultController2;
      exports2.WritableStreamDefaultWriter = WritableStreamDefaultWriter2;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// node_modules/fetch-blob/streams.cjs
var require_streams = __commonJS({
  "node_modules/fetch-blob/streams.cjs"() {
    var POOL_SIZE3 = 65536;
    if (!globalThis.ReadableStream) {
      try {
        const process2 = require("process");
        const { emitWarning } = process2;
        try {
          process2.emitWarning = () => {
          };
          Object.assign(globalThis, require("stream/web"));
          process2.emitWarning = emitWarning;
        } catch (error3) {
          process2.emitWarning = emitWarning;
          throw error3;
        }
      } catch (error3) {
        Object.assign(globalThis, require_ponyfill_es2018());
      }
    }
    try {
      const { Blob: Blob3 } = require("buffer");
      if (Blob3 && !Blob3.prototype.stream) {
        Blob3.prototype.stream = function name(params) {
          let position3 = 0;
          const blob = this;
          return new ReadableStream({
            type: "bytes",
            async pull(ctrl) {
              const chunk = blob.slice(position3, Math.min(blob.size, position3 + POOL_SIZE3));
              const buffer3 = await chunk.arrayBuffer();
              position3 += buffer3.byteLength;
              ctrl.enqueue(new Uint8Array(buffer3));
              if (position3 === blob.size) {
                ctrl.close();
              }
            }
          });
        };
      }
    } catch (error3) {
    }
  }
});

// node_modules/fetch-blob/index.js
async function* toIterator(parts, clone2 = true) {
  for (const part of parts) {
    if ("stream" in part) {
      yield* part.stream();
    } else if (ArrayBuffer.isView(part)) {
      if (clone2) {
        let position3 = part.byteOffset;
        const end = part.byteOffset + part.byteLength;
        while (position3 !== end) {
          const size = Math.min(end - position3, POOL_SIZE);
          const chunk = part.buffer.slice(position3, position3 + size);
          position3 += chunk.byteLength;
          yield new Uint8Array(chunk);
        }
      } else {
        yield part;
      }
    } else {
      let position3 = 0, b2 = part;
      while (position3 !== b2.size) {
        const chunk = b2.slice(position3, Math.min(b2.size, position3 + POOL_SIZE));
        const buffer3 = await chunk.arrayBuffer();
        position3 += buffer3.byteLength;
        yield new Uint8Array(buffer3);
      }
    }
  }
}
var import_streams, POOL_SIZE, _parts, _type, _size, _endings, _a, _Blob, Blob, fetch_blob_default;
var init_fetch_blob = __esm({
  "node_modules/fetch-blob/index.js"() {
    import_streams = __toESM(require_streams(), 1);
    POOL_SIZE = 65536;
    _Blob = (_a = class {
      constructor(blobParts = [], options = {}) {
        __privateAdd(this, _parts, []);
        __privateAdd(this, _type, "");
        __privateAdd(this, _size, 0);
        __privateAdd(this, _endings, "transparent");
        if (typeof blobParts !== "object" || blobParts === null) {
          throw new TypeError("Failed to construct 'Blob': The provided value cannot be converted to a sequence.");
        }
        if (typeof blobParts[Symbol.iterator] !== "function") {
          throw new TypeError("Failed to construct 'Blob': The object must have a callable @@iterator property.");
        }
        if (typeof options !== "object" && typeof options !== "function") {
          throw new TypeError("Failed to construct 'Blob': parameter 2 cannot convert to dictionary.");
        }
        if (options === null)
          options = {};
        const encoder = new TextEncoder();
        for (const element6 of blobParts) {
          let part;
          if (ArrayBuffer.isView(element6)) {
            part = new Uint8Array(element6.buffer.slice(element6.byteOffset, element6.byteOffset + element6.byteLength));
          } else if (element6 instanceof ArrayBuffer) {
            part = new Uint8Array(element6.slice(0));
          } else if (element6 instanceof _a) {
            part = element6;
          } else {
            part = encoder.encode(`${element6}`);
          }
          const size = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (size) {
            __privateSet(this, _size, __privateGet(this, _size) + size);
            __privateGet(this, _parts).push(part);
          }
        }
        __privateSet(this, _endings, `${options.endings === void 0 ? "transparent" : options.endings}`);
        const type = options.type === void 0 ? "" : String(options.type);
        __privateSet(this, _type, /^[\x20-\x7E]*$/.test(type) ? type : "");
      }
      get size() {
        return __privateGet(this, _size);
      }
      get type() {
        return __privateGet(this, _type);
      }
      async text() {
        const decoder = new TextDecoder();
        let str = "";
        for await (const part of toIterator(__privateGet(this, _parts), false)) {
          str += decoder.decode(part, { stream: true });
        }
        str += decoder.decode();
        return str;
      }
      async arrayBuffer() {
        const data3 = new Uint8Array(this.size);
        let offset2 = 0;
        for await (const chunk of toIterator(__privateGet(this, _parts), false)) {
          data3.set(chunk, offset2);
          offset2 += chunk.length;
        }
        return data3.buffer;
      }
      stream() {
        const it = toIterator(__privateGet(this, _parts), true);
        return new globalThis.ReadableStream({
          type: "bytes",
          async pull(ctrl) {
            const chunk = await it.next();
            chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);
          },
          async cancel() {
            await it.return();
          }
        });
      }
      slice(start3 = 0, end = this.size, type = "") {
        const { size } = this;
        let relativeStart = start3 < 0 ? Math.max(size + start3, 0) : Math.min(start3, size);
        let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);
        const span = Math.max(relativeEnd - relativeStart, 0);
        const parts = __privateGet(this, _parts);
        const blobParts = [];
        let added = 0;
        for (const part of parts) {
          if (added >= span) {
            break;
          }
          const size2 = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (relativeStart && size2 <= relativeStart) {
            relativeStart -= size2;
            relativeEnd -= size2;
          } else {
            let chunk;
            if (ArrayBuffer.isView(part)) {
              chunk = part.subarray(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.byteLength;
            } else {
              chunk = part.slice(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.size;
            }
            relativeEnd -= size2;
            blobParts.push(chunk);
            relativeStart = 0;
          }
        }
        const blob = new _a([], { type: String(type).toLowerCase() });
        __privateSet(blob, _size, span);
        __privateSet(blob, _parts, blobParts);
        return blob;
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
      static [Symbol.hasInstance](object) {
        return object && typeof object === "object" && typeof object.constructor === "function" && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);
      }
    }, _parts = new WeakMap(), _type = new WeakMap(), _size = new WeakMap(), _endings = new WeakMap(), _a);
    Object.defineProperties(_Blob.prototype, {
      size: { enumerable: true },
      type: { enumerable: true },
      slice: { enumerable: true }
    });
    Blob = _Blob;
    fetch_blob_default = Blob;
  }
});

// node_modules/fetch-blob/file.js
var _lastModified, _name, _a2, _File, File, file_default;
var init_file = __esm({
  "node_modules/fetch-blob/file.js"() {
    init_fetch_blob();
    _File = (_a2 = class extends fetch_blob_default {
      constructor(fileBits, fileName, options = {}) {
        if (arguments.length < 2) {
          throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);
        }
        super(fileBits, options);
        __privateAdd(this, _lastModified, 0);
        __privateAdd(this, _name, "");
        if (options === null)
          options = {};
        const lastModified = options.lastModified === void 0 ? Date.now() : Number(options.lastModified);
        if (!Number.isNaN(lastModified)) {
          __privateSet(this, _lastModified, lastModified);
        }
        __privateSet(this, _name, String(fileName));
      }
      get name() {
        return __privateGet(this, _name);
      }
      get lastModified() {
        return __privateGet(this, _lastModified);
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
      static [Symbol.hasInstance](object) {
        return !!object && object instanceof fetch_blob_default && /^(File)$/.test(object[Symbol.toStringTag]);
      }
    }, _lastModified = new WeakMap(), _name = new WeakMap(), _a2);
    File = _File;
    file_default = File;
  }
});

// node_modules/formdata-polyfill/esm.min.js
function formDataToBlob(F3, B2 = fetch_blob_default) {
  var b2 = `${r()}${r()}`.replace(/\./g, "").slice(-28).padStart(32, "-"), c2 = [], p3 = `--${b2}\r
Content-Disposition: form-data; name="`;
  F3.forEach((v2, n2) => typeof v2 == "string" ? c2.push(p3 + e(n2) + `"\r
\r
${v2.replace(/\r(?!\n)|(?<!\r)\n/g, "\r\n")}\r
`) : c2.push(p3 + e(n2) + `"; filename="${e(v2.name, 1)}"\r
Content-Type: ${v2.type || "application/octet-stream"}\r
\r
`, v2, "\r\n"));
  c2.push(`--${b2}--`);
  return new B2(c2, { type: "multipart/form-data; boundary=" + b2 });
}
var t, i, h, r, m, f, e, x, _d, _a3, FormData;
var init_esm_min = __esm({
  "node_modules/formdata-polyfill/esm.min.js"() {
    init_fetch_blob();
    init_file();
    ({ toStringTag: t, iterator: i, hasInstance: h } = Symbol);
    r = Math.random;
    m = "append,set,get,getAll,delete,keys,values,entries,forEach,constructor".split(",");
    f = (a2, b2, c2) => (a2 += "", /^(Blob|File)$/.test(b2 && b2[t]) ? [(c2 = c2 !== void 0 ? c2 + "" : b2[t] == "File" ? b2.name : "blob", a2), b2.name !== c2 || b2[t] == "blob" ? new file_default([b2], c2, b2) : b2] : [a2, b2 + ""]);
    e = (c2, f4) => (f4 ? c2 : c2.replace(/\r?\n|\r/g, "\r\n")).replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22");
    x = (n2, a2, e3) => {
      if (a2.length < e3) {
        throw new TypeError(`Failed to execute '${n2}' on 'FormData': ${e3} arguments required, but only ${a2.length} present.`);
      }
    };
    FormData = (_a3 = class {
      constructor(...a2) {
        __privateAdd(this, _d, []);
        if (a2.length)
          throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`);
      }
      get [t]() {
        return "FormData";
      }
      [i]() {
        return this.entries();
      }
      static [h](o2) {
        return o2 && typeof o2 === "object" && o2[t] === "FormData" && !m.some((m3) => typeof o2[m3] != "function");
      }
      append(...a2) {
        x("append", arguments, 2);
        __privateGet(this, _d).push(f(...a2));
      }
      delete(a2) {
        x("delete", arguments, 1);
        a2 += "";
        __privateSet(this, _d, __privateGet(this, _d).filter(([b2]) => b2 !== a2));
      }
      get(a2) {
        x("get", arguments, 1);
        a2 += "";
        for (var b2 = __privateGet(this, _d), l2 = b2.length, c2 = 0; c2 < l2; c2++)
          if (b2[c2][0] === a2)
            return b2[c2][1];
        return null;
      }
      getAll(a2, b2) {
        x("getAll", arguments, 1);
        b2 = [];
        a2 += "";
        __privateGet(this, _d).forEach((c2) => c2[0] === a2 && b2.push(c2[1]));
        return b2;
      }
      has(a2) {
        x("has", arguments, 1);
        a2 += "";
        return __privateGet(this, _d).some((b2) => b2[0] === a2);
      }
      forEach(a2, b2) {
        x("forEach", arguments, 1);
        for (var [c2, d2] of this)
          a2.call(b2, d2, c2, this);
      }
      set(...a2) {
        x("set", arguments, 2);
        var b2 = [], c2 = true;
        a2 = f(...a2);
        __privateGet(this, _d).forEach((d2) => {
          d2[0] === a2[0] ? c2 && (c2 = !b2.push(a2)) : b2.push(d2);
        });
        c2 && b2.push(a2);
        __privateSet(this, _d, b2);
      }
      *entries() {
        yield* __privateGet(this, _d);
      }
      *keys() {
        for (var [a2] of this)
          yield a2;
      }
      *values() {
        for (var [, a2] of this)
          yield a2;
      }
    }, _d = new WeakMap(), _a3);
  }
});

// node_modules/node-fetch/src/errors/base.js
var FetchBaseError;
var init_base = __esm({
  "node_modules/node-fetch/src/errors/base.js"() {
    FetchBaseError = class extends Error {
      constructor(message, type) {
        super(message);
        Error.captureStackTrace(this, this.constructor);
        this.type = type;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    };
  }
});

// node_modules/node-fetch/src/errors/fetch-error.js
var FetchError;
var init_fetch_error = __esm({
  "node_modules/node-fetch/src/errors/fetch-error.js"() {
    init_base();
    FetchError = class extends FetchBaseError {
      constructor(message, type, systemError) {
        super(message, type);
        if (systemError) {
          this.code = this.errno = systemError.code;
          this.erroredSysCall = systemError.syscall;
        }
      }
    };
  }
});

// node_modules/node-fetch/src/utils/is.js
var NAME, isURLSearchParameters, isBlob, isAbortSignal, isDomainOrSubdomain;
var init_is = __esm({
  "node_modules/node-fetch/src/utils/is.js"() {
    NAME = Symbol.toStringTag;
    isURLSearchParameters = (object) => {
      return typeof object === "object" && typeof object.append === "function" && typeof object.delete === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.has === "function" && typeof object.set === "function" && typeof object.sort === "function" && object[NAME] === "URLSearchParams";
    };
    isBlob = (object) => {
      return object && typeof object === "object" && typeof object.arrayBuffer === "function" && typeof object.type === "string" && typeof object.stream === "function" && typeof object.constructor === "function" && /^(Blob|File)$/.test(object[NAME]);
    };
    isAbortSignal = (object) => {
      return typeof object === "object" && (object[NAME] === "AbortSignal" || object[NAME] === "EventTarget");
    };
    isDomainOrSubdomain = (destination, original) => {
      const orig = new URL(original).hostname;
      const dest = new URL(destination).hostname;
      return orig === dest || orig.endsWith(`.${dest}`);
    };
  }
});

// node_modules/node-domexception/index.js
var require_node_domexception = __commonJS({
  "node_modules/node-domexception/index.js"(exports, module2) {
    if (!globalThis.DOMException) {
      try {
        const { MessageChannel } = require("worker_threads"), port = new MessageChannel().port1, ab = new ArrayBuffer();
        port.postMessage(ab, [ab, ab]);
      } catch (err) {
        err.constructor.name === "DOMException" && (globalThis.DOMException = err.constructor);
      }
    }
    module2.exports = globalThis.DOMException;
  }
});

// node_modules/fetch-blob/from.js
var import_node_fs, import_node_path, import_node_domexception, stat, _path, _start, _BlobDataItem, BlobDataItem;
var init_from = __esm({
  "node_modules/fetch-blob/from.js"() {
    import_node_fs = require("fs");
    import_node_path = require("path");
    import_node_domexception = __toESM(require_node_domexception(), 1);
    init_file();
    init_fetch_blob();
    ({ stat } = import_node_fs.promises);
    _BlobDataItem = class {
      constructor(options) {
        __privateAdd(this, _path, void 0);
        __privateAdd(this, _start, void 0);
        __privateSet(this, _path, options.path);
        __privateSet(this, _start, options.start);
        this.size = options.size;
        this.lastModified = options.lastModified;
        this.originalSize = options.originalSize === void 0 ? options.size : options.originalSize;
      }
      slice(start3, end) {
        return new _BlobDataItem({
          path: __privateGet(this, _path),
          lastModified: this.lastModified,
          originalSize: this.originalSize,
          size: end - start3,
          start: __privateGet(this, _start) + start3
        });
      }
      async *stream() {
        const { mtimeMs, size } = await stat(__privateGet(this, _path));
        if (mtimeMs > this.lastModified || this.originalSize !== size) {
          throw new import_node_domexception.default("The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.", "NotReadableError");
        }
        yield* (0, import_node_fs.createReadStream)(__privateGet(this, _path), {
          start: __privateGet(this, _start),
          end: __privateGet(this, _start) + this.size - 1
        });
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
    };
    BlobDataItem = _BlobDataItem;
    _path = new WeakMap();
    _start = new WeakMap();
  }
});

// node_modules/node-fetch/src/utils/multipart-parser.js
var multipart_parser_exports = {};
__export(multipart_parser_exports, {
  toFormData: () => toFormData
});
function _fileName(headerValue) {
  const m3 = headerValue.match(/\bfilename=("(.*?)"|([^()<>@,;:\\"/[\]?={}\s\t]+))($|;\s)/i);
  if (!m3) {
    return;
  }
  const match = m3[2] || m3[3] || "";
  let filename = match.slice(match.lastIndexOf("\\") + 1);
  filename = filename.replace(/%22/g, '"');
  filename = filename.replace(/&#(\d{4});/g, (m4, code2) => {
    return String.fromCharCode(code2);
  });
  return filename;
}
async function toFormData(Body2, ct) {
  if (!/multipart/i.test(ct)) {
    throw new TypeError("Failed to fetch");
  }
  const m3 = ct.match(/boundary=(?:"([^"]+)"|([^;]+))/i);
  if (!m3) {
    throw new TypeError("no or bad content-type header, no multipart boundary");
  }
  const parser = new MultipartParser(m3[1] || m3[2]);
  let headerField;
  let headerValue;
  let entryValue;
  let entryName;
  let contentType;
  let filename;
  const entryChunks = [];
  const formData = new FormData();
  const onPartData = (ui8a) => {
    entryValue += decoder.decode(ui8a, { stream: true });
  };
  const appendToFile = (ui8a) => {
    entryChunks.push(ui8a);
  };
  const appendFileToFormData = () => {
    const file59 = new file_default(entryChunks, filename, { type: contentType });
    formData.append(entryName, file59);
  };
  const appendEntryToFormData = () => {
    formData.append(entryName, entryValue);
  };
  const decoder = new TextDecoder("utf-8");
  decoder.decode();
  parser.onPartBegin = function() {
    parser.onPartData = onPartData;
    parser.onPartEnd = appendEntryToFormData;
    headerField = "";
    headerValue = "";
    entryValue = "";
    entryName = "";
    contentType = "";
    filename = null;
    entryChunks.length = 0;
  };
  parser.onHeaderField = function(ui8a) {
    headerField += decoder.decode(ui8a, { stream: true });
  };
  parser.onHeaderValue = function(ui8a) {
    headerValue += decoder.decode(ui8a, { stream: true });
  };
  parser.onHeaderEnd = function() {
    headerValue += decoder.decode();
    headerField = headerField.toLowerCase();
    if (headerField === "content-disposition") {
      const m4 = headerValue.match(/\bname=("([^"]*)"|([^()<>@,;:\\"/[\]?={}\s\t]+))/i);
      if (m4) {
        entryName = m4[2] || m4[3] || "";
      }
      filename = _fileName(headerValue);
      if (filename) {
        parser.onPartData = appendToFile;
        parser.onPartEnd = appendFileToFormData;
      }
    } else if (headerField === "content-type") {
      contentType = headerValue;
    }
    headerValue = "";
    headerField = "";
  };
  for await (const chunk of Body2) {
    parser.write(chunk);
  }
  parser.end();
  return formData;
}
var s, S, f2, F, LF, CR, SPACE, HYPHEN, COLON, A, Z, lower, noop, MultipartParser;
var init_multipart_parser = __esm({
  "node_modules/node-fetch/src/utils/multipart-parser.js"() {
    init_from();
    init_esm_min();
    s = 0;
    S = {
      START_BOUNDARY: s++,
      HEADER_FIELD_START: s++,
      HEADER_FIELD: s++,
      HEADER_VALUE_START: s++,
      HEADER_VALUE: s++,
      HEADER_VALUE_ALMOST_DONE: s++,
      HEADERS_ALMOST_DONE: s++,
      PART_DATA_START: s++,
      PART_DATA: s++,
      END: s++
    };
    f2 = 1;
    F = {
      PART_BOUNDARY: f2,
      LAST_BOUNDARY: f2 *= 2
    };
    LF = 10;
    CR = 13;
    SPACE = 32;
    HYPHEN = 45;
    COLON = 58;
    A = 97;
    Z = 122;
    lower = (c2) => c2 | 32;
    noop = () => {
    };
    MultipartParser = class {
      constructor(boundary) {
        this.index = 0;
        this.flags = 0;
        this.onHeaderEnd = noop;
        this.onHeaderField = noop;
        this.onHeadersEnd = noop;
        this.onHeaderValue = noop;
        this.onPartBegin = noop;
        this.onPartData = noop;
        this.onPartEnd = noop;
        this.boundaryChars = {};
        boundary = "\r\n--" + boundary;
        const ui8a = new Uint8Array(boundary.length);
        for (let i3 = 0; i3 < boundary.length; i3++) {
          ui8a[i3] = boundary.charCodeAt(i3);
          this.boundaryChars[ui8a[i3]] = true;
        }
        this.boundary = ui8a;
        this.lookbehind = new Uint8Array(this.boundary.length + 8);
        this.state = S.START_BOUNDARY;
      }
      write(data3) {
        let i3 = 0;
        const length_ = data3.length;
        let previousIndex = this.index;
        let { lookbehind, boundary, boundaryChars, index: index2, state, flags: flags2 } = this;
        const boundaryLength = this.boundary.length;
        const boundaryEnd = boundaryLength - 1;
        const bufferLength = data3.length;
        let c2;
        let cl;
        const mark2 = (name) => {
          this[name + "Mark"] = i3;
        };
        const clear = (name) => {
          delete this[name + "Mark"];
        };
        const callback = (callbackSymbol, start3, end, ui8a) => {
          if (start3 === void 0 || start3 !== end) {
            this[callbackSymbol](ui8a && ui8a.subarray(start3, end));
          }
        };
        const dataCallback = (name, clear2) => {
          const markSymbol = name + "Mark";
          if (!(markSymbol in this)) {
            return;
          }
          if (clear2) {
            callback(name, this[markSymbol], i3, data3);
            delete this[markSymbol];
          } else {
            callback(name, this[markSymbol], data3.length, data3);
            this[markSymbol] = 0;
          }
        };
        for (i3 = 0; i3 < length_; i3++) {
          c2 = data3[i3];
          switch (state) {
            case S.START_BOUNDARY:
              if (index2 === boundary.length - 2) {
                if (c2 === HYPHEN) {
                  flags2 |= F.LAST_BOUNDARY;
                } else if (c2 !== CR) {
                  return;
                }
                index2++;
                break;
              } else if (index2 - 1 === boundary.length - 2) {
                if (flags2 & F.LAST_BOUNDARY && c2 === HYPHEN) {
                  state = S.END;
                  flags2 = 0;
                } else if (!(flags2 & F.LAST_BOUNDARY) && c2 === LF) {
                  index2 = 0;
                  callback("onPartBegin");
                  state = S.HEADER_FIELD_START;
                } else {
                  return;
                }
                break;
              }
              if (c2 !== boundary[index2 + 2]) {
                index2 = -2;
              }
              if (c2 === boundary[index2 + 2]) {
                index2++;
              }
              break;
            case S.HEADER_FIELD_START:
              state = S.HEADER_FIELD;
              mark2("onHeaderField");
              index2 = 0;
            case S.HEADER_FIELD:
              if (c2 === CR) {
                clear("onHeaderField");
                state = S.HEADERS_ALMOST_DONE;
                break;
              }
              index2++;
              if (c2 === HYPHEN) {
                break;
              }
              if (c2 === COLON) {
                if (index2 === 1) {
                  return;
                }
                dataCallback("onHeaderField", true);
                state = S.HEADER_VALUE_START;
                break;
              }
              cl = lower(c2);
              if (cl < A || cl > Z) {
                return;
              }
              break;
            case S.HEADER_VALUE_START:
              if (c2 === SPACE) {
                break;
              }
              mark2("onHeaderValue");
              state = S.HEADER_VALUE;
            case S.HEADER_VALUE:
              if (c2 === CR) {
                dataCallback("onHeaderValue", true);
                callback("onHeaderEnd");
                state = S.HEADER_VALUE_ALMOST_DONE;
              }
              break;
            case S.HEADER_VALUE_ALMOST_DONE:
              if (c2 !== LF) {
                return;
              }
              state = S.HEADER_FIELD_START;
              break;
            case S.HEADERS_ALMOST_DONE:
              if (c2 !== LF) {
                return;
              }
              callback("onHeadersEnd");
              state = S.PART_DATA_START;
              break;
            case S.PART_DATA_START:
              state = S.PART_DATA;
              mark2("onPartData");
            case S.PART_DATA:
              previousIndex = index2;
              if (index2 === 0) {
                i3 += boundaryEnd;
                while (i3 < bufferLength && !(data3[i3] in boundaryChars)) {
                  i3 += boundaryLength;
                }
                i3 -= boundaryEnd;
                c2 = data3[i3];
              }
              if (index2 < boundary.length) {
                if (boundary[index2] === c2) {
                  if (index2 === 0) {
                    dataCallback("onPartData", true);
                  }
                  index2++;
                } else {
                  index2 = 0;
                }
              } else if (index2 === boundary.length) {
                index2++;
                if (c2 === CR) {
                  flags2 |= F.PART_BOUNDARY;
                } else if (c2 === HYPHEN) {
                  flags2 |= F.LAST_BOUNDARY;
                } else {
                  index2 = 0;
                }
              } else if (index2 - 1 === boundary.length) {
                if (flags2 & F.PART_BOUNDARY) {
                  index2 = 0;
                  if (c2 === LF) {
                    flags2 &= ~F.PART_BOUNDARY;
                    callback("onPartEnd");
                    callback("onPartBegin");
                    state = S.HEADER_FIELD_START;
                    break;
                  }
                } else if (flags2 & F.LAST_BOUNDARY) {
                  if (c2 === HYPHEN) {
                    callback("onPartEnd");
                    state = S.END;
                    flags2 = 0;
                  } else {
                    index2 = 0;
                  }
                } else {
                  index2 = 0;
                }
              }
              if (index2 > 0) {
                lookbehind[index2 - 1] = c2;
              } else if (previousIndex > 0) {
                const _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);
                callback("onPartData", 0, previousIndex, _lookbehind);
                previousIndex = 0;
                mark2("onPartData");
                i3--;
              }
              break;
            case S.END:
              break;
            default:
              throw new Error(`Unexpected state entered: ${state}`);
          }
        }
        dataCallback("onHeaderField");
        dataCallback("onHeaderValue");
        dataCallback("onPartData");
        this.index = index2;
        this.state = state;
        this.flags = flags2;
      }
      end() {
        if (this.state === S.HEADER_FIELD_START && this.index === 0 || this.state === S.PART_DATA && this.index === this.boundary.length) {
          this.onPartEnd();
        } else if (this.state !== S.END) {
          throw new Error("MultipartParser.end(): stream ended unexpectedly");
        }
      }
    };
  }
});

// node_modules/node-fetch/src/body.js
async function consumeBody(data3) {
  if (data3[INTERNALS].disturbed) {
    throw new TypeError(`body used already for: ${data3.url}`);
  }
  data3[INTERNALS].disturbed = true;
  if (data3[INTERNALS].error) {
    throw data3[INTERNALS].error;
  }
  const { body: body3 } = data3;
  if (body3 === null) {
    return import_node_buffer.Buffer.alloc(0);
  }
  if (!(body3 instanceof import_node_stream.default)) {
    return import_node_buffer.Buffer.alloc(0);
  }
  const accum = [];
  let accumBytes = 0;
  try {
    for await (const chunk of body3) {
      if (data3.size > 0 && accumBytes + chunk.length > data3.size) {
        const error3 = new FetchError(`content size at ${data3.url} over limit: ${data3.size}`, "max-size");
        body3.destroy(error3);
        throw error3;
      }
      accumBytes += chunk.length;
      accum.push(chunk);
    }
  } catch (error3) {
    const error_ = error3 instanceof FetchBaseError ? error3 : new FetchError(`Invalid response body while trying to fetch ${data3.url}: ${error3.message}`, "system", error3);
    throw error_;
  }
  if (body3.readableEnded === true || body3._readableState.ended === true) {
    try {
      if (accum.every((c2) => typeof c2 === "string")) {
        return import_node_buffer.Buffer.from(accum.join(""));
      }
      return import_node_buffer.Buffer.concat(accum, accumBytes);
    } catch (error3) {
      throw new FetchError(`Could not create Buffer from response body for ${data3.url}: ${error3.message}`, "system", error3);
    }
  } else {
    throw new FetchError(`Premature close of server response while trying to fetch ${data3.url}`);
  }
}
var import_node_stream, import_node_util, import_node_buffer, pipeline, INTERNALS, Body, clone, getNonSpecFormDataBoundary, extractContentType, getTotalBytes, writeToStream;
var init_body = __esm({
  "node_modules/node-fetch/src/body.js"() {
    import_node_stream = __toESM(require("stream"), 1);
    import_node_util = require("util");
    import_node_buffer = require("buffer");
    init_fetch_blob();
    init_esm_min();
    init_fetch_error();
    init_base();
    init_is();
    pipeline = (0, import_node_util.promisify)(import_node_stream.default.pipeline);
    INTERNALS = Symbol("Body internals");
    Body = class {
      constructor(body3, {
        size = 0
      } = {}) {
        let boundary = null;
        if (body3 === null) {
          body3 = null;
        } else if (isURLSearchParameters(body3)) {
          body3 = import_node_buffer.Buffer.from(body3.toString());
        } else if (isBlob(body3)) {
        } else if (import_node_buffer.Buffer.isBuffer(body3)) {
        } else if (import_node_util.types.isAnyArrayBuffer(body3)) {
          body3 = import_node_buffer.Buffer.from(body3);
        } else if (ArrayBuffer.isView(body3)) {
          body3 = import_node_buffer.Buffer.from(body3.buffer, body3.byteOffset, body3.byteLength);
        } else if (body3 instanceof import_node_stream.default) {
        } else if (body3 instanceof FormData) {
          body3 = formDataToBlob(body3);
          boundary = body3.type.split("=")[1];
        } else {
          body3 = import_node_buffer.Buffer.from(String(body3));
        }
        let stream = body3;
        if (import_node_buffer.Buffer.isBuffer(body3)) {
          stream = import_node_stream.default.Readable.from(body3);
        } else if (isBlob(body3)) {
          stream = import_node_stream.default.Readable.from(body3.stream());
        }
        this[INTERNALS] = {
          body: body3,
          stream,
          boundary,
          disturbed: false,
          error: null
        };
        this.size = size;
        if (body3 instanceof import_node_stream.default) {
          body3.on("error", (error_) => {
            const error3 = error_ instanceof FetchBaseError ? error_ : new FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, "system", error_);
            this[INTERNALS].error = error3;
          });
        }
      }
      get body() {
        return this[INTERNALS].stream;
      }
      get bodyUsed() {
        return this[INTERNALS].disturbed;
      }
      async arrayBuffer() {
        const { buffer: buffer3, byteOffset, byteLength } = await consumeBody(this);
        return buffer3.slice(byteOffset, byteOffset + byteLength);
      }
      async formData() {
        const ct = this.headers.get("content-type");
        if (ct.startsWith("application/x-www-form-urlencoded")) {
          const formData = new FormData();
          const parameters = new URLSearchParams(await this.text());
          for (const [name, value] of parameters) {
            formData.append(name, value);
          }
          return formData;
        }
        const { toFormData: toFormData2 } = await Promise.resolve().then(() => (init_multipart_parser(), multipart_parser_exports));
        return toFormData2(this.body, ct);
      }
      async blob() {
        const ct = this.headers && this.headers.get("content-type") || this[INTERNALS].body && this[INTERNALS].body.type || "";
        const buf = await this.arrayBuffer();
        return new fetch_blob_default([buf], {
          type: ct
        });
      }
      async json() {
        const text8 = await this.text();
        return JSON.parse(text8);
      }
      async text() {
        const buffer3 = await consumeBody(this);
        return new TextDecoder().decode(buffer3);
      }
      buffer() {
        return consumeBody(this);
      }
    };
    Body.prototype.buffer = (0, import_node_util.deprecate)(Body.prototype.buffer, "Please use 'response.arrayBuffer()' instead of 'response.buffer()'", "node-fetch#buffer");
    Object.defineProperties(Body.prototype, {
      body: { enumerable: true },
      bodyUsed: { enumerable: true },
      arrayBuffer: { enumerable: true },
      blob: { enumerable: true },
      json: { enumerable: true },
      text: { enumerable: true },
      data: { get: (0, import_node_util.deprecate)(() => {
      }, "data doesn't exist, use json(), text(), arrayBuffer(), or body instead", "https://github.com/node-fetch/node-fetch/issues/1000 (response)") }
    });
    clone = (instance, highWaterMark) => {
      let p1;
      let p22;
      let { body: body3 } = instance[INTERNALS];
      if (instance.bodyUsed) {
        throw new Error("cannot clone body after it is used");
      }
      if (body3 instanceof import_node_stream.default && typeof body3.getBoundary !== "function") {
        p1 = new import_node_stream.PassThrough({ highWaterMark });
        p22 = new import_node_stream.PassThrough({ highWaterMark });
        body3.pipe(p1);
        body3.pipe(p22);
        instance[INTERNALS].stream = p1;
        body3 = p22;
      }
      return body3;
    };
    getNonSpecFormDataBoundary = (0, import_node_util.deprecate)((body3) => body3.getBoundary(), "form-data doesn't follow the spec and requires special treatment. Use alternative package", "https://github.com/node-fetch/node-fetch/issues/1167");
    extractContentType = (body3, request) => {
      if (body3 === null) {
        return null;
      }
      if (typeof body3 === "string") {
        return "text/plain;charset=UTF-8";
      }
      if (isURLSearchParameters(body3)) {
        return "application/x-www-form-urlencoded;charset=UTF-8";
      }
      if (isBlob(body3)) {
        return body3.type || null;
      }
      if (import_node_buffer.Buffer.isBuffer(body3) || import_node_util.types.isAnyArrayBuffer(body3) || ArrayBuffer.isView(body3)) {
        return null;
      }
      if (body3 instanceof FormData) {
        return `multipart/form-data; boundary=${request[INTERNALS].boundary}`;
      }
      if (body3 && typeof body3.getBoundary === "function") {
        return `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body3)}`;
      }
      if (body3 instanceof import_node_stream.default) {
        return null;
      }
      return "text/plain;charset=UTF-8";
    };
    getTotalBytes = (request) => {
      const { body: body3 } = request[INTERNALS];
      if (body3 === null) {
        return 0;
      }
      if (isBlob(body3)) {
        return body3.size;
      }
      if (import_node_buffer.Buffer.isBuffer(body3)) {
        return body3.length;
      }
      if (body3 && typeof body3.getLengthSync === "function") {
        return body3.hasKnownLength && body3.hasKnownLength() ? body3.getLengthSync() : null;
      }
      return null;
    };
    writeToStream = async (dest, { body: body3 }) => {
      if (body3 === null) {
        dest.end();
      } else {
        await pipeline(body3, dest);
      }
    };
  }
});

// node_modules/node-fetch/src/headers.js
function fromRawHeaders(headers = []) {
  return new Headers2(headers.reduce((result, value, index2, array) => {
    if (index2 % 2 === 0) {
      result.push(array.slice(index2, index2 + 2));
    }
    return result;
  }, []).filter(([name, value]) => {
    try {
      validateHeaderName(name);
      validateHeaderValue(name, String(value));
      return true;
    } catch {
      return false;
    }
  }));
}
var import_node_util2, import_node_http, validateHeaderName, validateHeaderValue, Headers2;
var init_headers = __esm({
  "node_modules/node-fetch/src/headers.js"() {
    import_node_util2 = require("util");
    import_node_http = __toESM(require("http"), 1);
    validateHeaderName = typeof import_node_http.default.validateHeaderName === "function" ? import_node_http.default.validateHeaderName : (name) => {
      if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name)) {
        const error3 = new TypeError(`Header name must be a valid HTTP token [${name}]`);
        Object.defineProperty(error3, "code", { value: "ERR_INVALID_HTTP_TOKEN" });
        throw error3;
      }
    };
    validateHeaderValue = typeof import_node_http.default.validateHeaderValue === "function" ? import_node_http.default.validateHeaderValue : (name, value) => {
      if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
        const error3 = new TypeError(`Invalid character in header content ["${name}"]`);
        Object.defineProperty(error3, "code", { value: "ERR_INVALID_CHAR" });
        throw error3;
      }
    };
    Headers2 = class extends URLSearchParams {
      constructor(init2) {
        let result = [];
        if (init2 instanceof Headers2) {
          const raw3 = init2.raw();
          for (const [name, values] of Object.entries(raw3)) {
            result.push(...values.map((value) => [name, value]));
          }
        } else if (init2 == null) {
        } else if (typeof init2 === "object" && !import_node_util2.types.isBoxedPrimitive(init2)) {
          const method = init2[Symbol.iterator];
          if (method == null) {
            result.push(...Object.entries(init2));
          } else {
            if (typeof method !== "function") {
              throw new TypeError("Header pairs must be iterable");
            }
            result = [...init2].map((pair) => {
              if (typeof pair !== "object" || import_node_util2.types.isBoxedPrimitive(pair)) {
                throw new TypeError("Each header pair must be an iterable object");
              }
              return [...pair];
            }).map((pair) => {
              if (pair.length !== 2) {
                throw new TypeError("Each header pair must be a name/value tuple");
              }
              return [...pair];
            });
          }
        } else {
          throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        }
        result = result.length > 0 ? result.map(([name, value]) => {
          validateHeaderName(name);
          validateHeaderValue(name, String(value));
          return [String(name).toLowerCase(), String(value)];
        }) : void 0;
        super(result);
        return new Proxy(this, {
          get(target, p3, receiver) {
            switch (p3) {
              case "append":
              case "set":
                return (name, value) => {
                  validateHeaderName(name);
                  validateHeaderValue(name, String(value));
                  return URLSearchParams.prototype[p3].call(target, String(name).toLowerCase(), String(value));
                };
              case "delete":
              case "has":
              case "getAll":
                return (name) => {
                  validateHeaderName(name);
                  return URLSearchParams.prototype[p3].call(target, String(name).toLowerCase());
                };
              case "keys":
                return () => {
                  target.sort();
                  return new Set(URLSearchParams.prototype.keys.call(target)).keys();
                };
              default:
                return Reflect.get(target, p3, receiver);
            }
          }
        });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      get(name) {
        const values = this.getAll(name);
        if (values.length === 0) {
          return null;
        }
        let value = values.join(", ");
        if (/^content-encoding$/i.test(name)) {
          value = value.toLowerCase();
        }
        return value;
      }
      forEach(callback, thisArg = void 0) {
        for (const name of this.keys()) {
          Reflect.apply(callback, thisArg, [this.get(name), name, this]);
        }
      }
      *values() {
        for (const name of this.keys()) {
          yield this.get(name);
        }
      }
      *entries() {
        for (const name of this.keys()) {
          yield [name, this.get(name)];
        }
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      raw() {
        return [...this.keys()].reduce((result, key2) => {
          result[key2] = this.getAll(key2);
          return result;
        }, {});
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce((result, key2) => {
          const values = this.getAll(key2);
          if (key2 === "host") {
            result[key2] = values[0];
          } else {
            result[key2] = values.length > 1 ? values : values[0];
          }
          return result;
        }, {});
      }
    };
    Object.defineProperties(Headers2.prototype, ["get", "entries", "forEach", "values"].reduce((result, property) => {
      result[property] = { enumerable: true };
      return result;
    }, {}));
  }
});

// node_modules/node-fetch/src/utils/is-redirect.js
var redirectStatus, isRedirect;
var init_is_redirect = __esm({
  "node_modules/node-fetch/src/utils/is-redirect.js"() {
    redirectStatus = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
    isRedirect = (code2) => {
      return redirectStatus.has(code2);
    };
  }
});

// node_modules/node-fetch/src/response.js
var INTERNALS2, Response2;
var init_response = __esm({
  "node_modules/node-fetch/src/response.js"() {
    init_headers();
    init_body();
    init_is_redirect();
    INTERNALS2 = Symbol("Response internals");
    Response2 = class extends Body {
      constructor(body3 = null, options = {}) {
        super(body3, options);
        const status = options.status != null ? options.status : 200;
        const headers = new Headers2(options.headers);
        if (body3 !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(body3, this);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        this[INTERNALS2] = {
          type: "default",
          url: options.url,
          status,
          statusText: options.statusText || "",
          headers,
          counter: options.counter,
          highWaterMark: options.highWaterMark
        };
      }
      get type() {
        return this[INTERNALS2].type;
      }
      get url() {
        return this[INTERNALS2].url || "";
      }
      get status() {
        return this[INTERNALS2].status;
      }
      get ok() {
        return this[INTERNALS2].status >= 200 && this[INTERNALS2].status < 300;
      }
      get redirected() {
        return this[INTERNALS2].counter > 0;
      }
      get statusText() {
        return this[INTERNALS2].statusText;
      }
      get headers() {
        return this[INTERNALS2].headers;
      }
      get highWaterMark() {
        return this[INTERNALS2].highWaterMark;
      }
      clone() {
        return new Response2(clone(this, this.highWaterMark), {
          type: this.type,
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected,
          size: this.size,
          highWaterMark: this.highWaterMark
        });
      }
      static redirect(url59, status = 302) {
        if (!isRedirect(status)) {
          throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        }
        return new Response2(null, {
          headers: {
            location: new URL(url59).toString()
          },
          status
        });
      }
      static error() {
        const response = new Response2(null, { status: 0, statusText: "" });
        response[INTERNALS2].type = "error";
        return response;
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(Response2.prototype, {
      type: { enumerable: true },
      url: { enumerable: true },
      status: { enumerable: true },
      ok: { enumerable: true },
      redirected: { enumerable: true },
      statusText: { enumerable: true },
      headers: { enumerable: true },
      clone: { enumerable: true }
    });
  }
});

// node_modules/node-fetch/src/utils/get-search.js
var getSearch;
var init_get_search = __esm({
  "node_modules/node-fetch/src/utils/get-search.js"() {
    getSearch = (parsedURL) => {
      if (parsedURL.search) {
        return parsedURL.search;
      }
      const lastOffset = parsedURL.href.length - 1;
      const hash = parsedURL.hash || (parsedURL.href[lastOffset] === "#" ? "#" : "");
      return parsedURL.href[lastOffset - hash.length] === "?" ? "?" : "";
    };
  }
});

// node_modules/node-fetch/src/utils/referrer.js
function stripURLForUseAsAReferrer(url59, originOnly = false) {
  if (url59 == null) {
    return "no-referrer";
  }
  url59 = new URL(url59);
  if (/^(about|blob|data):$/.test(url59.protocol)) {
    return "no-referrer";
  }
  url59.username = "";
  url59.password = "";
  url59.hash = "";
  if (originOnly) {
    url59.pathname = "";
    url59.search = "";
  }
  return url59;
}
function validateReferrerPolicy(referrerPolicy) {
  if (!ReferrerPolicy.has(referrerPolicy)) {
    throw new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);
  }
  return referrerPolicy;
}
function isOriginPotentiallyTrustworthy(url59) {
  if (/^(http|ws)s:$/.test(url59.protocol)) {
    return true;
  }
  const hostIp = url59.host.replace(/(^\[)|(]$)/g, "");
  const hostIPVersion = (0, import_node_net.isIP)(hostIp);
  if (hostIPVersion === 4 && /^127\./.test(hostIp)) {
    return true;
  }
  if (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {
    return true;
  }
  if (/^(.+\.)*localhost$/.test(url59.host)) {
    return false;
  }
  if (url59.protocol === "file:") {
    return true;
  }
  return false;
}
function isUrlPotentiallyTrustworthy(url59) {
  if (/^about:(blank|srcdoc)$/.test(url59)) {
    return true;
  }
  if (url59.protocol === "data:") {
    return true;
  }
  if (/^(blob|filesystem):$/.test(url59.protocol)) {
    return true;
  }
  return isOriginPotentiallyTrustworthy(url59);
}
function determineRequestsReferrer(request, { referrerURLCallback, referrerOriginCallback } = {}) {
  if (request.referrer === "no-referrer" || request.referrerPolicy === "") {
    return null;
  }
  const policy = request.referrerPolicy;
  if (request.referrer === "about:client") {
    return "no-referrer";
  }
  const referrerSource = request.referrer;
  let referrerURL = stripURLForUseAsAReferrer(referrerSource);
  let referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);
  if (referrerURL.toString().length > 4096) {
    referrerURL = referrerOrigin;
  }
  if (referrerURLCallback) {
    referrerURL = referrerURLCallback(referrerURL);
  }
  if (referrerOriginCallback) {
    referrerOrigin = referrerOriginCallback(referrerOrigin);
  }
  const currentURL = new URL(request.url);
  switch (policy) {
    case "no-referrer":
      return "no-referrer";
    case "origin":
      return referrerOrigin;
    case "unsafe-url":
      return referrerURL;
    case "strict-origin":
      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
        return "no-referrer";
      }
      return referrerOrigin.toString();
    case "strict-origin-when-cross-origin":
      if (referrerURL.origin === currentURL.origin) {
        return referrerURL;
      }
      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
        return "no-referrer";
      }
      return referrerOrigin;
    case "same-origin":
      if (referrerURL.origin === currentURL.origin) {
        return referrerURL;
      }
      return "no-referrer";
    case "origin-when-cross-origin":
      if (referrerURL.origin === currentURL.origin) {
        return referrerURL;
      }
      return referrerOrigin;
    case "no-referrer-when-downgrade":
      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
        return "no-referrer";
      }
      return referrerURL;
    default:
      throw new TypeError(`Invalid referrerPolicy: ${policy}`);
  }
}
function parseReferrerPolicyFromHeader(headers) {
  const policyTokens = (headers.get("referrer-policy") || "").split(/[,\s]+/);
  let policy = "";
  for (const token of policyTokens) {
    if (token && ReferrerPolicy.has(token)) {
      policy = token;
    }
  }
  return policy;
}
var import_node_net, ReferrerPolicy, DEFAULT_REFERRER_POLICY;
var init_referrer = __esm({
  "node_modules/node-fetch/src/utils/referrer.js"() {
    import_node_net = require("net");
    ReferrerPolicy = /* @__PURE__ */ new Set([
      "",
      "no-referrer",
      "no-referrer-when-downgrade",
      "same-origin",
      "origin",
      "strict-origin",
      "origin-when-cross-origin",
      "strict-origin-when-cross-origin",
      "unsafe-url"
    ]);
    DEFAULT_REFERRER_POLICY = "strict-origin-when-cross-origin";
  }
});

// node_modules/node-fetch/src/request.js
var import_node_url, import_node_util3, INTERNALS3, isRequest, doBadDataWarn, Request2, getNodeRequestOptions;
var init_request = __esm({
  "node_modules/node-fetch/src/request.js"() {
    import_node_url = require("url");
    import_node_util3 = require("util");
    init_headers();
    init_body();
    init_is();
    init_get_search();
    init_referrer();
    INTERNALS3 = Symbol("Request internals");
    isRequest = (object) => {
      return typeof object === "object" && typeof object[INTERNALS3] === "object";
    };
    doBadDataWarn = (0, import_node_util3.deprecate)(() => {
    }, ".data is not a valid RequestInit property, use .body instead", "https://github.com/node-fetch/node-fetch/issues/1000 (request)");
    Request2 = class extends Body {
      constructor(input2, init2 = {}) {
        let parsedURL;
        if (isRequest(input2)) {
          parsedURL = new URL(input2.url);
        } else {
          parsedURL = new URL(input2);
          input2 = {};
        }
        if (parsedURL.username !== "" || parsedURL.password !== "") {
          throw new TypeError(`${parsedURL} is an url with embedded credentials.`);
        }
        let method = init2.method || input2.method || "GET";
        if (/^(delete|get|head|options|post|put)$/i.test(method)) {
          method = method.toUpperCase();
        }
        if ("data" in init2) {
          doBadDataWarn();
        }
        if ((init2.body != null || isRequest(input2) && input2.body !== null) && (method === "GET" || method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body");
        }
        const inputBody = init2.body ? init2.body : isRequest(input2) && input2.body !== null ? clone(input2) : null;
        super(inputBody, {
          size: init2.size || input2.size || 0
        });
        const headers = new Headers2(init2.headers || input2.headers || {});
        if (inputBody !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(inputBody, this);
          if (contentType) {
            headers.set("Content-Type", contentType);
          }
        }
        let signal = isRequest(input2) ? input2.signal : null;
        if ("signal" in init2) {
          signal = init2.signal;
        }
        if (signal != null && !isAbortSignal(signal)) {
          throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget");
        }
        let referrer = init2.referrer == null ? input2.referrer : init2.referrer;
        if (referrer === "") {
          referrer = "no-referrer";
        } else if (referrer) {
          const parsedReferrer = new URL(referrer);
          referrer = /^about:(\/\/)?client$/.test(parsedReferrer) ? "client" : parsedReferrer;
        } else {
          referrer = void 0;
        }
        this[INTERNALS3] = {
          method,
          redirect: init2.redirect || input2.redirect || "follow",
          headers,
          parsedURL,
          signal,
          referrer
        };
        this.follow = init2.follow === void 0 ? input2.follow === void 0 ? 20 : input2.follow : init2.follow;
        this.compress = init2.compress === void 0 ? input2.compress === void 0 ? true : input2.compress : init2.compress;
        this.counter = init2.counter || input2.counter || 0;
        this.agent = init2.agent || input2.agent;
        this.highWaterMark = init2.highWaterMark || input2.highWaterMark || 16384;
        this.insecureHTTPParser = init2.insecureHTTPParser || input2.insecureHTTPParser || false;
        this.referrerPolicy = init2.referrerPolicy || input2.referrerPolicy || "";
      }
      get method() {
        return this[INTERNALS3].method;
      }
      get url() {
        return (0, import_node_url.format)(this[INTERNALS3].parsedURL);
      }
      get headers() {
        return this[INTERNALS3].headers;
      }
      get redirect() {
        return this[INTERNALS3].redirect;
      }
      get signal() {
        return this[INTERNALS3].signal;
      }
      get referrer() {
        if (this[INTERNALS3].referrer === "no-referrer") {
          return "";
        }
        if (this[INTERNALS3].referrer === "client") {
          return "about:client";
        }
        if (this[INTERNALS3].referrer) {
          return this[INTERNALS3].referrer.toString();
        }
        return void 0;
      }
      get referrerPolicy() {
        return this[INTERNALS3].referrerPolicy;
      }
      set referrerPolicy(referrerPolicy) {
        this[INTERNALS3].referrerPolicy = validateReferrerPolicy(referrerPolicy);
      }
      clone() {
        return new Request2(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Request2.prototype, {
      method: { enumerable: true },
      url: { enumerable: true },
      headers: { enumerable: true },
      redirect: { enumerable: true },
      clone: { enumerable: true },
      signal: { enumerable: true },
      referrer: { enumerable: true },
      referrerPolicy: { enumerable: true }
    });
    getNodeRequestOptions = (request) => {
      const { parsedURL } = request[INTERNALS3];
      const headers = new Headers2(request[INTERNALS3].headers);
      if (!headers.has("Accept")) {
        headers.set("Accept", "*/*");
      }
      let contentLengthValue = null;
      if (request.body === null && /^(post|put)$/i.test(request.method)) {
        contentLengthValue = "0";
      }
      if (request.body !== null) {
        const totalBytes = getTotalBytes(request);
        if (typeof totalBytes === "number" && !Number.isNaN(totalBytes)) {
          contentLengthValue = String(totalBytes);
        }
      }
      if (contentLengthValue) {
        headers.set("Content-Length", contentLengthValue);
      }
      if (request.referrerPolicy === "") {
        request.referrerPolicy = DEFAULT_REFERRER_POLICY;
      }
      if (request.referrer && request.referrer !== "no-referrer") {
        request[INTERNALS3].referrer = determineRequestsReferrer(request);
      } else {
        request[INTERNALS3].referrer = "no-referrer";
      }
      if (request[INTERNALS3].referrer instanceof URL) {
        headers.set("Referer", request.referrer);
      }
      if (!headers.has("User-Agent")) {
        headers.set("User-Agent", "node-fetch");
      }
      if (request.compress && !headers.has("Accept-Encoding")) {
        headers.set("Accept-Encoding", "gzip, deflate, br");
      }
      let { agent } = request;
      if (typeof agent === "function") {
        agent = agent(parsedURL);
      }
      if (!headers.has("Connection") && !agent) {
        headers.set("Connection", "close");
      }
      const search3 = getSearch(parsedURL);
      const options = {
        path: parsedURL.pathname + search3,
        method: request.method,
        headers: headers[Symbol.for("nodejs.util.inspect.custom")](),
        insecureHTTPParser: request.insecureHTTPParser,
        agent
      };
      return {
        parsedURL,
        options
      };
    };
  }
});

// node_modules/node-fetch/src/errors/abort-error.js
var AbortError;
var init_abort_error = __esm({
  "node_modules/node-fetch/src/errors/abort-error.js"() {
    init_base();
    AbortError = class extends FetchBaseError {
      constructor(message, type = "aborted") {
        super(message, type);
      }
    };
  }
});

// node_modules/node-fetch/src/index.js
async function fetch2(url59, options_) {
  return new Promise((resolve2, reject) => {
    const request = new Request2(url59, options_);
    const { parsedURL, options } = getNodeRequestOptions(request);
    if (!supportedSchemas.has(parsedURL.protocol)) {
      throw new TypeError(`node-fetch cannot load ${url59}. URL scheme "${parsedURL.protocol.replace(/:$/, "")}" is not supported.`);
    }
    if (parsedURL.protocol === "data:") {
      const data3 = dist_default(request.url);
      const response2 = new Response2(data3, { headers: { "Content-Type": data3.typeFull } });
      resolve2(response2);
      return;
    }
    const send = (parsedURL.protocol === "https:" ? import_node_https.default : import_node_http2.default).request;
    const { signal } = request;
    let response = null;
    const abort = () => {
      const error3 = new AbortError("The operation was aborted.");
      reject(error3);
      if (request.body && request.body instanceof import_node_stream2.default.Readable) {
        request.body.destroy(error3);
      }
      if (!response || !response.body) {
        return;
      }
      response.body.emit("error", error3);
    };
    if (signal && signal.aborted) {
      abort();
      return;
    }
    const abortAndFinalize = () => {
      abort();
      finalize();
    };
    const request_ = send(parsedURL.toString(), options);
    if (signal) {
      signal.addEventListener("abort", abortAndFinalize);
    }
    const finalize = () => {
      request_.abort();
      if (signal) {
        signal.removeEventListener("abort", abortAndFinalize);
      }
    };
    request_.on("error", (error3) => {
      reject(new FetchError(`request to ${request.url} failed, reason: ${error3.message}`, "system", error3));
      finalize();
    });
    fixResponseChunkedTransferBadEnding(request_, (error3) => {
      if (response && response.body) {
        response.body.destroy(error3);
      }
    });
    if (process.version < "v14") {
      request_.on("socket", (s4) => {
        let endedWithEventsCount;
        s4.prependListener("end", () => {
          endedWithEventsCount = s4._eventsCount;
        });
        s4.prependListener("close", (hadError) => {
          if (response && endedWithEventsCount < s4._eventsCount && !hadError) {
            const error3 = new Error("Premature close");
            error3.code = "ERR_STREAM_PREMATURE_CLOSE";
            response.body.emit("error", error3);
          }
        });
      });
    }
    request_.on("response", (response_) => {
      request_.setTimeout(0);
      const headers = fromRawHeaders(response_.rawHeaders);
      if (isRedirect(response_.statusCode)) {
        const location2 = headers.get("Location");
        let locationURL = null;
        try {
          locationURL = location2 === null ? null : new URL(location2, request.url);
        } catch {
          if (request.redirect !== "manual") {
            reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location2}`, "invalid-redirect"));
            finalize();
            return;
          }
        }
        switch (request.redirect) {
          case "error":
            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect"));
            finalize();
            return;
          case "manual":
            break;
          case "follow": {
            if (locationURL === null) {
              break;
            }
            if (request.counter >= request.follow) {
              reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect"));
              finalize();
              return;
            }
            const requestOptions = {
              headers: new Headers2(request.headers),
              follow: request.follow,
              counter: request.counter + 1,
              agent: request.agent,
              compress: request.compress,
              method: request.method,
              body: clone(request),
              signal: request.signal,
              size: request.size,
              referrer: request.referrer,
              referrerPolicy: request.referrerPolicy
            };
            if (!isDomainOrSubdomain(request.url, locationURL)) {
              for (const name of ["authorization", "www-authenticate", "cookie", "cookie2"]) {
                requestOptions.headers.delete(name);
              }
            }
            if (response_.statusCode !== 303 && request.body && options_.body instanceof import_node_stream2.default.Readable) {
              reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect"));
              finalize();
              return;
            }
            if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === "POST") {
              requestOptions.method = "GET";
              requestOptions.body = void 0;
              requestOptions.headers.delete("content-length");
            }
            const responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);
            if (responseReferrerPolicy) {
              requestOptions.referrerPolicy = responseReferrerPolicy;
            }
            resolve2(fetch2(new Request2(locationURL, requestOptions)));
            finalize();
            return;
          }
          default:
            return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));
        }
      }
      if (signal) {
        response_.once("end", () => {
          signal.removeEventListener("abort", abortAndFinalize);
        });
      }
      let body3 = (0, import_node_stream2.pipeline)(response_, new import_node_stream2.PassThrough(), (error3) => {
        if (error3) {
          reject(error3);
        }
      });
      if (process.version < "v12.10") {
        response_.on("aborted", abortAndFinalize);
      }
      const responseOptions = {
        url: request.url,
        status: response_.statusCode,
        statusText: response_.statusMessage,
        headers,
        size: request.size,
        counter: request.counter,
        highWaterMark: request.highWaterMark
      };
      const codings = headers.get("Content-Encoding");
      if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
        response = new Response2(body3, responseOptions);
        resolve2(response);
        return;
      }
      const zlibOptions = {
        flush: import_node_zlib.default.Z_SYNC_FLUSH,
        finishFlush: import_node_zlib.default.Z_SYNC_FLUSH
      };
      if (codings === "gzip" || codings === "x-gzip") {
        body3 = (0, import_node_stream2.pipeline)(body3, import_node_zlib.default.createGunzip(zlibOptions), (error3) => {
          if (error3) {
            reject(error3);
          }
        });
        response = new Response2(body3, responseOptions);
        resolve2(response);
        return;
      }
      if (codings === "deflate" || codings === "x-deflate") {
        const raw3 = (0, import_node_stream2.pipeline)(response_, new import_node_stream2.PassThrough(), (error3) => {
          if (error3) {
            reject(error3);
          }
        });
        raw3.once("data", (chunk) => {
          if ((chunk[0] & 15) === 8) {
            body3 = (0, import_node_stream2.pipeline)(body3, import_node_zlib.default.createInflate(), (error3) => {
              if (error3) {
                reject(error3);
              }
            });
          } else {
            body3 = (0, import_node_stream2.pipeline)(body3, import_node_zlib.default.createInflateRaw(), (error3) => {
              if (error3) {
                reject(error3);
              }
            });
          }
          response = new Response2(body3, responseOptions);
          resolve2(response);
        });
        raw3.once("end", () => {
          if (!response) {
            response = new Response2(body3, responseOptions);
            resolve2(response);
          }
        });
        return;
      }
      if (codings === "br") {
        body3 = (0, import_node_stream2.pipeline)(body3, import_node_zlib.default.createBrotliDecompress(), (error3) => {
          if (error3) {
            reject(error3);
          }
        });
        response = new Response2(body3, responseOptions);
        resolve2(response);
        return;
      }
      response = new Response2(body3, responseOptions);
      resolve2(response);
    });
    writeToStream(request_, request).catch(reject);
  });
}
function fixResponseChunkedTransferBadEnding(request, errorCallback) {
  const LAST_CHUNK = import_node_buffer2.Buffer.from("0\r\n\r\n");
  let isChunkedTransfer = false;
  let properLastChunkReceived = false;
  let previousChunk;
  request.on("response", (response) => {
    const { headers } = response;
    isChunkedTransfer = headers["transfer-encoding"] === "chunked" && !headers["content-length"];
  });
  request.on("socket", (socket) => {
    const onSocketClose = () => {
      if (isChunkedTransfer && !properLastChunkReceived) {
        const error3 = new Error("Premature close");
        error3.code = "ERR_STREAM_PREMATURE_CLOSE";
        errorCallback(error3);
      }
    };
    const onData = (buf) => {
      properLastChunkReceived = import_node_buffer2.Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;
      if (!properLastChunkReceived && previousChunk) {
        properLastChunkReceived = import_node_buffer2.Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && import_node_buffer2.Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0;
      }
      previousChunk = buf;
    };
    socket.prependListener("close", onSocketClose);
    socket.on("data", onData);
    request.on("close", () => {
      socket.removeListener("close", onSocketClose);
      socket.removeListener("data", onData);
    });
  });
}
var import_node_http2, import_node_https, import_node_zlib, import_node_stream2, import_node_buffer2, supportedSchemas;
var init_src = __esm({
  "node_modules/node-fetch/src/index.js"() {
    import_node_http2 = __toESM(require("http"), 1);
    import_node_https = __toESM(require("https"), 1);
    import_node_zlib = __toESM(require("zlib"), 1);
    import_node_stream2 = __toESM(require("stream"), 1);
    import_node_buffer2 = require("buffer");
    init_dist();
    init_body();
    init_response();
    init_headers();
    init_request();
    init_fetch_error();
    init_abort_error();
    init_is_redirect();
    init_esm_min();
    init_is();
    init_referrer();
    init_from();
    supportedSchemas = /* @__PURE__ */ new Set(["data:", "http:", "https:"]);
  }
});

// node_modules/@astrojs/webapi/mod.js
function assertType(condition, message, ...args) {
  if (!condition) {
    throw new TypeError(format(message, args));
  }
}
function format(message, args) {
  let i3 = 0;
  return message.replace(/%[os]/gu, () => anyToString(args[i3++]));
}
function anyToString(x3) {
  if (typeof x3 !== "object" || x3 === null) {
    return String(x3);
  }
  return Object.prototype.toString.call(x3);
}
function reportError(maybeError) {
  try {
    const error3 = maybeError instanceof Error ? maybeError : new Error(anyToString(maybeError));
    if (currentErrorHandler)
      ;
    if (typeof dispatchEvent === "function" && typeof ErrorEvent === "function") {
      dispatchEvent(new ErrorEvent("error", { error: error3, message: error3.message }));
    } else if (typeof process !== "undefined" && typeof process.emit === "function") {
      process.emit("uncaughtException", error3);
      return;
    }
    console.error(error3);
  } catch (_a8) {
  }
}
function $(event, name = "this") {
  const retv = internalDataMap.get(event);
  assertType(retv != null, "'%s' must be an object that Event constructor created, but got another one: %o", name, event);
  return retv;
}
function setCancelFlag(data3) {
  if (data3.inPassiveListenerFlag) {
    CanceledInPassiveListener.warn();
    return;
  }
  if (!data3.cancelable) {
    NonCancelableEventWasCanceled.warn();
    return;
  }
  data3.canceledFlag = true;
}
function $$1(event) {
  const retv = internalDataMap$1.get(event);
  assertType(retv != null, "'this' is expected an Event object, but got", event);
  return retv;
}
function getWrapperClassOf(originalEvent) {
  const prototype = Object.getPrototypeOf(originalEvent);
  if (prototype == null) {
    return EventWrapper;
  }
  let wrapper = wrapperClassCache.get(prototype);
  if (wrapper == null) {
    wrapper = defineWrapper(getWrapperClassOf(prototype), prototype);
    wrapperClassCache.set(prototype, wrapper);
  }
  return wrapper;
}
function defineWrapper(BaseEventWrapper, originalPrototype) {
  class CustomEventWrapper extends BaseEventWrapper {
  }
  const keys3 = Object.keys(originalPrototype);
  for (let i3 = 0; i3 < keys3.length; ++i3) {
    Object.defineProperty(CustomEventWrapper.prototype, keys3[i3], defineRedirectDescriptor(originalPrototype, keys3[i3]));
  }
  return CustomEventWrapper;
}
function defineRedirectDescriptor(obj, key2) {
  const d2 = Object.getOwnPropertyDescriptor(obj, key2);
  return {
    get() {
      const original = $$1(this).original;
      const value = original[key2];
      if (typeof value === "function") {
        return value.bind(original);
      }
      return value;
    },
    set(value) {
      const original = $$1(this).original;
      original[key2] = value;
    },
    configurable: d2.configurable,
    enumerable: d2.enumerable
  };
}
function createListener(callback, capture, passive, once, signal, signalListener) {
  return {
    callback,
    flags: (capture ? 1 : 0) | (passive ? 2 : 0) | (once ? 4 : 0),
    signal,
    signalListener
  };
}
function setRemoved(listener) {
  listener.flags |= 8;
}
function isCapture(listener) {
  return (listener.flags & 1) === 1;
}
function isPassive(listener) {
  return (listener.flags & 2) === 2;
}
function isOnce(listener) {
  return (listener.flags & 4) === 4;
}
function isRemoved(listener) {
  return (listener.flags & 8) === 8;
}
function invokeCallback({ callback }, target, event) {
  try {
    if (typeof callback === "function") {
      callback.call(target, event);
    } else if (typeof callback.handleEvent === "function") {
      callback.handleEvent(event);
    }
  } catch (thrownError) {
    reportError(thrownError);
  }
}
function findIndexOfListener({ listeners }, callback, capture) {
  for (let i3 = 0; i3 < listeners.length; ++i3) {
    if (listeners[i3].callback === callback && isCapture(listeners[i3]) === capture) {
      return i3;
    }
  }
  return -1;
}
function addListener(list3, callback, capture, passive, once, signal) {
  let signalListener;
  if (signal) {
    signalListener = removeListener.bind(null, list3, callback, capture);
    signal.addEventListener("abort", signalListener);
  }
  const listener = createListener(callback, capture, passive, once, signal, signalListener);
  if (list3.cow) {
    list3.cow = false;
    list3.listeners = [...list3.listeners, listener];
  } else {
    list3.listeners.push(listener);
  }
  return listener;
}
function removeListener(list3, callback, capture) {
  const index2 = findIndexOfListener(list3, callback, capture);
  if (index2 !== -1) {
    return removeListenerAt(list3, index2);
  }
  return false;
}
function removeListenerAt(list3, index2, disableCow = false) {
  const listener = list3.listeners[index2];
  setRemoved(listener);
  if (listener.signal) {
    listener.signal.removeEventListener("abort", listener.signalListener);
  }
  if (list3.cow && !disableCow) {
    list3.cow = false;
    list3.listeners = list3.listeners.filter((_, i3) => i3 !== index2);
    return false;
  }
  list3.listeners.splice(index2, 1);
  return true;
}
function createListenerListMap() {
  return /* @__PURE__ */ Object.create(null);
}
function ensureListenerList(listenerMap, type) {
  var _a8;
  return (_a8 = listenerMap[type]) !== null && _a8 !== void 0 ? _a8 : listenerMap[type] = {
    attrCallback: void 0,
    attrListener: void 0,
    cow: false,
    listeners: []
  };
}
function $$2(target, name = "this") {
  const retv = internalDataMap$2.get(target);
  assertType(retv != null, "'%s' must be an object that EventTarget constructor created, but got another one: %o", name, target);
  return retv;
}
function normalizeAddOptions(type, callback, options) {
  var _a8;
  assertCallback(callback);
  if (typeof options === "object" && options !== null) {
    return {
      type: String(type),
      callback: callback !== null && callback !== void 0 ? callback : void 0,
      capture: Boolean(options.capture),
      passive: Boolean(options.passive),
      once: Boolean(options.once),
      signal: (_a8 = options.signal) !== null && _a8 !== void 0 ? _a8 : void 0
    };
  }
  return {
    type: String(type),
    callback: callback !== null && callback !== void 0 ? callback : void 0,
    capture: Boolean(options),
    passive: false,
    once: false,
    signal: void 0
  };
}
function normalizeOptions(type, callback, options) {
  assertCallback(callback);
  if (typeof options === "object" && options !== null) {
    return {
      type: String(type),
      callback: callback !== null && callback !== void 0 ? callback : void 0,
      capture: Boolean(options.capture)
    };
  }
  return {
    type: String(type),
    callback: callback !== null && callback !== void 0 ? callback : void 0,
    capture: Boolean(options)
  };
}
function assertCallback(callback) {
  if (typeof callback === "function" || typeof callback === "object" && callback !== null && typeof callback.handleEvent === "function") {
    return;
  }
  if (callback == null || typeof callback === "object") {
    InvalidEventListener.warn(callback);
    return;
  }
  throw new TypeError(format(InvalidEventListener.message, [callback]));
}
function warnDuplicate(listener, passive, once, signal) {
  EventListenerWasDuplicated.warn(isCapture(listener) ? "capture" : "bubble", listener.callback);
  if (isPassive(listener) !== passive) {
    OptionWasIgnored.warn("passive");
  }
  if (isOnce(listener) !== once) {
    OptionWasIgnored.warn("once");
  }
  if (listener.signal !== signal) {
    OptionWasIgnored.warn("signal");
  }
}
function getEventAttributeValue(target, type) {
  var _a8, _b;
  const listMap = $$2(target, "target");
  return (_b = (_a8 = listMap[type]) === null || _a8 === void 0 ? void 0 : _a8.attrCallback) !== null && _b !== void 0 ? _b : null;
}
function setEventAttributeValue(target, type, callback) {
  if (callback != null && typeof callback !== "function") {
    InvalidAttributeHandler.warn(callback);
  }
  if (typeof callback === "function" || typeof callback === "object" && callback !== null) {
    upsertEventAttributeListener(target, type, callback);
  } else {
    removeEventAttributeListener(target, type);
  }
}
function upsertEventAttributeListener(target, type, callback) {
  const list3 = ensureListenerList($$2(target, "target"), String(type));
  list3.attrCallback = callback;
  if (list3.attrListener == null) {
    list3.attrListener = addListener(list3, defineEventAttributeCallback(list3), false, false, false, void 0);
  }
}
function removeEventAttributeListener(target, type) {
  const listMap = $$2(target, "target");
  const list3 = listMap[String(type)];
  if (list3 && list3.attrListener) {
    removeListener(list3, list3.attrListener.callback, false);
    list3.attrCallback = list3.attrListener = void 0;
  }
}
function defineEventAttributeCallback(list3) {
  return function(event) {
    const callback = list3.attrCallback;
    if (typeof callback === "function") {
      callback.call(this, event);
    }
  };
}
function defineEventAttribute(target, type, _eventClass) {
  Object.defineProperty(target, `on${type}`, {
    get() {
      return getEventAttributeValue(this, type);
    },
    set(value) {
      setEventAttributeValue(this, type, value);
    },
    configurable: true,
    enumerable: true
  });
}
function createAbortSignal() {
  const signal = Object.create(AbortSignal.prototype);
  EventTarget.call(signal);
  abortedFlags.set(signal, false);
  return signal;
}
function abortSignal(signal) {
  if (abortedFlags.get(signal) !== false) {
    return;
  }
  abortedFlags.set(signal, true);
  signal.dispatchEvent({ type: "abort" });
}
function getSignal(controller) {
  const signal = signals.get(controller);
  if (signal == null) {
    throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? "null" : typeof controller}`);
  }
  return signal;
}
function requestAnimationFrame(callback) {
  if (!INTERNAL$2.pool.size) {
    (0, import_node_timers.setTimeout)(() => {
      const next = __performance_now();
      for (const func2 of INTERNAL$2.pool.values()) {
        func2(next);
      }
      INTERNAL$2.pool.clear();
    }, 1e3 / 16);
  }
  const func = __function_bind(callback, void 0);
  const tick = ++INTERNAL$2.tick;
  INTERNAL$2.pool.set(tick, func);
  return tick;
}
function cancelAnimationFrame(requestId) {
  const timeout = INTERNAL$2.pool.get(requestId);
  if (timeout) {
    (0, import_node_timers.clearTimeout)(timeout);
    INTERNAL$2.pool.delete(requestId);
  }
}
function atob(data3) {
  return Buffer.from(data3, "base64").toString("binary");
}
function btoa(data3) {
  return Buffer.from(data3, "binary").toString("base64");
}
function noop2() {
  return void 0;
}
function typeIsObject(x3) {
  return typeof x3 === "object" && x3 !== null || typeof x3 === "function";
}
function newPromise(executor) {
  return new originalPromise(executor);
}
function promiseResolvedWith(value) {
  return originalPromiseResolve(value);
}
function promiseRejectedWith(reason) {
  return originalPromiseReject(reason);
}
function PerformPromiseThen(promise, onFulfilled, onRejected) {
  return originalPromiseThen.call(promise, onFulfilled, onRejected);
}
function uponPromise(promise, onFulfilled, onRejected) {
  PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);
}
function uponFulfillment(promise, onFulfilled) {
  uponPromise(promise, onFulfilled);
}
function uponRejection(promise, onRejected) {
  uponPromise(promise, void 0, onRejected);
}
function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
  return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
}
function setPromiseIsHandledToTrue(promise) {
  PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);
}
function reflectCall(F3, V, args) {
  if (typeof F3 !== "function") {
    throw new TypeError("Argument is not a function");
  }
  return Function.prototype.apply.call(F3, V, args);
}
function promiseCall(F3, V, args) {
  try {
    return promiseResolvedWith(reflectCall(F3, V, args));
  } catch (value) {
    return promiseRejectedWith(value);
  }
}
function ReadableStreamReaderGenericInitialize(reader, stream) {
  reader._ownerReadableStream = stream;
  stream._reader = reader;
  if (stream._state === "readable") {
    defaultReaderClosedPromiseInitialize(reader);
  } else if (stream._state === "closed") {
    defaultReaderClosedPromiseInitializeAsResolved(reader);
  } else {
    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
  }
}
function ReadableStreamReaderGenericCancel(reader, reason) {
  const stream = reader._ownerReadableStream;
  return ReadableStreamCancel(stream, reason);
}
function ReadableStreamReaderGenericRelease(reader) {
  if (reader._ownerReadableStream._state === "readable") {
    defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
  } else {
    defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
  }
  reader._ownerReadableStream._reader = void 0;
  reader._ownerReadableStream = void 0;
}
function readerLockException(name) {
  return new TypeError("Cannot " + name + " a stream using a released reader");
}
function defaultReaderClosedPromiseInitialize(reader) {
  reader._closedPromise = newPromise((resolve2, reject) => {
    reader._closedPromise_resolve = resolve2;
    reader._closedPromise_reject = reject;
  });
}
function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
  defaultReaderClosedPromiseInitialize(reader);
  defaultReaderClosedPromiseReject(reader, reason);
}
function defaultReaderClosedPromiseInitializeAsResolved(reader) {
  defaultReaderClosedPromiseInitialize(reader);
  defaultReaderClosedPromiseResolve(reader);
}
function defaultReaderClosedPromiseReject(reader, reason) {
  if (reader._closedPromise_reject === void 0) {
    return;
  }
  setPromiseIsHandledToTrue(reader._closedPromise);
  reader._closedPromise_reject(reason);
  reader._closedPromise_resolve = void 0;
  reader._closedPromise_reject = void 0;
}
function defaultReaderClosedPromiseResetToRejected(reader, reason) {
  defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
}
function defaultReaderClosedPromiseResolve(reader) {
  if (reader._closedPromise_resolve === void 0) {
    return;
  }
  reader._closedPromise_resolve(void 0);
  reader._closedPromise_resolve = void 0;
  reader._closedPromise_reject = void 0;
}
function isDictionary(x3) {
  return typeof x3 === "object" || typeof x3 === "function";
}
function assertDictionary(obj, context) {
  if (obj !== void 0 && !isDictionary(obj)) {
    throw new TypeError(`${context} is not an object.`);
  }
}
function assertFunction(x3, context) {
  if (typeof x3 !== "function") {
    throw new TypeError(`${context} is not a function.`);
  }
}
function isObject(x3) {
  return typeof x3 === "object" && x3 !== null || typeof x3 === "function";
}
function assertObject(x3, context) {
  if (!isObject(x3)) {
    throw new TypeError(`${context} is not an object.`);
  }
}
function assertRequiredArgument(x3, position3, context) {
  if (x3 === void 0) {
    throw new TypeError(`Parameter ${position3} is required in '${context}'.`);
  }
}
function assertRequiredField(x3, field, context) {
  if (x3 === void 0) {
    throw new TypeError(`${field} is required in '${context}'.`);
  }
}
function convertUnrestrictedDouble(value) {
  return Number(value);
}
function censorNegativeZero(x3) {
  return x3 === 0 ? 0 : x3;
}
function integerPart(x3) {
  return censorNegativeZero(MathTrunc(x3));
}
function convertUnsignedLongLongWithEnforceRange(value, context) {
  const lowerBound = 0;
  const upperBound = Number.MAX_SAFE_INTEGER;
  let x3 = Number(value);
  x3 = censorNegativeZero(x3);
  if (!NumberIsFinite(x3)) {
    throw new TypeError(`${context} is not a finite number`);
  }
  x3 = integerPart(x3);
  if (x3 < lowerBound || x3 > upperBound) {
    throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);
  }
  if (!NumberIsFinite(x3) || x3 === 0) {
    return 0;
  }
  return x3;
}
function assertReadableStream(x3, context) {
  if (!IsReadableStream(x3)) {
    throw new TypeError(`${context} is not a ReadableStream.`);
  }
}
function AcquireReadableStreamDefaultReader(stream) {
  return new ReadableStreamDefaultReader(stream);
}
function ReadableStreamAddReadRequest(stream, readRequest) {
  stream._reader._readRequests.push(readRequest);
}
function ReadableStreamFulfillReadRequest(stream, chunk, done) {
  const reader = stream._reader;
  const readRequest = reader._readRequests.shift();
  if (done) {
    readRequest._closeSteps();
  } else {
    readRequest._chunkSteps(chunk);
  }
}
function ReadableStreamGetNumReadRequests(stream) {
  return stream._reader._readRequests.length;
}
function ReadableStreamHasDefaultReader(stream) {
  const reader = stream._reader;
  if (reader === void 0) {
    return false;
  }
  if (!IsReadableStreamDefaultReader(reader)) {
    return false;
  }
  return true;
}
function IsReadableStreamDefaultReader(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_readRequests")) {
    return false;
  }
  return x3 instanceof ReadableStreamDefaultReader;
}
function ReadableStreamDefaultReaderRead(reader, readRequest) {
  const stream = reader._ownerReadableStream;
  stream._disturbed = true;
  if (stream._state === "closed") {
    readRequest._closeSteps();
  } else if (stream._state === "errored") {
    readRequest._errorSteps(stream._storedError);
  } else {
    stream._readableStreamController[PullSteps](readRequest);
  }
}
function defaultReaderBrandCheckException(name) {
  return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);
}
function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
  const reader = AcquireReadableStreamDefaultReader(stream);
  const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);
  const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
  iterator._asyncIteratorImpl = impl;
  return iterator;
}
function IsReadableStreamAsyncIterator(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_asyncIteratorImpl")) {
    return false;
  }
  try {
    return x3._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;
  } catch (_a8) {
    return false;
  }
}
function streamAsyncIteratorBrandCheckException(name) {
  return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);
}
function CreateArrayFromList(elements) {
  return elements.slice();
}
function CopyDataBlockBytes(dest, destOffset, src2, srcOffset, n2) {
  new Uint8Array(dest).set(new Uint8Array(src2, srcOffset, n2), destOffset);
}
function TransferArrayBuffer(O2) {
  return O2;
}
function IsDetachedBuffer(O2) {
  return false;
}
function ArrayBufferSlice(buffer3, begin, end) {
  if (buffer3.slice) {
    return buffer3.slice(begin, end);
  }
  const length = end - begin;
  const slice2 = new ArrayBuffer(length);
  CopyDataBlockBytes(slice2, 0, buffer3, begin, length);
  return slice2;
}
function IsNonNegativeNumber(v2) {
  if (typeof v2 !== "number") {
    return false;
  }
  if (NumberIsNaN(v2)) {
    return false;
  }
  if (v2 < 0) {
    return false;
  }
  return true;
}
function CloneAsUint8Array(O2) {
  const buffer3 = ArrayBufferSlice(O2.buffer, O2.byteOffset, O2.byteOffset + O2.byteLength);
  return new Uint8Array(buffer3);
}
function DequeueValue(container) {
  const pair = container._queue.shift();
  container._queueTotalSize -= pair.size;
  if (container._queueTotalSize < 0) {
    container._queueTotalSize = 0;
  }
  return pair.value;
}
function EnqueueValueWithSize(container, value, size) {
  if (!IsNonNegativeNumber(size) || size === Infinity) {
    throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
  }
  container._queue.push({ value, size });
  container._queueTotalSize += size;
}
function PeekQueueValue(container) {
  const pair = container._queue.peek();
  return pair.value;
}
function ResetQueue(container) {
  container._queue = new SimpleQueue();
  container._queueTotalSize = 0;
}
function IsReadableByteStreamController(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_controlledReadableByteStream")) {
    return false;
  }
  return x3 instanceof ReadableByteStreamController;
}
function IsReadableStreamBYOBRequest(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_associatedReadableByteStreamController")) {
    return false;
  }
  return x3 instanceof ReadableStreamBYOBRequest;
}
function ReadableByteStreamControllerCallPullIfNeeded(controller) {
  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
  if (!shouldPull) {
    return;
  }
  if (controller._pulling) {
    controller._pullAgain = true;
    return;
  }
  controller._pulling = true;
  const pullPromise = controller._pullAlgorithm();
  uponPromise(pullPromise, () => {
    controller._pulling = false;
    if (controller._pullAgain) {
      controller._pullAgain = false;
      ReadableByteStreamControllerCallPullIfNeeded(controller);
    }
  }, (e3) => {
    ReadableByteStreamControllerError(controller, e3);
  });
}
function ReadableByteStreamControllerClearPendingPullIntos(controller) {
  ReadableByteStreamControllerInvalidateBYOBRequest(controller);
  controller._pendingPullIntos = new SimpleQueue();
}
function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
  let done = false;
  if (stream._state === "closed") {
    done = true;
  }
  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
  if (pullIntoDescriptor.readerType === "default") {
    ReadableStreamFulfillReadRequest(stream, filledView, done);
  } else {
    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
  }
}
function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
  const bytesFilled = pullIntoDescriptor.bytesFilled;
  const elementSize = pullIntoDescriptor.elementSize;
  return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
}
function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer3, byteOffset, byteLength) {
  controller._queue.push({ buffer: buffer3, byteOffset, byteLength });
  controller._queueTotalSize += byteLength;
}
function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
  const elementSize = pullIntoDescriptor.elementSize;
  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
  const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
  let totalBytesToCopyRemaining = maxBytesToCopy;
  let ready = false;
  if (maxAlignedBytes > currentAlignedBytes) {
    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
    ready = true;
  }
  const queue = controller._queue;
  while (totalBytesToCopyRemaining > 0) {
    const headOfQueue = queue.peek();
    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
    CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
    if (headOfQueue.byteLength === bytesToCopy) {
      queue.shift();
    } else {
      headOfQueue.byteOffset += bytesToCopy;
      headOfQueue.byteLength -= bytesToCopy;
    }
    controller._queueTotalSize -= bytesToCopy;
    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);
    totalBytesToCopyRemaining -= bytesToCopy;
  }
  return ready;
}
function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
  pullIntoDescriptor.bytesFilled += size;
}
function ReadableByteStreamControllerHandleQueueDrain(controller) {
  if (controller._queueTotalSize === 0 && controller._closeRequested) {
    ReadableByteStreamControllerClearAlgorithms(controller);
    ReadableStreamClose(controller._controlledReadableByteStream);
  } else {
    ReadableByteStreamControllerCallPullIfNeeded(controller);
  }
}
function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
  if (controller._byobRequest === null) {
    return;
  }
  controller._byobRequest._associatedReadableByteStreamController = void 0;
  controller._byobRequest._view = null;
  controller._byobRequest = null;
}
function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
  while (controller._pendingPullIntos.length > 0) {
    if (controller._queueTotalSize === 0) {
      return;
    }
    const pullIntoDescriptor = controller._pendingPullIntos.peek();
    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
      ReadableByteStreamControllerShiftPendingPullInto(controller);
      ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
    }
  }
}
function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
  const stream = controller._controlledReadableByteStream;
  let elementSize = 1;
  if (view.constructor !== DataView) {
    elementSize = view.constructor.BYTES_PER_ELEMENT;
  }
  const ctor = view.constructor;
  const buffer3 = TransferArrayBuffer(view.buffer);
  const pullIntoDescriptor = {
    buffer: buffer3,
    bufferByteLength: buffer3.byteLength,
    byteOffset: view.byteOffset,
    byteLength: view.byteLength,
    bytesFilled: 0,
    elementSize,
    viewConstructor: ctor,
    readerType: "byob"
  };
  if (controller._pendingPullIntos.length > 0) {
    controller._pendingPullIntos.push(pullIntoDescriptor);
    ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
    return;
  }
  if (stream._state === "closed") {
    const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
    readIntoRequest._closeSteps(emptyView);
    return;
  }
  if (controller._queueTotalSize > 0) {
    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
      ReadableByteStreamControllerHandleQueueDrain(controller);
      readIntoRequest._chunkSteps(filledView);
      return;
    }
    if (controller._closeRequested) {
      const e3 = new TypeError("Insufficient bytes to fill elements in the given buffer");
      ReadableByteStreamControllerError(controller, e3);
      readIntoRequest._errorSteps(e3);
      return;
    }
  }
  controller._pendingPullIntos.push(pullIntoDescriptor);
  ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
  ReadableByteStreamControllerCallPullIfNeeded(controller);
}
function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
  const stream = controller._controlledReadableByteStream;
  if (ReadableStreamHasBYOBReader(stream)) {
    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {
      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
    }
  }
}
function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);
  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
    return;
  }
  ReadableByteStreamControllerShiftPendingPullInto(controller);
  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
  if (remainderSize > 0) {
    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
    const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
  }
  pullIntoDescriptor.bytesFilled -= remainderSize;
  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
}
function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
  const firstDescriptor = controller._pendingPullIntos.peek();
  ReadableByteStreamControllerInvalidateBYOBRequest(controller);
  const state = controller._controlledReadableByteStream._state;
  if (state === "closed") {
    ReadableByteStreamControllerRespondInClosedState(controller);
  } else {
    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);
  }
  ReadableByteStreamControllerCallPullIfNeeded(controller);
}
function ReadableByteStreamControllerShiftPendingPullInto(controller) {
  const descriptor = controller._pendingPullIntos.shift();
  return descriptor;
}
function ReadableByteStreamControllerShouldCallPull(controller) {
  const stream = controller._controlledReadableByteStream;
  if (stream._state !== "readable") {
    return false;
  }
  if (controller._closeRequested) {
    return false;
  }
  if (!controller._started) {
    return false;
  }
  if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
    return true;
  }
  if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {
    return true;
  }
  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
  if (desiredSize > 0) {
    return true;
  }
  return false;
}
function ReadableByteStreamControllerClearAlgorithms(controller) {
  controller._pullAlgorithm = void 0;
  controller._cancelAlgorithm = void 0;
}
function ReadableByteStreamControllerClose(controller) {
  const stream = controller._controlledReadableByteStream;
  if (controller._closeRequested || stream._state !== "readable") {
    return;
  }
  if (controller._queueTotalSize > 0) {
    controller._closeRequested = true;
    return;
  }
  if (controller._pendingPullIntos.length > 0) {
    const firstPendingPullInto = controller._pendingPullIntos.peek();
    if (firstPendingPullInto.bytesFilled > 0) {
      const e3 = new TypeError("Insufficient bytes to fill elements in the given buffer");
      ReadableByteStreamControllerError(controller, e3);
      throw e3;
    }
  }
  ReadableByteStreamControllerClearAlgorithms(controller);
  ReadableStreamClose(stream);
}
function ReadableByteStreamControllerEnqueue(controller, chunk) {
  const stream = controller._controlledReadableByteStream;
  if (controller._closeRequested || stream._state !== "readable") {
    return;
  }
  const buffer3 = chunk.buffer;
  const byteOffset = chunk.byteOffset;
  const byteLength = chunk.byteLength;
  const transferredBuffer = TransferArrayBuffer(buffer3);
  if (controller._pendingPullIntos.length > 0) {
    const firstPendingPullInto = controller._pendingPullIntos.peek();
    if (IsDetachedBuffer(firstPendingPullInto.buffer))
      ;
    firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);
  }
  ReadableByteStreamControllerInvalidateBYOBRequest(controller);
  if (ReadableStreamHasDefaultReader(stream)) {
    if (ReadableStreamGetNumReadRequests(stream) === 0) {
      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
    } else {
      if (controller._pendingPullIntos.length > 0) {
        ReadableByteStreamControllerShiftPendingPullInto(controller);
      }
      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
      ReadableStreamFulfillReadRequest(stream, transferredView, false);
    }
  } else if (ReadableStreamHasBYOBReader(stream)) {
    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
  } else {
    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
  }
  ReadableByteStreamControllerCallPullIfNeeded(controller);
}
function ReadableByteStreamControllerError(controller, e3) {
  const stream = controller._controlledReadableByteStream;
  if (stream._state !== "readable") {
    return;
  }
  ReadableByteStreamControllerClearPendingPullIntos(controller);
  ResetQueue(controller);
  ReadableByteStreamControllerClearAlgorithms(controller);
  ReadableStreamError(stream, e3);
}
function ReadableByteStreamControllerGetBYOBRequest(controller) {
  if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
    const firstDescriptor = controller._pendingPullIntos.peek();
    const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
    const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
    SetUpReadableStreamBYOBRequest(byobRequest, controller, view);
    controller._byobRequest = byobRequest;
  }
  return controller._byobRequest;
}
function ReadableByteStreamControllerGetDesiredSize(controller) {
  const state = controller._controlledReadableByteStream._state;
  if (state === "errored") {
    return null;
  }
  if (state === "closed") {
    return 0;
  }
  return controller._strategyHWM - controller._queueTotalSize;
}
function ReadableByteStreamControllerRespond(controller, bytesWritten) {
  const firstDescriptor = controller._pendingPullIntos.peek();
  const state = controller._controlledReadableByteStream._state;
  if (state === "closed") {
    if (bytesWritten !== 0) {
      throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
    }
  } else {
    if (bytesWritten === 0) {
      throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
    }
    if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {
      throw new RangeError("bytesWritten out of range");
    }
  }
  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);
  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
}
function ReadableByteStreamControllerRespondWithNewView(controller, view) {
  const firstDescriptor = controller._pendingPullIntos.peek();
  const state = controller._controlledReadableByteStream._state;
  if (state === "closed") {
    if (view.byteLength !== 0) {
      throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
    }
  } else {
    if (view.byteLength === 0) {
      throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
    }
  }
  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
    throw new RangeError("The region specified by view does not match byobRequest");
  }
  if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {
    throw new RangeError("The buffer of view has different capacity than byobRequest");
  }
  if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {
    throw new RangeError("The region specified by view is larger than byobRequest");
  }
  const viewByteLength = view.byteLength;
  firstDescriptor.buffer = TransferArrayBuffer(view.buffer);
  ReadableByteStreamControllerRespondInternal(controller, viewByteLength);
}
function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
  controller._controlledReadableByteStream = stream;
  controller._pullAgain = false;
  controller._pulling = false;
  controller._byobRequest = null;
  controller._queue = controller._queueTotalSize = void 0;
  ResetQueue(controller);
  controller._closeRequested = false;
  controller._started = false;
  controller._strategyHWM = highWaterMark;
  controller._pullAlgorithm = pullAlgorithm;
  controller._cancelAlgorithm = cancelAlgorithm;
  controller._autoAllocateChunkSize = autoAllocateChunkSize;
  controller._pendingPullIntos = new SimpleQueue();
  stream._readableStreamController = controller;
  const startResult = startAlgorithm();
  uponPromise(promiseResolvedWith(startResult), () => {
    controller._started = true;
    ReadableByteStreamControllerCallPullIfNeeded(controller);
  }, (r3) => {
    ReadableByteStreamControllerError(controller, r3);
  });
}
function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
  const controller = Object.create(ReadableByteStreamController.prototype);
  let startAlgorithm = () => void 0;
  let pullAlgorithm = () => promiseResolvedWith(void 0);
  let cancelAlgorithm = () => promiseResolvedWith(void 0);
  if (underlyingByteSource.start !== void 0) {
    startAlgorithm = () => underlyingByteSource.start(controller);
  }
  if (underlyingByteSource.pull !== void 0) {
    pullAlgorithm = () => underlyingByteSource.pull(controller);
  }
  if (underlyingByteSource.cancel !== void 0) {
    cancelAlgorithm = (reason) => underlyingByteSource.cancel(reason);
  }
  const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
  if (autoAllocateChunkSize === 0) {
    throw new TypeError("autoAllocateChunkSize must be greater than 0");
  }
  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
}
function SetUpReadableStreamBYOBRequest(request, controller, view) {
  request._associatedReadableByteStreamController = controller;
  request._view = view;
}
function byobRequestBrandCheckException(name) {
  return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);
}
function byteStreamControllerBrandCheckException(name) {
  return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);
}
function AcquireReadableStreamBYOBReader(stream) {
  return new ReadableStreamBYOBReader(stream);
}
function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
  stream._reader._readIntoRequests.push(readIntoRequest);
}
function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
  const reader = stream._reader;
  const readIntoRequest = reader._readIntoRequests.shift();
  if (done) {
    readIntoRequest._closeSteps(chunk);
  } else {
    readIntoRequest._chunkSteps(chunk);
  }
}
function ReadableStreamGetNumReadIntoRequests(stream) {
  return stream._reader._readIntoRequests.length;
}
function ReadableStreamHasBYOBReader(stream) {
  const reader = stream._reader;
  if (reader === void 0) {
    return false;
  }
  if (!IsReadableStreamBYOBReader(reader)) {
    return false;
  }
  return true;
}
function IsReadableStreamBYOBReader(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_readIntoRequests")) {
    return false;
  }
  return x3 instanceof ReadableStreamBYOBReader;
}
function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
  const stream = reader._ownerReadableStream;
  stream._disturbed = true;
  if (stream._state === "errored") {
    readIntoRequest._errorSteps(stream._storedError);
  } else {
    ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
  }
}
function byobReaderBrandCheckException(name) {
  return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);
}
function ExtractHighWaterMark(strategy, defaultHWM) {
  const { highWaterMark } = strategy;
  if (highWaterMark === void 0) {
    return defaultHWM;
  }
  if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {
    throw new RangeError("Invalid highWaterMark");
  }
  return highWaterMark;
}
function ExtractSizeAlgorithm(strategy) {
  const { size } = strategy;
  if (!size) {
    return () => 1;
  }
  return size;
}
function convertQueuingStrategy(init2, context) {
  assertDictionary(init2, context);
  const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
  const size = init2 === null || init2 === void 0 ? void 0 : init2.size;
  return {
    highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),
    size: size === void 0 ? void 0 : convertQueuingStrategySize(size, `${context} has member 'size' that`)
  };
}
function convertQueuingStrategySize(fn, context) {
  assertFunction(fn, context);
  return (chunk) => convertUnrestrictedDouble(fn(chunk));
}
function convertUnderlyingSink(original, context) {
  assertDictionary(original, context);
  const abort = original === null || original === void 0 ? void 0 : original.abort;
  const close = original === null || original === void 0 ? void 0 : original.close;
  const start3 = original === null || original === void 0 ? void 0 : original.start;
  const type = original === null || original === void 0 ? void 0 : original.type;
  const write = original === null || original === void 0 ? void 0 : original.write;
  return {
    abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),
    close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),
    start: start3 === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start3, original, `${context} has member 'start' that`),
    write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),
    type
  };
}
function convertUnderlyingSinkAbortCallback(fn, original, context) {
  assertFunction(fn, context);
  return (reason) => promiseCall(fn, original, [reason]);
}
function convertUnderlyingSinkCloseCallback(fn, original, context) {
  assertFunction(fn, context);
  return () => promiseCall(fn, original, []);
}
function convertUnderlyingSinkStartCallback(fn, original, context) {
  assertFunction(fn, context);
  return (controller) => reflectCall(fn, original, [controller]);
}
function convertUnderlyingSinkWriteCallback(fn, original, context) {
  assertFunction(fn, context);
  return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
}
function assertWritableStream(x3, context) {
  if (!IsWritableStream(x3)) {
    throw new TypeError(`${context} is not a WritableStream.`);
  }
}
function isAbortSignal2(value) {
  if (typeof value !== "object" || value === null) {
    return false;
  }
  try {
    return typeof value.aborted === "boolean";
  } catch (_a8) {
    return false;
  }
}
function AcquireWritableStreamDefaultWriter(stream) {
  return new WritableStreamDefaultWriter(stream);
}
function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
  const stream = Object.create(WritableStream.prototype);
  InitializeWritableStream(stream);
  const controller = Object.create(WritableStreamDefaultController.prototype);
  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
  return stream;
}
function InitializeWritableStream(stream) {
  stream._state = "writable";
  stream._storedError = void 0;
  stream._writer = void 0;
  stream._writableStreamController = void 0;
  stream._writeRequests = new SimpleQueue();
  stream._inFlightWriteRequest = void 0;
  stream._closeRequest = void 0;
  stream._inFlightCloseRequest = void 0;
  stream._pendingAbortRequest = void 0;
  stream._backpressure = false;
}
function IsWritableStream(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_writableStreamController")) {
    return false;
  }
  return x3 instanceof WritableStream;
}
function IsWritableStreamLocked(stream) {
  if (stream._writer === void 0) {
    return false;
  }
  return true;
}
function WritableStreamAbort(stream, reason) {
  var _a8;
  if (stream._state === "closed" || stream._state === "errored") {
    return promiseResolvedWith(void 0);
  }
  stream._writableStreamController._abortReason = reason;
  (_a8 = stream._writableStreamController._abortController) === null || _a8 === void 0 ? void 0 : _a8.abort();
  const state = stream._state;
  if (state === "closed" || state === "errored") {
    return promiseResolvedWith(void 0);
  }
  if (stream._pendingAbortRequest !== void 0) {
    return stream._pendingAbortRequest._promise;
  }
  let wasAlreadyErroring = false;
  if (state === "erroring") {
    wasAlreadyErroring = true;
    reason = void 0;
  }
  const promise = newPromise((resolve2, reject) => {
    stream._pendingAbortRequest = {
      _promise: void 0,
      _resolve: resolve2,
      _reject: reject,
      _reason: reason,
      _wasAlreadyErroring: wasAlreadyErroring
    };
  });
  stream._pendingAbortRequest._promise = promise;
  if (!wasAlreadyErroring) {
    WritableStreamStartErroring(stream, reason);
  }
  return promise;
}
function WritableStreamClose(stream) {
  const state = stream._state;
  if (state === "closed" || state === "errored") {
    return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));
  }
  const promise = newPromise((resolve2, reject) => {
    const closeRequest = {
      _resolve: resolve2,
      _reject: reject
    };
    stream._closeRequest = closeRequest;
  });
  const writer = stream._writer;
  if (writer !== void 0 && stream._backpressure && state === "writable") {
    defaultWriterReadyPromiseResolve(writer);
  }
  WritableStreamDefaultControllerClose(stream._writableStreamController);
  return promise;
}
function WritableStreamAddWriteRequest(stream) {
  const promise = newPromise((resolve2, reject) => {
    const writeRequest = {
      _resolve: resolve2,
      _reject: reject
    };
    stream._writeRequests.push(writeRequest);
  });
  return promise;
}
function WritableStreamDealWithRejection(stream, error3) {
  const state = stream._state;
  if (state === "writable") {
    WritableStreamStartErroring(stream, error3);
    return;
  }
  WritableStreamFinishErroring(stream);
}
function WritableStreamStartErroring(stream, reason) {
  const controller = stream._writableStreamController;
  stream._state = "erroring";
  stream._storedError = reason;
  const writer = stream._writer;
  if (writer !== void 0) {
    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);
  }
  if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {
    WritableStreamFinishErroring(stream);
  }
}
function WritableStreamFinishErroring(stream) {
  stream._state = "errored";
  stream._writableStreamController[ErrorSteps]();
  const storedError = stream._storedError;
  stream._writeRequests.forEach((writeRequest) => {
    writeRequest._reject(storedError);
  });
  stream._writeRequests = new SimpleQueue();
  if (stream._pendingAbortRequest === void 0) {
    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
    return;
  }
  const abortRequest = stream._pendingAbortRequest;
  stream._pendingAbortRequest = void 0;
  if (abortRequest._wasAlreadyErroring) {
    abortRequest._reject(storedError);
    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
    return;
  }
  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
  uponPromise(promise, () => {
    abortRequest._resolve();
    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
  }, (reason) => {
    abortRequest._reject(reason);
    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
  });
}
function WritableStreamFinishInFlightWrite(stream) {
  stream._inFlightWriteRequest._resolve(void 0);
  stream._inFlightWriteRequest = void 0;
}
function WritableStreamFinishInFlightWriteWithError(stream, error3) {
  stream._inFlightWriteRequest._reject(error3);
  stream._inFlightWriteRequest = void 0;
  WritableStreamDealWithRejection(stream, error3);
}
function WritableStreamFinishInFlightClose(stream) {
  stream._inFlightCloseRequest._resolve(void 0);
  stream._inFlightCloseRequest = void 0;
  const state = stream._state;
  if (state === "erroring") {
    stream._storedError = void 0;
    if (stream._pendingAbortRequest !== void 0) {
      stream._pendingAbortRequest._resolve();
      stream._pendingAbortRequest = void 0;
    }
  }
  stream._state = "closed";
  const writer = stream._writer;
  if (writer !== void 0) {
    defaultWriterClosedPromiseResolve(writer);
  }
}
function WritableStreamFinishInFlightCloseWithError(stream, error3) {
  stream._inFlightCloseRequest._reject(error3);
  stream._inFlightCloseRequest = void 0;
  if (stream._pendingAbortRequest !== void 0) {
    stream._pendingAbortRequest._reject(error3);
    stream._pendingAbortRequest = void 0;
  }
  WritableStreamDealWithRejection(stream, error3);
}
function WritableStreamCloseQueuedOrInFlight(stream) {
  if (stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0) {
    return false;
  }
  return true;
}
function WritableStreamHasOperationMarkedInFlight(stream) {
  if (stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0) {
    return false;
  }
  return true;
}
function WritableStreamMarkCloseRequestInFlight(stream) {
  stream._inFlightCloseRequest = stream._closeRequest;
  stream._closeRequest = void 0;
}
function WritableStreamMarkFirstWriteRequestInFlight(stream) {
  stream._inFlightWriteRequest = stream._writeRequests.shift();
}
function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
  if (stream._closeRequest !== void 0) {
    stream._closeRequest._reject(stream._storedError);
    stream._closeRequest = void 0;
  }
  const writer = stream._writer;
  if (writer !== void 0) {
    defaultWriterClosedPromiseReject(writer, stream._storedError);
  }
}
function WritableStreamUpdateBackpressure(stream, backpressure) {
  const writer = stream._writer;
  if (writer !== void 0 && backpressure !== stream._backpressure) {
    if (backpressure) {
      defaultWriterReadyPromiseReset(writer);
    } else {
      defaultWriterReadyPromiseResolve(writer);
    }
  }
  stream._backpressure = backpressure;
}
function IsWritableStreamDefaultWriter(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_ownerWritableStream")) {
    return false;
  }
  return x3 instanceof WritableStreamDefaultWriter;
}
function WritableStreamDefaultWriterAbort(writer, reason) {
  const stream = writer._ownerWritableStream;
  return WritableStreamAbort(stream, reason);
}
function WritableStreamDefaultWriterClose(writer) {
  const stream = writer._ownerWritableStream;
  return WritableStreamClose(stream);
}
function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
  const stream = writer._ownerWritableStream;
  const state = stream._state;
  if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
    return promiseResolvedWith(void 0);
  }
  if (state === "errored") {
    return promiseRejectedWith(stream._storedError);
  }
  return WritableStreamDefaultWriterClose(writer);
}
function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error3) {
  if (writer._closedPromiseState === "pending") {
    defaultWriterClosedPromiseReject(writer, error3);
  } else {
    defaultWriterClosedPromiseResetToRejected(writer, error3);
  }
}
function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error3) {
  if (writer._readyPromiseState === "pending") {
    defaultWriterReadyPromiseReject(writer, error3);
  } else {
    defaultWriterReadyPromiseResetToRejected(writer, error3);
  }
}
function WritableStreamDefaultWriterGetDesiredSize(writer) {
  const stream = writer._ownerWritableStream;
  const state = stream._state;
  if (state === "errored" || state === "erroring") {
    return null;
  }
  if (state === "closed") {
    return 0;
  }
  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
}
function WritableStreamDefaultWriterRelease(writer) {
  const stream = writer._ownerWritableStream;
  const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);
  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);
  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);
  stream._writer = void 0;
  writer._ownerWritableStream = void 0;
}
function WritableStreamDefaultWriterWrite(writer, chunk) {
  const stream = writer._ownerWritableStream;
  const controller = stream._writableStreamController;
  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
  if (stream !== writer._ownerWritableStream) {
    return promiseRejectedWith(defaultWriterLockException("write to"));
  }
  const state = stream._state;
  if (state === "errored") {
    return promiseRejectedWith(stream._storedError);
  }
  if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
    return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"));
  }
  if (state === "erroring") {
    return promiseRejectedWith(stream._storedError);
  }
  const promise = WritableStreamAddWriteRequest(stream);
  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);
  return promise;
}
function IsWritableStreamDefaultController(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_controlledWritableStream")) {
    return false;
  }
  return x3 instanceof WritableStreamDefaultController;
}
function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
  controller._controlledWritableStream = stream;
  stream._writableStreamController = controller;
  controller._queue = void 0;
  controller._queueTotalSize = void 0;
  ResetQueue(controller);
  controller._abortReason = void 0;
  controller._abortController = new AbortController2();
  controller._started = false;
  controller._strategySizeAlgorithm = sizeAlgorithm;
  controller._strategyHWM = highWaterMark;
  controller._writeAlgorithm = writeAlgorithm;
  controller._closeAlgorithm = closeAlgorithm;
  controller._abortAlgorithm = abortAlgorithm;
  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
  WritableStreamUpdateBackpressure(stream, backpressure);
  const startResult = startAlgorithm();
  const startPromise = promiseResolvedWith(startResult);
  uponPromise(startPromise, () => {
    controller._started = true;
    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
  }, (r3) => {
    controller._started = true;
    WritableStreamDealWithRejection(stream, r3);
  });
}
function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
  const controller = Object.create(WritableStreamDefaultController.prototype);
  let startAlgorithm = () => void 0;
  let writeAlgorithm = () => promiseResolvedWith(void 0);
  let closeAlgorithm = () => promiseResolvedWith(void 0);
  let abortAlgorithm = () => promiseResolvedWith(void 0);
  if (underlyingSink.start !== void 0) {
    startAlgorithm = () => underlyingSink.start(controller);
  }
  if (underlyingSink.write !== void 0) {
    writeAlgorithm = (chunk) => underlyingSink.write(chunk, controller);
  }
  if (underlyingSink.close !== void 0) {
    closeAlgorithm = () => underlyingSink.close();
  }
  if (underlyingSink.abort !== void 0) {
    abortAlgorithm = (reason) => underlyingSink.abort(reason);
  }
  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
}
function WritableStreamDefaultControllerClearAlgorithms(controller) {
  controller._writeAlgorithm = void 0;
  controller._closeAlgorithm = void 0;
  controller._abortAlgorithm = void 0;
  controller._strategySizeAlgorithm = void 0;
}
function WritableStreamDefaultControllerClose(controller) {
  EnqueueValueWithSize(controller, closeSentinel, 0);
  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
}
function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
  try {
    return controller._strategySizeAlgorithm(chunk);
  } catch (chunkSizeE) {
    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
    return 1;
  }
}
function WritableStreamDefaultControllerGetDesiredSize(controller) {
  return controller._strategyHWM - controller._queueTotalSize;
}
function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
  try {
    EnqueueValueWithSize(controller, chunk, chunkSize);
  } catch (enqueueE) {
    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
    return;
  }
  const stream = controller._controlledWritableStream;
  if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === "writable") {
    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
    WritableStreamUpdateBackpressure(stream, backpressure);
  }
  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
}
function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
  const stream = controller._controlledWritableStream;
  if (!controller._started) {
    return;
  }
  if (stream._inFlightWriteRequest !== void 0) {
    return;
  }
  const state = stream._state;
  if (state === "erroring") {
    WritableStreamFinishErroring(stream);
    return;
  }
  if (controller._queue.length === 0) {
    return;
  }
  const value = PeekQueueValue(controller);
  if (value === closeSentinel) {
    WritableStreamDefaultControllerProcessClose(controller);
  } else {
    WritableStreamDefaultControllerProcessWrite(controller, value);
  }
}
function WritableStreamDefaultControllerErrorIfNeeded(controller, error3) {
  if (controller._controlledWritableStream._state === "writable") {
    WritableStreamDefaultControllerError(controller, error3);
  }
}
function WritableStreamDefaultControllerProcessClose(controller) {
  const stream = controller._controlledWritableStream;
  WritableStreamMarkCloseRequestInFlight(stream);
  DequeueValue(controller);
  const sinkClosePromise = controller._closeAlgorithm();
  WritableStreamDefaultControllerClearAlgorithms(controller);
  uponPromise(sinkClosePromise, () => {
    WritableStreamFinishInFlightClose(stream);
  }, (reason) => {
    WritableStreamFinishInFlightCloseWithError(stream, reason);
  });
}
function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
  const stream = controller._controlledWritableStream;
  WritableStreamMarkFirstWriteRequestInFlight(stream);
  const sinkWritePromise = controller._writeAlgorithm(chunk);
  uponPromise(sinkWritePromise, () => {
    WritableStreamFinishInFlightWrite(stream);
    const state = stream._state;
    DequeueValue(controller);
    if (!WritableStreamCloseQueuedOrInFlight(stream) && state === "writable") {
      const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
      WritableStreamUpdateBackpressure(stream, backpressure);
    }
    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
  }, (reason) => {
    if (stream._state === "writable") {
      WritableStreamDefaultControllerClearAlgorithms(controller);
    }
    WritableStreamFinishInFlightWriteWithError(stream, reason);
  });
}
function WritableStreamDefaultControllerGetBackpressure(controller) {
  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
  return desiredSize <= 0;
}
function WritableStreamDefaultControllerError(controller, error3) {
  const stream = controller._controlledWritableStream;
  WritableStreamDefaultControllerClearAlgorithms(controller);
  WritableStreamStartErroring(stream, error3);
}
function streamBrandCheckException$2(name) {
  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);
}
function defaultControllerBrandCheckException$2(name) {
  return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);
}
function defaultWriterBrandCheckException(name) {
  return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);
}
function defaultWriterLockException(name) {
  return new TypeError("Cannot " + name + " a stream using a released writer");
}
function defaultWriterClosedPromiseInitialize(writer) {
  writer._closedPromise = newPromise((resolve2, reject) => {
    writer._closedPromise_resolve = resolve2;
    writer._closedPromise_reject = reject;
    writer._closedPromiseState = "pending";
  });
}
function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
  defaultWriterClosedPromiseInitialize(writer);
  defaultWriterClosedPromiseReject(writer, reason);
}
function defaultWriterClosedPromiseInitializeAsResolved(writer) {
  defaultWriterClosedPromiseInitialize(writer);
  defaultWriterClosedPromiseResolve(writer);
}
function defaultWriterClosedPromiseReject(writer, reason) {
  if (writer._closedPromise_reject === void 0) {
    return;
  }
  setPromiseIsHandledToTrue(writer._closedPromise);
  writer._closedPromise_reject(reason);
  writer._closedPromise_resolve = void 0;
  writer._closedPromise_reject = void 0;
  writer._closedPromiseState = "rejected";
}
function defaultWriterClosedPromiseResetToRejected(writer, reason) {
  defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
}
function defaultWriterClosedPromiseResolve(writer) {
  if (writer._closedPromise_resolve === void 0) {
    return;
  }
  writer._closedPromise_resolve(void 0);
  writer._closedPromise_resolve = void 0;
  writer._closedPromise_reject = void 0;
  writer._closedPromiseState = "resolved";
}
function defaultWriterReadyPromiseInitialize(writer) {
  writer._readyPromise = newPromise((resolve2, reject) => {
    writer._readyPromise_resolve = resolve2;
    writer._readyPromise_reject = reject;
  });
  writer._readyPromiseState = "pending";
}
function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
  defaultWriterReadyPromiseInitialize(writer);
  defaultWriterReadyPromiseReject(writer, reason);
}
function defaultWriterReadyPromiseInitializeAsResolved(writer) {
  defaultWriterReadyPromiseInitialize(writer);
  defaultWriterReadyPromiseResolve(writer);
}
function defaultWriterReadyPromiseReject(writer, reason) {
  if (writer._readyPromise_reject === void 0) {
    return;
  }
  setPromiseIsHandledToTrue(writer._readyPromise);
  writer._readyPromise_reject(reason);
  writer._readyPromise_resolve = void 0;
  writer._readyPromise_reject = void 0;
  writer._readyPromiseState = "rejected";
}
function defaultWriterReadyPromiseReset(writer) {
  defaultWriterReadyPromiseInitialize(writer);
}
function defaultWriterReadyPromiseResetToRejected(writer, reason) {
  defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
}
function defaultWriterReadyPromiseResolve(writer) {
  if (writer._readyPromise_resolve === void 0) {
    return;
  }
  writer._readyPromise_resolve(void 0);
  writer._readyPromise_resolve = void 0;
  writer._readyPromise_reject = void 0;
  writer._readyPromiseState = "fulfilled";
}
function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
  const reader = AcquireReadableStreamDefaultReader(source);
  const writer = AcquireWritableStreamDefaultWriter(dest);
  source._disturbed = true;
  let shuttingDown = false;
  let currentWrite = promiseResolvedWith(void 0);
  return newPromise((resolve2, reject) => {
    let abortAlgorithm;
    if (signal !== void 0) {
      abortAlgorithm = () => {
        const error3 = new DOMException3("Aborted", "AbortError");
        const actions = [];
        if (!preventAbort) {
          actions.push(() => {
            if (dest._state === "writable") {
              return WritableStreamAbort(dest, error3);
            }
            return promiseResolvedWith(void 0);
          });
        }
        if (!preventCancel) {
          actions.push(() => {
            if (source._state === "readable") {
              return ReadableStreamCancel(source, error3);
            }
            return promiseResolvedWith(void 0);
          });
        }
        shutdownWithAction(() => Promise.all(actions.map((action) => action())), true, error3);
      };
      if (signal.aborted) {
        abortAlgorithm();
        return;
      }
      signal.addEventListener("abort", abortAlgorithm);
    }
    function pipeLoop() {
      return newPromise((resolveLoop, rejectLoop) => {
        function next(done) {
          if (done) {
            resolveLoop();
          } else {
            PerformPromiseThen(pipeStep(), next, rejectLoop);
          }
        }
        next(false);
      });
    }
    function pipeStep() {
      if (shuttingDown) {
        return promiseResolvedWith(true);
      }
      return PerformPromiseThen(writer._readyPromise, () => {
        return newPromise((resolveRead, rejectRead) => {
          ReadableStreamDefaultReaderRead(reader, {
            _chunkSteps: (chunk) => {
              currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop2);
              resolveRead(false);
            },
            _closeSteps: () => resolveRead(true),
            _errorSteps: rejectRead
          });
        });
      });
    }
    isOrBecomesErrored(source, reader._closedPromise, (storedError) => {
      if (!preventAbort) {
        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);
      } else {
        shutdown(true, storedError);
      }
    });
    isOrBecomesErrored(dest, writer._closedPromise, (storedError) => {
      if (!preventCancel) {
        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);
      } else {
        shutdown(true, storedError);
      }
    });
    isOrBecomesClosed(source, reader._closedPromise, () => {
      if (!preventClose) {
        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));
      } else {
        shutdown();
      }
    });
    if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === "closed") {
      const destClosed = new TypeError("the destination writable stream closed before all data could be piped to it");
      if (!preventCancel) {
        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);
      } else {
        shutdown(true, destClosed);
      }
    }
    setPromiseIsHandledToTrue(pipeLoop());
    function waitForWritesToFinish() {
      const oldCurrentWrite = currentWrite;
      return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0);
    }
    function isOrBecomesErrored(stream, promise, action) {
      if (stream._state === "errored") {
        action(stream._storedError);
      } else {
        uponRejection(promise, action);
      }
    }
    function isOrBecomesClosed(stream, promise, action) {
      if (stream._state === "closed") {
        action();
      } else {
        uponFulfillment(promise, action);
      }
    }
    function shutdownWithAction(action, originalIsError, originalError) {
      if (shuttingDown) {
        return;
      }
      shuttingDown = true;
      if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
        uponFulfillment(waitForWritesToFinish(), doTheRest);
      } else {
        doTheRest();
      }
      function doTheRest() {
        uponPromise(action(), () => finalize(originalIsError, originalError), (newError) => finalize(true, newError));
      }
    }
    function shutdown(isError, error3) {
      if (shuttingDown) {
        return;
      }
      shuttingDown = true;
      if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
        uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error3));
      } else {
        finalize(isError, error3);
      }
    }
    function finalize(isError, error3) {
      WritableStreamDefaultWriterRelease(writer);
      ReadableStreamReaderGenericRelease(reader);
      if (signal !== void 0) {
        signal.removeEventListener("abort", abortAlgorithm);
      }
      if (isError) {
        reject(error3);
      } else {
        resolve2(void 0);
      }
    }
  });
}
function IsReadableStreamDefaultController(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_controlledReadableStream")) {
    return false;
  }
  return x3 instanceof ReadableStreamDefaultController;
}
function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
  if (!shouldPull) {
    return;
  }
  if (controller._pulling) {
    controller._pullAgain = true;
    return;
  }
  controller._pulling = true;
  const pullPromise = controller._pullAlgorithm();
  uponPromise(pullPromise, () => {
    controller._pulling = false;
    if (controller._pullAgain) {
      controller._pullAgain = false;
      ReadableStreamDefaultControllerCallPullIfNeeded(controller);
    }
  }, (e3) => {
    ReadableStreamDefaultControllerError(controller, e3);
  });
}
function ReadableStreamDefaultControllerShouldCallPull(controller) {
  const stream = controller._controlledReadableStream;
  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
    return false;
  }
  if (!controller._started) {
    return false;
  }
  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
    return true;
  }
  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
  if (desiredSize > 0) {
    return true;
  }
  return false;
}
function ReadableStreamDefaultControllerClearAlgorithms(controller) {
  controller._pullAlgorithm = void 0;
  controller._cancelAlgorithm = void 0;
  controller._strategySizeAlgorithm = void 0;
}
function ReadableStreamDefaultControllerClose(controller) {
  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
    return;
  }
  const stream = controller._controlledReadableStream;
  controller._closeRequested = true;
  if (controller._queue.length === 0) {
    ReadableStreamDefaultControllerClearAlgorithms(controller);
    ReadableStreamClose(stream);
  }
}
function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
    return;
  }
  const stream = controller._controlledReadableStream;
  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
    ReadableStreamFulfillReadRequest(stream, chunk, false);
  } else {
    let chunkSize;
    try {
      chunkSize = controller._strategySizeAlgorithm(chunk);
    } catch (chunkSizeE) {
      ReadableStreamDefaultControllerError(controller, chunkSizeE);
      throw chunkSizeE;
    }
    try {
      EnqueueValueWithSize(controller, chunk, chunkSize);
    } catch (enqueueE) {
      ReadableStreamDefaultControllerError(controller, enqueueE);
      throw enqueueE;
    }
  }
  ReadableStreamDefaultControllerCallPullIfNeeded(controller);
}
function ReadableStreamDefaultControllerError(controller, e3) {
  const stream = controller._controlledReadableStream;
  if (stream._state !== "readable") {
    return;
  }
  ResetQueue(controller);
  ReadableStreamDefaultControllerClearAlgorithms(controller);
  ReadableStreamError(stream, e3);
}
function ReadableStreamDefaultControllerGetDesiredSize(controller) {
  const state = controller._controlledReadableStream._state;
  if (state === "errored") {
    return null;
  }
  if (state === "closed") {
    return 0;
  }
  return controller._strategyHWM - controller._queueTotalSize;
}
function ReadableStreamDefaultControllerHasBackpressure(controller) {
  if (ReadableStreamDefaultControllerShouldCallPull(controller)) {
    return false;
  }
  return true;
}
function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
  const state = controller._controlledReadableStream._state;
  if (!controller._closeRequested && state === "readable") {
    return true;
  }
  return false;
}
function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
  controller._controlledReadableStream = stream;
  controller._queue = void 0;
  controller._queueTotalSize = void 0;
  ResetQueue(controller);
  controller._started = false;
  controller._closeRequested = false;
  controller._pullAgain = false;
  controller._pulling = false;
  controller._strategySizeAlgorithm = sizeAlgorithm;
  controller._strategyHWM = highWaterMark;
  controller._pullAlgorithm = pullAlgorithm;
  controller._cancelAlgorithm = cancelAlgorithm;
  stream._readableStreamController = controller;
  const startResult = startAlgorithm();
  uponPromise(promiseResolvedWith(startResult), () => {
    controller._started = true;
    ReadableStreamDefaultControllerCallPullIfNeeded(controller);
  }, (r3) => {
    ReadableStreamDefaultControllerError(controller, r3);
  });
}
function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
  const controller = Object.create(ReadableStreamDefaultController.prototype);
  let startAlgorithm = () => void 0;
  let pullAlgorithm = () => promiseResolvedWith(void 0);
  let cancelAlgorithm = () => promiseResolvedWith(void 0);
  if (underlyingSource.start !== void 0) {
    startAlgorithm = () => underlyingSource.start(controller);
  }
  if (underlyingSource.pull !== void 0) {
    pullAlgorithm = () => underlyingSource.pull(controller);
  }
  if (underlyingSource.cancel !== void 0) {
    cancelAlgorithm = (reason) => underlyingSource.cancel(reason);
  }
  SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
}
function defaultControllerBrandCheckException$1(name) {
  return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);
}
function ReadableStreamTee(stream, cloneForBranch2) {
  if (IsReadableByteStreamController(stream._readableStreamController)) {
    return ReadableByteStreamTee(stream);
  }
  return ReadableStreamDefaultTee(stream);
}
function ReadableStreamDefaultTee(stream, cloneForBranch2) {
  const reader = AcquireReadableStreamDefaultReader(stream);
  let reading = false;
  let readAgain = false;
  let canceled1 = false;
  let canceled2 = false;
  let reason1;
  let reason2;
  let branch1;
  let branch2;
  let resolveCancelPromise;
  const cancelPromise = newPromise((resolve2) => {
    resolveCancelPromise = resolve2;
  });
  function pullAlgorithm() {
    if (reading) {
      readAgain = true;
      return promiseResolvedWith(void 0);
    }
    reading = true;
    const readRequest = {
      _chunkSteps: (chunk) => {
        queueMicrotask(() => {
          readAgain = false;
          const chunk1 = chunk;
          const chunk2 = chunk;
          if (!canceled1) {
            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);
          }
          if (!canceled2) {
            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);
          }
          reading = false;
          if (readAgain) {
            pullAlgorithm();
          }
        });
      },
      _closeSteps: () => {
        reading = false;
        if (!canceled1) {
          ReadableStreamDefaultControllerClose(branch1._readableStreamController);
        }
        if (!canceled2) {
          ReadableStreamDefaultControllerClose(branch2._readableStreamController);
        }
        if (!canceled1 || !canceled2) {
          resolveCancelPromise(void 0);
        }
      },
      _errorSteps: () => {
        reading = false;
      }
    };
    ReadableStreamDefaultReaderRead(reader, readRequest);
    return promiseResolvedWith(void 0);
  }
  function cancel1Algorithm(reason) {
    canceled1 = true;
    reason1 = reason;
    if (canceled2) {
      const compositeReason = CreateArrayFromList([reason1, reason2]);
      const cancelResult = ReadableStreamCancel(stream, compositeReason);
      resolveCancelPromise(cancelResult);
    }
    return cancelPromise;
  }
  function cancel2Algorithm(reason) {
    canceled2 = true;
    reason2 = reason;
    if (canceled1) {
      const compositeReason = CreateArrayFromList([reason1, reason2]);
      const cancelResult = ReadableStreamCancel(stream, compositeReason);
      resolveCancelPromise(cancelResult);
    }
    return cancelPromise;
  }
  function startAlgorithm() {
  }
  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);
  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);
  uponRejection(reader._closedPromise, (r3) => {
    ReadableStreamDefaultControllerError(branch1._readableStreamController, r3);
    ReadableStreamDefaultControllerError(branch2._readableStreamController, r3);
    if (!canceled1 || !canceled2) {
      resolveCancelPromise(void 0);
    }
  });
  return [branch1, branch2];
}
function ReadableByteStreamTee(stream) {
  let reader = AcquireReadableStreamDefaultReader(stream);
  let reading = false;
  let readAgainForBranch1 = false;
  let readAgainForBranch2 = false;
  let canceled1 = false;
  let canceled2 = false;
  let reason1;
  let reason2;
  let branch1;
  let branch2;
  let resolveCancelPromise;
  const cancelPromise = newPromise((resolve2) => {
    resolveCancelPromise = resolve2;
  });
  function forwardReaderError(thisReader) {
    uponRejection(thisReader._closedPromise, (r3) => {
      if (thisReader !== reader) {
        return;
      }
      ReadableByteStreamControllerError(branch1._readableStreamController, r3);
      ReadableByteStreamControllerError(branch2._readableStreamController, r3);
      if (!canceled1 || !canceled2) {
        resolveCancelPromise(void 0);
      }
    });
  }
  function pullWithDefaultReader() {
    if (IsReadableStreamBYOBReader(reader)) {
      ReadableStreamReaderGenericRelease(reader);
      reader = AcquireReadableStreamDefaultReader(stream);
      forwardReaderError(reader);
    }
    const readRequest = {
      _chunkSteps: (chunk) => {
        queueMicrotask(() => {
          readAgainForBranch1 = false;
          readAgainForBranch2 = false;
          const chunk1 = chunk;
          let chunk2 = chunk;
          if (!canceled1 && !canceled2) {
            try {
              chunk2 = CloneAsUint8Array(chunk);
            } catch (cloneE) {
              ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);
              ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);
              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
              return;
            }
          }
          if (!canceled1) {
            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);
          }
          if (!canceled2) {
            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);
          }
          reading = false;
          if (readAgainForBranch1) {
            pull1Algorithm();
          } else if (readAgainForBranch2) {
            pull2Algorithm();
          }
        });
      },
      _closeSteps: () => {
        reading = false;
        if (!canceled1) {
          ReadableByteStreamControllerClose(branch1._readableStreamController);
        }
        if (!canceled2) {
          ReadableByteStreamControllerClose(branch2._readableStreamController);
        }
        if (branch1._readableStreamController._pendingPullIntos.length > 0) {
          ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);
        }
        if (branch2._readableStreamController._pendingPullIntos.length > 0) {
          ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);
        }
        if (!canceled1 || !canceled2) {
          resolveCancelPromise(void 0);
        }
      },
      _errorSteps: () => {
        reading = false;
      }
    };
    ReadableStreamDefaultReaderRead(reader, readRequest);
  }
  function pullWithBYOBReader(view, forBranch2) {
    if (IsReadableStreamDefaultReader(reader)) {
      ReadableStreamReaderGenericRelease(reader);
      reader = AcquireReadableStreamBYOBReader(stream);
      forwardReaderError(reader);
    }
    const byobBranch = forBranch2 ? branch2 : branch1;
    const otherBranch = forBranch2 ? branch1 : branch2;
    const readIntoRequest = {
      _chunkSteps: (chunk) => {
        queueMicrotask(() => {
          readAgainForBranch1 = false;
          readAgainForBranch2 = false;
          const byobCanceled = forBranch2 ? canceled2 : canceled1;
          const otherCanceled = forBranch2 ? canceled1 : canceled2;
          if (!otherCanceled) {
            let clonedChunk;
            try {
              clonedChunk = CloneAsUint8Array(chunk);
            } catch (cloneE) {
              ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);
              ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);
              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
              return;
            }
            if (!byobCanceled) {
              ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
            }
            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
          } else if (!byobCanceled) {
            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
          }
          reading = false;
          if (readAgainForBranch1) {
            pull1Algorithm();
          } else if (readAgainForBranch2) {
            pull2Algorithm();
          }
        });
      },
      _closeSteps: (chunk) => {
        reading = false;
        const byobCanceled = forBranch2 ? canceled2 : canceled1;
        const otherCanceled = forBranch2 ? canceled1 : canceled2;
        if (!byobCanceled) {
          ReadableByteStreamControllerClose(byobBranch._readableStreamController);
        }
        if (!otherCanceled) {
          ReadableByteStreamControllerClose(otherBranch._readableStreamController);
        }
        if (chunk !== void 0) {
          if (!byobCanceled) {
            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
          }
          if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {
            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);
          }
        }
        if (!byobCanceled || !otherCanceled) {
          resolveCancelPromise(void 0);
        }
      },
      _errorSteps: () => {
        reading = false;
      }
    };
    ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
  }
  function pull1Algorithm() {
    if (reading) {
      readAgainForBranch1 = true;
      return promiseResolvedWith(void 0);
    }
    reading = true;
    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
    if (byobRequest === null) {
      pullWithDefaultReader();
    } else {
      pullWithBYOBReader(byobRequest._view, false);
    }
    return promiseResolvedWith(void 0);
  }
  function pull2Algorithm() {
    if (reading) {
      readAgainForBranch2 = true;
      return promiseResolvedWith(void 0);
    }
    reading = true;
    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
    if (byobRequest === null) {
      pullWithDefaultReader();
    } else {
      pullWithBYOBReader(byobRequest._view, true);
    }
    return promiseResolvedWith(void 0);
  }
  function cancel1Algorithm(reason) {
    canceled1 = true;
    reason1 = reason;
    if (canceled2) {
      const compositeReason = CreateArrayFromList([reason1, reason2]);
      const cancelResult = ReadableStreamCancel(stream, compositeReason);
      resolveCancelPromise(cancelResult);
    }
    return cancelPromise;
  }
  function cancel2Algorithm(reason) {
    canceled2 = true;
    reason2 = reason;
    if (canceled1) {
      const compositeReason = CreateArrayFromList([reason1, reason2]);
      const cancelResult = ReadableStreamCancel(stream, compositeReason);
      resolveCancelPromise(cancelResult);
    }
    return cancelPromise;
  }
  function startAlgorithm() {
    return;
  }
  branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);
  branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);
  forwardReaderError(reader);
  return [branch1, branch2];
}
function convertUnderlyingDefaultOrByteSource(source, context) {
  assertDictionary(source, context);
  const original = source;
  const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;
  const cancel = original === null || original === void 0 ? void 0 : original.cancel;
  const pull = original === null || original === void 0 ? void 0 : original.pull;
  const start3 = original === null || original === void 0 ? void 0 : original.start;
  const type = original === null || original === void 0 ? void 0 : original.type;
  return {
    autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),
    cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),
    pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),
    start: start3 === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start3, original, `${context} has member 'start' that`),
    type: type === void 0 ? void 0 : convertReadableStreamType(type, `${context} has member 'type' that`)
  };
}
function convertUnderlyingSourceCancelCallback(fn, original, context) {
  assertFunction(fn, context);
  return (reason) => promiseCall(fn, original, [reason]);
}
function convertUnderlyingSourcePullCallback(fn, original, context) {
  assertFunction(fn, context);
  return (controller) => promiseCall(fn, original, [controller]);
}
function convertUnderlyingSourceStartCallback(fn, original, context) {
  assertFunction(fn, context);
  return (controller) => reflectCall(fn, original, [controller]);
}
function convertReadableStreamType(type, context) {
  type = `${type}`;
  if (type !== "bytes") {
    throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);
  }
  return type;
}
function convertReaderOptions(options, context) {
  assertDictionary(options, context);
  const mode = options === null || options === void 0 ? void 0 : options.mode;
  return {
    mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)
  };
}
function convertReadableStreamReaderMode(mode, context) {
  mode = `${mode}`;
  if (mode !== "byob") {
    throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);
  }
  return mode;
}
function convertIteratorOptions(options, context) {
  assertDictionary(options, context);
  const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
  return { preventCancel: Boolean(preventCancel) };
}
function convertPipeOptions(options, context) {
  assertDictionary(options, context);
  const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;
  const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
  const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;
  const signal = options === null || options === void 0 ? void 0 : options.signal;
  if (signal !== void 0) {
    assertAbortSignal(signal, `${context} has member 'signal' that`);
  }
  return {
    preventAbort: Boolean(preventAbort),
    preventCancel: Boolean(preventCancel),
    preventClose: Boolean(preventClose),
    signal
  };
}
function assertAbortSignal(signal, context) {
  if (!isAbortSignal2(signal)) {
    throw new TypeError(`${context} is not an AbortSignal.`);
  }
}
function convertReadableWritablePair(pair, context) {
  assertDictionary(pair, context);
  const readable = pair === null || pair === void 0 ? void 0 : pair.readable;
  assertRequiredField(readable, "readable", "ReadableWritablePair");
  assertReadableStream(readable, `${context} has member 'readable' that`);
  const writable = pair === null || pair === void 0 ? void 0 : pair.writable;
  assertRequiredField(writable, "writable", "ReadableWritablePair");
  assertWritableStream(writable, `${context} has member 'writable' that`);
  return { readable, writable };
}
function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
  const stream = Object.create(ReadableStream2.prototype);
  InitializeReadableStream(stream);
  const controller = Object.create(ReadableStreamDefaultController.prototype);
  SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
  return stream;
}
function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
  const stream = Object.create(ReadableStream2.prototype);
  InitializeReadableStream(stream);
  const controller = Object.create(ReadableByteStreamController.prototype);
  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0);
  return stream;
}
function InitializeReadableStream(stream) {
  stream._state = "readable";
  stream._reader = void 0;
  stream._storedError = void 0;
  stream._disturbed = false;
}
function IsReadableStream(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_readableStreamController")) {
    return false;
  }
  return x3 instanceof ReadableStream2;
}
function IsReadableStreamLocked(stream) {
  if (stream._reader === void 0) {
    return false;
  }
  return true;
}
function ReadableStreamCancel(stream, reason) {
  stream._disturbed = true;
  if (stream._state === "closed") {
    return promiseResolvedWith(void 0);
  }
  if (stream._state === "errored") {
    return promiseRejectedWith(stream._storedError);
  }
  ReadableStreamClose(stream);
  const reader = stream._reader;
  if (reader !== void 0 && IsReadableStreamBYOBReader(reader)) {
    reader._readIntoRequests.forEach((readIntoRequest) => {
      readIntoRequest._closeSteps(void 0);
    });
    reader._readIntoRequests = new SimpleQueue();
  }
  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
  return transformPromiseWith(sourceCancelPromise, noop2);
}
function ReadableStreamClose(stream) {
  stream._state = "closed";
  const reader = stream._reader;
  if (reader === void 0) {
    return;
  }
  defaultReaderClosedPromiseResolve(reader);
  if (IsReadableStreamDefaultReader(reader)) {
    reader._readRequests.forEach((readRequest) => {
      readRequest._closeSteps();
    });
    reader._readRequests = new SimpleQueue();
  }
}
function ReadableStreamError(stream, e3) {
  stream._state = "errored";
  stream._storedError = e3;
  const reader = stream._reader;
  if (reader === void 0) {
    return;
  }
  defaultReaderClosedPromiseReject(reader, e3);
  if (IsReadableStreamDefaultReader(reader)) {
    reader._readRequests.forEach((readRequest) => {
      readRequest._errorSteps(e3);
    });
    reader._readRequests = new SimpleQueue();
  } else {
    reader._readIntoRequests.forEach((readIntoRequest) => {
      readIntoRequest._errorSteps(e3);
    });
    reader._readIntoRequests = new SimpleQueue();
  }
}
function streamBrandCheckException$1(name) {
  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);
}
function convertQueuingStrategyInit(init2, context) {
  assertDictionary(init2, context);
  const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
  assertRequiredField(highWaterMark, "highWaterMark", "QueuingStrategyInit");
  return {
    highWaterMark: convertUnrestrictedDouble(highWaterMark)
  };
}
function byteLengthBrandCheckException(name) {
  return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);
}
function IsByteLengthQueuingStrategy(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_byteLengthQueuingStrategyHighWaterMark")) {
    return false;
  }
  return x3 instanceof ByteLengthQueuingStrategy;
}
function countBrandCheckException(name) {
  return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);
}
function IsCountQueuingStrategy(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_countQueuingStrategyHighWaterMark")) {
    return false;
  }
  return x3 instanceof CountQueuingStrategy;
}
function convertTransformer(original, context) {
  assertDictionary(original, context);
  const flush = original === null || original === void 0 ? void 0 : original.flush;
  const readableType = original === null || original === void 0 ? void 0 : original.readableType;
  const start3 = original === null || original === void 0 ? void 0 : original.start;
  const transform3 = original === null || original === void 0 ? void 0 : original.transform;
  const writableType = original === null || original === void 0 ? void 0 : original.writableType;
  return {
    flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),
    readableType,
    start: start3 === void 0 ? void 0 : convertTransformerStartCallback(start3, original, `${context} has member 'start' that`),
    transform: transform3 === void 0 ? void 0 : convertTransformerTransformCallback(transform3, original, `${context} has member 'transform' that`),
    writableType
  };
}
function convertTransformerFlushCallback(fn, original, context) {
  assertFunction(fn, context);
  return (controller) => promiseCall(fn, original, [controller]);
}
function convertTransformerStartCallback(fn, original, context) {
  assertFunction(fn, context);
  return (controller) => reflectCall(fn, original, [controller]);
}
function convertTransformerTransformCallback(fn, original, context) {
  assertFunction(fn, context);
  return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
}
function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
  function startAlgorithm() {
    return startPromise;
  }
  function writeAlgorithm(chunk) {
    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
  }
  function abortAlgorithm(reason) {
    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
  }
  function closeAlgorithm() {
    return TransformStreamDefaultSinkCloseAlgorithm(stream);
  }
  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
  function pullAlgorithm() {
    return TransformStreamDefaultSourcePullAlgorithm(stream);
  }
  function cancelAlgorithm(reason) {
    TransformStreamErrorWritableAndUnblockWrite(stream, reason);
    return promiseResolvedWith(void 0);
  }
  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
  stream._backpressure = void 0;
  stream._backpressureChangePromise = void 0;
  stream._backpressureChangePromise_resolve = void 0;
  TransformStreamSetBackpressure(stream, true);
  stream._transformStreamController = void 0;
}
function IsTransformStream(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_transformStreamController")) {
    return false;
  }
  return x3 instanceof TransformStream;
}
function TransformStreamError(stream, e3) {
  ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e3);
  TransformStreamErrorWritableAndUnblockWrite(stream, e3);
}
function TransformStreamErrorWritableAndUnblockWrite(stream, e3) {
  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);
  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e3);
  if (stream._backpressure) {
    TransformStreamSetBackpressure(stream, false);
  }
}
function TransformStreamSetBackpressure(stream, backpressure) {
  if (stream._backpressureChangePromise !== void 0) {
    stream._backpressureChangePromise_resolve();
  }
  stream._backpressureChangePromise = newPromise((resolve2) => {
    stream._backpressureChangePromise_resolve = resolve2;
  });
  stream._backpressure = backpressure;
}
function IsTransformStreamDefaultController(x3) {
  if (!typeIsObject(x3)) {
    return false;
  }
  if (!Object.prototype.hasOwnProperty.call(x3, "_controlledTransformStream")) {
    return false;
  }
  return x3 instanceof TransformStreamDefaultController;
}
function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
  controller._controlledTransformStream = stream;
  stream._transformStreamController = controller;
  controller._transformAlgorithm = transformAlgorithm;
  controller._flushAlgorithm = flushAlgorithm;
}
function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer2) {
  const controller = Object.create(TransformStreamDefaultController.prototype);
  let transformAlgorithm = (chunk) => {
    try {
      TransformStreamDefaultControllerEnqueue(controller, chunk);
      return promiseResolvedWith(void 0);
    } catch (transformResultE) {
      return promiseRejectedWith(transformResultE);
    }
  };
  let flushAlgorithm = () => promiseResolvedWith(void 0);
  if (transformer2.transform !== void 0) {
    transformAlgorithm = (chunk) => transformer2.transform(chunk, controller);
  }
  if (transformer2.flush !== void 0) {
    flushAlgorithm = () => transformer2.flush(controller);
  }
  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
}
function TransformStreamDefaultControllerClearAlgorithms(controller) {
  controller._transformAlgorithm = void 0;
  controller._flushAlgorithm = void 0;
}
function TransformStreamDefaultControllerEnqueue(controller, chunk) {
  const stream = controller._controlledTransformStream;
  const readableController = stream._readable._readableStreamController;
  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {
    throw new TypeError("Readable side is not in a state that permits enqueue");
  }
  try {
    ReadableStreamDefaultControllerEnqueue(readableController, chunk);
  } catch (e3) {
    TransformStreamErrorWritableAndUnblockWrite(stream, e3);
    throw stream._readable._storedError;
  }
  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
  if (backpressure !== stream._backpressure) {
    TransformStreamSetBackpressure(stream, true);
  }
}
function TransformStreamDefaultControllerError(controller, e3) {
  TransformStreamError(controller._controlledTransformStream, e3);
}
function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
  const transformPromise = controller._transformAlgorithm(chunk);
  return transformPromiseWith(transformPromise, void 0, (r3) => {
    TransformStreamError(controller._controlledTransformStream, r3);
    throw r3;
  });
}
function TransformStreamDefaultControllerTerminate(controller) {
  const stream = controller._controlledTransformStream;
  const readableController = stream._readable._readableStreamController;
  ReadableStreamDefaultControllerClose(readableController);
  const error3 = new TypeError("TransformStream terminated");
  TransformStreamErrorWritableAndUnblockWrite(stream, error3);
}
function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
  const controller = stream._transformStreamController;
  if (stream._backpressure) {
    const backpressureChangePromise = stream._backpressureChangePromise;
    return transformPromiseWith(backpressureChangePromise, () => {
      const writable = stream._writable;
      const state = writable._state;
      if (state === "erroring") {
        throw writable._storedError;
      }
      return TransformStreamDefaultControllerPerformTransform(controller, chunk);
    });
  }
  return TransformStreamDefaultControllerPerformTransform(controller, chunk);
}
function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
  TransformStreamError(stream, reason);
  return promiseResolvedWith(void 0);
}
function TransformStreamDefaultSinkCloseAlgorithm(stream) {
  const readable = stream._readable;
  const controller = stream._transformStreamController;
  const flushPromise = controller._flushAlgorithm();
  TransformStreamDefaultControllerClearAlgorithms(controller);
  return transformPromiseWith(flushPromise, () => {
    if (readable._state === "errored") {
      throw readable._storedError;
    }
    ReadableStreamDefaultControllerClose(readable._readableStreamController);
  }, (r3) => {
    TransformStreamError(stream, r3);
    throw readable._storedError;
  });
}
function TransformStreamDefaultSourcePullAlgorithm(stream) {
  TransformStreamSetBackpressure(stream, false);
  return stream._backpressureChangePromise;
}
function defaultControllerBrandCheckException(name) {
  return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);
}
function streamBrandCheckException(name) {
  return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);
}
async function* toIterator2(parts, clone2 = true) {
  for (const part of parts) {
    if ("stream" in part) {
      yield* part.stream();
    } else if (ArrayBuffer.isView(part)) {
      if (clone2) {
        let position3 = part.byteOffset;
        const end = part.byteOffset + part.byteLength;
        while (position3 !== end) {
          const size = Math.min(end - position3, POOL_SIZE2);
          const chunk = part.buffer.slice(position3, position3 + size);
          position3 += chunk.byteLength;
          yield new Uint8Array(chunk);
        }
      } else {
        yield part;
      }
    } else {
      let position3 = 0, b2 = part;
      while (position3 !== b2.size) {
        const chunk = b2.slice(position3, Math.min(b2.size, position3 + POOL_SIZE2));
        const buffer3 = await chunk.arrayBuffer();
        position3 += buffer3.byteLength;
        yield new Uint8Array(buffer3);
      }
    }
  }
}
function requestIdleCallback(callback) {
  if (!INTERNAL$1.pool.size) {
    (0, import_node_timers.setTimeout)(() => {
      const next = __performance_now();
      for (const func2 of INTERNAL$1.pool.values()) {
        func2(next);
      }
      INTERNAL$1.pool.clear();
    }, 1e3 / 16);
  }
  const func = __function_bind(callback, void 0);
  const tick = ++INTERNAL$1.tick;
  INTERNAL$1.pool.set(tick, func);
  return tick;
}
function cancelIdleCallback(requestId) {
  const timeout = INTERNAL$1.pool.get(requestId);
  if (timeout) {
    (0, import_node_timers.clearTimeout)(timeout);
    INTERNAL$1.pool.delete(requestId);
  }
}
function u(u3, D2) {
  for (var t3 = 0; t3 < D2.length; t3++) {
    var F3 = D2[t3];
    F3.enumerable = F3.enumerable || false, F3.configurable = true, "value" in F3 && (F3.writable = true), Object.defineProperty(u3, F3.key, F3);
  }
}
function D(D2, t3, F3) {
  return t3 && u(D2.prototype, t3), F3 && u(D2, F3), D2;
}
function t2(u3, D2) {
  (D2 == null || D2 > u3.length) && (D2 = u3.length);
  for (var t3 = 0, F3 = new Array(D2); t3 < D2; t3++)
    F3[t3] = u3[t3];
  return F3;
}
function F2(u3, D2) {
  var F3 = typeof Symbol != "undefined" && u3[Symbol.iterator] || u3["@@iterator"];
  if (F3)
    return (F3 = F3.call(u3)).next.bind(F3);
  if (Array.isArray(u3) || (F3 = function(u4, D3) {
    if (u4) {
      if (typeof u4 == "string")
        return t2(u4, D3);
      var F4 = Object.prototype.toString.call(u4).slice(8, -1);
      return F4 === "Object" && u4.constructor && (F4 = u4.constructor.name), F4 === "Map" || F4 === "Set" ? Array.from(u4) : F4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(F4) ? t2(u4, D3) : void 0;
    }
  }(u3)) || D2 && u3 && typeof u3.length == "number") {
    F3 && (u3 = F3);
    var e3 = 0;
    return function() {
      return e3 >= u3.length ? { done: true } : { done: false, value: u3[e3++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function A2(u3, D2) {
  return (D2 ? /^[\x00-\xFF]*$/ : /^[\x00-\x7F]*$/).test(u3);
}
function E(u3, D2) {
  D2 === void 0 && (D2 = false);
  for (var t3 = [], F3 = 0; F3 < u3.length; ) {
    var E2 = u3[F3], n2 = function(e3) {
      if (!D2)
        throw new TypeError(e3);
      t3.push({ type: "INVALID_CHAR", index: F3, value: u3[F3++] });
    };
    if (E2 !== "*")
      if (E2 !== "+" && E2 !== "?")
        if (E2 !== "\\")
          if (E2 !== "{")
            if (E2 !== "}")
              if (E2 !== ":")
                if (E2 !== "(")
                  t3.push({ type: "CHAR", index: F3, value: u3[F3++] });
                else {
                  var r3 = 1, i3 = "", s4 = F3 + 1, a2 = false;
                  if (u3[s4] === "?") {
                    n2('Pattern cannot start with "?" at ' + s4);
                    continue;
                  }
                  for (; s4 < u3.length; ) {
                    if (!A2(u3[s4], false)) {
                      n2("Invalid character '" + u3[s4] + "' at " + s4 + "."), a2 = true;
                      break;
                    }
                    if (u3[s4] !== "\\") {
                      if (u3[s4] === ")") {
                        if (--r3 == 0) {
                          s4++;
                          break;
                        }
                      } else if (u3[s4] === "(" && (r3++, u3[s4 + 1] !== "?")) {
                        n2("Capturing groups are not allowed at " + s4), a2 = true;
                        break;
                      }
                      i3 += u3[s4++];
                    } else
                      i3 += u3[s4++] + u3[s4++];
                  }
                  if (a2)
                    continue;
                  if (r3) {
                    n2("Unbalanced pattern at " + F3);
                    continue;
                  }
                  if (!i3) {
                    n2("Missing pattern at " + F3);
                    continue;
                  }
                  t3.push({ type: "PATTERN", index: F3, value: i3 }), F3 = s4;
                }
              else {
                for (var B2 = "", o2 = F3 + 1; o2 < u3.length; ) {
                  var h4 = u3.substr(o2, 1);
                  if (!(o2 === F3 + 1 && e2.test(h4) || o2 !== F3 + 1 && C.test(h4)))
                    break;
                  B2 += u3[o2++];
                }
                if (!B2) {
                  n2("Missing parameter name at " + F3);
                  continue;
                }
                t3.push({ type: "NAME", index: F3, value: B2 }), F3 = o2;
              }
            else
              t3.push({ type: "CLOSE", index: F3, value: u3[F3++] });
          else
            t3.push({ type: "OPEN", index: F3, value: u3[F3++] });
        else
          t3.push({ type: "ESCAPED_CHAR", index: F3++, value: u3[F3++] });
      else
        t3.push({ type: "MODIFIER", index: F3, value: u3[F3++] });
    else
      t3.push({ type: "ASTERISK", index: F3, value: u3[F3++] });
  }
  return t3.push({ type: "END", index: F3, value: "" }), t3;
}
function n(u3, D2) {
  D2 === void 0 && (D2 = {});
  for (var t3 = E(u3), F3 = D2.prefixes, e3 = F3 === void 0 ? "./" : F3, C2 = "[^" + r2(D2.delimiter || "/#?") + "]+?", A3 = [], n2 = 0, i3 = 0, s4 = "", a2 = /* @__PURE__ */ new Set(), B2 = function(u4) {
    if (i3 < t3.length && t3[i3].type === u4)
      return t3[i3++].value;
  }, o2 = function() {
    return B2("MODIFIER") || B2("ASTERISK");
  }, h4 = function(u4) {
    var D3 = B2(u4);
    if (D3 !== void 0)
      return D3;
    var F4 = t3[i3];
    throw new TypeError("Unexpected " + F4.type + " at " + F4.index + ", expected " + u4);
  }, p3 = function() {
    for (var u4, D3 = ""; u4 = B2("CHAR") || B2("ESCAPED_CHAR"); )
      D3 += u4;
    return D3;
  }, c2 = D2.encodePart || function(u4) {
    return u4;
  }; i3 < t3.length; ) {
    var f4 = B2("CHAR"), l2 = B2("NAME"), m3 = B2("PATTERN");
    if (l2 || m3 || !B2("ASTERISK") || (m3 = ".*"), l2 || m3) {
      var d2 = f4 || "";
      e3.indexOf(d2) === -1 && (s4 += d2, d2 = ""), s4 && (A3.push(c2(s4)), s4 = "");
      var g3 = l2 || n2++;
      if (a2.has(g3))
        throw new TypeError("Duplicate name '" + g3 + "'.");
      a2.add(g3), A3.push({ name: g3, prefix: c2(d2), suffix: "", pattern: m3 || C2, modifier: o2() || "" });
    } else {
      var x3 = f4 || B2("ESCAPED_CHAR");
      if (x3)
        s4 += x3;
      else if (B2("OPEN")) {
        var S3 = p3(), v2 = B2("NAME") || "", y2 = B2("PATTERN") || "";
        v2 || y2 || !B2("ASTERISK") || (y2 = ".*");
        var R2 = p3();
        h4("CLOSE");
        var k2 = o2() || "";
        if (!v2 && !y2 && !k2) {
          s4 += S3;
          continue;
        }
        if (!v2 && !y2 && !S3)
          continue;
        s4 && (A3.push(c2(s4)), s4 = ""), A3.push({ name: v2 || (y2 ? n2++ : ""), pattern: v2 && !y2 ? C2 : y2, prefix: c2(S3), suffix: c2(R2), modifier: k2 });
      } else
        s4 && (A3.push(c2(s4)), s4 = ""), h4("END");
    }
  }
  return A3;
}
function r2(u3) {
  return u3.replace(/([.+*?^${}()[\]|/\\])/g, "\\$1");
}
function i2(u3) {
  return u3 && u3.sensitive ? "u" : "ui";
}
function s2(u3, D2, t3) {
  t3 === void 0 && (t3 = {});
  for (var e3, C2 = t3.strict, A3 = C2 !== void 0 && C2, E2 = t3.start, n2 = E2 === void 0 || E2, s4 = t3.end, a2 = s4 === void 0 || s4, B2 = t3.encode, o2 = B2 === void 0 ? function(u4) {
    return u4;
  } : B2, h4 = "[" + r2(t3.endsWith || "") + "]|$", p3 = "[" + r2(t3.delimiter || "/#?") + "]", c2 = n2 ? "^" : "", f4 = F2(u3); !(e3 = f4()).done; ) {
    var l2 = e3.value;
    if (typeof l2 == "string")
      c2 += r2(o2(l2));
    else {
      var m3 = r2(o2(l2.prefix)), d2 = r2(o2(l2.suffix));
      l2.pattern ? (D2 && D2.push(l2), c2 += m3 || d2 ? l2.modifier === "+" || l2.modifier === "*" ? "(?:" + m3 + "((?:" + l2.pattern + ")(?:" + d2 + m3 + "(?:" + l2.pattern + "))*)" + d2 + ")" + (l2.modifier === "*" ? "?" : "") : "(?:" + m3 + "(" + l2.pattern + ")" + d2 + ")" + l2.modifier : l2.modifier === "+" || l2.modifier === "*" ? "((?:" + l2.pattern + ")" + l2.modifier + ")" : "(" + l2.pattern + ")" + l2.modifier) : c2 += "(?:" + m3 + d2 + ")" + l2.modifier;
    }
  }
  if (a2)
    A3 || (c2 += p3 + "?"), c2 += t3.endsWith ? "(?=" + h4 + ")" : "$";
  else {
    var g3 = u3[u3.length - 1], x3 = typeof g3 == "string" ? p3.indexOf(g3[g3.length - 1]) > -1 : g3 === void 0;
    A3 || (c2 += "(?:" + p3 + "(?=" + h4 + "))?"), x3 || (c2 += "(?=" + p3 + "|" + h4 + ")");
  }
  return new RegExp(c2, i2(t3));
}
function a(u3, D2, t3) {
  return u3 instanceof RegExp ? function(u4, D3) {
    if (!D3)
      return u4;
    for (var t4 = /\((?:\?<(.*?)>)?(?!\?)/g, F3 = 0, e3 = t4.exec(u4.source); e3; )
      D3.push({ name: e3[1] || F3++, prefix: "", suffix: "", modifier: "", pattern: "" }), e3 = t4.exec(u4.source);
    return u4;
  }(u3, D2) : Array.isArray(u3) ? function(u4, D3, t4) {
    var F3 = u4.map(function(u5) {
      return a(u5, D3, t4).source;
    });
    return new RegExp("(?:" + F3.join("|") + ")", i2(t4));
  }(u3, D2, t3) : function(u4, D3, t4) {
    return s2(n(u4, t4), D3, t4);
  }(u3, D2, t3);
}
function p(u3, D2) {
  return u3.startsWith(D2) ? u3.substring(D2.length, u3.length) : u3;
}
function c(u3) {
  return !(!u3 || u3.length < 2 || u3[0] !== "[" && (u3[0] !== "\\" && u3[0] !== "{" || u3[1] !== "["));
}
function m2(u3) {
  if (!u3)
    return true;
  for (var D2, t3 = F2(l); !(D2 = t3()).done; )
    if (u3.test(D2.value))
      return true;
  return false;
}
function d(u3) {
  switch (u3) {
    case "ws":
    case "http":
      return "80";
    case "wws":
    case "https":
      return "443";
    case "ftp":
      return "21";
    default:
      return "";
  }
}
function g(u3) {
  if (u3 === "")
    return u3;
  if (/^[-+.A-Za-z0-9]*$/.test(u3))
    return u3.toLowerCase();
  throw new TypeError("Invalid protocol '" + u3 + "'.");
}
function x2(u3) {
  if (u3 === "")
    return u3;
  var D2 = new URL("https://example.com");
  return D2.username = u3, D2.username;
}
function S2(u3) {
  if (u3 === "")
    return u3;
  var D2 = new URL("https://example.com");
  return D2.password = u3, D2.password;
}
function v(u3) {
  if (u3 === "")
    return u3;
  if (/[\t\n\r #%/:<>?@[\]^\\|]/g.test(u3))
    throw new TypeError("Invalid hostname '" + u3 + "'");
  var D2 = new URL("https://example.com");
  return D2.hostname = u3, D2.hostname;
}
function y(u3) {
  if (u3 === "")
    return u3;
  if (/[^0-9a-fA-F[\]:]/g.test(u3))
    throw new TypeError("Invalid IPv6 hostname '" + u3 + "'");
  return u3.toLowerCase();
}
function R(u3) {
  if (u3 === "")
    return u3;
  if (/^[0-9]*$/.test(u3) && parseInt(u3) <= 65535)
    return u3;
  throw new TypeError("Invalid port '" + u3 + "'.");
}
function k(u3) {
  if (u3 === "")
    return u3;
  var D2 = new URL("https://example.com");
  return D2.pathname = u3[0] !== "/" ? "/-" + u3 : u3, u3[0] !== "/" ? D2.pathname.substring(2, D2.pathname.length) : D2.pathname;
}
function w(u3) {
  return u3 === "" ? u3 : new URL("data:" + u3).pathname;
}
function P(u3) {
  if (u3 === "")
    return u3;
  var D2 = new URL("https://example.com");
  return D2.search = u3, D2.search.substring(1, D2.search.length);
}
function T(u3) {
  if (u3 === "")
    return u3;
  var D2 = new URL("https://example.com");
  return D2.hash = u3, D2.hash.substring(1, D2.hash.length);
}
function O(u3, D2) {
  if (typeof u3 != "string")
    throw new TypeError("parameter 1 is not of type 'string'.");
  var t3 = new URL(u3, D2);
  return { protocol: t3.protocol.substring(0, t3.protocol.length - 1), username: t3.username, password: t3.password, hostname: t3.hostname, port: t3.port, pathname: t3.pathname, search: t3.search != "" ? t3.search.substring(1, t3.search.length) : void 0, hash: t3.hash != "" ? t3.hash.substring(1, t3.hash.length) : void 0 };
}
function H(u3, D2, t3) {
  var F3;
  if (typeof D2.baseURL == "string")
    try {
      F3 = new URL(D2.baseURL), u3.protocol = F3.protocol ? F3.protocol.substring(0, F3.protocol.length - 1) : "", u3.username = F3.username, u3.password = F3.password, u3.hostname = F3.hostname, u3.port = F3.port, u3.pathname = F3.pathname, u3.search = F3.search ? F3.search.substring(1, F3.search.length) : "", u3.hash = F3.hash ? F3.hash.substring(1, F3.hash.length) : "";
    } catch (u4) {
      throw new TypeError("invalid baseURL '" + D2.baseURL + "'.");
    }
  if (typeof D2.protocol == "string" && (u3.protocol = function(u4, D3) {
    var t4;
    return u4 = (t4 = u4).endsWith(":") ? t4.substr(0, t4.length - ":".length) : t4, D3 || u4 === "" ? u4 : g(u4);
  }(D2.protocol, t3)), typeof D2.username == "string" && (u3.username = function(u4, D3) {
    if (D3 || u4 === "")
      return u4;
    var t4 = new URL("https://example.com");
    return t4.username = u4, t4.username;
  }(D2.username, t3)), typeof D2.password == "string" && (u3.password = function(u4, D3) {
    if (D3 || u4 === "")
      return u4;
    var t4 = new URL("https://example.com");
    return t4.password = u4, t4.password;
  }(D2.password, t3)), typeof D2.hostname == "string" && (u3.hostname = function(u4, D3) {
    return D3 || u4 === "" ? u4 : c(u4) ? y(u4) : v(u4);
  }(D2.hostname, t3)), typeof D2.port == "string" && (u3.port = function(u4, D3, t4) {
    return d(D3) === u4 && (u4 = ""), t4 || u4 === "" ? u4 : R(u4);
  }(D2.port, u3.protocol, t3)), typeof D2.pathname == "string") {
    if (u3.pathname = D2.pathname, F3 && !function(u4, D3) {
      return !(!u4.length || u4[0] !== "/" && (!D3 || u4.length < 2 || u4[0] != "\\" && u4[0] != "{" || u4[1] != "/"));
    }(u3.pathname, t3)) {
      var e3 = F3.pathname.lastIndexOf("/");
      e3 >= 0 && (u3.pathname = F3.pathname.substring(0, e3 + 1) + u3.pathname);
    }
    u3.pathname = function(u4, D3, t4) {
      if (t4 || u4 === "")
        return u4;
      if (D3 && !l.includes(D3))
        return new URL(D3 + ":" + u4).pathname;
      var F4 = u4[0] == "/";
      return u4 = new URL(F4 ? u4 : "/-" + u4, "https://example.com").pathname, F4 || (u4 = u4.substring(2, u4.length)), u4;
    }(u3.pathname, u3.protocol, t3);
  }
  return typeof D2.search == "string" && (u3.search = function(u4, D3) {
    if (u4 = p(u4, "?"), D3 || u4 === "")
      return u4;
    var t4 = new URL("https://example.com");
    return t4.search = u4, t4.search ? t4.search.substring(1, t4.search.length) : "";
  }(D2.search, t3)), typeof D2.hash == "string" && (u3.hash = function(u4, D3) {
    if (u4 = p(u4, "#"), D3 || u4 === "")
      return u4;
    var t4 = new URL("https://example.com");
    return t4.hash = u4, t4.hash ? t4.hash.substring(1, t4.hash.length) : "";
  }(D2.hash, t3)), u3;
}
function N(u3) {
  return u3.replace(/([+*?:{}()\\])/g, "\\$1");
}
function L(u3, D2) {
  for (var t3 = "[^" + (D2.delimiter || "/#?").replace(/([.+*?^${}()[\]|/\\])/g, "\\$1") + "]+?", F3 = /(?:[\$0-9A-Z_a-z\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05EF-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u07FD\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u08D3-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u09FE\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D81-\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1878\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CD0-\u1CD2\u1CD4-\u1CFA\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA827\uA82C\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD27\uDD30-\uDD39\uDE80-\uDEA9\uDEAB\uDEAC\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF50\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD44-\uDD47\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDC9-\uDDCC\uDDCE-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3B-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC5E-\uDC61\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDC00-\uDC3A\uDCA0-\uDCE9\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD35\uDD37\uDD38\uDD3B-\uDD43\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD7\uDDDA-\uDDE1\uDDE3\uDDE4\uDE00-\uDE3E\uDE47\uDE50-\uDE99\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD8E\uDD90\uDD91\uDD93-\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF6\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF4F-\uDF87\uDF8F-\uDF9F\uDFE0\uDFE1\uDFE3\uDFE4\uDFF0\uDFF1]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD00-\uDD2C\uDD30-\uDD3D\uDD40-\uDD49\uDD4E\uDEC0-\uDEF9]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4B\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]|\uDB40[\uDD00-\uDDEF])/, e3 = "", C2 = 0; C2 < u3.length; ++C2) {
    var A3 = u3[C2], E2 = C2 > 0 ? u3[C2 - 1] : null, n2 = C2 < u3.length - 1 ? u3[C2 + 1] : null;
    if (typeof A3 != "string")
      if (A3.pattern !== "") {
        var r3 = typeof A3.name != "number", i3 = D2.prefixes !== void 0 ? D2.prefixes : "./", s4 = A3.suffix !== "" || A3.prefix !== "" && (A3.prefix.length !== 1 || !i3.includes(A3.prefix));
        s4 || !r3 || A3.pattern !== t3 || A3.modifier !== "" || !n2 || n2.prefix || n2.suffix || (s4 = typeof n2 == "string" ? F3.test(n2.length > 0 ? n2[0] : "") : typeof n2.name == "number"), !s4 && A3.prefix === "" && E2 && typeof E2 == "string" && E2.length > 0 && (s4 = i3.includes(E2[E2.length - 1])), s4 && (e3 += "{"), e3 += N(A3.prefix), r3 && (e3 += ":" + A3.name), A3.pattern === ".*" ? e3 += r3 || E2 && typeof E2 != "string" && !E2.modifier && !s4 && A3.prefix === "" ? "(.*)" : "*" : A3.pattern === t3 ? r3 || (e3 += "(" + t3 + ")") : e3 += "(" + A3.pattern + ")", A3.pattern === t3 && r3 && A3.suffix !== "" && F3.test(A3.suffix[0]) && (e3 += "\\"), e3 += N(A3.suffix), s4 && (e3 += "}"), e3 += A3.modifier;
      } else {
        if (A3.modifier === "") {
          e3 += N(A3.prefix);
          continue;
        }
        e3 += "{" + N(A3.prefix) + "}" + A3.modifier;
      }
    else
      e3 += N(A3);
  }
  return e3;
}
function setTimeout2(callback, delay = 0, ...args) {
  const func = __function_bind(callback, globalThis);
  const tick = ++INTERNAL.tick;
  const timeout = (0, import_node_timers.setTimeout)(func, delay, ...args);
  INTERNAL.pool.set(tick, timeout);
  return tick;
}
function clearTimeout2(timeoutId) {
  const timeout = INTERNAL.pool.get(timeoutId);
  if (timeout) {
    (0, import_node_timers.clearTimeout)(timeout);
    INTERNAL.pool.delete(timeoutId);
  }
}
function Image() {
  INTERNALS4.set(this, {
    attributes: {},
    localName: "img",
    innerHTML: "",
    shadowRoot: null,
    shadowInit: null
  });
}
function alert(...messages2) {
  console.log(...messages2);
}
var import_node_perf_hooks, import_node_timers, import_node_stream3, __function_bind, __object_hasOwnProperty, __object_isPrototypeOf, __performance_now, __string_escapeRegExp, INTERNALS4, internalsOf, allowStringTag, pathToPosix, DOMException3, currentErrorHandler, currentWarnHandler, Warning, InitEventWasCalledWhileDispatching, FalsyWasAssignedToCancelBubble, TruthyWasAssignedToReturnValue, NonCancelableEventWasCanceled, CanceledInPassiveListener, EventListenerWasDuplicated, OptionWasIgnored, InvalidEventListener, InvalidAttributeHandler, Event, NONE, CAPTURING_PHASE, AT_TARGET, BUBBLING_PHASE, internalDataMap, keys$1, EventWrapper, internalDataMap$1, wrapperClassCache, EventTarget, internalDataMap$2, keys$1$1, AbortSignal, abortedFlags, AbortController2, signals, INTERNAL$2, Node, DocumentFragment, ShadowRoot, NodeFilter$1, NodeIterator$1, CharacterData, Comment, Text, SymbolPolyfill, rethrowAssertionErrorRejection, originalPromise, originalPromiseThen, originalPromiseResolve, originalPromiseReject, QUEUE_MAX_ARRAY_SIZE, SimpleQueue, AbortSteps, ErrorSteps, CancelSteps, PullSteps, NumberIsFinite, MathTrunc, ReadableStreamDefaultReader, ReadableStreamAsyncIteratorImpl, ReadableStreamAsyncIteratorPrototype, NumberIsNaN, ReadableStreamBYOBRequest, ReadableByteStreamController, ReadableStreamBYOBReader, WritableStream, WritableStreamDefaultWriter, closeSentinel, WritableStreamDefaultController, ReadableStreamDefaultController, ReadableStream2, byteLengthSizeFunction, ByteLengthQueuingStrategy, countSizeFunction, CountQueuingStrategy, TransformStream, TransformStreamDefaultController, POOL_SIZE$1, POOL_SIZE2, _parts2, _type2, _size2, _endings2, _a4, _Blob2, Blob2, _lastModified2, _name2, _a5, _File2, File2, CustomEvent, TreeWalker, INTERNAL$1, fetch3, t$1, i$1, h$1, m$1, f$1, x$1, _d2, _a6, FormData2, e2, C, B, o, h2, f3, l, b, I, U, INTERNAL, PRIMITIVE, ARRAY, OBJECT, DATE, REGEXP, MAP, SET, ERROR, BIGINT, env, deserializer, deserialize, EMPTY, toString, keys, typeOf, shouldSkip, serializer, serialize, structuredClone, ImageData, asNumber, CanvasRenderingContext2D, __createCanvasRenderingContext2D, StyleSheet, CSSStyleSheet, CustomElementRegistry, initCustomElementRegistry, Element2, HTMLElement2, HTMLBodyElement, HTMLDivElement, HTMLHeadElement, HTMLHtmlElement, HTMLSpanElement, HTMLStyleElement, HTMLTemplateElement, HTMLUnknownElement, Document, HTMLDocument, initDocument, HTMLCanvasElement, HTMLImageElement, IntersectionObserver, MutationObserver, ResizeObserver, MediaQueryList, initMediaQueryList, OffscreenCanvas, getImageType, Storage, getStringOrNull, initStorage, Window, initWindow, hasOwn, initObject, any, initPromise, at, initRelativeIndexingMethod, replaceAll, initString, exclusionsForHTMLElement, exclusionsForElement, exclusionsForDocument, exclusionsForNode, exclusionsForEventTarget, exclusionsForEvent, exclusions, inheritence, polyfill;
var init_mod = __esm({
  "node_modules/@astrojs/webapi/mod.js"() {
    import_node_perf_hooks = require("perf_hooks");
    import_node_timers = require("timers");
    init_src();
    import_node_stream3 = __toESM(require("stream"), 1);
    __function_bind = Function.bind.bind(Function.call);
    Function.call.bind(Function.call);
    __object_hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);
    Function.call.bind(Object.prototype.toString);
    __object_isPrototypeOf = Function.call.bind(Object.prototype.isPrototypeOf);
    __performance_now = import_node_perf_hooks.performance.now;
    __string_escapeRegExp = (value) => value.replace(/[\\^$*+?.()|[\]{}]/g, "\\$&");
    INTERNALS4 = /* @__PURE__ */ new WeakMap();
    internalsOf = (target, className, propName) => {
      const internals = INTERNALS4.get(target);
      if (!internals)
        throw new TypeError(`${className}.${propName} can only be used on instances of ${className}`);
      return internals;
    };
    allowStringTag = (value) => value.prototype[Symbol.toStringTag] = value.name;
    pathToPosix = (pathname) => String(pathname == null ? "" : pathname).replace(/\\+/g, "/").replace(/^(?=[A-Za-z]:\/)/, "/").replace(/%/g, "%25").replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/\t/g, "%09");
    DOMException3 = class extends Error {
      constructor(message = "", name = "Error") {
        super(message);
        this.code = 0;
        this.name = name;
      }
    };
    DOMException3.INDEX_SIZE_ERR = 1;
    DOMException3.DOMSTRING_SIZE_ERR = 2;
    DOMException3.HIERARCHY_REQUEST_ERR = 3;
    DOMException3.WRONG_DOCUMENT_ERR = 4;
    DOMException3.INVALID_CHARACTER_ERR = 5;
    DOMException3.NO_DATA_ALLOWED_ERR = 6;
    DOMException3.NO_MODIFICATION_ALLOWED_ERR = 7;
    DOMException3.NOT_FOUND_ERR = 8;
    DOMException3.NOT_SUPPORTED_ERR = 9;
    DOMException3.INUSE_ATTRIBUTE_ERR = 10;
    DOMException3.INVALID_STATE_ERR = 11;
    DOMException3.SYNTAX_ERR = 12;
    DOMException3.INVALID_MODIFICATION_ERR = 13;
    DOMException3.NAMESPACE_ERR = 14;
    DOMException3.INVALID_ACCESS_ERR = 15;
    DOMException3.VALIDATION_ERR = 16;
    DOMException3.TYPE_MISMATCH_ERR = 17;
    DOMException3.SECURITY_ERR = 18;
    DOMException3.NETWORK_ERR = 19;
    DOMException3.ABORT_ERR = 20;
    DOMException3.URL_MISMATCH_ERR = 21;
    DOMException3.QUOTA_EXCEEDED_ERR = 22;
    DOMException3.TIMEOUT_ERR = 23;
    DOMException3.INVALID_NODE_TYPE_ERR = 24;
    DOMException3.DATA_CLONE_ERR = 25;
    allowStringTag(DOMException3);
    Warning = class {
      constructor(code2, message) {
        this.code = code2;
        this.message = message;
      }
      warn(...args) {
        var _a8;
        try {
          if (currentWarnHandler)
            ;
          const stack = ((_a8 = new Error().stack) !== null && _a8 !== void 0 ? _a8 : "").replace(/^(?:.+?\n){2}/gu, "\n");
          console.warn(this.message, ...args, stack);
        } catch (_b) {
        }
      }
    };
    InitEventWasCalledWhileDispatching = new Warning("W01", "Unable to initialize event under dispatching.");
    FalsyWasAssignedToCancelBubble = new Warning("W02", "Assigning any falsy value to 'cancelBubble' property has no effect.");
    TruthyWasAssignedToReturnValue = new Warning("W03", "Assigning any truthy value to 'returnValue' property has no effect.");
    NonCancelableEventWasCanceled = new Warning("W04", "Unable to preventDefault on non-cancelable events.");
    CanceledInPassiveListener = new Warning("W05", "Unable to preventDefault inside passive event listener invocation.");
    EventListenerWasDuplicated = new Warning("W06", "An event listener wasn't added because it has been added already: %o, %o");
    OptionWasIgnored = new Warning("W07", "The %o option value was abandoned because the event listener wasn't added as duplicated.");
    InvalidEventListener = new Warning("W08", "The 'callback' argument must be a function or an object that has 'handleEvent' method: %o");
    InvalidAttributeHandler = new Warning("W09", "Event attribute handler must be a function: %o");
    Event = class {
      static get NONE() {
        return NONE;
      }
      static get CAPTURING_PHASE() {
        return CAPTURING_PHASE;
      }
      static get AT_TARGET() {
        return AT_TARGET;
      }
      static get BUBBLING_PHASE() {
        return BUBBLING_PHASE;
      }
      constructor(type, eventInitDict) {
        Object.defineProperty(this, "isTrusted", {
          value: false,
          enumerable: true
        });
        const opts = eventInitDict !== null && eventInitDict !== void 0 ? eventInitDict : {};
        internalDataMap.set(this, {
          type: String(type),
          bubbles: Boolean(opts.bubbles),
          cancelable: Boolean(opts.cancelable),
          composed: Boolean(opts.composed),
          target: null,
          currentTarget: null,
          stopPropagationFlag: false,
          stopImmediatePropagationFlag: false,
          canceledFlag: false,
          inPassiveListenerFlag: false,
          dispatchFlag: false,
          timeStamp: Date.now()
        });
      }
      get type() {
        return $(this).type;
      }
      get target() {
        return $(this).target;
      }
      get srcElement() {
        return $(this).target;
      }
      get currentTarget() {
        return $(this).currentTarget;
      }
      composedPath() {
        const currentTarget = $(this).currentTarget;
        if (currentTarget) {
          return [currentTarget];
        }
        return [];
      }
      get NONE() {
        return NONE;
      }
      get CAPTURING_PHASE() {
        return CAPTURING_PHASE;
      }
      get AT_TARGET() {
        return AT_TARGET;
      }
      get BUBBLING_PHASE() {
        return BUBBLING_PHASE;
      }
      get eventPhase() {
        return $(this).dispatchFlag ? 2 : 0;
      }
      stopPropagation() {
        $(this).stopPropagationFlag = true;
      }
      get cancelBubble() {
        return $(this).stopPropagationFlag;
      }
      set cancelBubble(value) {
        if (value) {
          $(this).stopPropagationFlag = true;
        } else {
          FalsyWasAssignedToCancelBubble.warn();
        }
      }
      stopImmediatePropagation() {
        const data3 = $(this);
        data3.stopPropagationFlag = data3.stopImmediatePropagationFlag = true;
      }
      get bubbles() {
        return $(this).bubbles;
      }
      get cancelable() {
        return $(this).cancelable;
      }
      get returnValue() {
        return !$(this).canceledFlag;
      }
      set returnValue(value) {
        if (!value) {
          setCancelFlag($(this));
        } else {
          TruthyWasAssignedToReturnValue.warn();
        }
      }
      preventDefault() {
        setCancelFlag($(this));
      }
      get defaultPrevented() {
        return $(this).canceledFlag;
      }
      get composed() {
        return $(this).composed;
      }
      get isTrusted() {
        return false;
      }
      get timeStamp() {
        return $(this).timeStamp;
      }
      initEvent(type, bubbles = false, cancelable = false) {
        const data3 = $(this);
        if (data3.dispatchFlag) {
          InitEventWasCalledWhileDispatching.warn();
          return;
        }
        internalDataMap.set(this, __spreadProps(__spreadValues({}, data3), {
          type: String(type),
          bubbles: Boolean(bubbles),
          cancelable: Boolean(cancelable),
          target: null,
          currentTarget: null,
          stopPropagationFlag: false,
          stopImmediatePropagationFlag: false,
          canceledFlag: false
        }));
      }
    };
    NONE = 0;
    CAPTURING_PHASE = 1;
    AT_TARGET = 2;
    BUBBLING_PHASE = 3;
    internalDataMap = /* @__PURE__ */ new WeakMap();
    Object.defineProperty(Event, "NONE", { enumerable: true });
    Object.defineProperty(Event, "CAPTURING_PHASE", { enumerable: true });
    Object.defineProperty(Event, "AT_TARGET", { enumerable: true });
    Object.defineProperty(Event, "BUBBLING_PHASE", { enumerable: true });
    keys$1 = Object.getOwnPropertyNames(Event.prototype);
    for (let i3 = 0; i3 < keys$1.length; ++i3) {
      if (keys$1[i3] === "constructor") {
        continue;
      }
      Object.defineProperty(Event.prototype, keys$1[i3], { enumerable: true });
    }
    EventWrapper = class extends Event {
      static wrap(event) {
        return new (getWrapperClassOf(event))(event);
      }
      constructor(event) {
        super(event.type, {
          bubbles: event.bubbles,
          cancelable: event.cancelable,
          composed: event.composed
        });
        if (event.cancelBubble) {
          super.stopPropagation();
        }
        if (event.defaultPrevented) {
          super.preventDefault();
        }
        internalDataMap$1.set(this, { original: event });
        const keys3 = Object.keys(event);
        for (let i3 = 0; i3 < keys3.length; ++i3) {
          const key2 = keys3[i3];
          if (!(key2 in this)) {
            Object.defineProperty(this, key2, defineRedirectDescriptor(event, key2));
          }
        }
      }
      stopPropagation() {
        super.stopPropagation();
        const { original } = $$1(this);
        if ("stopPropagation" in original) {
          original.stopPropagation();
        }
      }
      get cancelBubble() {
        return super.cancelBubble;
      }
      set cancelBubble(value) {
        super.cancelBubble = value;
        const { original } = $$1(this);
        if ("cancelBubble" in original) {
          original.cancelBubble = value;
        }
      }
      stopImmediatePropagation() {
        super.stopImmediatePropagation();
        const { original } = $$1(this);
        if ("stopImmediatePropagation" in original) {
          original.stopImmediatePropagation();
        }
      }
      get returnValue() {
        return super.returnValue;
      }
      set returnValue(value) {
        super.returnValue = value;
        const { original } = $$1(this);
        if ("returnValue" in original) {
          original.returnValue = value;
        }
      }
      preventDefault() {
        super.preventDefault();
        const { original } = $$1(this);
        if ("preventDefault" in original) {
          original.preventDefault();
        }
      }
      get timeStamp() {
        const { original } = $$1(this);
        if ("timeStamp" in original) {
          return original.timeStamp;
        }
        return super.timeStamp;
      }
    };
    internalDataMap$1 = /* @__PURE__ */ new WeakMap();
    wrapperClassCache = /* @__PURE__ */ new WeakMap();
    wrapperClassCache.set(Object.prototype, EventWrapper);
    EventTarget = class {
      constructor() {
        internalDataMap$2.set(this, createListenerListMap());
      }
      addEventListener(type0, callback0, options0) {
        const listenerMap = $$2(this);
        const { callback, capture, once, passive, signal, type } = normalizeAddOptions(type0, callback0, options0);
        if (callback == null || (signal === null || signal === void 0 ? void 0 : signal.aborted)) {
          return;
        }
        const list3 = ensureListenerList(listenerMap, type);
        const i3 = findIndexOfListener(list3, callback, capture);
        if (i3 !== -1) {
          warnDuplicate(list3.listeners[i3], passive, once, signal);
          return;
        }
        addListener(list3, callback, capture, passive, once, signal);
      }
      removeEventListener(type0, callback0, options0) {
        const listenerMap = $$2(this);
        const { callback, capture, type } = normalizeOptions(type0, callback0, options0);
        const list3 = listenerMap[type];
        if (callback != null && list3) {
          removeListener(list3, callback, capture);
        }
      }
      dispatchEvent(e3) {
        const list3 = $$2(this)[String(e3.type)];
        if (list3 == null) {
          return true;
        }
        const event = e3 instanceof Event ? e3 : EventWrapper.wrap(e3);
        const eventData = $(event, "event");
        if (eventData.dispatchFlag) {
          throw new DOMException3("This event has been in dispatching.");
        }
        eventData.dispatchFlag = true;
        eventData.target = eventData.currentTarget = this;
        if (!eventData.stopPropagationFlag) {
          const { cow, listeners } = list3;
          list3.cow = true;
          for (let i3 = 0; i3 < listeners.length; ++i3) {
            const listener = listeners[i3];
            if (isRemoved(listener)) {
              continue;
            }
            if (isOnce(listener) && removeListenerAt(list3, i3, !cow)) {
              i3 -= 1;
            }
            eventData.inPassiveListenerFlag = isPassive(listener);
            invokeCallback(listener, this, event);
            eventData.inPassiveListenerFlag = false;
            if (eventData.stopImmediatePropagationFlag) {
              break;
            }
          }
          if (!cow) {
            list3.cow = false;
          }
        }
        eventData.target = null;
        eventData.currentTarget = null;
        eventData.stopImmediatePropagationFlag = false;
        eventData.stopPropagationFlag = false;
        eventData.dispatchFlag = false;
        return !eventData.canceledFlag;
      }
    };
    internalDataMap$2 = /* @__PURE__ */ new WeakMap();
    keys$1$1 = Object.getOwnPropertyNames(EventTarget.prototype);
    for (let i3 = 0; i3 < keys$1$1.length; ++i3) {
      if (keys$1$1[i3] === "constructor") {
        continue;
      }
      Object.defineProperty(EventTarget.prototype, keys$1$1[i3], { enumerable: true });
    }
    AbortSignal = class extends EventTarget {
      constructor() {
        super();
        throw new TypeError("AbortSignal cannot be constructed directly");
      }
      get aborted() {
        const aborted = abortedFlags.get(this);
        if (typeof aborted !== "boolean") {
          throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? "null" : typeof this}`);
        }
        return aborted;
      }
    };
    defineEventAttribute(AbortSignal.prototype, "abort");
    abortedFlags = /* @__PURE__ */ new WeakMap();
    Object.defineProperties(AbortSignal.prototype, {
      aborted: { enumerable: true }
    });
    if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
      Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {
        configurable: true,
        value: "AbortSignal"
      });
    }
    AbortController2 = class {
      constructor() {
        signals.set(this, createAbortSignal());
      }
      get signal() {
        return getSignal(this);
      }
      abort() {
        abortSignal(getSignal(this));
      }
    };
    signals = /* @__PURE__ */ new WeakMap();
    Object.defineProperties(AbortController2.prototype, {
      signal: { enumerable: true },
      abort: { enumerable: true }
    });
    if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
      Object.defineProperty(AbortController2.prototype, Symbol.toStringTag, {
        configurable: true,
        value: "AbortController"
      });
    }
    INTERNAL$2 = { tick: 0, pool: /* @__PURE__ */ new Map() };
    Node = class extends EventTarget {
      append(...nodesOrDOMStrings) {
      }
      appendChild(childNode) {
        return childNode;
      }
      after(...nodesOrDOMStrings) {
      }
      before(...nodesOrDOMStrings) {
      }
      prepend(...nodesOrDOMStrings) {
      }
      replaceChild(newChild, oldChild) {
        return oldChild;
      }
      removeChild(childNode) {
        return childNode;
      }
      get attributes() {
        return {};
      }
      get childNodes() {
        return [];
      }
      get children() {
        return [];
      }
      get ownerDocument() {
        return null;
      }
      get nodeValue() {
        return "";
      }
      set nodeValue(value) {
      }
      get textContent() {
        return "";
      }
      set textContent(value) {
      }
      get previousElementSibling() {
        return null;
      }
      get nextElementSibling() {
        return null;
      }
      [Symbol.for("nodejs.util.inspect.custom")](depth, options) {
        return `${this.constructor.name}`;
      }
    };
    DocumentFragment = class extends Node {
    };
    ShadowRoot = class extends DocumentFragment {
      get innerHTML() {
        return "";
      }
      set innerHTML(value) {
      }
    };
    NodeFilter$1 = Object.assign({
      NodeFilter() {
        throw new TypeError("Illegal constructor");
      }
    }.NodeFilter, {
      FILTER_ACCEPT: 1,
      FILTER_REJECT: 2,
      FILTER_SKIP: 3,
      SHOW_ALL: 4294967295,
      SHOW_ELEMENT: 1,
      SHOW_ATTRIBUTE: 2,
      SHOW_TEXT: 4,
      SHOW_CDATA_SECTION: 8,
      SHOW_ENTITY_REFERENCE: 16,
      SHOW_ENTITY: 32,
      SHOW_PROCESSING_INSTRUCTION: 64,
      SHOW_COMMENT: 128,
      SHOW_DOCUMENT: 256,
      SHOW_DOCUMENT_TYPE: 512,
      SHOW_DOCUMENT_FRAGMENT: 1024,
      SHOW_NOTATION: 2048
    });
    NodeIterator$1 = class {
      nextNode() {
        return null;
      }
      previousNode() {
        return null;
      }
      get filter() {
        const internals = internalsOf(this, "NodeIterator", "filter");
        return internals.filter;
      }
      get pointerBeforeReferenceNode() {
        const internals = internalsOf(this, "NodeIterator", "pointerBeforeReferenceNode");
        return internals.pointerBeforeReferenceNode;
      }
      get referenceNode() {
        const internals = internalsOf(this, "NodeIterator", "referenceNode");
        return internals.referenceNode;
      }
      get root() {
        const internals = internalsOf(this, "NodeIterator", "root");
        return internals.root;
      }
      get whatToShow() {
        const internals = internalsOf(this, "NodeIterator", "whatToShow");
        return internals.whatToShow;
      }
    };
    allowStringTag(Node);
    allowStringTag(NodeIterator$1);
    allowStringTag(DocumentFragment);
    allowStringTag(ShadowRoot);
    CharacterData = class extends Node {
      constructor(data3) {
        INTERNALS4.set(super(), {
          data: String(data3)
        });
      }
      get data() {
        return internalsOf(this, "CharacterData", "data").data;
      }
      get textContent() {
        return internalsOf(this, "CharacterData", "textContent").data;
      }
    };
    Comment = class extends CharacterData {
    };
    Text = class extends CharacterData {
      get assignedSlot() {
        return null;
      }
      get wholeText() {
        return internalsOf(this, "CharacterData", "textContent").data;
      }
    };
    allowStringTag(CharacterData);
    allowStringTag(Text);
    allowStringTag(Comment);
    SymbolPolyfill = Symbol;
    rethrowAssertionErrorRejection = noop2;
    originalPromise = Promise;
    originalPromiseThen = Promise.prototype.then;
    originalPromiseResolve = Promise.resolve.bind(originalPromise);
    originalPromiseReject = Promise.reject.bind(originalPromise);
    QUEUE_MAX_ARRAY_SIZE = 16384;
    SimpleQueue = class {
      constructor() {
        this._cursor = 0;
        this._size = 0;
        this._front = {
          _elements: [],
          _next: void 0
        };
        this._back = this._front;
        this._cursor = 0;
        this._size = 0;
      }
      get length() {
        return this._size;
      }
      push(element6) {
        const oldBack = this._back;
        let newBack = oldBack;
        if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {
          newBack = {
            _elements: [],
            _next: void 0
          };
        }
        oldBack._elements.push(element6);
        if (newBack !== oldBack) {
          this._back = newBack;
          oldBack._next = newBack;
        }
        ++this._size;
      }
      shift() {
        const oldFront = this._front;
        let newFront = oldFront;
        const oldCursor = this._cursor;
        let newCursor = oldCursor + 1;
        const elements = oldFront._elements;
        const element6 = elements[oldCursor];
        if (newCursor === QUEUE_MAX_ARRAY_SIZE) {
          newFront = oldFront._next;
          newCursor = 0;
        }
        --this._size;
        this._cursor = newCursor;
        if (oldFront !== newFront) {
          this._front = newFront;
        }
        elements[oldCursor] = void 0;
        return element6;
      }
      forEach(callback) {
        let i3 = this._cursor;
        let node = this._front;
        let elements = node._elements;
        while (i3 !== elements.length || node._next !== void 0) {
          if (i3 === elements.length) {
            node = node._next;
            elements = node._elements;
            i3 = 0;
            if (elements.length === 0) {
              break;
            }
          }
          callback(elements[i3]);
          ++i3;
        }
      }
      peek() {
        const front = this._front;
        const cursor = this._cursor;
        return front._elements[cursor];
      }
    };
    AbortSteps = SymbolPolyfill("[[AbortSteps]]");
    ErrorSteps = SymbolPolyfill("[[ErrorSteps]]");
    CancelSteps = SymbolPolyfill("[[CancelSteps]]");
    PullSteps = SymbolPolyfill("[[PullSteps]]");
    NumberIsFinite = Number.isFinite || function(x3) {
      return typeof x3 === "number" && isFinite(x3);
    };
    MathTrunc = Math.trunc || function(v2) {
      return v2 < 0 ? Math.ceil(v2) : Math.floor(v2);
    };
    ReadableStreamDefaultReader = class {
      constructor(stream) {
        assertRequiredArgument(stream, 1, "ReadableStreamDefaultReader");
        assertReadableStream(stream, "First parameter");
        if (IsReadableStreamLocked(stream)) {
          throw new TypeError("This stream has already been locked for exclusive reading by another reader");
        }
        ReadableStreamReaderGenericInitialize(this, stream);
        this._readRequests = new SimpleQueue();
      }
      get closed() {
        if (!IsReadableStreamDefaultReader(this)) {
          return promiseRejectedWith(defaultReaderBrandCheckException("closed"));
        }
        return this._closedPromise;
      }
      cancel(reason = void 0) {
        if (!IsReadableStreamDefaultReader(this)) {
          return promiseRejectedWith(defaultReaderBrandCheckException("cancel"));
        }
        if (this._ownerReadableStream === void 0) {
          return promiseRejectedWith(readerLockException("cancel"));
        }
        return ReadableStreamReaderGenericCancel(this, reason);
      }
      read() {
        if (!IsReadableStreamDefaultReader(this)) {
          return promiseRejectedWith(defaultReaderBrandCheckException("read"));
        }
        if (this._ownerReadableStream === void 0) {
          return promiseRejectedWith(readerLockException("read from"));
        }
        let resolvePromise;
        let rejectPromise;
        const promise = newPromise((resolve2, reject) => {
          resolvePromise = resolve2;
          rejectPromise = reject;
        });
        const readRequest = {
          _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
          _closeSteps: () => resolvePromise({ value: void 0, done: true }),
          _errorSteps: (e3) => rejectPromise(e3)
        };
        ReadableStreamDefaultReaderRead(this, readRequest);
        return promise;
      }
      releaseLock() {
        if (!IsReadableStreamDefaultReader(this)) {
          throw defaultReaderBrandCheckException("releaseLock");
        }
        if (this._ownerReadableStream === void 0) {
          return;
        }
        if (this._readRequests.length > 0) {
          throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
        }
        ReadableStreamReaderGenericRelease(this);
      }
    };
    Object.defineProperties(ReadableStreamDefaultReader.prototype, {
      cancel: { enumerable: true },
      read: { enumerable: true },
      releaseLock: { enumerable: true },
      closed: { enumerable: true }
    });
    ReadableStreamAsyncIteratorImpl = class {
      constructor(reader, preventCancel) {
        this._ongoingPromise = void 0;
        this._isFinished = false;
        this._reader = reader;
        this._preventCancel = preventCancel;
      }
      next() {
        const nextSteps = () => this._nextSteps();
        this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps();
        return this._ongoingPromise;
      }
      return(value) {
        const returnSteps = () => this._returnSteps(value);
        return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
      }
      _nextSteps() {
        if (this._isFinished) {
          return Promise.resolve({ value: void 0, done: true });
        }
        const reader = this._reader;
        if (reader._ownerReadableStream === void 0) {
          return promiseRejectedWith(readerLockException("iterate"));
        }
        let resolvePromise;
        let rejectPromise;
        const promise = newPromise((resolve2, reject) => {
          resolvePromise = resolve2;
          rejectPromise = reject;
        });
        const readRequest = {
          _chunkSteps: (chunk) => {
            this._ongoingPromise = void 0;
            queueMicrotask(() => resolvePromise({ value: chunk, done: false }));
          },
          _closeSteps: () => {
            this._ongoingPromise = void 0;
            this._isFinished = true;
            ReadableStreamReaderGenericRelease(reader);
            resolvePromise({ value: void 0, done: true });
          },
          _errorSteps: (reason) => {
            this._ongoingPromise = void 0;
            this._isFinished = true;
            ReadableStreamReaderGenericRelease(reader);
            rejectPromise(reason);
          }
        };
        ReadableStreamDefaultReaderRead(reader, readRequest);
        return promise;
      }
      _returnSteps(value) {
        if (this._isFinished) {
          return Promise.resolve({ value, done: true });
        }
        this._isFinished = true;
        const reader = this._reader;
        if (reader._ownerReadableStream === void 0) {
          return promiseRejectedWith(readerLockException("finish iterating"));
        }
        if (!this._preventCancel) {
          const result = ReadableStreamReaderGenericCancel(reader, value);
          ReadableStreamReaderGenericRelease(reader);
          return transformPromiseWith(result, () => ({ value, done: true }));
        }
        ReadableStreamReaderGenericRelease(reader);
        return promiseResolvedWith({ value, done: true });
      }
    };
    ReadableStreamAsyncIteratorPrototype = {
      next() {
        if (!IsReadableStreamAsyncIterator(this)) {
          return promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"));
        }
        return this._asyncIteratorImpl.next();
      },
      return(value) {
        if (!IsReadableStreamAsyncIterator(this)) {
          return promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"));
        }
        return this._asyncIteratorImpl.return(value);
      }
    };
    NumberIsNaN = Number.isNaN || function(x3) {
      return x3 !== x3;
    };
    ReadableStreamBYOBRequest = class {
      constructor() {
        throw new TypeError("Illegal constructor");
      }
      get view() {
        if (!IsReadableStreamBYOBRequest(this)) {
          throw byobRequestBrandCheckException("view");
        }
        return this._view;
      }
      respond(bytesWritten) {
        if (!IsReadableStreamBYOBRequest(this)) {
          throw byobRequestBrandCheckException("respond");
        }
        assertRequiredArgument(bytesWritten, 1, "respond");
        bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, "First parameter");
        if (this._associatedReadableByteStreamController === void 0) {
          throw new TypeError("This BYOB request has been invalidated");
        }
        if (IsDetachedBuffer(this._view.buffer))
          ;
        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
      }
      respondWithNewView(view) {
        if (!IsReadableStreamBYOBRequest(this)) {
          throw byobRequestBrandCheckException("respondWithNewView");
        }
        assertRequiredArgument(view, 1, "respondWithNewView");
        if (!ArrayBuffer.isView(view)) {
          throw new TypeError("You can only respond with array buffer views");
        }
        if (this._associatedReadableByteStreamController === void 0) {
          throw new TypeError("This BYOB request has been invalidated");
        }
        if (IsDetachedBuffer(view.buffer))
          ;
        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
      }
    };
    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
      respond: { enumerable: true },
      respondWithNewView: { enumerable: true },
      view: { enumerable: true }
    });
    ReadableByteStreamController = class {
      constructor() {
        throw new TypeError("Illegal constructor");
      }
      get byobRequest() {
        if (!IsReadableByteStreamController(this)) {
          throw byteStreamControllerBrandCheckException("byobRequest");
        }
        return ReadableByteStreamControllerGetBYOBRequest(this);
      }
      get desiredSize() {
        if (!IsReadableByteStreamController(this)) {
          throw byteStreamControllerBrandCheckException("desiredSize");
        }
        return ReadableByteStreamControllerGetDesiredSize(this);
      }
      close() {
        if (!IsReadableByteStreamController(this)) {
          throw byteStreamControllerBrandCheckException("close");
        }
        if (this._closeRequested) {
          throw new TypeError("The stream has already been closed; do not close it again!");
        }
        const state = this._controlledReadableByteStream._state;
        if (state !== "readable") {
          throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);
        }
        ReadableByteStreamControllerClose(this);
      }
      enqueue(chunk) {
        if (!IsReadableByteStreamController(this)) {
          throw byteStreamControllerBrandCheckException("enqueue");
        }
        assertRequiredArgument(chunk, 1, "enqueue");
        if (!ArrayBuffer.isView(chunk)) {
          throw new TypeError("chunk must be an array buffer view");
        }
        if (chunk.byteLength === 0) {
          throw new TypeError("chunk must have non-zero byteLength");
        }
        if (chunk.buffer.byteLength === 0) {
          throw new TypeError(`chunk's buffer must have non-zero byteLength`);
        }
        if (this._closeRequested) {
          throw new TypeError("stream is closed or draining");
        }
        const state = this._controlledReadableByteStream._state;
        if (state !== "readable") {
          throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);
        }
        ReadableByteStreamControllerEnqueue(this, chunk);
      }
      error(e3 = void 0) {
        if (!IsReadableByteStreamController(this)) {
          throw byteStreamControllerBrandCheckException("error");
        }
        ReadableByteStreamControllerError(this, e3);
      }
      [CancelSteps](reason) {
        ReadableByteStreamControllerClearPendingPullIntos(this);
        ResetQueue(this);
        const result = this._cancelAlgorithm(reason);
        ReadableByteStreamControllerClearAlgorithms(this);
        return result;
      }
      [PullSteps](readRequest) {
        const stream = this._controlledReadableByteStream;
        if (this._queueTotalSize > 0) {
          const entry = this._queue.shift();
          this._queueTotalSize -= entry.byteLength;
          ReadableByteStreamControllerHandleQueueDrain(this);
          const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);
          readRequest._chunkSteps(view);
          return;
        }
        const autoAllocateChunkSize = this._autoAllocateChunkSize;
        if (autoAllocateChunkSize !== void 0) {
          let buffer3;
          try {
            buffer3 = new ArrayBuffer(autoAllocateChunkSize);
          } catch (bufferE) {
            readRequest._errorSteps(bufferE);
            return;
          }
          const pullIntoDescriptor = {
            buffer: buffer3,
            bufferByteLength: autoAllocateChunkSize,
            byteOffset: 0,
            byteLength: autoAllocateChunkSize,
            bytesFilled: 0,
            elementSize: 1,
            viewConstructor: Uint8Array,
            readerType: "default"
          };
          this._pendingPullIntos.push(pullIntoDescriptor);
        }
        ReadableStreamAddReadRequest(stream, readRequest);
        ReadableByteStreamControllerCallPullIfNeeded(this);
      }
    };
    Object.defineProperties(ReadableByteStreamController.prototype, {
      close: { enumerable: true },
      enqueue: { enumerable: true },
      error: { enumerable: true },
      byobRequest: { enumerable: true },
      desiredSize: { enumerable: true }
    });
    ReadableStreamBYOBReader = class {
      constructor(stream) {
        assertRequiredArgument(stream, 1, "ReadableStreamBYOBReader");
        assertReadableStream(stream, "First parameter");
        if (IsReadableStreamLocked(stream)) {
          throw new TypeError("This stream has already been locked for exclusive reading by another reader");
        }
        if (!IsReadableByteStreamController(stream._readableStreamController)) {
          throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
        }
        ReadableStreamReaderGenericInitialize(this, stream);
        this._readIntoRequests = new SimpleQueue();
      }
      get closed() {
        if (!IsReadableStreamBYOBReader(this)) {
          return promiseRejectedWith(byobReaderBrandCheckException("closed"));
        }
        return this._closedPromise;
      }
      cancel(reason = void 0) {
        if (!IsReadableStreamBYOBReader(this)) {
          return promiseRejectedWith(byobReaderBrandCheckException("cancel"));
        }
        if (this._ownerReadableStream === void 0) {
          return promiseRejectedWith(readerLockException("cancel"));
        }
        return ReadableStreamReaderGenericCancel(this, reason);
      }
      read(view) {
        if (!IsReadableStreamBYOBReader(this)) {
          return promiseRejectedWith(byobReaderBrandCheckException("read"));
        }
        if (!ArrayBuffer.isView(view)) {
          return promiseRejectedWith(new TypeError("view must be an array buffer view"));
        }
        if (view.byteLength === 0) {
          return promiseRejectedWith(new TypeError("view must have non-zero byteLength"));
        }
        if (view.buffer.byteLength === 0) {
          return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));
        }
        if (IsDetachedBuffer(view.buffer))
          ;
        if (this._ownerReadableStream === void 0) {
          return promiseRejectedWith(readerLockException("read from"));
        }
        let resolvePromise;
        let rejectPromise;
        const promise = newPromise((resolve2, reject) => {
          resolvePromise = resolve2;
          rejectPromise = reject;
        });
        const readIntoRequest = {
          _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
          _closeSteps: (chunk) => resolvePromise({ value: chunk, done: true }),
          _errorSteps: (e3) => rejectPromise(e3)
        };
        ReadableStreamBYOBReaderRead(this, view, readIntoRequest);
        return promise;
      }
      releaseLock() {
        if (!IsReadableStreamBYOBReader(this)) {
          throw byobReaderBrandCheckException("releaseLock");
        }
        if (this._ownerReadableStream === void 0) {
          return;
        }
        if (this._readIntoRequests.length > 0) {
          throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
        }
        ReadableStreamReaderGenericRelease(this);
      }
    };
    Object.defineProperties(ReadableStreamBYOBReader.prototype, {
      cancel: { enumerable: true },
      read: { enumerable: true },
      releaseLock: { enumerable: true },
      closed: { enumerable: true }
    });
    WritableStream = class {
      constructor(rawUnderlyingSink = {}, rawStrategy = {}) {
        if (rawUnderlyingSink === void 0) {
          rawUnderlyingSink = null;
        } else {
          assertObject(rawUnderlyingSink, "First parameter");
        }
        const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
        const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, "First parameter");
        InitializeWritableStream(this);
        const type = underlyingSink.type;
        if (type !== void 0) {
          throw new RangeError("Invalid type is specified");
        }
        const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
        const highWaterMark = ExtractHighWaterMark(strategy, 1);
        SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
      }
      get locked() {
        if (!IsWritableStream(this)) {
          throw streamBrandCheckException$2("locked");
        }
        return IsWritableStreamLocked(this);
      }
      abort(reason = void 0) {
        if (!IsWritableStream(this)) {
          return promiseRejectedWith(streamBrandCheckException$2("abort"));
        }
        if (IsWritableStreamLocked(this)) {
          return promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer"));
        }
        return WritableStreamAbort(this, reason);
      }
      close() {
        if (!IsWritableStream(this)) {
          return promiseRejectedWith(streamBrandCheckException$2("close"));
        }
        if (IsWritableStreamLocked(this)) {
          return promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer"));
        }
        if (WritableStreamCloseQueuedOrInFlight(this)) {
          return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
        }
        return WritableStreamClose(this);
      }
      getWriter() {
        if (!IsWritableStream(this)) {
          throw streamBrandCheckException$2("getWriter");
        }
        return AcquireWritableStreamDefaultWriter(this);
      }
    };
    Object.defineProperties(WritableStream.prototype, {
      abort: { enumerable: true },
      close: { enumerable: true },
      getWriter: { enumerable: true },
      locked: { enumerable: true }
    });
    WritableStreamDefaultWriter = class {
      constructor(stream) {
        assertRequiredArgument(stream, 1, "WritableStreamDefaultWriter");
        assertWritableStream(stream, "First parameter");
        if (IsWritableStreamLocked(stream)) {
          throw new TypeError("This stream has already been locked for exclusive writing by another writer");
        }
        this._ownerWritableStream = stream;
        stream._writer = this;
        const state = stream._state;
        if (state === "writable") {
          if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {
            defaultWriterReadyPromiseInitialize(this);
          } else {
            defaultWriterReadyPromiseInitializeAsResolved(this);
          }
          defaultWriterClosedPromiseInitialize(this);
        } else if (state === "erroring") {
          defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);
          defaultWriterClosedPromiseInitialize(this);
        } else if (state === "closed") {
          defaultWriterReadyPromiseInitializeAsResolved(this);
          defaultWriterClosedPromiseInitializeAsResolved(this);
        } else {
          const storedError = stream._storedError;
          defaultWriterReadyPromiseInitializeAsRejected(this, storedError);
          defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
        }
      }
      get closed() {
        if (!IsWritableStreamDefaultWriter(this)) {
          return promiseRejectedWith(defaultWriterBrandCheckException("closed"));
        }
        return this._closedPromise;
      }
      get desiredSize() {
        if (!IsWritableStreamDefaultWriter(this)) {
          throw defaultWriterBrandCheckException("desiredSize");
        }
        if (this._ownerWritableStream === void 0) {
          throw defaultWriterLockException("desiredSize");
        }
        return WritableStreamDefaultWriterGetDesiredSize(this);
      }
      get ready() {
        if (!IsWritableStreamDefaultWriter(this)) {
          return promiseRejectedWith(defaultWriterBrandCheckException("ready"));
        }
        return this._readyPromise;
      }
      abort(reason = void 0) {
        if (!IsWritableStreamDefaultWriter(this)) {
          return promiseRejectedWith(defaultWriterBrandCheckException("abort"));
        }
        if (this._ownerWritableStream === void 0) {
          return promiseRejectedWith(defaultWriterLockException("abort"));
        }
        return WritableStreamDefaultWriterAbort(this, reason);
      }
      close() {
        if (!IsWritableStreamDefaultWriter(this)) {
          return promiseRejectedWith(defaultWriterBrandCheckException("close"));
        }
        const stream = this._ownerWritableStream;
        if (stream === void 0) {
          return promiseRejectedWith(defaultWriterLockException("close"));
        }
        if (WritableStreamCloseQueuedOrInFlight(stream)) {
          return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
        }
        return WritableStreamDefaultWriterClose(this);
      }
      releaseLock() {
        if (!IsWritableStreamDefaultWriter(this)) {
          throw defaultWriterBrandCheckException("releaseLock");
        }
        const stream = this._ownerWritableStream;
        if (stream === void 0) {
          return;
        }
        WritableStreamDefaultWriterRelease(this);
      }
      write(chunk = void 0) {
        if (!IsWritableStreamDefaultWriter(this)) {
          return promiseRejectedWith(defaultWriterBrandCheckException("write"));
        }
        if (this._ownerWritableStream === void 0) {
          return promiseRejectedWith(defaultWriterLockException("write to"));
        }
        return WritableStreamDefaultWriterWrite(this, chunk);
      }
    };
    Object.defineProperties(WritableStreamDefaultWriter.prototype, {
      abort: { enumerable: true },
      close: { enumerable: true },
      releaseLock: { enumerable: true },
      write: { enumerable: true },
      closed: { enumerable: true },
      desiredSize: { enumerable: true },
      ready: { enumerable: true }
    });
    closeSentinel = {};
    WritableStreamDefaultController = class {
      constructor() {
        throw new TypeError("Illegal constructor");
      }
      get abortReason() {
        if (!IsWritableStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException$2("abortReason");
        }
        return this._abortReason;
      }
      get signal() {
        if (!IsWritableStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException$2("signal");
        }
        if (this._abortController === void 0) {
          throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
        }
        return this._abortController.signal;
      }
      error(e3 = void 0) {
        if (!IsWritableStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException$2("error");
        }
        const state = this._controlledWritableStream._state;
        if (state !== "writable") {
          return;
        }
        WritableStreamDefaultControllerError(this, e3);
      }
      [AbortSteps](reason) {
        const result = this._abortAlgorithm(reason);
        WritableStreamDefaultControllerClearAlgorithms(this);
        return result;
      }
      [ErrorSteps]() {
        ResetQueue(this);
      }
    };
    Object.defineProperties(WritableStreamDefaultController.prototype, {
      abortReason: { enumerable: true },
      signal: { enumerable: true },
      error: { enumerable: true }
    });
    ReadableStreamDefaultController = class {
      constructor() {
        throw new TypeError("Illegal constructor");
      }
      get desiredSize() {
        if (!IsReadableStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException$1("desiredSize");
        }
        return ReadableStreamDefaultControllerGetDesiredSize(this);
      }
      close() {
        if (!IsReadableStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException$1("close");
        }
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
          throw new TypeError("The stream is not in a state that permits close");
        }
        ReadableStreamDefaultControllerClose(this);
      }
      enqueue(chunk = void 0) {
        if (!IsReadableStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException$1("enqueue");
        }
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
          throw new TypeError("The stream is not in a state that permits enqueue");
        }
        return ReadableStreamDefaultControllerEnqueue(this, chunk);
      }
      error(e3 = void 0) {
        if (!IsReadableStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException$1("error");
        }
        ReadableStreamDefaultControllerError(this, e3);
      }
      [CancelSteps](reason) {
        ResetQueue(this);
        const result = this._cancelAlgorithm(reason);
        ReadableStreamDefaultControllerClearAlgorithms(this);
        return result;
      }
      [PullSteps](readRequest) {
        const stream = this._controlledReadableStream;
        if (this._queue.length > 0) {
          const chunk = DequeueValue(this);
          if (this._closeRequested && this._queue.length === 0) {
            ReadableStreamDefaultControllerClearAlgorithms(this);
            ReadableStreamClose(stream);
          } else {
            ReadableStreamDefaultControllerCallPullIfNeeded(this);
          }
          readRequest._chunkSteps(chunk);
        } else {
          ReadableStreamAddReadRequest(stream, readRequest);
          ReadableStreamDefaultControllerCallPullIfNeeded(this);
        }
      }
    };
    Object.defineProperties(ReadableStreamDefaultController.prototype, {
      close: { enumerable: true },
      enqueue: { enumerable: true },
      error: { enumerable: true },
      desiredSize: { enumerable: true }
    });
    ReadableStream2 = class {
      constructor(rawUnderlyingSource = {}, rawStrategy = {}) {
        if (rawUnderlyingSource === void 0) {
          rawUnderlyingSource = null;
        } else {
          assertObject(rawUnderlyingSource, "First parameter");
        }
        const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
        const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, "First parameter");
        InitializeReadableStream(this);
        if (underlyingSource.type === "bytes") {
          if (strategy.size !== void 0) {
            throw new RangeError("The strategy for a byte stream cannot have a size function");
          }
          const highWaterMark = ExtractHighWaterMark(strategy, 0);
          SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
        } else {
          const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
          const highWaterMark = ExtractHighWaterMark(strategy, 1);
          SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
        }
      }
      get locked() {
        if (!IsReadableStream(this)) {
          throw streamBrandCheckException$1("locked");
        }
        return IsReadableStreamLocked(this);
      }
      cancel(reason = void 0) {
        if (!IsReadableStream(this)) {
          return promiseRejectedWith(streamBrandCheckException$1("cancel"));
        }
        if (IsReadableStreamLocked(this)) {
          return promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader"));
        }
        return ReadableStreamCancel(this, reason);
      }
      getReader(rawOptions = void 0) {
        if (!IsReadableStream(this)) {
          throw streamBrandCheckException$1("getReader");
        }
        const options = convertReaderOptions(rawOptions, "First parameter");
        if (options.mode === void 0) {
          return AcquireReadableStreamDefaultReader(this);
        }
        return AcquireReadableStreamBYOBReader(this);
      }
      pipeThrough(rawTransform, rawOptions = {}) {
        if (!IsReadableStream(this)) {
          throw streamBrandCheckException$1("pipeThrough");
        }
        assertRequiredArgument(rawTransform, 1, "pipeThrough");
        const transform3 = convertReadableWritablePair(rawTransform, "First parameter");
        const options = convertPipeOptions(rawOptions, "Second parameter");
        if (IsReadableStreamLocked(this)) {
          throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
        }
        if (IsWritableStreamLocked(transform3.writable)) {
          throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
        }
        const promise = ReadableStreamPipeTo(this, transform3.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
        setPromiseIsHandledToTrue(promise);
        return transform3.readable;
      }
      pipeTo(destination, rawOptions = {}) {
        if (!IsReadableStream(this)) {
          return promiseRejectedWith(streamBrandCheckException$1("pipeTo"));
        }
        if (destination === void 0) {
          return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);
        }
        if (!IsWritableStream(destination)) {
          return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));
        }
        let options;
        try {
          options = convertPipeOptions(rawOptions, "Second parameter");
        } catch (e3) {
          return promiseRejectedWith(e3);
        }
        if (IsReadableStreamLocked(this)) {
          return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"));
        }
        if (IsWritableStreamLocked(destination)) {
          return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"));
        }
        return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
      }
      tee() {
        if (!IsReadableStream(this)) {
          throw streamBrandCheckException$1("tee");
        }
        const branches = ReadableStreamTee(this);
        return CreateArrayFromList(branches);
      }
      values(rawOptions = void 0) {
        if (!IsReadableStream(this)) {
          throw streamBrandCheckException$1("values");
        }
        const options = convertIteratorOptions(rawOptions, "First parameter");
        return AcquireReadableStreamAsyncIterator(this, options.preventCancel);
      }
    };
    Object.defineProperties(ReadableStream2.prototype, {
      cancel: { enumerable: true },
      getReader: { enumerable: true },
      pipeThrough: { enumerable: true },
      pipeTo: { enumerable: true },
      tee: { enumerable: true },
      values: { enumerable: true },
      locked: { enumerable: true }
    });
    byteLengthSizeFunction = (chunk) => {
      return chunk.byteLength;
    };
    try {
      Object.defineProperty(byteLengthSizeFunction, "name", {
        value: "size",
        configurable: true
      });
    } catch (_a8) {
    }
    ByteLengthQueuingStrategy = class {
      constructor(options) {
        assertRequiredArgument(options, 1, "ByteLengthQueuingStrategy");
        options = convertQueuingStrategyInit(options, "First parameter");
        this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;
      }
      get highWaterMark() {
        if (!IsByteLengthQueuingStrategy(this)) {
          throw byteLengthBrandCheckException("highWaterMark");
        }
        return this._byteLengthQueuingStrategyHighWaterMark;
      }
      get size() {
        if (!IsByteLengthQueuingStrategy(this)) {
          throw byteLengthBrandCheckException("size");
        }
        return byteLengthSizeFunction;
      }
    };
    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
      highWaterMark: { enumerable: true },
      size: { enumerable: true }
    });
    countSizeFunction = () => {
      return 1;
    };
    try {
      Object.defineProperty(countSizeFunction, "name", {
        value: "size",
        configurable: true
      });
    } catch (_a8) {
    }
    CountQueuingStrategy = class {
      constructor(options) {
        assertRequiredArgument(options, 1, "CountQueuingStrategy");
        options = convertQueuingStrategyInit(options, "First parameter");
        this._countQueuingStrategyHighWaterMark = options.highWaterMark;
      }
      get highWaterMark() {
        if (!IsCountQueuingStrategy(this)) {
          throw countBrandCheckException("highWaterMark");
        }
        return this._countQueuingStrategyHighWaterMark;
      }
      get size() {
        if (!IsCountQueuingStrategy(this)) {
          throw countBrandCheckException("size");
        }
        return countSizeFunction;
      }
    };
    Object.defineProperties(CountQueuingStrategy.prototype, {
      highWaterMark: { enumerable: true },
      size: { enumerable: true }
    });
    TransformStream = class {
      constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {
        if (rawTransformer === void 0) {
          rawTransformer = null;
        }
        const writableStrategy = convertQueuingStrategy(rawWritableStrategy, "Second parameter");
        const readableStrategy = convertQueuingStrategy(rawReadableStrategy, "Third parameter");
        const transformer2 = convertTransformer(rawTransformer, "First parameter");
        if (transformer2.readableType !== void 0) {
          throw new RangeError("Invalid readableType specified");
        }
        if (transformer2.writableType !== void 0) {
          throw new RangeError("Invalid writableType specified");
        }
        const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);
        const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);
        const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);
        const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);
        let startPromise_resolve;
        const startPromise = newPromise((resolve2) => {
          startPromise_resolve = resolve2;
        });
        InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
        SetUpTransformStreamDefaultControllerFromTransformer(this, transformer2);
        if (transformer2.start !== void 0) {
          startPromise_resolve(transformer2.start(this._transformStreamController));
        } else {
          startPromise_resolve(void 0);
        }
      }
      get readable() {
        if (!IsTransformStream(this)) {
          throw streamBrandCheckException("readable");
        }
        return this._readable;
      }
      get writable() {
        if (!IsTransformStream(this)) {
          throw streamBrandCheckException("writable");
        }
        return this._writable;
      }
    };
    Object.defineProperties(TransformStream.prototype, {
      readable: { enumerable: true },
      writable: { enumerable: true }
    });
    TransformStreamDefaultController = class {
      constructor() {
        throw new TypeError("Illegal constructor");
      }
      get desiredSize() {
        if (!IsTransformStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException("desiredSize");
        }
        const readableController = this._controlledTransformStream._readable._readableStreamController;
        return ReadableStreamDefaultControllerGetDesiredSize(readableController);
      }
      enqueue(chunk = void 0) {
        if (!IsTransformStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException("enqueue");
        }
        TransformStreamDefaultControllerEnqueue(this, chunk);
      }
      error(reason = void 0) {
        if (!IsTransformStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException("error");
        }
        TransformStreamDefaultControllerError(this, reason);
      }
      terminate() {
        if (!IsTransformStreamDefaultController(this)) {
          throw defaultControllerBrandCheckException("terminate");
        }
        TransformStreamDefaultControllerTerminate(this);
      }
    };
    Object.defineProperties(TransformStreamDefaultController.prototype, {
      enqueue: { enumerable: true },
      error: { enumerable: true },
      terminate: { enumerable: true },
      desiredSize: { enumerable: true }
    });
    POOL_SIZE$1 = 65536;
    try {
      const { Blob: Blob3 } = require("buffer");
      if (Blob3 && !Blob3.prototype.stream) {
        Blob3.prototype.stream = function name(params) {
          let position3 = 0;
          const blob = this;
          return new ReadableStream2({
            type: "bytes",
            async pull(ctrl) {
              const chunk = blob.slice(position3, Math.min(blob.size, position3 + POOL_SIZE$1));
              const buffer3 = await chunk.arrayBuffer();
              position3 += buffer3.byteLength;
              ctrl.enqueue(new Uint8Array(buffer3));
              if (position3 === blob.size) {
                ctrl.close();
              }
            }
          });
        };
      }
    } catch (error3) {
    }
    POOL_SIZE2 = 65536;
    _Blob2 = (_a4 = class {
      constructor(blobParts = [], options = {}) {
        __privateAdd(this, _parts2, []);
        __privateAdd(this, _type2, "");
        __privateAdd(this, _size2, 0);
        __privateAdd(this, _endings2, "transparent");
        if (typeof blobParts !== "object" || blobParts === null) {
          throw new TypeError("Failed to construct 'Blob': The provided value cannot be converted to a sequence.");
        }
        if (typeof blobParts[Symbol.iterator] !== "function") {
          throw new TypeError("Failed to construct 'Blob': The object must have a callable @@iterator property.");
        }
        if (typeof options !== "object" && typeof options !== "function") {
          throw new TypeError("Failed to construct 'Blob': parameter 2 cannot convert to dictionary.");
        }
        if (options === null)
          options = {};
        const encoder = new TextEncoder();
        for (const element6 of blobParts) {
          let part;
          if (ArrayBuffer.isView(element6)) {
            part = new Uint8Array(element6.buffer.slice(element6.byteOffset, element6.byteOffset + element6.byteLength));
          } else if (element6 instanceof ArrayBuffer) {
            part = new Uint8Array(element6.slice(0));
          } else if (element6 instanceof _a4) {
            part = element6;
          } else {
            part = encoder.encode(`${element6}`);
          }
          const size = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (size) {
            __privateSet(this, _size2, __privateGet(this, _size2) + size);
            __privateGet(this, _parts2).push(part);
          }
        }
        __privateSet(this, _endings2, `${options.endings === void 0 ? "transparent" : options.endings}`);
        const type = options.type === void 0 ? "" : String(options.type);
        __privateSet(this, _type2, /^[\x20-\x7E]*$/.test(type) ? type : "");
      }
      get size() {
        return __privateGet(this, _size2);
      }
      get type() {
        return __privateGet(this, _type2);
      }
      async text() {
        const decoder = new TextDecoder();
        let str = "";
        for await (const part of toIterator2(__privateGet(this, _parts2), false)) {
          str += decoder.decode(part, { stream: true });
        }
        str += decoder.decode();
        return str;
      }
      async arrayBuffer() {
        const data3 = new Uint8Array(this.size);
        let offset2 = 0;
        for await (const chunk of toIterator2(__privateGet(this, _parts2), false)) {
          data3.set(chunk, offset2);
          offset2 += chunk.length;
        }
        return data3.buffer;
      }
      stream() {
        const it = toIterator2(__privateGet(this, _parts2), true);
        return new ReadableStream2({
          type: "bytes",
          async pull(ctrl) {
            const chunk = await it.next();
            chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);
          },
          async cancel() {
            await it.return();
          }
        });
      }
      slice(start3 = 0, end = this.size, type = "") {
        const { size } = this;
        let relativeStart = start3 < 0 ? Math.max(size + start3, 0) : Math.min(start3, size);
        let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);
        const span = Math.max(relativeEnd - relativeStart, 0);
        const parts = __privateGet(this, _parts2);
        const blobParts = [];
        let added = 0;
        for (const part of parts) {
          if (added >= span) {
            break;
          }
          const size2 = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (relativeStart && size2 <= relativeStart) {
            relativeStart -= size2;
            relativeEnd -= size2;
          } else {
            let chunk;
            if (ArrayBuffer.isView(part)) {
              chunk = part.subarray(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.byteLength;
            } else {
              chunk = part.slice(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.size;
            }
            relativeEnd -= size2;
            blobParts.push(chunk);
            relativeStart = 0;
          }
        }
        const blob = new _a4([], { type: String(type).toLowerCase() });
        __privateSet(blob, _size2, span);
        __privateSet(blob, _parts2, blobParts);
        return blob;
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
      static [Symbol.hasInstance](object) {
        return object && typeof object === "object" && typeof object.constructor === "function" && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);
      }
    }, _parts2 = new WeakMap(), _type2 = new WeakMap(), _size2 = new WeakMap(), _endings2 = new WeakMap(), _a4);
    Object.defineProperties(_Blob2.prototype, {
      size: { enumerable: true },
      type: { enumerable: true },
      slice: { enumerable: true }
    });
    Blob2 = _Blob2;
    _File2 = (_a5 = class extends Blob2 {
      constructor(fileBits, fileName, options = {}) {
        if (arguments.length < 2) {
          throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);
        }
        super(fileBits, options);
        __privateAdd(this, _lastModified2, 0);
        __privateAdd(this, _name2, "");
        if (options === null)
          options = {};
        const lastModified = options.lastModified === void 0 ? Date.now() : Number(options.lastModified);
        if (!Number.isNaN(lastModified)) {
          __privateSet(this, _lastModified2, lastModified);
        }
        __privateSet(this, _name2, String(fileName));
      }
      get name() {
        return __privateGet(this, _name2);
      }
      get lastModified() {
        return __privateGet(this, _lastModified2);
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
      static [Symbol.hasInstance](object) {
        return !!object && object instanceof Blob2 && /^(File)$/.test(object[Symbol.toStringTag]);
      }
    }, _lastModified2 = new WeakMap(), _name2 = new WeakMap(), _a5);
    File2 = _File2;
    CustomEvent = class extends Event {
      constructor(type, params) {
        params = Object(params);
        super(type, params);
        if ("detail" in params)
          this.detail = params.detail;
      }
    };
    allowStringTag(CustomEvent);
    TreeWalker = class {
      parentNode() {
        return null;
      }
      firstChild() {
        return null;
      }
      lastChild() {
        return null;
      }
      previousSibling() {
        return null;
      }
      nextSibling() {
        return null;
      }
      previousNode() {
        return null;
      }
      nextNode() {
        return null;
      }
      get currentNode() {
        const internals = internalsOf(this, "TreeWalker", "currentNode");
        return internals.currentNode;
      }
      get root() {
        const internals = internalsOf(this, "TreeWalker", "root");
        return internals.root;
      }
      get whatToShow() {
        const internals = internalsOf(this, "TreeWalker", "whatToShow");
        return internals.whatToShow;
      }
    };
    allowStringTag(TreeWalker);
    INTERNAL$1 = { tick: 0, pool: /* @__PURE__ */ new Map() };
    fetch3 = {
      fetch(resource, init2) {
        const resourceURL = new URL(__object_isPrototypeOf(Request2.prototype, resource) ? resource.url : pathToPosix(resource), typeof Object(globalThis.process).cwd === "function" ? "file:" + pathToPosix(process.cwd()) + "/" : "file:");
        if (resourceURL.protocol.toLowerCase() === "file:") {
          return import("fs").then((fs2) => {
            try {
              const stats = fs2.statSync(resourceURL);
              const body3 = fs2.createReadStream(resourceURL);
              return new Response2(body3, {
                status: 200,
                statusText: "",
                headers: {
                  "content-length": String(stats.size),
                  date: new Date().toUTCString(),
                  "last-modified": new Date(stats.mtimeMs).toUTCString()
                }
              });
            } catch (error3) {
              const body3 = new import_node_stream3.default.Readable();
              body3._read = () => {
              };
              body3.push(null);
              return new Response2(body3, {
                status: 404,
                statusText: "",
                headers: {
                  date: new Date().toUTCString()
                }
              });
            }
          });
        } else {
          return fetch2(resource, init2);
        }
      }
    }.fetch;
    ({ toStringTag: t$1, iterator: i$1, hasInstance: h$1 } = Symbol);
    m$1 = "append,set,get,getAll,delete,keys,values,entries,forEach,constructor".split(",");
    f$1 = (a2, b2, c2) => (a2 += "", /^(Blob|File)$/.test(b2 && b2[t$1]) ? [(c2 = c2 !== void 0 ? c2 + "" : b2[t$1] == "File" ? b2.name : "blob", a2), b2.name !== c2 || b2[t$1] == "blob" ? new File2([b2], c2, b2) : b2] : [a2, b2 + ""]);
    x$1 = (n2, a2, e3) => {
      if (a2.length < e3) {
        throw new TypeError(`Failed to execute '${n2}' on 'FormData': ${e3} arguments required, but only ${a2.length} present.`);
      }
    };
    FormData2 = (_a6 = class {
      constructor(...a2) {
        __privateAdd(this, _d2, []);
        if (a2.length)
          throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`);
      }
      get [t$1]() {
        return "FormData";
      }
      [i$1]() {
        return this.entries();
      }
      static [h$1](o2) {
        return o2 && typeof o2 === "object" && o2[t$1] === "FormData" && !m$1.some((m3) => typeof o2[m3] != "function");
      }
      append(...a2) {
        x$1("append", arguments, 2);
        __privateGet(this, _d2).push(f$1(...a2));
      }
      delete(a2) {
        x$1("delete", arguments, 1);
        a2 += "";
        __privateSet(this, _d2, __privateGet(this, _d2).filter(([b2]) => b2 !== a2));
      }
      get(a2) {
        x$1("get", arguments, 1);
        a2 += "";
        for (var b2 = __privateGet(this, _d2), l2 = b2.length, c2 = 0; c2 < l2; c2++)
          if (b2[c2][0] === a2)
            return b2[c2][1];
        return null;
      }
      getAll(a2, b2) {
        x$1("getAll", arguments, 1);
        b2 = [];
        a2 += "";
        __privateGet(this, _d2).forEach((c2) => c2[0] === a2 && b2.push(c2[1]));
        return b2;
      }
      has(a2) {
        x$1("has", arguments, 1);
        a2 += "";
        return __privateGet(this, _d2).some((b2) => b2[0] === a2);
      }
      forEach(a2, b2) {
        x$1("forEach", arguments, 1);
        for (var [c2, d2] of this)
          a2.call(b2, d2, c2, this);
      }
      set(...a2) {
        x$1("set", arguments, 2);
        var b2 = [], c2 = true;
        a2 = f$1(...a2);
        __privateGet(this, _d2).forEach((d2) => {
          d2[0] === a2[0] ? c2 && (c2 = !b2.push(a2)) : b2.push(d2);
        });
        c2 && b2.push(a2);
        __privateSet(this, _d2, b2);
      }
      *entries() {
        yield* __privateGet(this, _d2);
      }
      *keys() {
        for (var [a2] of this)
          yield a2;
      }
      *values() {
        for (var [, a2] of this)
          yield a2;
      }
    }, _d2 = new WeakMap(), _a6);
    e2 = /(?:[\$A-Z_a-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDEC0-\uDEEB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/;
    C = /(?:[\$0-9A-Z_a-z\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05EF-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u07FD\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u08D3-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u09FE\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D81-\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1878\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CD0-\u1CD2\u1CD4-\u1CFA\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA827\uA82C\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD27\uDD30-\uDD39\uDE80-\uDEA9\uDEAB\uDEAC\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF50\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD44-\uDD47\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDC9-\uDDCC\uDDCE-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3B-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC5E-\uDC61\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDC00-\uDC3A\uDCA0-\uDCE9\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD35\uDD37\uDD38\uDD3B-\uDD43\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD7\uDDDA-\uDDE1\uDDE3\uDDE4\uDE00-\uDE3E\uDE47\uDE50-\uDE99\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD8E\uDD90\uDD91\uDD93-\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF6\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF4F-\uDF87\uDF8F-\uDF9F\uDFE0\uDFE1\uDFE3\uDFE4\uDFF0\uDFF1]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD00-\uDD2C\uDD30-\uDD3D\uDD40-\uDD49\uDD4E\uDEC0-\uDEF9]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4B\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]|\uDB40[\uDD00-\uDDEF])/;
    B = { delimiter: "", prefixes: "", sensitive: true, strict: true };
    o = { delimiter: ".", prefixes: "", sensitive: true, strict: true };
    h2 = { delimiter: "/", prefixes: "/", sensitive: true, strict: true };
    l = ["ftp", "file", "http", "https", "ws", "wss"];
    !function(u3) {
      u3[u3.INIT = 0] = "INIT", u3[u3.PROTOCOL = 1] = "PROTOCOL", u3[u3.AUTHORITY = 2] = "AUTHORITY", u3[u3.USERNAME = 3] = "USERNAME", u3[u3.PASSWORD = 4] = "PASSWORD", u3[u3.HOSTNAME = 5] = "HOSTNAME", u3[u3.PORT = 6] = "PORT", u3[u3.PATHNAME = 7] = "PATHNAME", u3[u3.SEARCH = 8] = "SEARCH", u3[u3.HASH = 9] = "HASH", u3[u3.DONE = 10] = "DONE";
    }(f3 || (f3 = {}));
    b = function() {
      function u3(u4) {
        this.input = void 0, this.tokenList = [], this.internalResult = {}, this.tokenIndex = 0, this.tokenIncrement = 1, this.componentStart = 0, this.state = f3.INIT, this.groupDepth = 0, this.hostnameIPv6BracketDepth = 0, this.shouldTreatAsStandardURL = false, this.input = u4;
      }
      var t3 = u3.prototype;
      return t3.parse = function() {
        for (this.tokenList = E(this.input, true); this.tokenIndex < this.tokenList.length; this.tokenIndex += this.tokenIncrement) {
          if (this.tokenIncrement = 1, this.tokenList[this.tokenIndex].type === "END") {
            if (this.state === f3.INIT) {
              this.rewind(), this.isHashPrefix() ? this.changeState(f3.HASH, 1) : this.isSearchPrefix() ? (this.changeState(f3.SEARCH, 1), this.internalResult.hash = "") : (this.changeState(f3.PATHNAME, 0), this.internalResult.search = "", this.internalResult.hash = "");
              continue;
            }
            if (this.state === f3.AUTHORITY) {
              this.rewindAndSetState(f3.HOSTNAME);
              continue;
            }
            this.changeState(f3.DONE, 0);
            break;
          }
          if (this.groupDepth > 0) {
            if (!this.isGroupClose())
              continue;
            this.groupDepth -= 1;
          }
          if (this.isGroupOpen())
            this.groupDepth += 1;
          else
            switch (this.state) {
              case f3.INIT:
                this.isProtocolSuffix() && (this.internalResult.username = "", this.internalResult.password = "", this.internalResult.hostname = "", this.internalResult.port = "", this.internalResult.pathname = "", this.internalResult.search = "", this.internalResult.hash = "", this.rewindAndSetState(f3.PROTOCOL));
                break;
              case f3.PROTOCOL:
                if (this.isProtocolSuffix()) {
                  this.computeShouldTreatAsStandardURL();
                  var u4 = f3.PATHNAME, D2 = 1;
                  this.shouldTreatAsStandardURL && (this.internalResult.pathname = "/"), this.nextIsAuthoritySlashes() ? (u4 = f3.AUTHORITY, D2 = 3) : this.shouldTreatAsStandardURL && (u4 = f3.AUTHORITY), this.changeState(u4, D2);
                }
                break;
              case f3.AUTHORITY:
                this.isIdentityTerminator() ? this.rewindAndSetState(f3.USERNAME) : (this.isPathnameStart() || this.isSearchPrefix() || this.isHashPrefix()) && this.rewindAndSetState(f3.HOSTNAME);
                break;
              case f3.USERNAME:
                this.isPasswordPrefix() ? this.changeState(f3.PASSWORD, 1) : this.isIdentityTerminator() && this.changeState(f3.HOSTNAME, 1);
                break;
              case f3.PASSWORD:
                this.isIdentityTerminator() && this.changeState(f3.HOSTNAME, 1);
                break;
              case f3.HOSTNAME:
                this.isIPv6Open() ? this.hostnameIPv6BracketDepth += 1 : this.isIPv6Close() && (this.hostnameIPv6BracketDepth -= 1), this.isPortPrefix() && !this.hostnameIPv6BracketDepth ? this.changeState(f3.PORT, 1) : this.isPathnameStart() ? this.changeState(f3.PATHNAME, 0) : this.isSearchPrefix() ? this.changeState(f3.SEARCH, 1) : this.isHashPrefix() && this.changeState(f3.HASH, 1);
                break;
              case f3.PORT:
                this.isPathnameStart() ? this.changeState(f3.PATHNAME, 0) : this.isSearchPrefix() ? this.changeState(f3.SEARCH, 1) : this.isHashPrefix() && this.changeState(f3.HASH, 1);
                break;
              case f3.PATHNAME:
                this.isSearchPrefix() ? this.changeState(f3.SEARCH, 1) : this.isHashPrefix() && this.changeState(f3.HASH, 1);
                break;
              case f3.SEARCH:
                this.isHashPrefix() && this.changeState(f3.HASH, 1);
            }
        }
      }, t3.changeState = function(u4, D2) {
        switch (this.state) {
          case f3.INIT:
            break;
          case f3.PROTOCOL:
            this.internalResult.protocol = this.makeComponentString();
            break;
          case f3.AUTHORITY:
            break;
          case f3.USERNAME:
            this.internalResult.username = this.makeComponentString();
            break;
          case f3.PASSWORD:
            this.internalResult.password = this.makeComponentString();
            break;
          case f3.HOSTNAME:
            this.internalResult.hostname = this.makeComponentString();
            break;
          case f3.PORT:
            this.internalResult.port = this.makeComponentString();
            break;
          case f3.PATHNAME:
            this.internalResult.pathname = this.makeComponentString();
            break;
          case f3.SEARCH:
            this.internalResult.search = this.makeComponentString();
            break;
          case f3.HASH:
            this.internalResult.hash = this.makeComponentString();
        }
        this.changeStateWithoutSettingComponent(u4, D2);
      }, t3.changeStateWithoutSettingComponent = function(u4, D2) {
        this.state = u4, this.componentStart = this.tokenIndex + D2, this.tokenIndex += D2, this.tokenIncrement = 0;
      }, t3.rewind = function() {
        this.tokenIndex = this.componentStart, this.tokenIncrement = 0;
      }, t3.rewindAndSetState = function(u4) {
        this.rewind(), this.state = u4;
      }, t3.safeToken = function(u4) {
        return u4 < 0 && (u4 = this.tokenList.length - u4), u4 < this.tokenList.length ? this.tokenList[u4] : this.tokenList[this.tokenList.length - 1];
      }, t3.isNonSpecialPatternChar = function(u4, D2) {
        var t4 = this.safeToken(u4);
        return t4.value === D2 && (t4.type === "CHAR" || t4.type === "ESCAPED_CHAR" || t4.type === "INVALID_CHAR");
      }, t3.isProtocolSuffix = function() {
        return this.isNonSpecialPatternChar(this.tokenIndex, ":");
      }, t3.nextIsAuthoritySlashes = function() {
        return this.isNonSpecialPatternChar(this.tokenIndex + 1, "/") && this.isNonSpecialPatternChar(this.tokenIndex + 2, "/");
      }, t3.isIdentityTerminator = function() {
        return this.isNonSpecialPatternChar(this.tokenIndex, "@");
      }, t3.isPasswordPrefix = function() {
        return this.isNonSpecialPatternChar(this.tokenIndex, ":");
      }, t3.isPortPrefix = function() {
        return this.isNonSpecialPatternChar(this.tokenIndex, ":");
      }, t3.isPathnameStart = function() {
        return this.isNonSpecialPatternChar(this.tokenIndex, "/");
      }, t3.isSearchPrefix = function() {
        if (this.isNonSpecialPatternChar(this.tokenIndex, "?"))
          return true;
        if (this.tokenList[this.tokenIndex].value !== "?")
          return false;
        var u4 = this.safeToken(this.tokenIndex - 1);
        return u4.type !== "NAME" && u4.type !== "PATTERN" && u4.type !== "CLOSE" && u4.type !== "ASTERISK";
      }, t3.isHashPrefix = function() {
        return this.isNonSpecialPatternChar(this.tokenIndex, "#");
      }, t3.isGroupOpen = function() {
        return this.tokenList[this.tokenIndex].type == "OPEN";
      }, t3.isGroupClose = function() {
        return this.tokenList[this.tokenIndex].type == "CLOSE";
      }, t3.isIPv6Open = function() {
        return this.isNonSpecialPatternChar(this.tokenIndex, "[");
      }, t3.isIPv6Close = function() {
        return this.isNonSpecialPatternChar(this.tokenIndex, "]");
      }, t3.makeComponentString = function() {
        var u4 = this.tokenList[this.tokenIndex], D2 = this.safeToken(this.componentStart).index;
        return this.input.substring(D2, u4.index);
      }, t3.computeShouldTreatAsStandardURL = function() {
        var u4 = {};
        Object.assign(u4, B), u4.encodePart = g;
        var D2 = a(this.makeComponentString(), void 0, u4);
        this.shouldTreatAsStandardURL = m2(D2);
      }, D(u3, [{ key: "result", get: function() {
        return this.internalResult;
      } }]), u3;
    }();
    I = ["protocol", "username", "password", "hostname", "port", "pathname", "search", "hash"];
    U = function() {
      function u3(u4, D2) {
        u4 === void 0 && (u4 = {}), this.pattern = void 0, this.regexp = {}, this.keys = {}, this.component_pattern = {};
        try {
          if (typeof u4 == "string") {
            var t4 = new b(u4);
            if (t4.parse(), u4 = t4.result, D2) {
              if (typeof D2 != "string")
                throw new TypeError("'baseURL' parameter is not of type 'string'.");
              u4.baseURL = D2;
            } else if (typeof u4.protocol != "string")
              throw new TypeError("A base URL must be provided for a relative constructor string.");
          } else if (D2)
            throw new TypeError("parameter 1 is not of type 'string'.");
          if (!u4 || typeof u4 != "object")
            throw new TypeError("parameter 1 is not of type 'string' and cannot convert to dictionary.");
          var e3;
          this.pattern = H({ pathname: "*", protocol: "*", username: "*", password: "*", hostname: "*", port: "*", search: "*", hash: "*" }, u4, true), d(this.pattern.protocol) === this.pattern.port && (this.pattern.port = "");
          for (var C2, A3 = F2(I); !(C2 = A3()).done; )
            if ((e3 = C2.value) in this.pattern) {
              var E2 = {}, r3 = this.pattern[e3];
              switch (this.keys[e3] = [], e3) {
                case "protocol":
                  Object.assign(E2, B), E2.encodePart = g;
                  break;
                case "username":
                  Object.assign(E2, B), E2.encodePart = x2;
                  break;
                case "password":
                  Object.assign(E2, B), E2.encodePart = S2;
                  break;
                case "hostname":
                  Object.assign(E2, o), E2.encodePart = c(r3) ? y : v;
                  break;
                case "port":
                  Object.assign(E2, B), E2.encodePart = R;
                  break;
                case "pathname":
                  m2(this.regexp.protocol) ? (Object.assign(E2, h2), E2.encodePart = k) : (Object.assign(E2, B), E2.encodePart = w);
                  break;
                case "search":
                  Object.assign(E2, B), E2.encodePart = P;
                  break;
                case "hash":
                  Object.assign(E2, B), E2.encodePart = T;
              }
              try {
                var i3 = n(r3, E2);
                this.regexp[e3] = s2(i3, this.keys[e3], E2), this.component_pattern[e3] = L(i3, E2);
              } catch (u5) {
                throw new TypeError("invalid " + e3 + " pattern '" + this.pattern[e3] + "'.");
              }
            }
        } catch (u5) {
          throw new TypeError("Failed to construct 'URLPattern': " + u5.message);
        }
      }
      var t3 = u3.prototype;
      return t3.test = function(u4, D2) {
        u4 === void 0 && (u4 = {});
        var t4, F3 = { pathname: "", protocol: "", username: "", password: "", hostname: "", port: "", search: "", hash: "" };
        if (typeof u4 != "string" && D2)
          throw new TypeError("parameter 1 is not of type 'string'.");
        if (u4 === void 0)
          return false;
        try {
          F3 = H(F3, typeof u4 == "object" ? u4 : O(u4, D2), false);
        } catch (u5) {
          return false;
        }
        for (t4 in this.pattern)
          if (!this.regexp[t4].exec(F3[t4]))
            return false;
        return true;
      }, t3.exec = function(u4, D2) {
        u4 === void 0 && (u4 = {});
        var t4 = { pathname: "", protocol: "", username: "", password: "", hostname: "", port: "", search: "", hash: "" };
        if (typeof u4 != "string" && D2)
          throw new TypeError("parameter 1 is not of type 'string'.");
        if (u4 !== void 0) {
          try {
            t4 = H(t4, typeof u4 == "object" ? u4 : O(u4, D2), false);
          } catch (u5) {
            return null;
          }
          var e3, C2 = {};
          for (e3 in C2.inputs = D2 ? [u4, D2] : [u4], this.pattern) {
            var A3 = this.regexp[e3].exec(t4[e3]);
            if (!A3)
              return null;
            for (var E2, n2 = {}, r3 = F2(this.keys[e3].entries()); !(E2 = r3()).done; ) {
              var i3 = E2.value, s4 = i3[1];
              typeof s4.name != "string" && typeof s4.name != "number" || (n2[s4.name] = A3[i3[0] + 1] || "");
            }
            C2[e3] = { input: t4[e3] || "", groups: n2 };
          }
          return C2;
        }
      }, D(u3, [{ key: "protocol", get: function() {
        return this.component_pattern.protocol;
      } }, { key: "username", get: function() {
        return this.component_pattern.username;
      } }, { key: "password", get: function() {
        return this.component_pattern.password;
      } }, { key: "hostname", get: function() {
        return this.component_pattern.hostname;
      } }, { key: "port", get: function() {
        return this.component_pattern.port;
      } }, { key: "pathname", get: function() {
        return this.component_pattern.pathname;
      } }, { key: "search", get: function() {
        return this.component_pattern.search;
      } }, { key: "hash", get: function() {
        return this.component_pattern.hash;
      } }]), u3;
    }();
    INTERNAL = { tick: 0, pool: /* @__PURE__ */ new Map() };
    PRIMITIVE = 0;
    ARRAY = 1;
    OBJECT = 2;
    DATE = 3;
    REGEXP = 4;
    MAP = 5;
    SET = 6;
    ERROR = 7;
    BIGINT = 8;
    env = typeof self === "object" ? self : globalThis;
    deserializer = ($3, _) => {
      const as = (out, index2) => {
        $3.set(index2, out);
        return out;
      };
      const unpair = (index2) => {
        if ($3.has(index2))
          return $3.get(index2);
        const [type, value] = _[index2];
        switch (type) {
          case PRIMITIVE:
            return as(value, index2);
          case ARRAY: {
            const arr = as([], index2);
            for (const index3 of value)
              arr.push(unpair(index3));
            return arr;
          }
          case OBJECT: {
            const object = as({}, index2);
            for (const [key2, index3] of value)
              object[unpair(key2)] = unpair(index3);
            return object;
          }
          case DATE:
            return as(new Date(value), index2);
          case REGEXP: {
            const { source, flags: flags2 } = value;
            return as(new RegExp(source, flags2), index2);
          }
          case MAP: {
            const map3 = as(/* @__PURE__ */ new Map(), index2);
            for (const [key2, index3] of value)
              map3.set(unpair(key2), unpair(index3));
            return map3;
          }
          case SET: {
            const set = as(/* @__PURE__ */ new Set(), index2);
            for (const index3 of value)
              set.add(unpair(index3));
            return set;
          }
          case ERROR: {
            const { name, message } = value;
            return as(new env[name](message), index2);
          }
          case BIGINT:
            return as(BigInt(value), index2);
          case "BigInt":
            return as(Object(BigInt(value)), index2);
        }
        return as(new env[type](value), index2);
      };
      return unpair;
    };
    deserialize = (serialized) => deserializer(/* @__PURE__ */ new Map(), serialized)(0);
    EMPTY = "";
    ({ toString } = {});
    ({ keys } = Object);
    typeOf = (value) => {
      const type = typeof value;
      if (type !== "object" || !value)
        return [PRIMITIVE, type];
      const asString = toString.call(value).slice(8, -1);
      switch (asString) {
        case "Array":
          return [ARRAY, EMPTY];
        case "Object":
          return [OBJECT, EMPTY];
        case "Date":
          return [DATE, EMPTY];
        case "RegExp":
          return [REGEXP, EMPTY];
        case "Map":
          return [MAP, EMPTY];
        case "Set":
          return [SET, EMPTY];
      }
      if (asString.includes("Array"))
        return [ARRAY, asString];
      if (asString.includes("Error"))
        return [ERROR, asString];
      return [OBJECT, asString];
    };
    shouldSkip = ([TYPE, type]) => TYPE === PRIMITIVE && (type === "function" || type === "symbol");
    serializer = (strict, json, $3, _) => {
      const as = (out, value) => {
        const index2 = _.push(out) - 1;
        $3.set(value, index2);
        return index2;
      };
      const pair = (value) => {
        if ($3.has(value))
          return $3.get(value);
        let [TYPE, type] = typeOf(value);
        switch (TYPE) {
          case PRIMITIVE: {
            let entry = value;
            switch (type) {
              case "bigint":
                TYPE = BIGINT;
                entry = value.toString();
                break;
              case "function":
              case "symbol":
                if (strict)
                  throw new TypeError("unable to serialize " + type);
                entry = null;
                break;
            }
            return as([TYPE, entry], value);
          }
          case ARRAY: {
            if (type)
              return as([type, [...value]], value);
            const arr = [];
            const index2 = as([TYPE, arr], value);
            for (const entry of value)
              arr.push(pair(entry));
            return index2;
          }
          case OBJECT: {
            if (type) {
              switch (type) {
                case "BigInt":
                  return as([type, value.toString()], value);
                case "Boolean":
                case "Number":
                case "String":
                  return as([type, value.valueOf()], value);
              }
            }
            if (json && "toJSON" in value)
              return pair(value.toJSON());
            const entries = [];
            const index2 = as([TYPE, entries], value);
            for (const key2 of keys(value)) {
              if (strict || !shouldSkip(typeOf(value[key2])))
                entries.push([pair(key2), pair(value[key2])]);
            }
            return index2;
          }
          case DATE:
            return as([TYPE, value.toISOString()], value);
          case REGEXP: {
            const { source, flags: flags2 } = value;
            return as([TYPE, { source, flags: flags2 }], value);
          }
          case MAP: {
            const entries = [];
            const index2 = as([TYPE, entries], value);
            for (const [key2, entry] of value) {
              if (strict || !(shouldSkip(typeOf(key2)) || shouldSkip(typeOf(entry))))
                entries.push([pair(key2), pair(entry)]);
            }
            return index2;
          }
          case SET: {
            const entries = [];
            const index2 = as([TYPE, entries], value);
            for (const entry of value) {
              if (strict || !shouldSkip(typeOf(entry)))
                entries.push(pair(entry));
            }
            return index2;
          }
        }
        const { message } = value;
        return as([TYPE, { name: type, message }], value);
      };
      return pair;
    };
    serialize = (value, { json, lossy } = {}) => {
      const _ = [];
      return serializer(!(json || lossy), !!json, /* @__PURE__ */ new Map(), _)(value), _;
    };
    structuredClone = (any2, options) => deserialize(serialize(any2, options));
    ImageData = class {
      constructor(arg0, arg1, ...args) {
        if (arguments.length < 2)
          throw new TypeError(`Failed to construct 'ImageData': 2 arguments required.`);
        const hasData = __object_isPrototypeOf(Uint8ClampedArray.prototype, arg0);
        const d2 = hasData ? arg0 : new Uint8ClampedArray(asNumber(arg0, "width") * asNumber(arg1, "height") * 4);
        const w2 = asNumber(hasData ? arg1 : arg0, "width");
        const h4 = d2.length / w2 / 4;
        const c2 = String(Object(hasData ? args[1] : args[0]).colorSpace || "srgb");
        if (args.length && asNumber(args[0], "height") !== h4)
          throw new DOMException3("height is not equal to (4 * width * height)", "IndexSizeError");
        if (c2 !== "srgb" && c2 !== "rec2020" && c2 !== "display-p3")
          throw new TypeError("colorSpace is not known value");
        Object.defineProperty(this, "data", {
          configurable: true,
          enumerable: true,
          value: d2
        });
        INTERNALS4.set(this, {
          width: w2,
          height: h4,
          colorSpace: c2
        });
      }
      get data() {
        internalsOf(this, "ImageData", "data");
        return Object.getOwnPropertyDescriptor(this, "data").value;
      }
      get width() {
        return internalsOf(this, "ImageData", "width").width;
      }
      get height() {
        return internalsOf(this, "ImageData", "height").height;
      }
    };
    allowStringTag(ImageData);
    asNumber = (value, axis) => {
      value = Number(value) || 0;
      if (value === 0)
        throw new TypeError(`The source ${axis} is zero or not a number.`);
      return value;
    };
    CanvasRenderingContext2D = class {
      get canvas() {
        return internalsOf(this, "CanvasRenderingContext2D", "canvas").canvas;
      }
      get direction() {
        return internalsOf(this, "CanvasRenderingContext2D", "direction").direction;
      }
      get fillStyle() {
        return internalsOf(this, "CanvasRenderingContext2D", "fillStyle").fillStyle;
      }
      get filter() {
        return internalsOf(this, "CanvasRenderingContext2D", "filter").filter;
      }
      get globalAlpha() {
        return internalsOf(this, "CanvasRenderingContext2D", "globalAlpha").globalAlpha;
      }
      get globalCompositeOperation() {
        return internalsOf(this, "CanvasRenderingContext2D", "globalCompositeOperation").globalCompositeOperation;
      }
      get font() {
        return internalsOf(this, "CanvasRenderingContext2D", "font").font;
      }
      get imageSmoothingEnabled() {
        return internalsOf(this, "CanvasRenderingContext2D", "imageSmoothingEnabled").imageSmoothingEnabled;
      }
      get imageSmoothingQuality() {
        return internalsOf(this, "CanvasRenderingContext2D", "imageSmoothingQuality").imageSmoothingQuality;
      }
      get lineCap() {
        return internalsOf(this, "CanvasRenderingContext2D", "lineCap").lineCap;
      }
      get lineDashOffset() {
        return internalsOf(this, "CanvasRenderingContext2D", "lineDashOffset").lineDashOffset;
      }
      get lineJoin() {
        return internalsOf(this, "CanvasRenderingContext2D", "lineJoin").lineJoin;
      }
      get lineWidth() {
        return internalsOf(this, "CanvasRenderingContext2D", "lineWidth").lineWidth;
      }
      get miterLimit() {
        return internalsOf(this, "CanvasRenderingContext2D", "miterLimit").miterLimit;
      }
      get strokeStyle() {
        return internalsOf(this, "CanvasRenderingContext2D", "strokeStyle").strokeStyle;
      }
      get shadowOffsetX() {
        return internalsOf(this, "CanvasRenderingContext2D", "shadowOffsetX").shadowOffsetX;
      }
      get shadowOffsetY() {
        return internalsOf(this, "CanvasRenderingContext2D", "shadowOffsetY").shadowOffsetY;
      }
      get shadowBlur() {
        return internalsOf(this, "CanvasRenderingContext2D", "shadowBlur").shadowBlur;
      }
      get shadowColor() {
        return internalsOf(this, "CanvasRenderingContext2D", "shadowColor").shadowColor;
      }
      get textAlign() {
        return internalsOf(this, "CanvasRenderingContext2D", "textAlign").textAlign;
      }
      get textBaseline() {
        return internalsOf(this, "CanvasRenderingContext2D", "textBaseline").textBaseline;
      }
      arc() {
      }
      arcTo() {
      }
      beginPath() {
      }
      bezierCurveTo() {
      }
      clearRect() {
      }
      clip() {
      }
      closePath() {
      }
      createImageData(arg0, arg1) {
        const hasData = __object_isPrototypeOf(ImageData.prototype, arg0);
        const w2 = hasData ? arg0.width : arg0;
        const h4 = hasData ? arg0.height : arg1;
        const d2 = hasData ? arg0.data : new Uint8ClampedArray(w2 * h4 * 4);
        return new ImageData(d2, w2, h4);
      }
      createLinearGradient() {
      }
      createPattern() {
      }
      createRadialGradient() {
      }
      drawFocusIfNeeded() {
      }
      drawImage() {
      }
      ellipse() {
      }
      fill() {
      }
      fillRect() {
      }
      fillText() {
      }
      getContextAttributes() {
      }
      getImageData() {
      }
      getLineDash() {
      }
      getTransform() {
      }
      isPointInPath() {
      }
      isPointInStroke() {
      }
      lineTo() {
      }
      measureText() {
      }
      moveTo() {
      }
      putImageData() {
      }
      quadraticCurveTo() {
      }
      rect() {
      }
      resetTransform() {
      }
      restore() {
      }
      rotate() {
      }
      save() {
      }
      scale() {
      }
      setLineDash() {
      }
      setTransform() {
      }
      stroke() {
      }
      strokeRect() {
      }
      strokeText() {
      }
      transform() {
      }
      translate() {
      }
    };
    allowStringTag(CanvasRenderingContext2D);
    __createCanvasRenderingContext2D = (canvas) => {
      const renderingContext2D = Object.create(CanvasRenderingContext2D.prototype);
      INTERNALS4.set(renderingContext2D, {
        canvas,
        direction: "inherit",
        fillStyle: "#000",
        filter: "none",
        font: "10px sans-serif",
        globalAlpha: 0,
        globalCompositeOperation: "source-over",
        imageSmoothingEnabled: false,
        imageSmoothingQuality: "high",
        lineCap: "butt",
        lineDashOffset: 0,
        lineJoin: "miter",
        lineWidth: 1,
        miterLimit: 10,
        shadowBlur: 0,
        shadowColor: "#000",
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        strokeStyle: "#000",
        textAlign: "start",
        textBaseline: "alphabetic"
      });
      return renderingContext2D;
    };
    StyleSheet = class {
    };
    CSSStyleSheet = class extends StyleSheet {
      async replace(text8) {
        return new CSSStyleSheet();
      }
      replaceSync(text8) {
        return new CSSStyleSheet();
      }
      get cssRules() {
        return [];
      }
    };
    allowStringTag(StyleSheet);
    allowStringTag(CSSStyleSheet);
    CustomElementRegistry = class {
      define(name, constructor, options) {
        const internals = internalsOf(this, "CustomElementRegistry", "define");
        name = String(name);
        if (/[A-Z]/.test(name))
          throw new SyntaxError("Custom element name cannot contain an uppercase ASCII letter");
        if (!/^[a-z]/.test(name))
          throw new SyntaxError("Custom element name must have a lowercase ASCII letter as its first character");
        if (!/-/.test(name))
          throw new SyntaxError("Custom element name must contain a hyphen");
        INTERNALS4.set(constructor, {
          attributes: {},
          localName: name
        });
        internals.constructorByName.set(name, constructor);
        internals.nameByConstructor.set(constructor, name);
      }
      get(name) {
        const internals = internalsOf(this, "CustomElementRegistry", "get");
        name = String(name).toLowerCase();
        return internals.constructorByName.get(name);
      }
      getName(constructor) {
        const internals = internalsOf(this, "CustomElementRegistry", "getName");
        return internals.nameByConstructor.get(constructor);
      }
    };
    allowStringTag(CustomElementRegistry);
    initCustomElementRegistry = (target, exclude) => {
      if (exclude.has("customElements"))
        return;
      const CustomElementRegistry2 = target.CustomElementRegistry || globalThis.CustomElementRegistry;
      const customElements2 = target.customElements = Object.create(CustomElementRegistry2.prototype);
      INTERNALS4.set(customElements2, {
        constructorByName: /* @__PURE__ */ new Map(),
        nameByConstructor: /* @__PURE__ */ new Map()
      });
    };
    Element2 = class extends Node {
      constructor() {
        super();
        if (INTERNALS4.has(new.target)) {
          const internals = internalsOf(new.target, "Element", "localName");
          INTERNALS4.set(this, {
            attributes: {},
            localName: internals.localName,
            ownerDocument: this.ownerDocument,
            shadowInit: null,
            shadowRoot: null
          });
        }
      }
      hasAttribute(name) {
        return false;
      }
      getAttribute(name) {
        return null;
      }
      setAttribute(name, value) {
      }
      removeAttribute(name) {
      }
      attachShadow(init2) {
        if (arguments.length < 1)
          throw new TypeError(`Failed to execute 'attachShadow' on 'Element': 1 argument required, but only 0 present.`);
        if (init2 !== Object(init2))
          throw new TypeError(`Failed to execute 'attachShadow' on 'Element': The provided value is not of type 'ShadowRootInit'.`);
        if (init2.mode !== "open" && init2.mode !== "closed")
          throw new TypeError(`Failed to execute 'attachShadow' on 'Element': Failed to read the 'mode' property from 'ShadowRootInit': The provided value '${init2.mode}' is not a valid enum value of type ShadowRootMode.`);
        const internals = internalsOf(this, "Element", "attachShadow");
        if (internals.shadowRoot)
          throw new Error("The operation is not supported.");
        internals.shadowInit = internals.shadowInit || {
          mode: init2.mode,
          delegatesFocus: Boolean(init2.delegatesFocus)
        };
        internals.shadowRoot = internals.shadowRoot || (/^open$/.test(internals.shadowInit.mode) ? Object.setPrototypeOf(new EventTarget(), ShadowRoot.prototype) : null);
        return internals.shadowRoot;
      }
      get assignedSlot() {
        return null;
      }
      get innerHTML() {
        internalsOf(this, "Element", "innerHTML");
        return "";
      }
      set innerHTML(value) {
        internalsOf(this, "Element", "innerHTML");
      }
      get shadowRoot() {
        const internals = internalsOf(this, "Element", "shadowRoot");
        return Object(internals.shadowInit).mode === "open" ? internals.shadowRoot : null;
      }
      get localName() {
        return internalsOf(this, "Element", "localName").localName;
      }
      get nodeName() {
        return internalsOf(this, "Element", "nodeName").localName.toUpperCase();
      }
      get tagName() {
        return internalsOf(this, "Element", "tagName").localName.toUpperCase();
      }
    };
    HTMLElement2 = class extends Element2 {
    };
    HTMLBodyElement = class extends HTMLElement2 {
    };
    HTMLDivElement = class extends HTMLElement2 {
    };
    HTMLHeadElement = class extends HTMLElement2 {
    };
    HTMLHtmlElement = class extends HTMLElement2 {
    };
    HTMLSpanElement = class extends HTMLElement2 {
    };
    HTMLStyleElement = class extends HTMLElement2 {
    };
    HTMLTemplateElement = class extends HTMLElement2 {
    };
    HTMLUnknownElement = class extends HTMLElement2 {
    };
    allowStringTag(Element2);
    allowStringTag(HTMLElement2);
    allowStringTag(HTMLBodyElement);
    allowStringTag(HTMLDivElement);
    allowStringTag(HTMLHeadElement);
    allowStringTag(HTMLHtmlElement);
    allowStringTag(HTMLSpanElement);
    allowStringTag(HTMLStyleElement);
    allowStringTag(HTMLTemplateElement);
    allowStringTag(HTMLUnknownElement);
    Document = class extends Node {
      createElement(name) {
        const internals = internalsOf(this, "Document", "createElement");
        const customElementInternals = INTERNALS4.get(internals.target.customElements);
        name = String(name).toLowerCase();
        const TypeOfHTMLElement = internals.constructorByName.get(name) || customElementInternals && customElementInternals.constructorByName.get(name) || HTMLUnknownElement;
        const element6 = Object.setPrototypeOf(new EventTarget(), TypeOfHTMLElement.prototype);
        INTERNALS4.set(element6, {
          attributes: {},
          localName: name,
          ownerDocument: this,
          shadowInit: null,
          shadowRoot: null
        });
        return element6;
      }
      createNodeIterator(root5, whatToShow = NodeFilter.SHOW_ALL, filter) {
        const target = Object.create(NodeIterator.prototype);
        INTERNALS4.set(target, {
          filter,
          pointerBeforeReferenceNode: false,
          referenceNode: root5,
          root: root5,
          whatToShow
        });
        return target;
      }
      createTextNode(data3) {
        return new Text(data3);
      }
      createTreeWalker(root5, whatToShow = NodeFilter.SHOW_ALL, filter, expandEntityReferences) {
        const target = Object.create(TreeWalker.prototype);
        INTERNALS4.set(target, {
          filter,
          currentNode: root5,
          root: root5,
          whatToShow
        });
        return target;
      }
      get adoptedStyleSheets() {
        return [];
      }
      get styleSheets() {
        return [];
      }
    };
    HTMLDocument = class extends Document {
    };
    allowStringTag(Document);
    allowStringTag(HTMLDocument);
    initDocument = (target, exclude) => {
      if (exclude.has("document"))
        return;
      const EventTarget2 = target.EventTarget || globalThis.EventTarget;
      const HTMLDocument2 = target.HTMLDocument || globalThis.HTMLDocument;
      const document4 = target.document = Object.setPrototypeOf(new EventTarget2(), HTMLDocument2.prototype);
      INTERNALS4.set(document4, {
        target,
        constructorByName: /* @__PURE__ */ new Map([
          ["body", target.HTMLBodyElement],
          ["canvas", target.HTMLCanvasElement],
          ["div", target.HTMLDivElement],
          ["head", target.HTMLHeadElement],
          ["html", target.HTMLHtmlElement],
          ["img", target.HTMLImageElement],
          ["span", target.HTMLSpanElement],
          ["style", target.HTMLStyleElement]
        ]),
        nameByConstructor: /* @__PURE__ */ new Map()
      });
      const initElement = (name, Class) => {
        const target2 = Object.setPrototypeOf(new EventTarget2(), Class.prototype);
        INTERNALS4.set(target2, {
          attributes: {},
          localName: name,
          ownerDocument: document4,
          shadowRoot: null,
          shadowInit: null
        });
        return target2;
      };
      document4.body = initElement("body", target.HTMLBodyElement);
      document4.head = initElement("head", target.HTMLHeadElement);
      document4.documentElement = initElement("html", target.HTMLHtmlElement);
    };
    HTMLCanvasElement = class extends HTMLElement2 {
      get height() {
        return internalsOf(this, "HTMLCanvasElement", "height").height;
      }
      set height(value) {
        internalsOf(this, "HTMLCanvasElement", "height").height = Number(value) || 0;
      }
      get width() {
        return internalsOf(this, "HTMLCanvasElement", "width").width;
      }
      set width(value) {
        internalsOf(this, "HTMLCanvasElement", "width").width = Number(value) || 0;
      }
      captureStream() {
        return null;
      }
      getContext(contextType) {
        const internals = internalsOf(this, "HTMLCanvasElement", "getContext");
        switch (contextType) {
          case "2d":
            if (internals.renderingContext2D)
              return internals.renderingContext2D;
            internals.renderingContext2D = __createCanvasRenderingContext2D(this);
            return internals.renderingContext2D;
          default:
            return null;
        }
      }
      toBlob() {
      }
      toDataURL() {
      }
      transferControlToOffscreen() {
      }
    };
    allowStringTag(HTMLCanvasElement);
    HTMLImageElement = class extends HTMLElement2 {
      get src() {
        return internalsOf(this, "HTMLImageElement", "src").src;
      }
      set src(value) {
        const internals = internalsOf(this, "HTMLImageElement", "src");
        internals.src = String(value);
      }
    };
    allowStringTag(HTMLImageElement);
    Image.prototype = HTMLImageElement.prototype;
    IntersectionObserver = class {
      disconnect() {
      }
      observe() {
      }
      takeRecords() {
        return [];
      }
      unobserve() {
      }
    };
    MutationObserver = class {
      disconnect() {
      }
      observe() {
      }
      takeRecords() {
        return [];
      }
      unobserve() {
      }
    };
    ResizeObserver = class {
      disconnect() {
      }
      observe() {
      }
      takeRecords() {
        return [];
      }
      unobserve() {
      }
    };
    allowStringTag(MutationObserver);
    allowStringTag(IntersectionObserver);
    allowStringTag(ResizeObserver);
    MediaQueryList = class extends EventTarget {
      get matches() {
        return internalsOf(this, "MediaQueryList", "matches").matches;
      }
      get media() {
        return internalsOf(this, "MediaQueryList", "media").media;
      }
    };
    allowStringTag(MediaQueryList);
    initMediaQueryList = (target, exclude) => {
      if (exclude.has("MediaQueryList") || exclude.has("matchMedia"))
        return;
      const EventTarget2 = target.EventTarget || globalThis.EventTarget;
      const MediaQueryList2 = target.MediaQueryList || globalThis.MediaQueryList;
      target.matchMedia = function matchMedia(media) {
        const mql = Object.setPrototypeOf(new EventTarget2(), MediaQueryList2.prototype);
        INTERNALS4.set(mql, {
          matches: false,
          media
        });
        return mql;
      };
    };
    OffscreenCanvas = class extends EventTarget {
      constructor(width, height) {
        super();
        if (arguments.length < 2)
          throw new TypeError(`Failed to construct 'OffscreenCanvas': 2 arguments required.`);
        width = Number(width) || 0;
        height = Number(height) || 0;
        INTERNALS4.set(this, { width, height });
      }
      get height() {
        return internalsOf(this, "OffscreenCanvas", "height").height;
      }
      set height(value) {
        internalsOf(this, "OffscreenCanvas", "height").height = Number(value) || 0;
      }
      get width() {
        return internalsOf(this, "OffscreenCanvas", "width").width;
      }
      set width(value) {
        internalsOf(this, "OffscreenCanvas", "width").width = Number(value) || 0;
      }
      getContext(contextType) {
        const internals = internalsOf(this, "HTMLCanvasElement", "getContext");
        switch (contextType) {
          case "2d":
            if (internals.renderingContext2D)
              return internals.renderingContext2D;
            internals.renderingContext2D = __createCanvasRenderingContext2D(this);
            return internals.renderingContext2D;
          default:
            return null;
        }
      }
      convertToBlob(options) {
        options = Object(options);
        Number(options.quality) || 0;
        const type = getImageType(String(options.type).trim().toLowerCase());
        return Promise.resolve(new Blob2([], { type }));
      }
    };
    allowStringTag(OffscreenCanvas);
    getImageType = (type) => type === "image/avif" || type === "image/jpeg" || type === "image/png" || type === "image/webp" ? type : "image/png";
    Storage = class {
      clear() {
        internalsOf(this, "Storage", "clear").storage.clear();
      }
      getItem(key2) {
        return getStringOrNull(internalsOf(this, "Storage", "getItem").storage.get(String(key2)));
      }
      key(index2) {
        return getStringOrNull([
          ...internalsOf(this, "Storage", "key").storage.keys()
        ][Number(index2) || 0]);
      }
      removeItem(key2) {
        internalsOf(this, "Storage", "getItem").storage.delete(String(key2));
      }
      setItem(key2, value) {
        internalsOf(this, "Storage", "getItem").storage.set(String(key2), String(value));
      }
      get length() {
        return internalsOf(this, "Storage", "size").storage.size;
      }
    };
    getStringOrNull = (value) => typeof value === "string" ? value : null;
    initStorage = (target, exclude) => {
      if (exclude.has("Storage") || exclude.has("localStorage"))
        return;
      target.localStorage = Object.create(Storage.prototype);
      const storageInternals = /* @__PURE__ */ new Map();
      INTERNALS4.set(target.localStorage, {
        storage: storageInternals
      });
    };
    Window = class extends EventTarget {
      get self() {
        return this;
      }
      get top() {
        return this;
      }
      get window() {
        return this;
      }
      get innerHeight() {
        return 0;
      }
      get innerWidth() {
        return 0;
      }
      get scrollX() {
        return 0;
      }
      get scrollY() {
        return 0;
      }
    };
    allowStringTag(Window);
    initWindow = (target, exclude) => {
      if (exclude.has("Window") || exclude.has("window"))
        return;
      target.window = target;
    };
    hasOwn = {
      hasOwn(instance, property) {
        return __object_hasOwnProperty(instance, property);
      }
    }.hasOwn;
    initObject = (target, exclude) => {
      if (exclude.has("Object") || exclude.has("object") || exclude.has("hasOwn"))
        return;
      const Class = target.Object || globalThis.Object;
      Object.defineProperty(Class, "hasOwn", {
        value: hasOwn,
        writable: true,
        enumerable: false,
        configurable: true
      });
    };
    any = {
      async any(iterable) {
        return Promise.all([...iterable].map((promise) => {
          return new Promise((resolve2, reject) => Promise.resolve(promise).then(reject, resolve2));
        })).then((errors) => Promise.reject(errors), (value) => Promise.resolve(value));
      }
    }.any;
    initPromise = (target, exclude) => {
      if (exclude.has("Promise") || exclude.has("any"))
        return;
      const Class = target.Promise || globalThis.Promise;
      if (!Class.any)
        Object.defineProperty(Class, "any", {
          value: any,
          writable: true,
          enumerable: false,
          configurable: true
        });
    };
    at = {
      at(index2) {
        index2 = Math.trunc(index2) || 0;
        if (index2 < 0)
          index2 += this.length;
        if (index2 < 0 || index2 >= this.length)
          return void 0;
        return this[index2];
      }
    }.at;
    initRelativeIndexingMethod = (target, exclude) => {
      if (exclude.has("at"))
        return;
      const Classes = [];
      if (!exclude.has("TypedArray"))
        Classes.push(Object.getPrototypeOf(target.Int8Array || globalThis.Int8Array));
      if (!exclude.has("Array"))
        Classes.push(target.Array || globalThis.Array);
      if (!exclude.has("String"))
        Classes.push(target.String || globalThis.String);
      for (const Class of Classes) {
        if (!Class.prototype.at)
          Object.defineProperty(Class.prototype, "at", {
            value: at,
            writable: true,
            enumerable: false,
            configurable: true
          });
      }
    };
    replaceAll = {
      replaceAll(searchValue, replaceValue) {
        return __object_isPrototypeOf(RegExp.prototype, searchValue) ? this.replace(searchValue, replaceValue) : this.replace(new RegExp(__string_escapeRegExp(searchValue), "g"), replaceValue);
      }
    }.replaceAll;
    initString = (target, exclude) => {
      if (exclude.has("String") || exclude.has("replaceAll"))
        return;
      const Class = target.String || globalThis.String;
      if (!Class.prototype.replaceAll)
        Object.defineProperty(Class.prototype, "replaceAll", {
          value: replaceAll,
          writable: true,
          enumerable: false,
          configurable: true
        });
    };
    exclusionsForHTMLElement = [
      "CustomElementsRegistry",
      "HTMLElement",
      "HTMLBodyElement",
      "HTMLCanvasElement",
      "HTMLDivElement",
      "HTMLHeadElement",
      "HTMLHtmlElement",
      "HTMLImageElement",
      "HTMLStyleElement",
      "HTMLTemplateElement",
      "HTMLUnknownElement",
      "Image"
    ];
    exclusionsForElement = ["Element", ...exclusionsForHTMLElement];
    exclusionsForDocument = [
      "CustomElementsRegistry",
      "Document",
      "HTMLDocument",
      "document",
      "customElements"
    ];
    exclusionsForNode = [
      "Node",
      "DocumentFragment",
      "ShadowRoot",
      ...exclusionsForDocument,
      ...exclusionsForElement
    ];
    exclusionsForEventTarget = [
      "AbortSignal",
      "Event",
      "CustomEvent",
      "EventTarget",
      "OffscreenCanvas",
      "MediaQueryList",
      "Window",
      ...exclusionsForNode
    ];
    exclusionsForEvent = [
      "AbortSignal",
      "Event",
      "CustomEvent",
      "EventTarget",
      "MediaQueryList",
      "OffscreenCanvas",
      "Window",
      ...exclusionsForNode
    ];
    exclusions = {
      "Blob+": ["Blob", "File"],
      "Document+": exclusionsForDocument,
      "Element+": exclusionsForElement,
      "Event+": exclusionsForEvent,
      "EventTarget+": exclusionsForEventTarget,
      "HTMLElement+": exclusionsForHTMLElement,
      "Node+": exclusionsForNode,
      "StyleSheet+": ["StyleSheet", "CSSStyleSheet"]
    };
    inheritence = {
      CSSStyleSheet: "StyleSheet",
      CustomEvent: "Event",
      DOMException: "Error",
      Document: "Node",
      DocumentFragment: "Node",
      Element: "Node",
      File: "Blob",
      HTMLDocument: "Document",
      HTMLElement: "Element",
      HTMLBodyElement: "HTMLElement",
      HTMLCanvasElement: "HTMLElement",
      HTMLDivElement: "HTMLElement",
      HTMLHeadElement: "HTMLElement",
      HTMLHtmlElement: "HTMLElement",
      HTMLImageElement: "HTMLElement",
      HTMLSpanElement: "HTMLElement",
      HTMLStyleElement: "HTMLElement",
      HTMLTemplateElement: "HTMLElement",
      HTMLUnknownElement: "HTMLElement",
      Image: "HTMLElement",
      MediaQueryList: "EventTarget",
      Node: "EventTarget",
      OffscreenCanvas: "EventTarget",
      ShadowRoot: "DocumentFragment",
      Window: "EventTarget"
    };
    polyfill = (target, options) => {
      const webAPIs = {
        AbortController: AbortController2,
        AbortSignal,
        Blob: Blob2,
        ByteLengthQueuingStrategy,
        CanvasRenderingContext2D,
        CharacterData,
        Comment,
        CountQueuingStrategy,
        CSSStyleSheet,
        CustomElementRegistry,
        CustomEvent,
        Document,
        DocumentFragment,
        DOMException: DOMException3,
        Element: Element2,
        Event,
        EventTarget,
        File: File2,
        FormData: FormData2,
        HTMLDocument,
        HTMLElement: HTMLElement2,
        HTMLBodyElement,
        HTMLCanvasElement,
        HTMLDivElement,
        HTMLHeadElement,
        HTMLHtmlElement,
        HTMLImageElement,
        HTMLSpanElement,
        HTMLStyleElement,
        HTMLTemplateElement,
        HTMLUnknownElement,
        Headers: Headers2,
        IntersectionObserver,
        Image,
        ImageData,
        MediaQueryList,
        MutationObserver,
        Node,
        NodeFilter: NodeFilter$1,
        NodeIterator: NodeIterator$1,
        OffscreenCanvas,
        ReadableByteStreamController,
        ReadableStream: ReadableStream2,
        ReadableStreamBYOBReader,
        ReadableStreamBYOBRequest,
        ReadableStreamDefaultController,
        ReadableStreamDefaultReader,
        Request: Request2,
        ResizeObserver,
        Response: Response2,
        ShadowRoot,
        Storage,
        StyleSheet,
        Text,
        TransformStream,
        TreeWalker,
        URLPattern: U,
        WritableStream,
        WritableStreamDefaultController,
        WritableStreamDefaultWriter,
        Window,
        alert,
        atob,
        btoa,
        cancelAnimationFrame,
        cancelIdleCallback,
        clearTimeout: clearTimeout2,
        fetch: fetch3,
        requestAnimationFrame,
        requestIdleCallback,
        setTimeout: setTimeout2,
        structuredClone
      };
      const excludeOptions = new Set(typeof Object(options).exclude === "string" ? String(Object(options).exclude).trim().split(/\s+/) : Array.isArray(Object(options).exclude) ? Object(options).exclude.reduce((array, entry) => array.splice(array.length, 0, ...typeof entry === "string" ? entry.trim().split(/\s+/) : []) && array, []) : []);
      for (const excludeOption of excludeOptions) {
        if (excludeOption in exclusions) {
          for (const exclusion of exclusions[excludeOption]) {
            excludeOptions.add(exclusion);
          }
        }
      }
      for (const name of Object.keys(webAPIs)) {
        if (excludeOptions.has(name))
          continue;
        if (Object.hasOwnProperty.call(target, name))
          continue;
        Object.defineProperty(target, name, {
          configurable: true,
          enumerable: true,
          writable: true,
          value: webAPIs[name]
        });
      }
      for (const name of Object.keys(webAPIs)) {
        if (excludeOptions.has(name))
          continue;
        if (!Object.hasOwnProperty.call(inheritence, name))
          continue;
        const Class = target[name];
        const Super = target[inheritence[name]];
        if (!Class || !Super)
          continue;
        if (Object.getPrototypeOf(Class.prototype) === Super.prototype)
          continue;
        Object.setPrototypeOf(Class.prototype, Super.prototype);
      }
      if (!excludeOptions.has("HTMLDocument") && !excludeOptions.has("HTMLElement")) {
        initDocument(target, excludeOptions);
        if (!excludeOptions.has("CustomElementRegistry")) {
          initCustomElementRegistry(target, excludeOptions);
        }
      }
      initObject(target, excludeOptions);
      initMediaQueryList(target, excludeOptions);
      initPromise(target, excludeOptions);
      initRelativeIndexingMethod(target, excludeOptions);
      initStorage(target, excludeOptions);
      initString(target, excludeOptions);
      initWindow(target, excludeOptions);
      return target;
    };
    polyfill.internals = (target, name) => {
      const init2 = {
        CustomElementRegistry: initCustomElementRegistry,
        Document: initDocument,
        MediaQueryList: initMediaQueryList,
        Object: initObject,
        Promise: initPromise,
        RelativeIndexingMethod: initRelativeIndexingMethod,
        Storage: initStorage,
        String: initString,
        Window: initWindow
      };
      init2[name](target, /* @__PURE__ */ new Set());
      return target;
    };
  }
});

// node_modules/mime/Mime.js
var require_Mime = __commonJS({
  "node_modules/mime/Mime.js"(exports, module2) {
    "use strict";
    function Mime2() {
      this._types = /* @__PURE__ */ Object.create(null);
      this._extensions = /* @__PURE__ */ Object.create(null);
      for (let i3 = 0; i3 < arguments.length; i3++) {
        this.define(arguments[i3]);
      }
      this.define = this.define.bind(this);
      this.getType = this.getType.bind(this);
      this.getExtension = this.getExtension.bind(this);
    }
    Mime2.prototype.define = function(typeMap, force) {
      for (let type in typeMap) {
        let extensions = typeMap[type].map(function(t3) {
          return t3.toLowerCase();
        });
        type = type.toLowerCase();
        for (let i3 = 0; i3 < extensions.length; i3++) {
          const ext = extensions[i3];
          if (ext[0] === "*") {
            continue;
          }
          if (!force && ext in this._types) {
            throw new Error('Attempt to change mapping for "' + ext + '" extension from "' + this._types[ext] + '" to "' + type + '". Pass `force=true` to allow this, otherwise remove "' + ext + '" from the list of extensions for "' + type + '".');
          }
          this._types[ext] = type;
        }
        if (force || !this._extensions[type]) {
          const ext = extensions[0];
          this._extensions[type] = ext[0] !== "*" ? ext : ext.substr(1);
        }
      }
    };
    Mime2.prototype.getType = function(path) {
      path = String(path);
      let last = path.replace(/^.*[/\\]/, "").toLowerCase();
      let ext = last.replace(/^.*\./, "").toLowerCase();
      let hasPath = last.length < path.length;
      let hasDot = ext.length < last.length - 1;
      return (hasDot || !hasPath) && this._types[ext] || null;
    };
    Mime2.prototype.getExtension = function(type) {
      type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
      return type && this._extensions[type.toLowerCase()] || null;
    };
    module2.exports = Mime2;
  }
});

// node_modules/mime/types/standard.js
var require_standard = __commonJS({
  "node_modules/mime/types/standard.js"(exports, module2) {
    module2.exports = { "application/andrew-inset": ["ez"], "application/applixware": ["aw"], "application/atom+xml": ["atom"], "application/atomcat+xml": ["atomcat"], "application/atomdeleted+xml": ["atomdeleted"], "application/atomsvc+xml": ["atomsvc"], "application/atsc-dwd+xml": ["dwd"], "application/atsc-held+xml": ["held"], "application/atsc-rsat+xml": ["rsat"], "application/bdoc": ["bdoc"], "application/calendar+xml": ["xcs"], "application/ccxml+xml": ["ccxml"], "application/cdfx+xml": ["cdfx"], "application/cdmi-capability": ["cdmia"], "application/cdmi-container": ["cdmic"], "application/cdmi-domain": ["cdmid"], "application/cdmi-object": ["cdmio"], "application/cdmi-queue": ["cdmiq"], "application/cu-seeme": ["cu"], "application/dash+xml": ["mpd"], "application/davmount+xml": ["davmount"], "application/docbook+xml": ["dbk"], "application/dssc+der": ["dssc"], "application/dssc+xml": ["xdssc"], "application/ecmascript": ["es", "ecma"], "application/emma+xml": ["emma"], "application/emotionml+xml": ["emotionml"], "application/epub+zip": ["epub"], "application/exi": ["exi"], "application/express": ["exp"], "application/fdt+xml": ["fdt"], "application/font-tdpfr": ["pfr"], "application/geo+json": ["geojson"], "application/gml+xml": ["gml"], "application/gpx+xml": ["gpx"], "application/gxf": ["gxf"], "application/gzip": ["gz"], "application/hjson": ["hjson"], "application/hyperstudio": ["stk"], "application/inkml+xml": ["ink", "inkml"], "application/ipfix": ["ipfix"], "application/its+xml": ["its"], "application/java-archive": ["jar", "war", "ear"], "application/java-serialized-object": ["ser"], "application/java-vm": ["class"], "application/javascript": ["js", "mjs"], "application/json": ["json", "map"], "application/json5": ["json5"], "application/jsonml+json": ["jsonml"], "application/ld+json": ["jsonld"], "application/lgr+xml": ["lgr"], "application/lost+xml": ["lostxml"], "application/mac-binhex40": ["hqx"], "application/mac-compactpro": ["cpt"], "application/mads+xml": ["mads"], "application/manifest+json": ["webmanifest"], "application/marc": ["mrc"], "application/marcxml+xml": ["mrcx"], "application/mathematica": ["ma", "nb", "mb"], "application/mathml+xml": ["mathml"], "application/mbox": ["mbox"], "application/mediaservercontrol+xml": ["mscml"], "application/metalink+xml": ["metalink"], "application/metalink4+xml": ["meta4"], "application/mets+xml": ["mets"], "application/mmt-aei+xml": ["maei"], "application/mmt-usd+xml": ["musd"], "application/mods+xml": ["mods"], "application/mp21": ["m21", "mp21"], "application/mp4": ["mp4s", "m4p"], "application/msword": ["doc", "dot"], "application/mxf": ["mxf"], "application/n-quads": ["nq"], "application/n-triples": ["nt"], "application/node": ["cjs"], "application/octet-stream": ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"], "application/oda": ["oda"], "application/oebps-package+xml": ["opf"], "application/ogg": ["ogx"], "application/omdoc+xml": ["omdoc"], "application/onenote": ["onetoc", "onetoc2", "onetmp", "onepkg"], "application/oxps": ["oxps"], "application/p2p-overlay+xml": ["relo"], "application/patch-ops-error+xml": ["xer"], "application/pdf": ["pdf"], "application/pgp-encrypted": ["pgp"], "application/pgp-signature": ["asc", "sig"], "application/pics-rules": ["prf"], "application/pkcs10": ["p10"], "application/pkcs7-mime": ["p7m", "p7c"], "application/pkcs7-signature": ["p7s"], "application/pkcs8": ["p8"], "application/pkix-attr-cert": ["ac"], "application/pkix-cert": ["cer"], "application/pkix-crl": ["crl"], "application/pkix-pkipath": ["pkipath"], "application/pkixcmp": ["pki"], "application/pls+xml": ["pls"], "application/postscript": ["ai", "eps", "ps"], "application/provenance+xml": ["provx"], "application/pskc+xml": ["pskcxml"], "application/raml+yaml": ["raml"], "application/rdf+xml": ["rdf", "owl"], "application/reginfo+xml": ["rif"], "application/relax-ng-compact-syntax": ["rnc"], "application/resource-lists+xml": ["rl"], "application/resource-lists-diff+xml": ["rld"], "application/rls-services+xml": ["rs"], "application/route-apd+xml": ["rapd"], "application/route-s-tsid+xml": ["sls"], "application/route-usd+xml": ["rusd"], "application/rpki-ghostbusters": ["gbr"], "application/rpki-manifest": ["mft"], "application/rpki-roa": ["roa"], "application/rsd+xml": ["rsd"], "application/rss+xml": ["rss"], "application/rtf": ["rtf"], "application/sbml+xml": ["sbml"], "application/scvp-cv-request": ["scq"], "application/scvp-cv-response": ["scs"], "application/scvp-vp-request": ["spq"], "application/scvp-vp-response": ["spp"], "application/sdp": ["sdp"], "application/senml+xml": ["senmlx"], "application/sensml+xml": ["sensmlx"], "application/set-payment-initiation": ["setpay"], "application/set-registration-initiation": ["setreg"], "application/shf+xml": ["shf"], "application/sieve": ["siv", "sieve"], "application/smil+xml": ["smi", "smil"], "application/sparql-query": ["rq"], "application/sparql-results+xml": ["srx"], "application/srgs": ["gram"], "application/srgs+xml": ["grxml"], "application/sru+xml": ["sru"], "application/ssdl+xml": ["ssdl"], "application/ssml+xml": ["ssml"], "application/swid+xml": ["swidtag"], "application/tei+xml": ["tei", "teicorpus"], "application/thraud+xml": ["tfi"], "application/timestamped-data": ["tsd"], "application/toml": ["toml"], "application/trig": ["trig"], "application/ttml+xml": ["ttml"], "application/ubjson": ["ubj"], "application/urc-ressheet+xml": ["rsheet"], "application/urc-targetdesc+xml": ["td"], "application/voicexml+xml": ["vxml"], "application/wasm": ["wasm"], "application/widget": ["wgt"], "application/winhlp": ["hlp"], "application/wsdl+xml": ["wsdl"], "application/wspolicy+xml": ["wspolicy"], "application/xaml+xml": ["xaml"], "application/xcap-att+xml": ["xav"], "application/xcap-caps+xml": ["xca"], "application/xcap-diff+xml": ["xdf"], "application/xcap-el+xml": ["xel"], "application/xcap-ns+xml": ["xns"], "application/xenc+xml": ["xenc"], "application/xhtml+xml": ["xhtml", "xht"], "application/xliff+xml": ["xlf"], "application/xml": ["xml", "xsl", "xsd", "rng"], "application/xml-dtd": ["dtd"], "application/xop+xml": ["xop"], "application/xproc+xml": ["xpl"], "application/xslt+xml": ["*xsl", "xslt"], "application/xspf+xml": ["xspf"], "application/xv+xml": ["mxml", "xhvml", "xvml", "xvm"], "application/yang": ["yang"], "application/yin+xml": ["yin"], "application/zip": ["zip"], "audio/3gpp": ["*3gpp"], "audio/adpcm": ["adp"], "audio/amr": ["amr"], "audio/basic": ["au", "snd"], "audio/midi": ["mid", "midi", "kar", "rmi"], "audio/mobile-xmf": ["mxmf"], "audio/mp3": ["*mp3"], "audio/mp4": ["m4a", "mp4a"], "audio/mpeg": ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"], "audio/ogg": ["oga", "ogg", "spx", "opus"], "audio/s3m": ["s3m"], "audio/silk": ["sil"], "audio/wav": ["wav"], "audio/wave": ["*wav"], "audio/webm": ["weba"], "audio/xm": ["xm"], "font/collection": ["ttc"], "font/otf": ["otf"], "font/ttf": ["ttf"], "font/woff": ["woff"], "font/woff2": ["woff2"], "image/aces": ["exr"], "image/apng": ["apng"], "image/avif": ["avif"], "image/bmp": ["bmp"], "image/cgm": ["cgm"], "image/dicom-rle": ["drle"], "image/emf": ["emf"], "image/fits": ["fits"], "image/g3fax": ["g3"], "image/gif": ["gif"], "image/heic": ["heic"], "image/heic-sequence": ["heics"], "image/heif": ["heif"], "image/heif-sequence": ["heifs"], "image/hej2k": ["hej2"], "image/hsj2": ["hsj2"], "image/ief": ["ief"], "image/jls": ["jls"], "image/jp2": ["jp2", "jpg2"], "image/jpeg": ["jpeg", "jpg", "jpe"], "image/jph": ["jph"], "image/jphc": ["jhc"], "image/jpm": ["jpm"], "image/jpx": ["jpx", "jpf"], "image/jxr": ["jxr"], "image/jxra": ["jxra"], "image/jxrs": ["jxrs"], "image/jxs": ["jxs"], "image/jxsc": ["jxsc"], "image/jxsi": ["jxsi"], "image/jxss": ["jxss"], "image/ktx": ["ktx"], "image/ktx2": ["ktx2"], "image/png": ["png"], "image/sgi": ["sgi"], "image/svg+xml": ["svg", "svgz"], "image/t38": ["t38"], "image/tiff": ["tif", "tiff"], "image/tiff-fx": ["tfx"], "image/webp": ["webp"], "image/wmf": ["wmf"], "message/disposition-notification": ["disposition-notification"], "message/global": ["u8msg"], "message/global-delivery-status": ["u8dsn"], "message/global-disposition-notification": ["u8mdn"], "message/global-headers": ["u8hdr"], "message/rfc822": ["eml", "mime"], "model/3mf": ["3mf"], "model/gltf+json": ["gltf"], "model/gltf-binary": ["glb"], "model/iges": ["igs", "iges"], "model/mesh": ["msh", "mesh", "silo"], "model/mtl": ["mtl"], "model/obj": ["obj"], "model/step+xml": ["stpx"], "model/step+zip": ["stpz"], "model/step-xml+zip": ["stpxz"], "model/stl": ["stl"], "model/vrml": ["wrl", "vrml"], "model/x3d+binary": ["*x3db", "x3dbz"], "model/x3d+fastinfoset": ["x3db"], "model/x3d+vrml": ["*x3dv", "x3dvz"], "model/x3d+xml": ["x3d", "x3dz"], "model/x3d-vrml": ["x3dv"], "text/cache-manifest": ["appcache", "manifest"], "text/calendar": ["ics", "ifb"], "text/coffeescript": ["coffee", "litcoffee"], "text/css": ["css"], "text/csv": ["csv"], "text/html": ["html", "htm", "shtml"], "text/jade": ["jade"], "text/jsx": ["jsx"], "text/less": ["less"], "text/markdown": ["markdown", "md"], "text/mathml": ["mml"], "text/mdx": ["mdx"], "text/n3": ["n3"], "text/plain": ["txt", "text", "conf", "def", "list", "log", "in", "ini"], "text/richtext": ["rtx"], "text/rtf": ["*rtf"], "text/sgml": ["sgml", "sgm"], "text/shex": ["shex"], "text/slim": ["slim", "slm"], "text/spdx": ["spdx"], "text/stylus": ["stylus", "styl"], "text/tab-separated-values": ["tsv"], "text/troff": ["t", "tr", "roff", "man", "me", "ms"], "text/turtle": ["ttl"], "text/uri-list": ["uri", "uris", "urls"], "text/vcard": ["vcard"], "text/vtt": ["vtt"], "text/xml": ["*xml"], "text/yaml": ["yaml", "yml"], "video/3gpp": ["3gp", "3gpp"], "video/3gpp2": ["3g2"], "video/h261": ["h261"], "video/h263": ["h263"], "video/h264": ["h264"], "video/iso.segment": ["m4s"], "video/jpeg": ["jpgv"], "video/jpm": ["*jpm", "jpgm"], "video/mj2": ["mj2", "mjp2"], "video/mp2t": ["ts"], "video/mp4": ["mp4", "mp4v", "mpg4"], "video/mpeg": ["mpeg", "mpg", "mpe", "m1v", "m2v"], "video/ogg": ["ogv"], "video/quicktime": ["qt", "mov"], "video/webm": ["webm"] };
  }
});

// node_modules/mime/types/other.js
var require_other = __commonJS({
  "node_modules/mime/types/other.js"(exports, module2) {
    module2.exports = { "application/prs.cww": ["cww"], "application/vnd.1000minds.decision-model+xml": ["1km"], "application/vnd.3gpp.pic-bw-large": ["plb"], "application/vnd.3gpp.pic-bw-small": ["psb"], "application/vnd.3gpp.pic-bw-var": ["pvb"], "application/vnd.3gpp2.tcap": ["tcap"], "application/vnd.3m.post-it-notes": ["pwn"], "application/vnd.accpac.simply.aso": ["aso"], "application/vnd.accpac.simply.imp": ["imp"], "application/vnd.acucobol": ["acu"], "application/vnd.acucorp": ["atc", "acutc"], "application/vnd.adobe.air-application-installer-package+zip": ["air"], "application/vnd.adobe.formscentral.fcdt": ["fcdt"], "application/vnd.adobe.fxp": ["fxp", "fxpl"], "application/vnd.adobe.xdp+xml": ["xdp"], "application/vnd.adobe.xfdf": ["xfdf"], "application/vnd.ahead.space": ["ahead"], "application/vnd.airzip.filesecure.azf": ["azf"], "application/vnd.airzip.filesecure.azs": ["azs"], "application/vnd.amazon.ebook": ["azw"], "application/vnd.americandynamics.acc": ["acc"], "application/vnd.amiga.ami": ["ami"], "application/vnd.android.package-archive": ["apk"], "application/vnd.anser-web-certificate-issue-initiation": ["cii"], "application/vnd.anser-web-funds-transfer-initiation": ["fti"], "application/vnd.antix.game-component": ["atx"], "application/vnd.apple.installer+xml": ["mpkg"], "application/vnd.apple.keynote": ["key"], "application/vnd.apple.mpegurl": ["m3u8"], "application/vnd.apple.numbers": ["numbers"], "application/vnd.apple.pages": ["pages"], "application/vnd.apple.pkpass": ["pkpass"], "application/vnd.aristanetworks.swi": ["swi"], "application/vnd.astraea-software.iota": ["iota"], "application/vnd.audiograph": ["aep"], "application/vnd.balsamiq.bmml+xml": ["bmml"], "application/vnd.blueice.multipass": ["mpm"], "application/vnd.bmi": ["bmi"], "application/vnd.businessobjects": ["rep"], "application/vnd.chemdraw+xml": ["cdxml"], "application/vnd.chipnuts.karaoke-mmd": ["mmd"], "application/vnd.cinderella": ["cdy"], "application/vnd.citationstyles.style+xml": ["csl"], "application/vnd.claymore": ["cla"], "application/vnd.cloanto.rp9": ["rp9"], "application/vnd.clonk.c4group": ["c4g", "c4d", "c4f", "c4p", "c4u"], "application/vnd.cluetrust.cartomobile-config": ["c11amc"], "application/vnd.cluetrust.cartomobile-config-pkg": ["c11amz"], "application/vnd.commonspace": ["csp"], "application/vnd.contact.cmsg": ["cdbcmsg"], "application/vnd.cosmocaller": ["cmc"], "application/vnd.crick.clicker": ["clkx"], "application/vnd.crick.clicker.keyboard": ["clkk"], "application/vnd.crick.clicker.palette": ["clkp"], "application/vnd.crick.clicker.template": ["clkt"], "application/vnd.crick.clicker.wordbank": ["clkw"], "application/vnd.criticaltools.wbs+xml": ["wbs"], "application/vnd.ctc-posml": ["pml"], "application/vnd.cups-ppd": ["ppd"], "application/vnd.curl.car": ["car"], "application/vnd.curl.pcurl": ["pcurl"], "application/vnd.dart": ["dart"], "application/vnd.data-vision.rdz": ["rdz"], "application/vnd.dbf": ["dbf"], "application/vnd.dece.data": ["uvf", "uvvf", "uvd", "uvvd"], "application/vnd.dece.ttml+xml": ["uvt", "uvvt"], "application/vnd.dece.unspecified": ["uvx", "uvvx"], "application/vnd.dece.zip": ["uvz", "uvvz"], "application/vnd.denovo.fcselayout-link": ["fe_launch"], "application/vnd.dna": ["dna"], "application/vnd.dolby.mlp": ["mlp"], "application/vnd.dpgraph": ["dpg"], "application/vnd.dreamfactory": ["dfac"], "application/vnd.ds-keypoint": ["kpxx"], "application/vnd.dvb.ait": ["ait"], "application/vnd.dvb.service": ["svc"], "application/vnd.dynageo": ["geo"], "application/vnd.ecowin.chart": ["mag"], "application/vnd.enliven": ["nml"], "application/vnd.epson.esf": ["esf"], "application/vnd.epson.msf": ["msf"], "application/vnd.epson.quickanime": ["qam"], "application/vnd.epson.salt": ["slt"], "application/vnd.epson.ssf": ["ssf"], "application/vnd.eszigno3+xml": ["es3", "et3"], "application/vnd.ezpix-album": ["ez2"], "application/vnd.ezpix-package": ["ez3"], "application/vnd.fdf": ["fdf"], "application/vnd.fdsn.mseed": ["mseed"], "application/vnd.fdsn.seed": ["seed", "dataless"], "application/vnd.flographit": ["gph"], "application/vnd.fluxtime.clip": ["ftc"], "application/vnd.framemaker": ["fm", "frame", "maker", "book"], "application/vnd.frogans.fnc": ["fnc"], "application/vnd.frogans.ltf": ["ltf"], "application/vnd.fsc.weblaunch": ["fsc"], "application/vnd.fujitsu.oasys": ["oas"], "application/vnd.fujitsu.oasys2": ["oa2"], "application/vnd.fujitsu.oasys3": ["oa3"], "application/vnd.fujitsu.oasysgp": ["fg5"], "application/vnd.fujitsu.oasysprs": ["bh2"], "application/vnd.fujixerox.ddd": ["ddd"], "application/vnd.fujixerox.docuworks": ["xdw"], "application/vnd.fujixerox.docuworks.binder": ["xbd"], "application/vnd.fuzzysheet": ["fzs"], "application/vnd.genomatix.tuxedo": ["txd"], "application/vnd.geogebra.file": ["ggb"], "application/vnd.geogebra.tool": ["ggt"], "application/vnd.geometry-explorer": ["gex", "gre"], "application/vnd.geonext": ["gxt"], "application/vnd.geoplan": ["g2w"], "application/vnd.geospace": ["g3w"], "application/vnd.gmx": ["gmx"], "application/vnd.google-apps.document": ["gdoc"], "application/vnd.google-apps.presentation": ["gslides"], "application/vnd.google-apps.spreadsheet": ["gsheet"], "application/vnd.google-earth.kml+xml": ["kml"], "application/vnd.google-earth.kmz": ["kmz"], "application/vnd.grafeq": ["gqf", "gqs"], "application/vnd.groove-account": ["gac"], "application/vnd.groove-help": ["ghf"], "application/vnd.groove-identity-message": ["gim"], "application/vnd.groove-injector": ["grv"], "application/vnd.groove-tool-message": ["gtm"], "application/vnd.groove-tool-template": ["tpl"], "application/vnd.groove-vcard": ["vcg"], "application/vnd.hal+xml": ["hal"], "application/vnd.handheld-entertainment+xml": ["zmm"], "application/vnd.hbci": ["hbci"], "application/vnd.hhe.lesson-player": ["les"], "application/vnd.hp-hpgl": ["hpgl"], "application/vnd.hp-hpid": ["hpid"], "application/vnd.hp-hps": ["hps"], "application/vnd.hp-jlyt": ["jlt"], "application/vnd.hp-pcl": ["pcl"], "application/vnd.hp-pclxl": ["pclxl"], "application/vnd.hydrostatix.sof-data": ["sfd-hdstx"], "application/vnd.ibm.minipay": ["mpy"], "application/vnd.ibm.modcap": ["afp", "listafp", "list3820"], "application/vnd.ibm.rights-management": ["irm"], "application/vnd.ibm.secure-container": ["sc"], "application/vnd.iccprofile": ["icc", "icm"], "application/vnd.igloader": ["igl"], "application/vnd.immervision-ivp": ["ivp"], "application/vnd.immervision-ivu": ["ivu"], "application/vnd.insors.igm": ["igm"], "application/vnd.intercon.formnet": ["xpw", "xpx"], "application/vnd.intergeo": ["i2g"], "application/vnd.intu.qbo": ["qbo"], "application/vnd.intu.qfx": ["qfx"], "application/vnd.ipunplugged.rcprofile": ["rcprofile"], "application/vnd.irepository.package+xml": ["irp"], "application/vnd.is-xpr": ["xpr"], "application/vnd.isac.fcs": ["fcs"], "application/vnd.jam": ["jam"], "application/vnd.jcp.javame.midlet-rms": ["rms"], "application/vnd.jisp": ["jisp"], "application/vnd.joost.joda-archive": ["joda"], "application/vnd.kahootz": ["ktz", "ktr"], "application/vnd.kde.karbon": ["karbon"], "application/vnd.kde.kchart": ["chrt"], "application/vnd.kde.kformula": ["kfo"], "application/vnd.kde.kivio": ["flw"], "application/vnd.kde.kontour": ["kon"], "application/vnd.kde.kpresenter": ["kpr", "kpt"], "application/vnd.kde.kspread": ["ksp"], "application/vnd.kde.kword": ["kwd", "kwt"], "application/vnd.kenameaapp": ["htke"], "application/vnd.kidspiration": ["kia"], "application/vnd.kinar": ["kne", "knp"], "application/vnd.koan": ["skp", "skd", "skt", "skm"], "application/vnd.kodak-descriptor": ["sse"], "application/vnd.las.las+xml": ["lasxml"], "application/vnd.llamagraphics.life-balance.desktop": ["lbd"], "application/vnd.llamagraphics.life-balance.exchange+xml": ["lbe"], "application/vnd.lotus-1-2-3": ["123"], "application/vnd.lotus-approach": ["apr"], "application/vnd.lotus-freelance": ["pre"], "application/vnd.lotus-notes": ["nsf"], "application/vnd.lotus-organizer": ["org"], "application/vnd.lotus-screencam": ["scm"], "application/vnd.lotus-wordpro": ["lwp"], "application/vnd.macports.portpkg": ["portpkg"], "application/vnd.mapbox-vector-tile": ["mvt"], "application/vnd.mcd": ["mcd"], "application/vnd.medcalcdata": ["mc1"], "application/vnd.mediastation.cdkey": ["cdkey"], "application/vnd.mfer": ["mwf"], "application/vnd.mfmp": ["mfm"], "application/vnd.micrografx.flo": ["flo"], "application/vnd.micrografx.igx": ["igx"], "application/vnd.mif": ["mif"], "application/vnd.mobius.daf": ["daf"], "application/vnd.mobius.dis": ["dis"], "application/vnd.mobius.mbk": ["mbk"], "application/vnd.mobius.mqy": ["mqy"], "application/vnd.mobius.msl": ["msl"], "application/vnd.mobius.plc": ["plc"], "application/vnd.mobius.txf": ["txf"], "application/vnd.mophun.application": ["mpn"], "application/vnd.mophun.certificate": ["mpc"], "application/vnd.mozilla.xul+xml": ["xul"], "application/vnd.ms-artgalry": ["cil"], "application/vnd.ms-cab-compressed": ["cab"], "application/vnd.ms-excel": ["xls", "xlm", "xla", "xlc", "xlt", "xlw"], "application/vnd.ms-excel.addin.macroenabled.12": ["xlam"], "application/vnd.ms-excel.sheet.binary.macroenabled.12": ["xlsb"], "application/vnd.ms-excel.sheet.macroenabled.12": ["xlsm"], "application/vnd.ms-excel.template.macroenabled.12": ["xltm"], "application/vnd.ms-fontobject": ["eot"], "application/vnd.ms-htmlhelp": ["chm"], "application/vnd.ms-ims": ["ims"], "application/vnd.ms-lrm": ["lrm"], "application/vnd.ms-officetheme": ["thmx"], "application/vnd.ms-outlook": ["msg"], "application/vnd.ms-pki.seccat": ["cat"], "application/vnd.ms-pki.stl": ["*stl"], "application/vnd.ms-powerpoint": ["ppt", "pps", "pot"], "application/vnd.ms-powerpoint.addin.macroenabled.12": ["ppam"], "application/vnd.ms-powerpoint.presentation.macroenabled.12": ["pptm"], "application/vnd.ms-powerpoint.slide.macroenabled.12": ["sldm"], "application/vnd.ms-powerpoint.slideshow.macroenabled.12": ["ppsm"], "application/vnd.ms-powerpoint.template.macroenabled.12": ["potm"], "application/vnd.ms-project": ["mpp", "mpt"], "application/vnd.ms-word.document.macroenabled.12": ["docm"], "application/vnd.ms-word.template.macroenabled.12": ["dotm"], "application/vnd.ms-works": ["wps", "wks", "wcm", "wdb"], "application/vnd.ms-wpl": ["wpl"], "application/vnd.ms-xpsdocument": ["xps"], "application/vnd.mseq": ["mseq"], "application/vnd.musician": ["mus"], "application/vnd.muvee.style": ["msty"], "application/vnd.mynfc": ["taglet"], "application/vnd.neurolanguage.nlu": ["nlu"], "application/vnd.nitf": ["ntf", "nitf"], "application/vnd.noblenet-directory": ["nnd"], "application/vnd.noblenet-sealer": ["nns"], "application/vnd.noblenet-web": ["nnw"], "application/vnd.nokia.n-gage.ac+xml": ["*ac"], "application/vnd.nokia.n-gage.data": ["ngdat"], "application/vnd.nokia.n-gage.symbian.install": ["n-gage"], "application/vnd.nokia.radio-preset": ["rpst"], "application/vnd.nokia.radio-presets": ["rpss"], "application/vnd.novadigm.edm": ["edm"], "application/vnd.novadigm.edx": ["edx"], "application/vnd.novadigm.ext": ["ext"], "application/vnd.oasis.opendocument.chart": ["odc"], "application/vnd.oasis.opendocument.chart-template": ["otc"], "application/vnd.oasis.opendocument.database": ["odb"], "application/vnd.oasis.opendocument.formula": ["odf"], "application/vnd.oasis.opendocument.formula-template": ["odft"], "application/vnd.oasis.opendocument.graphics": ["odg"], "application/vnd.oasis.opendocument.graphics-template": ["otg"], "application/vnd.oasis.opendocument.image": ["odi"], "application/vnd.oasis.opendocument.image-template": ["oti"], "application/vnd.oasis.opendocument.presentation": ["odp"], "application/vnd.oasis.opendocument.presentation-template": ["otp"], "application/vnd.oasis.opendocument.spreadsheet": ["ods"], "application/vnd.oasis.opendocument.spreadsheet-template": ["ots"], "application/vnd.oasis.opendocument.text": ["odt"], "application/vnd.oasis.opendocument.text-master": ["odm"], "application/vnd.oasis.opendocument.text-template": ["ott"], "application/vnd.oasis.opendocument.text-web": ["oth"], "application/vnd.olpc-sugar": ["xo"], "application/vnd.oma.dd2+xml": ["dd2"], "application/vnd.openblox.game+xml": ["obgx"], "application/vnd.openofficeorg.extension": ["oxt"], "application/vnd.openstreetmap.data+xml": ["osm"], "application/vnd.openxmlformats-officedocument.presentationml.presentation": ["pptx"], "application/vnd.openxmlformats-officedocument.presentationml.slide": ["sldx"], "application/vnd.openxmlformats-officedocument.presentationml.slideshow": ["ppsx"], "application/vnd.openxmlformats-officedocument.presentationml.template": ["potx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": ["xlsx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.template": ["xltx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.document": ["docx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.template": ["dotx"], "application/vnd.osgeo.mapguide.package": ["mgp"], "application/vnd.osgi.dp": ["dp"], "application/vnd.osgi.subsystem": ["esa"], "application/vnd.palm": ["pdb", "pqa", "oprc"], "application/vnd.pawaafile": ["paw"], "application/vnd.pg.format": ["str"], "application/vnd.pg.osasli": ["ei6"], "application/vnd.picsel": ["efif"], "application/vnd.pmi.widget": ["wg"], "application/vnd.pocketlearn": ["plf"], "application/vnd.powerbuilder6": ["pbd"], "application/vnd.previewsystems.box": ["box"], "application/vnd.proteus.magazine": ["mgz"], "application/vnd.publishare-delta-tree": ["qps"], "application/vnd.pvi.ptid1": ["ptid"], "application/vnd.quark.quarkxpress": ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"], "application/vnd.rar": ["rar"], "application/vnd.realvnc.bed": ["bed"], "application/vnd.recordare.musicxml": ["mxl"], "application/vnd.recordare.musicxml+xml": ["musicxml"], "application/vnd.rig.cryptonote": ["cryptonote"], "application/vnd.rim.cod": ["cod"], "application/vnd.rn-realmedia": ["rm"], "application/vnd.rn-realmedia-vbr": ["rmvb"], "application/vnd.route66.link66+xml": ["link66"], "application/vnd.sailingtracker.track": ["st"], "application/vnd.seemail": ["see"], "application/vnd.sema": ["sema"], "application/vnd.semd": ["semd"], "application/vnd.semf": ["semf"], "application/vnd.shana.informed.formdata": ["ifm"], "application/vnd.shana.informed.formtemplate": ["itp"], "application/vnd.shana.informed.interchange": ["iif"], "application/vnd.shana.informed.package": ["ipk"], "application/vnd.simtech-mindmapper": ["twd", "twds"], "application/vnd.smaf": ["mmf"], "application/vnd.smart.teacher": ["teacher"], "application/vnd.software602.filler.form+xml": ["fo"], "application/vnd.solent.sdkm+xml": ["sdkm", "sdkd"], "application/vnd.spotfire.dxp": ["dxp"], "application/vnd.spotfire.sfs": ["sfs"], "application/vnd.stardivision.calc": ["sdc"], "application/vnd.stardivision.draw": ["sda"], "application/vnd.stardivision.impress": ["sdd"], "application/vnd.stardivision.math": ["smf"], "application/vnd.stardivision.writer": ["sdw", "vor"], "application/vnd.stardivision.writer-global": ["sgl"], "application/vnd.stepmania.package": ["smzip"], "application/vnd.stepmania.stepchart": ["sm"], "application/vnd.sun.wadl+xml": ["wadl"], "application/vnd.sun.xml.calc": ["sxc"], "application/vnd.sun.xml.calc.template": ["stc"], "application/vnd.sun.xml.draw": ["sxd"], "application/vnd.sun.xml.draw.template": ["std"], "application/vnd.sun.xml.impress": ["sxi"], "application/vnd.sun.xml.impress.template": ["sti"], "application/vnd.sun.xml.math": ["sxm"], "application/vnd.sun.xml.writer": ["sxw"], "application/vnd.sun.xml.writer.global": ["sxg"], "application/vnd.sun.xml.writer.template": ["stw"], "application/vnd.sus-calendar": ["sus", "susp"], "application/vnd.svd": ["svd"], "application/vnd.symbian.install": ["sis", "sisx"], "application/vnd.syncml+xml": ["xsm"], "application/vnd.syncml.dm+wbxml": ["bdm"], "application/vnd.syncml.dm+xml": ["xdm"], "application/vnd.syncml.dmddf+xml": ["ddf"], "application/vnd.tao.intent-module-archive": ["tao"], "application/vnd.tcpdump.pcap": ["pcap", "cap", "dmp"], "application/vnd.tmobile-livetv": ["tmo"], "application/vnd.trid.tpt": ["tpt"], "application/vnd.triscape.mxs": ["mxs"], "application/vnd.trueapp": ["tra"], "application/vnd.ufdl": ["ufd", "ufdl"], "application/vnd.uiq.theme": ["utz"], "application/vnd.umajin": ["umj"], "application/vnd.unity": ["unityweb"], "application/vnd.uoml+xml": ["uoml"], "application/vnd.vcx": ["vcx"], "application/vnd.visio": ["vsd", "vst", "vss", "vsw"], "application/vnd.visionary": ["vis"], "application/vnd.vsf": ["vsf"], "application/vnd.wap.wbxml": ["wbxml"], "application/vnd.wap.wmlc": ["wmlc"], "application/vnd.wap.wmlscriptc": ["wmlsc"], "application/vnd.webturbo": ["wtb"], "application/vnd.wolfram.player": ["nbp"], "application/vnd.wordperfect": ["wpd"], "application/vnd.wqd": ["wqd"], "application/vnd.wt.stf": ["stf"], "application/vnd.xara": ["xar"], "application/vnd.xfdl": ["xfdl"], "application/vnd.yamaha.hv-dic": ["hvd"], "application/vnd.yamaha.hv-script": ["hvs"], "application/vnd.yamaha.hv-voice": ["hvp"], "application/vnd.yamaha.openscoreformat": ["osf"], "application/vnd.yamaha.openscoreformat.osfpvg+xml": ["osfpvg"], "application/vnd.yamaha.smaf-audio": ["saf"], "application/vnd.yamaha.smaf-phrase": ["spf"], "application/vnd.yellowriver-custom-menu": ["cmp"], "application/vnd.zul": ["zir", "zirz"], "application/vnd.zzazz.deck+xml": ["zaz"], "application/x-7z-compressed": ["7z"], "application/x-abiword": ["abw"], "application/x-ace-compressed": ["ace"], "application/x-apple-diskimage": ["*dmg"], "application/x-arj": ["arj"], "application/x-authorware-bin": ["aab", "x32", "u32", "vox"], "application/x-authorware-map": ["aam"], "application/x-authorware-seg": ["aas"], "application/x-bcpio": ["bcpio"], "application/x-bdoc": ["*bdoc"], "application/x-bittorrent": ["torrent"], "application/x-blorb": ["blb", "blorb"], "application/x-bzip": ["bz"], "application/x-bzip2": ["bz2", "boz"], "application/x-cbr": ["cbr", "cba", "cbt", "cbz", "cb7"], "application/x-cdlink": ["vcd"], "application/x-cfs-compressed": ["cfs"], "application/x-chat": ["chat"], "application/x-chess-pgn": ["pgn"], "application/x-chrome-extension": ["crx"], "application/x-cocoa": ["cco"], "application/x-conference": ["nsc"], "application/x-cpio": ["cpio"], "application/x-csh": ["csh"], "application/x-debian-package": ["*deb", "udeb"], "application/x-dgc-compressed": ["dgc"], "application/x-director": ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"], "application/x-doom": ["wad"], "application/x-dtbncx+xml": ["ncx"], "application/x-dtbook+xml": ["dtb"], "application/x-dtbresource+xml": ["res"], "application/x-dvi": ["dvi"], "application/x-envoy": ["evy"], "application/x-eva": ["eva"], "application/x-font-bdf": ["bdf"], "application/x-font-ghostscript": ["gsf"], "application/x-font-linux-psf": ["psf"], "application/x-font-pcf": ["pcf"], "application/x-font-snf": ["snf"], "application/x-font-type1": ["pfa", "pfb", "pfm", "afm"], "application/x-freearc": ["arc"], "application/x-futuresplash": ["spl"], "application/x-gca-compressed": ["gca"], "application/x-glulx": ["ulx"], "application/x-gnumeric": ["gnumeric"], "application/x-gramps-xml": ["gramps"], "application/x-gtar": ["gtar"], "application/x-hdf": ["hdf"], "application/x-httpd-php": ["php"], "application/x-install-instructions": ["install"], "application/x-iso9660-image": ["*iso"], "application/x-iwork-keynote-sffkey": ["*key"], "application/x-iwork-numbers-sffnumbers": ["*numbers"], "application/x-iwork-pages-sffpages": ["*pages"], "application/x-java-archive-diff": ["jardiff"], "application/x-java-jnlp-file": ["jnlp"], "application/x-keepass2": ["kdbx"], "application/x-latex": ["latex"], "application/x-lua-bytecode": ["luac"], "application/x-lzh-compressed": ["lzh", "lha"], "application/x-makeself": ["run"], "application/x-mie": ["mie"], "application/x-mobipocket-ebook": ["prc", "mobi"], "application/x-ms-application": ["application"], "application/x-ms-shortcut": ["lnk"], "application/x-ms-wmd": ["wmd"], "application/x-ms-wmz": ["wmz"], "application/x-ms-xbap": ["xbap"], "application/x-msaccess": ["mdb"], "application/x-msbinder": ["obd"], "application/x-mscardfile": ["crd"], "application/x-msclip": ["clp"], "application/x-msdos-program": ["*exe"], "application/x-msdownload": ["*exe", "*dll", "com", "bat", "*msi"], "application/x-msmediaview": ["mvb", "m13", "m14"], "application/x-msmetafile": ["*wmf", "*wmz", "*emf", "emz"], "application/x-msmoney": ["mny"], "application/x-mspublisher": ["pub"], "application/x-msschedule": ["scd"], "application/x-msterminal": ["trm"], "application/x-mswrite": ["wri"], "application/x-netcdf": ["nc", "cdf"], "application/x-ns-proxy-autoconfig": ["pac"], "application/x-nzb": ["nzb"], "application/x-perl": ["pl", "pm"], "application/x-pilot": ["*prc", "*pdb"], "application/x-pkcs12": ["p12", "pfx"], "application/x-pkcs7-certificates": ["p7b", "spc"], "application/x-pkcs7-certreqresp": ["p7r"], "application/x-rar-compressed": ["*rar"], "application/x-redhat-package-manager": ["rpm"], "application/x-research-info-systems": ["ris"], "application/x-sea": ["sea"], "application/x-sh": ["sh"], "application/x-shar": ["shar"], "application/x-shockwave-flash": ["swf"], "application/x-silverlight-app": ["xap"], "application/x-sql": ["sql"], "application/x-stuffit": ["sit"], "application/x-stuffitx": ["sitx"], "application/x-subrip": ["srt"], "application/x-sv4cpio": ["sv4cpio"], "application/x-sv4crc": ["sv4crc"], "application/x-t3vm-image": ["t3"], "application/x-tads": ["gam"], "application/x-tar": ["tar"], "application/x-tcl": ["tcl", "tk"], "application/x-tex": ["tex"], "application/x-tex-tfm": ["tfm"], "application/x-texinfo": ["texinfo", "texi"], "application/x-tgif": ["*obj"], "application/x-ustar": ["ustar"], "application/x-virtualbox-hdd": ["hdd"], "application/x-virtualbox-ova": ["ova"], "application/x-virtualbox-ovf": ["ovf"], "application/x-virtualbox-vbox": ["vbox"], "application/x-virtualbox-vbox-extpack": ["vbox-extpack"], "application/x-virtualbox-vdi": ["vdi"], "application/x-virtualbox-vhd": ["vhd"], "application/x-virtualbox-vmdk": ["vmdk"], "application/x-wais-source": ["src"], "application/x-web-app-manifest+json": ["webapp"], "application/x-x509-ca-cert": ["der", "crt", "pem"], "application/x-xfig": ["fig"], "application/x-xliff+xml": ["*xlf"], "application/x-xpinstall": ["xpi"], "application/x-xz": ["xz"], "application/x-zmachine": ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"], "audio/vnd.dece.audio": ["uva", "uvva"], "audio/vnd.digital-winds": ["eol"], "audio/vnd.dra": ["dra"], "audio/vnd.dts": ["dts"], "audio/vnd.dts.hd": ["dtshd"], "audio/vnd.lucent.voice": ["lvp"], "audio/vnd.ms-playready.media.pya": ["pya"], "audio/vnd.nuera.ecelp4800": ["ecelp4800"], "audio/vnd.nuera.ecelp7470": ["ecelp7470"], "audio/vnd.nuera.ecelp9600": ["ecelp9600"], "audio/vnd.rip": ["rip"], "audio/x-aac": ["aac"], "audio/x-aiff": ["aif", "aiff", "aifc"], "audio/x-caf": ["caf"], "audio/x-flac": ["flac"], "audio/x-m4a": ["*m4a"], "audio/x-matroska": ["mka"], "audio/x-mpegurl": ["m3u"], "audio/x-ms-wax": ["wax"], "audio/x-ms-wma": ["wma"], "audio/x-pn-realaudio": ["ram", "ra"], "audio/x-pn-realaudio-plugin": ["rmp"], "audio/x-realaudio": ["*ra"], "audio/x-wav": ["*wav"], "chemical/x-cdx": ["cdx"], "chemical/x-cif": ["cif"], "chemical/x-cmdf": ["cmdf"], "chemical/x-cml": ["cml"], "chemical/x-csml": ["csml"], "chemical/x-xyz": ["xyz"], "image/prs.btif": ["btif"], "image/prs.pti": ["pti"], "image/vnd.adobe.photoshop": ["psd"], "image/vnd.airzip.accelerator.azv": ["azv"], "image/vnd.dece.graphic": ["uvi", "uvvi", "uvg", "uvvg"], "image/vnd.djvu": ["djvu", "djv"], "image/vnd.dvb.subtitle": ["*sub"], "image/vnd.dwg": ["dwg"], "image/vnd.dxf": ["dxf"], "image/vnd.fastbidsheet": ["fbs"], "image/vnd.fpx": ["fpx"], "image/vnd.fst": ["fst"], "image/vnd.fujixerox.edmics-mmr": ["mmr"], "image/vnd.fujixerox.edmics-rlc": ["rlc"], "image/vnd.microsoft.icon": ["ico"], "image/vnd.ms-dds": ["dds"], "image/vnd.ms-modi": ["mdi"], "image/vnd.ms-photo": ["wdp"], "image/vnd.net-fpx": ["npx"], "image/vnd.pco.b16": ["b16"], "image/vnd.tencent.tap": ["tap"], "image/vnd.valve.source.texture": ["vtf"], "image/vnd.wap.wbmp": ["wbmp"], "image/vnd.xiff": ["xif"], "image/vnd.zbrush.pcx": ["pcx"], "image/x-3ds": ["3ds"], "image/x-cmu-raster": ["ras"], "image/x-cmx": ["cmx"], "image/x-freehand": ["fh", "fhc", "fh4", "fh5", "fh7"], "image/x-icon": ["*ico"], "image/x-jng": ["jng"], "image/x-mrsid-image": ["sid"], "image/x-ms-bmp": ["*bmp"], "image/x-pcx": ["*pcx"], "image/x-pict": ["pic", "pct"], "image/x-portable-anymap": ["pnm"], "image/x-portable-bitmap": ["pbm"], "image/x-portable-graymap": ["pgm"], "image/x-portable-pixmap": ["ppm"], "image/x-rgb": ["rgb"], "image/x-tga": ["tga"], "image/x-xbitmap": ["xbm"], "image/x-xpixmap": ["xpm"], "image/x-xwindowdump": ["xwd"], "message/vnd.wfa.wsc": ["wsc"], "model/vnd.collada+xml": ["dae"], "model/vnd.dwf": ["dwf"], "model/vnd.gdl": ["gdl"], "model/vnd.gtw": ["gtw"], "model/vnd.mts": ["mts"], "model/vnd.opengex": ["ogex"], "model/vnd.parasolid.transmit.binary": ["x_b"], "model/vnd.parasolid.transmit.text": ["x_t"], "model/vnd.sap.vds": ["vds"], "model/vnd.usdz+zip": ["usdz"], "model/vnd.valve.source.compiled-map": ["bsp"], "model/vnd.vtu": ["vtu"], "text/prs.lines.tag": ["dsc"], "text/vnd.curl": ["curl"], "text/vnd.curl.dcurl": ["dcurl"], "text/vnd.curl.mcurl": ["mcurl"], "text/vnd.curl.scurl": ["scurl"], "text/vnd.dvb.subtitle": ["sub"], "text/vnd.fly": ["fly"], "text/vnd.fmi.flexstor": ["flx"], "text/vnd.graphviz": ["gv"], "text/vnd.in3d.3dml": ["3dml"], "text/vnd.in3d.spot": ["spot"], "text/vnd.sun.j2me.app-descriptor": ["jad"], "text/vnd.wap.wml": ["wml"], "text/vnd.wap.wmlscript": ["wmls"], "text/x-asm": ["s", "asm"], "text/x-c": ["c", "cc", "cxx", "cpp", "h", "hh", "dic"], "text/x-component": ["htc"], "text/x-fortran": ["f", "for", "f77", "f90"], "text/x-handlebars-template": ["hbs"], "text/x-java-source": ["java"], "text/x-lua": ["lua"], "text/x-markdown": ["mkd"], "text/x-nfo": ["nfo"], "text/x-opml": ["opml"], "text/x-org": ["*org"], "text/x-pascal": ["p", "pas"], "text/x-processing": ["pde"], "text/x-sass": ["sass"], "text/x-scss": ["scss"], "text/x-setext": ["etx"], "text/x-sfv": ["sfv"], "text/x-suse-ymp": ["ymp"], "text/x-uuencode": ["uu"], "text/x-vcalendar": ["vcs"], "text/x-vcard": ["vcf"], "video/vnd.dece.hd": ["uvh", "uvvh"], "video/vnd.dece.mobile": ["uvm", "uvvm"], "video/vnd.dece.pd": ["uvp", "uvvp"], "video/vnd.dece.sd": ["uvs", "uvvs"], "video/vnd.dece.video": ["uvv", "uvvv"], "video/vnd.dvb.file": ["dvb"], "video/vnd.fvt": ["fvt"], "video/vnd.mpegurl": ["mxu", "m4u"], "video/vnd.ms-playready.media.pyv": ["pyv"], "video/vnd.uvvu.mp4": ["uvu", "uvvu"], "video/vnd.vivo": ["viv"], "video/x-f4v": ["f4v"], "video/x-fli": ["fli"], "video/x-flv": ["flv"], "video/x-m4v": ["m4v"], "video/x-matroska": ["mkv", "mk3d", "mks"], "video/x-mng": ["mng"], "video/x-ms-asf": ["asf", "asx"], "video/x-ms-vob": ["vob"], "video/x-ms-wm": ["wm"], "video/x-ms-wmv": ["wmv"], "video/x-ms-wmx": ["wmx"], "video/x-ms-wvx": ["wvx"], "video/x-msvideo": ["avi"], "video/x-sgi-movie": ["movie"], "video/x-smv": ["smv"], "x-conference/x-cooltalk": ["ice"] };
  }
});

// node_modules/mime/index.js
var require_mime = __commonJS({
  "node_modules/mime/index.js"(exports, module2) {
    "use strict";
    var Mime2 = require_Mime();
    module2.exports = new Mime2(require_standard(), require_other());
  }
});

// node_modules/html-escaper/esm/index.js
var replace, ca, esca, pe, escape;
var init_esm = __esm({
  "node_modules/html-escaper/esm/index.js"() {
    ({ replace } = "");
    ca = /[&<>'"]/g;
    esca = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      "'": "&#39;",
      '"': "&quot;"
    };
    pe = (m3) => esca[m3];
    escape = (es) => replace.call(es, ca, pe);
  }
});

// node_modules/astro/dist/runtime/server/escape.js
var escapeHTML, HTMLString, markHTMLString;
var init_escape = __esm({
  "node_modules/astro/dist/runtime/server/escape.js"() {
    init_esm();
    escapeHTML = escape;
    HTMLString = class extends String {
    };
    markHTMLString = (value) => {
      if (value instanceof HTMLString) {
        return value;
      }
      if (typeof value === "string") {
        return new HTMLString(value);
      }
      return value;
    };
  }
});

// node_modules/randombytes/index.js
var require_randombytes = __commonJS({
  "node_modules/randombytes/index.js"(exports, module2) {
    module2.exports = require("crypto").randomBytes;
  }
});

// node_modules/serialize-javascript/index.js
var require_serialize_javascript = __commonJS({
  "node_modules/serialize-javascript/index.js"(exports, module2) {
    "use strict";
    var randomBytes = require_randombytes();
    var UID_LENGTH = 16;
    var UID = generateUID();
    var PLACE_HOLDER_REGEXP = new RegExp('(\\\\)?"@__(F|R|D|M|S|A|U|I|B|L)-' + UID + '-(\\d+)__@"', "g");
    var IS_NATIVE_CODE_REGEXP = /\{\s*\[native code\]\s*\}/g;
    var IS_PURE_FUNCTION = /function.*?\(/;
    var IS_ARROW_FUNCTION = /.*?=>.*?/;
    var UNSAFE_CHARS_REGEXP = /[<>\/\u2028\u2029]/g;
    var RESERVED_SYMBOLS = ["*", "async"];
    var ESCAPED_CHARS = {
      "<": "\\u003C",
      ">": "\\u003E",
      "/": "\\u002F",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    function escapeUnsafeChars2(unsafeChar) {
      return ESCAPED_CHARS[unsafeChar];
    }
    function generateUID() {
      var bytes = randomBytes(UID_LENGTH);
      var result = "";
      for (var i3 = 0; i3 < UID_LENGTH; ++i3) {
        result += bytes[i3].toString(16);
      }
      return result;
    }
    function deleteFunctions(obj) {
      var functionKeys = [];
      for (var key2 in obj) {
        if (typeof obj[key2] === "function") {
          functionKeys.push(key2);
        }
      }
      for (var i3 = 0; i3 < functionKeys.length; i3++) {
        delete obj[functionKeys[i3]];
      }
    }
    module2.exports = function serialize2(obj, options) {
      options || (options = {});
      if (typeof options === "number" || typeof options === "string") {
        options = { space: options };
      }
      var functions = [];
      var regexps = [];
      var dates = [];
      var maps = [];
      var sets = [];
      var arrays = [];
      var undefs = [];
      var infinities = [];
      var bigInts = [];
      var urls = [];
      function replacer(key2, value) {
        if (options.ignoreFunction) {
          deleteFunctions(value);
        }
        if (!value && value !== void 0) {
          return value;
        }
        var origValue = this[key2];
        var type = typeof origValue;
        if (type === "object") {
          if (origValue instanceof RegExp) {
            return "@__R-" + UID + "-" + (regexps.push(origValue) - 1) + "__@";
          }
          if (origValue instanceof Date) {
            return "@__D-" + UID + "-" + (dates.push(origValue) - 1) + "__@";
          }
          if (origValue instanceof Map) {
            return "@__M-" + UID + "-" + (maps.push(origValue) - 1) + "__@";
          }
          if (origValue instanceof Set) {
            return "@__S-" + UID + "-" + (sets.push(origValue) - 1) + "__@";
          }
          if (origValue instanceof Array) {
            var isSparse = origValue.filter(function() {
              return true;
            }).length !== origValue.length;
            if (isSparse) {
              return "@__A-" + UID + "-" + (arrays.push(origValue) - 1) + "__@";
            }
          }
          if (origValue instanceof URL) {
            return "@__L-" + UID + "-" + (urls.push(origValue) - 1) + "__@";
          }
        }
        if (type === "function") {
          return "@__F-" + UID + "-" + (functions.push(origValue) - 1) + "__@";
        }
        if (type === "undefined") {
          return "@__U-" + UID + "-" + (undefs.push(origValue) - 1) + "__@";
        }
        if (type === "number" && !isNaN(origValue) && !isFinite(origValue)) {
          return "@__I-" + UID + "-" + (infinities.push(origValue) - 1) + "__@";
        }
        if (type === "bigint") {
          return "@__B-" + UID + "-" + (bigInts.push(origValue) - 1) + "__@";
        }
        return value;
      }
      function serializeFunc(fn) {
        var serializedFn = fn.toString();
        if (IS_NATIVE_CODE_REGEXP.test(serializedFn)) {
          throw new TypeError("Serializing native function: " + fn.name);
        }
        if (IS_PURE_FUNCTION.test(serializedFn)) {
          return serializedFn;
        }
        if (IS_ARROW_FUNCTION.test(serializedFn)) {
          return serializedFn;
        }
        var argsStartsAt = serializedFn.indexOf("(");
        var def = serializedFn.substr(0, argsStartsAt).trim().split(" ").filter(function(val) {
          return val.length > 0;
        });
        var nonReservedSymbols = def.filter(function(val) {
          return RESERVED_SYMBOLS.indexOf(val) === -1;
        });
        if (nonReservedSymbols.length > 0) {
          return (def.indexOf("async") > -1 ? "async " : "") + "function" + (def.join("").indexOf("*") > -1 ? "*" : "") + serializedFn.substr(argsStartsAt);
        }
        return serializedFn;
      }
      if (options.ignoreFunction && typeof obj === "function") {
        obj = void 0;
      }
      if (obj === void 0) {
        return String(obj);
      }
      var str;
      if (options.isJSON && !options.space) {
        str = JSON.stringify(obj);
      } else {
        str = JSON.stringify(obj, options.isJSON ? null : replacer, options.space);
      }
      if (typeof str !== "string") {
        return String(str);
      }
      if (options.unsafe !== true) {
        str = str.replace(UNSAFE_CHARS_REGEXP, escapeUnsafeChars2);
      }
      if (functions.length === 0 && regexps.length === 0 && dates.length === 0 && maps.length === 0 && sets.length === 0 && arrays.length === 0 && undefs.length === 0 && infinities.length === 0 && bigInts.length === 0 && urls.length === 0) {
        return str;
      }
      return str.replace(PLACE_HOLDER_REGEXP, function(match, backSlash, type, valueIndex) {
        if (backSlash) {
          return match;
        }
        if (type === "D") {
          return 'new Date("' + dates[valueIndex].toISOString() + '")';
        }
        if (type === "R") {
          return "new RegExp(" + serialize2(regexps[valueIndex].source) + ', "' + regexps[valueIndex].flags + '")';
        }
        if (type === "M") {
          return "new Map(" + serialize2(Array.from(maps[valueIndex].entries()), options) + ")";
        }
        if (type === "S") {
          return "new Set(" + serialize2(Array.from(sets[valueIndex].values()), options) + ")";
        }
        if (type === "A") {
          return "Array.prototype.slice.call(" + serialize2(Object.assign({ length: arrays[valueIndex].length }, arrays[valueIndex]), options) + ")";
        }
        if (type === "U") {
          return "undefined";
        }
        if (type === "I") {
          return infinities[valueIndex];
        }
        if (type === "B") {
          return 'BigInt("' + bigInts[valueIndex] + '")';
        }
        if (type === "L") {
          return 'new URL("' + urls[valueIndex].toString() + '")';
        }
        var fn = functions[valueIndex];
        return serializeFunc(fn);
      });
    };
  }
});

// node_modules/astro/dist/runtime/server/util.js
function serializeListValue(value) {
  const hash = {};
  push2(value);
  return Object.keys(hash).join(" ");
  function push2(item) {
    if (item && typeof item.forEach === "function")
      item.forEach(push2);
    else if (item === Object(item))
      Object.keys(item).forEach((name) => {
        if (item[name])
          push2(name);
      });
    else {
      item = item == null ? "" : String(item).trim();
      if (item) {
        item.split(/\s+/).forEach((name) => {
          hash[name] = true;
        });
      }
    }
  }
}
var init_util = __esm({
  "node_modules/astro/dist/runtime/server/util.js"() {
  }
});

// node_modules/astro/dist/runtime/server/hydration.js
var import_serialize_javascript;
var init_hydration = __esm({
  "node_modules/astro/dist/runtime/server/hydration.js"() {
    import_serialize_javascript = __toESM(require_serialize_javascript(), 1);
    init_util();
  }
});

// node_modules/astro/dist/runtime/server/shorthash.js
var dictionary, binary;
var init_shorthash = __esm({
  "node_modules/astro/dist/runtime/server/shorthash.js"() {
    dictionary = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXY";
    binary = dictionary.length;
  }
});

// node_modules/astro/dist/runtime/server/metadata.js
var init_metadata = __esm({
  "node_modules/astro/dist/runtime/server/metadata.js"() {
    init_util();
  }
});

// node_modules/astro/dist/runtime/server/index.js
async function _render(child) {
  child = await child;
  if (child instanceof HTMLString) {
    return child;
  } else if (Array.isArray(child)) {
    return markHTMLString((await Promise.all(child.map((value) => _render(value)))).join(""));
  } else if (typeof child === "function") {
    return _render(child());
  } else if (typeof child === "string") {
    return markHTMLString(escapeHTML(child));
  } else if (!child && child !== 0) {
  } else if (child instanceof AstroComponent || Object.prototype.toString.call(child) === "[object AstroComponent]") {
    return markHTMLString(await renderAstroComponent(child));
  } else {
    return child;
  }
}
function isAstroComponent(obj) {
  return typeof obj === "object" && Object.prototype.toString.call(obj) === "[object AstroComponent]";
}
async function renderSlot(_result2, slotted, fallback) {
  if (slotted) {
    return await _render(slotted);
  }
  return fallback;
}
function addAttribute(value, key2, shouldEscape = true) {
  if (value == null) {
    return "";
  }
  if (value === false) {
    if (htmlEnumAttributes.test(key2) || svgEnumAttributes.test(key2)) {
      return markHTMLString(` ${key2}="false"`);
    }
    return "";
  }
  if (STATIC_DIRECTIVES.has(key2)) {
    console.warn(`[astro] The "${key2}" directive cannot be applied dynamically at runtime. It will not be rendered as an attribute.

Make sure to use the static attribute syntax (\`${key2}={value}\`) instead of the dynamic spread syntax (\`{...{ "${key2}": value }}\`).`);
    return "";
  }
  if (key2 === "class:list") {
    return markHTMLString(` ${key2.slice(0, -5)}="${toAttributeString(serializeListValue(value))}"`);
  }
  if (value === true && (key2.startsWith("data-") || htmlBooleanAttributes.test(key2))) {
    return markHTMLString(` ${key2}`);
  } else {
    return markHTMLString(` ${key2}="${toAttributeString(value, shouldEscape)}"`);
  }
}
function internalSpreadAttributes(values, shouldEscape = true) {
  let output = "";
  for (const [key2, value] of Object.entries(values)) {
    output += addAttribute(value, key2, shouldEscape);
  }
  return markHTMLString(output);
}
function defineStyleVars(selector, vars) {
  let output = "\n";
  for (const [key2, value] of Object.entries(vars)) {
    output += `  --${key2}: ${value};
`;
  }
  return markHTMLString(`${selector} {${output}}`);
}
function defineScriptVars(vars) {
  let output = "";
  for (const [key2, value] of Object.entries(vars)) {
    output += `let ${key2} = ${JSON.stringify(value)};
`;
  }
  return markHTMLString(output);
}
function getHandlerFromModule(mod, method) {
  if (mod[method]) {
    return mod[method];
  }
  if (method === "delete" && mod["del"]) {
    return mod["del"];
  }
  if (mod["all"]) {
    return mod["all"];
  }
  return void 0;
}
async function renderEndpoint(mod, request, params) {
  var _a8;
  const chosenMethod = (_a8 = request.method) == null ? void 0 : _a8.toLowerCase();
  const handler2 = getHandlerFromModule(mod, chosenMethod);
  if (!handler2 || typeof handler2 !== "function") {
    throw new Error(`Endpoint handler not found! Expected an exported function for "${chosenMethod}"`);
  }
  if (handler2.length > 1) {
    console.warn(`
API routes with 2 arguments have been deprecated. Instead they take a single argument in the form of:

export function get({ params, request }) {
	//...
}

Update your code to remove this warning.`);
  }
  const context = {
    request,
    params
  };
  const proxy = new Proxy(context, {
    get(target, prop) {
      if (prop in target) {
        return Reflect.get(target, prop);
      } else if (prop in params) {
        console.warn(`
API routes no longer pass params as the first argument. Instead an object containing a params property is provided in the form of:

export function get({ params }) {
	// ...
}

Update your code to remove this warning.`);
        return Reflect.get(params, prop);
      } else {
        return void 0;
      }
    }
  });
  return handler2.call(mod, proxy, request);
}
async function replaceHeadInjection(result, html6) {
  let template = html6;
  if (template.indexOf("<!--astro:head-->") > -1) {
    template = template.replace("<!--astro:head-->", await renderHead(result));
  }
  return template;
}
async function renderPage(result, componentFactory, props, children2) {
  try {
    const response = await componentFactory(result, props, children2);
    if (isAstroComponent(response)) {
      let template = await renderAstroComponent(response);
      const html6 = await replaceHeadInjection(result, template);
      return {
        type: "html",
        html: html6
      };
    } else {
      return {
        type: "response",
        response
      };
    }
  } catch (err) {
    if (err instanceof Response) {
      return {
        type: "response",
        response: err
      };
    } else {
      throw err;
    }
  }
}
async function renderHead(result) {
  const styles7 = Array.from(result.styles).filter(uniqueElements).map((style3) => renderElement("style", style3));
  let needsHydrationStyles = false;
  const scripts = Array.from(result.scripts).filter(uniqueElements).map((script, i3) => {
    if ("data-astro-component-hydration" in script.props) {
      needsHydrationStyles = true;
    }
    return renderElement("script", script);
  });
  if (needsHydrationStyles) {
    styles7.push(renderElement("style", {
      props: {},
      children: "astro-root, astro-fragment { display: contents; }"
    }));
  }
  const links = Array.from(result.links).filter(uniqueElements).map((link2) => renderElement("link", link2, false));
  return markHTMLString(links.join("\n") + styles7.join("\n") + scripts.join("\n") + "\n<!--astro:head:injected-->");
}
async function renderAstroComponent(component) {
  let template = [];
  for await (const value of component) {
    if (value || value === 0) {
      template.push(value);
    }
  }
  return markHTMLString(await _render(template));
}
function renderElement(name, { props: _props, children: children2 = "" }, shouldEscape = true) {
  const _a8 = _props, { lang: _, "data-astro-id": astroId, "define:vars": defineVars } = _a8, props = __objRest2(_a8, ["lang", "data-astro-id", "define:vars"]);
  if (defineVars) {
    if (name === "style") {
      if (props["is:global"]) {
        children2 = defineStyleVars(`:root`, defineVars) + "\n" + children2;
      } else {
        children2 = defineStyleVars(`.astro-${astroId}`, defineVars) + "\n" + children2;
      }
      delete props["is:global"];
      delete props["is:scoped"];
    }
    if (name === "script") {
      delete props.hoist;
      children2 = defineScriptVars(defineVars) + "\n" + children2;
    }
  }
  if ((children2 == null || children2 == "") && voidElementNames.test(name)) {
    return `<${name}${internalSpreadAttributes(props, shouldEscape)} />`;
  }
  return `<${name}${internalSpreadAttributes(props, shouldEscape)}>${children2}</${name}>`;
}
var __getOwnPropSymbols2, __hasOwnProp2, __propIsEnum2, __objRest2, voidElementNames, htmlBooleanAttributes, htmlEnumAttributes, svgEnumAttributes, AstroComponent, Fragment, toAttributeString, STATIC_DIRECTIVES, uniqueElements;
var init_server = __esm({
  "node_modules/astro/dist/runtime/server/index.js"() {
    init_escape();
    init_hydration();
    init_shorthash();
    init_util();
    init_escape();
    init_metadata();
    __getOwnPropSymbols2 = Object.getOwnPropertySymbols;
    __hasOwnProp2 = Object.prototype.hasOwnProperty;
    __propIsEnum2 = Object.prototype.propertyIsEnumerable;
    __objRest2 = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp2.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols2)
        for (var prop of __getOwnPropSymbols2(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum2.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    voidElementNames = /^(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;
    htmlBooleanAttributes = /^(allowfullscreen|async|autofocus|autoplay|controls|default|defer|disabled|disablepictureinpicture|disableremoteplayback|formnovalidate|hidden|loop|nomodule|novalidate|open|playsinline|readonly|required|reversed|scoped|seamless|itemscope)$/i;
    htmlEnumAttributes = /^(contenteditable|draggable|spellcheck|value)$/i;
    svgEnumAttributes = /^(autoReverse|externalResourcesRequired|focusable|preserveAlpha)$/i;
    AstroComponent = class {
      constructor(htmlParts, expressions) {
        this.htmlParts = htmlParts;
        this.expressions = expressions;
      }
      get [Symbol.toStringTag]() {
        return "AstroComponent";
      }
      *[Symbol.iterator]() {
        const { htmlParts, expressions } = this;
        for (let i3 = 0; i3 < htmlParts.length; i3++) {
          const html6 = htmlParts[i3];
          const expression = expressions[i3];
          yield markHTMLString(html6);
          yield _render(expression);
        }
      }
    };
    Fragment = Symbol("Astro.Fragment");
    toAttributeString = (value, shouldEscape = true) => shouldEscape ? String(value).replace(/&/g, "&#38;").replace(/"/g, "&#34;") : value;
    STATIC_DIRECTIVES = /* @__PURE__ */ new Set(["set:html", "set:text"]);
    uniqueElements = (item, index2, all5) => {
      const props = JSON.stringify(item.props);
      const children2 = item.children;
      return index2 === all5.findIndex((i3) => JSON.stringify(i3.props) === props && i3.children == children2);
    };
  }
});

// node_modules/kleur/colors.mjs
function init(x3, y2) {
  let rgx = new RegExp(`\\x1b\\[${y2}m`, "g");
  let open = `\x1B[${x3}m`, close = `\x1B[${y2}m`;
  return function(txt) {
    if (!$2.enabled || txt == null)
      return txt;
    return open + (!!~("" + txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;
  };
}
var FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY, $2, reset, bold, dim, italic, underline, inverse, hidden, strikethrough, black, red, green, yellow, blue, magenta, cyan, white, gray, grey, bgBlack, bgRed, bgGreen, bgYellow, bgBlue, bgMagenta, bgCyan, bgWhite;
var init_colors = __esm({
  "node_modules/kleur/colors.mjs"() {
    isTTY = true;
    if (typeof process !== "undefined") {
      ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env);
      isTTY = process.stdout && process.stdout.isTTY;
    }
    $2 = {
      enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== "dumb" && (FORCE_COLOR != null && FORCE_COLOR !== "0" || isTTY)
    };
    reset = init(0, 0);
    bold = init(1, 22);
    dim = init(2, 22);
    italic = init(3, 23);
    underline = init(4, 24);
    inverse = init(7, 27);
    hidden = init(8, 28);
    strikethrough = init(9, 29);
    black = init(30, 39);
    red = init(31, 39);
    green = init(32, 39);
    yellow = init(33, 39);
    blue = init(34, 39);
    magenta = init(35, 39);
    cyan = init(36, 39);
    white = init(37, 39);
    gray = init(90, 39);
    grey = init(90, 39);
    bgBlack = init(40, 49);
    bgRed = init(41, 49);
    bgGreen = init(42, 49);
    bgYellow = init(43, 49);
    bgBlue = init(44, 49);
    bgMagenta = init(45, 49);
    bgCyan = init(46, 49);
    bgWhite = init(47, 49);
  }
});

// node_modules/ansi-regex/index.js
var init_ansi_regex = __esm({
  "node_modules/ansi-regex/index.js"() {
  }
});

// node_modules/strip-ansi/index.js
var init_strip_ansi = __esm({
  "node_modules/strip-ansi/index.js"() {
    init_ansi_regex();
  }
});

// node_modules/eastasianwidth/eastasianwidth.js
var require_eastasianwidth = __commonJS({
  "node_modules/eastasianwidth/eastasianwidth.js"(exports, module2) {
    var eaw = {};
    if (typeof module2 == "undefined") {
      window.eastasianwidth = eaw;
    } else {
      module2.exports = eaw;
    }
    eaw.eastAsianWidth = function(character) {
      var x3 = character.charCodeAt(0);
      var y2 = character.length == 2 ? character.charCodeAt(1) : 0;
      var codePoint = x3;
      if (55296 <= x3 && x3 <= 56319 && (56320 <= y2 && y2 <= 57343)) {
        x3 &= 1023;
        y2 &= 1023;
        codePoint = x3 << 10 | y2;
        codePoint += 65536;
      }
      if (codePoint == 12288 || 65281 <= codePoint && codePoint <= 65376 || 65504 <= codePoint && codePoint <= 65510) {
        return "F";
      }
      if (codePoint == 8361 || 65377 <= codePoint && codePoint <= 65470 || 65474 <= codePoint && codePoint <= 65479 || 65482 <= codePoint && codePoint <= 65487 || 65490 <= codePoint && codePoint <= 65495 || 65498 <= codePoint && codePoint <= 65500 || 65512 <= codePoint && codePoint <= 65518) {
        return "H";
      }
      if (4352 <= codePoint && codePoint <= 4447 || 4515 <= codePoint && codePoint <= 4519 || 4602 <= codePoint && codePoint <= 4607 || 9001 <= codePoint && codePoint <= 9002 || 11904 <= codePoint && codePoint <= 11929 || 11931 <= codePoint && codePoint <= 12019 || 12032 <= codePoint && codePoint <= 12245 || 12272 <= codePoint && codePoint <= 12283 || 12289 <= codePoint && codePoint <= 12350 || 12353 <= codePoint && codePoint <= 12438 || 12441 <= codePoint && codePoint <= 12543 || 12549 <= codePoint && codePoint <= 12589 || 12593 <= codePoint && codePoint <= 12686 || 12688 <= codePoint && codePoint <= 12730 || 12736 <= codePoint && codePoint <= 12771 || 12784 <= codePoint && codePoint <= 12830 || 12832 <= codePoint && codePoint <= 12871 || 12880 <= codePoint && codePoint <= 13054 || 13056 <= codePoint && codePoint <= 19903 || 19968 <= codePoint && codePoint <= 42124 || 42128 <= codePoint && codePoint <= 42182 || 43360 <= codePoint && codePoint <= 43388 || 44032 <= codePoint && codePoint <= 55203 || 55216 <= codePoint && codePoint <= 55238 || 55243 <= codePoint && codePoint <= 55291 || 63744 <= codePoint && codePoint <= 64255 || 65040 <= codePoint && codePoint <= 65049 || 65072 <= codePoint && codePoint <= 65106 || 65108 <= codePoint && codePoint <= 65126 || 65128 <= codePoint && codePoint <= 65131 || 110592 <= codePoint && codePoint <= 110593 || 127488 <= codePoint && codePoint <= 127490 || 127504 <= codePoint && codePoint <= 127546 || 127552 <= codePoint && codePoint <= 127560 || 127568 <= codePoint && codePoint <= 127569 || 131072 <= codePoint && codePoint <= 194367 || 177984 <= codePoint && codePoint <= 196605 || 196608 <= codePoint && codePoint <= 262141) {
        return "W";
      }
      if (32 <= codePoint && codePoint <= 126 || 162 <= codePoint && codePoint <= 163 || 165 <= codePoint && codePoint <= 166 || codePoint == 172 || codePoint == 175 || 10214 <= codePoint && codePoint <= 10221 || 10629 <= codePoint && codePoint <= 10630) {
        return "Na";
      }
      if (codePoint == 161 || codePoint == 164 || 167 <= codePoint && codePoint <= 168 || codePoint == 170 || 173 <= codePoint && codePoint <= 174 || 176 <= codePoint && codePoint <= 180 || 182 <= codePoint && codePoint <= 186 || 188 <= codePoint && codePoint <= 191 || codePoint == 198 || codePoint == 208 || 215 <= codePoint && codePoint <= 216 || 222 <= codePoint && codePoint <= 225 || codePoint == 230 || 232 <= codePoint && codePoint <= 234 || 236 <= codePoint && codePoint <= 237 || codePoint == 240 || 242 <= codePoint && codePoint <= 243 || 247 <= codePoint && codePoint <= 250 || codePoint == 252 || codePoint == 254 || codePoint == 257 || codePoint == 273 || codePoint == 275 || codePoint == 283 || 294 <= codePoint && codePoint <= 295 || codePoint == 299 || 305 <= codePoint && codePoint <= 307 || codePoint == 312 || 319 <= codePoint && codePoint <= 322 || codePoint == 324 || 328 <= codePoint && codePoint <= 331 || codePoint == 333 || 338 <= codePoint && codePoint <= 339 || 358 <= codePoint && codePoint <= 359 || codePoint == 363 || codePoint == 462 || codePoint == 464 || codePoint == 466 || codePoint == 468 || codePoint == 470 || codePoint == 472 || codePoint == 474 || codePoint == 476 || codePoint == 593 || codePoint == 609 || codePoint == 708 || codePoint == 711 || 713 <= codePoint && codePoint <= 715 || codePoint == 717 || codePoint == 720 || 728 <= codePoint && codePoint <= 731 || codePoint == 733 || codePoint == 735 || 768 <= codePoint && codePoint <= 879 || 913 <= codePoint && codePoint <= 929 || 931 <= codePoint && codePoint <= 937 || 945 <= codePoint && codePoint <= 961 || 963 <= codePoint && codePoint <= 969 || codePoint == 1025 || 1040 <= codePoint && codePoint <= 1103 || codePoint == 1105 || codePoint == 8208 || 8211 <= codePoint && codePoint <= 8214 || 8216 <= codePoint && codePoint <= 8217 || 8220 <= codePoint && codePoint <= 8221 || 8224 <= codePoint && codePoint <= 8226 || 8228 <= codePoint && codePoint <= 8231 || codePoint == 8240 || 8242 <= codePoint && codePoint <= 8243 || codePoint == 8245 || codePoint == 8251 || codePoint == 8254 || codePoint == 8308 || codePoint == 8319 || 8321 <= codePoint && codePoint <= 8324 || codePoint == 8364 || codePoint == 8451 || codePoint == 8453 || codePoint == 8457 || codePoint == 8467 || codePoint == 8470 || 8481 <= codePoint && codePoint <= 8482 || codePoint == 8486 || codePoint == 8491 || 8531 <= codePoint && codePoint <= 8532 || 8539 <= codePoint && codePoint <= 8542 || 8544 <= codePoint && codePoint <= 8555 || 8560 <= codePoint && codePoint <= 8569 || codePoint == 8585 || 8592 <= codePoint && codePoint <= 8601 || 8632 <= codePoint && codePoint <= 8633 || codePoint == 8658 || codePoint == 8660 || codePoint == 8679 || codePoint == 8704 || 8706 <= codePoint && codePoint <= 8707 || 8711 <= codePoint && codePoint <= 8712 || codePoint == 8715 || codePoint == 8719 || codePoint == 8721 || codePoint == 8725 || codePoint == 8730 || 8733 <= codePoint && codePoint <= 8736 || codePoint == 8739 || codePoint == 8741 || 8743 <= codePoint && codePoint <= 8748 || codePoint == 8750 || 8756 <= codePoint && codePoint <= 8759 || 8764 <= codePoint && codePoint <= 8765 || codePoint == 8776 || codePoint == 8780 || codePoint == 8786 || 8800 <= codePoint && codePoint <= 8801 || 8804 <= codePoint && codePoint <= 8807 || 8810 <= codePoint && codePoint <= 8811 || 8814 <= codePoint && codePoint <= 8815 || 8834 <= codePoint && codePoint <= 8835 || 8838 <= codePoint && codePoint <= 8839 || codePoint == 8853 || codePoint == 8857 || codePoint == 8869 || codePoint == 8895 || codePoint == 8978 || 9312 <= codePoint && codePoint <= 9449 || 9451 <= codePoint && codePoint <= 9547 || 9552 <= codePoint && codePoint <= 9587 || 9600 <= codePoint && codePoint <= 9615 || 9618 <= codePoint && codePoint <= 9621 || 9632 <= codePoint && codePoint <= 9633 || 9635 <= codePoint && codePoint <= 9641 || 9650 <= codePoint && codePoint <= 9651 || 9654 <= codePoint && codePoint <= 9655 || 9660 <= codePoint && codePoint <= 9661 || 9664 <= codePoint && codePoint <= 9665 || 9670 <= codePoint && codePoint <= 9672 || codePoint == 9675 || 9678 <= codePoint && codePoint <= 9681 || 9698 <= codePoint && codePoint <= 9701 || codePoint == 9711 || 9733 <= codePoint && codePoint <= 9734 || codePoint == 9737 || 9742 <= codePoint && codePoint <= 9743 || 9748 <= codePoint && codePoint <= 9749 || codePoint == 9756 || codePoint == 9758 || codePoint == 9792 || codePoint == 9794 || 9824 <= codePoint && codePoint <= 9825 || 9827 <= codePoint && codePoint <= 9829 || 9831 <= codePoint && codePoint <= 9834 || 9836 <= codePoint && codePoint <= 9837 || codePoint == 9839 || 9886 <= codePoint && codePoint <= 9887 || 9918 <= codePoint && codePoint <= 9919 || 9924 <= codePoint && codePoint <= 9933 || 9935 <= codePoint && codePoint <= 9953 || codePoint == 9955 || 9960 <= codePoint && codePoint <= 9983 || codePoint == 10045 || codePoint == 10071 || 10102 <= codePoint && codePoint <= 10111 || 11093 <= codePoint && codePoint <= 11097 || 12872 <= codePoint && codePoint <= 12879 || 57344 <= codePoint && codePoint <= 63743 || 65024 <= codePoint && codePoint <= 65039 || codePoint == 65533 || 127232 <= codePoint && codePoint <= 127242 || 127248 <= codePoint && codePoint <= 127277 || 127280 <= codePoint && codePoint <= 127337 || 127344 <= codePoint && codePoint <= 127386 || 917760 <= codePoint && codePoint <= 917999 || 983040 <= codePoint && codePoint <= 1048573 || 1048576 <= codePoint && codePoint <= 1114109) {
        return "A";
      }
      return "N";
    };
    eaw.characterLength = function(character) {
      var code2 = this.eastAsianWidth(character);
      if (code2 == "F" || code2 == "W" || code2 == "A") {
        return 2;
      } else {
        return 1;
      }
    };
    function stringToArray(string3) {
      return string3.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]|[^\uD800-\uDFFF]/g) || [];
    }
    eaw.length = function(string3) {
      var characters2 = stringToArray(string3);
      var len = 0;
      for (var i3 = 0; i3 < characters2.length; i3++) {
        len = len + this.characterLength(characters2[i3]);
      }
      return len;
    };
    eaw.slice = function(text8, start3, end) {
      textLen = eaw.length(text8);
      start3 = start3 ? start3 : 0;
      end = end ? end : 1;
      if (start3 < 0) {
        start3 = textLen + start3;
      }
      if (end < 0) {
        end = textLen + end;
      }
      var result = "";
      var eawLen = 0;
      var chars2 = stringToArray(text8);
      for (var i3 = 0; i3 < chars2.length; i3++) {
        var char = chars2[i3];
        var charLen = eaw.length(char);
        if (eawLen >= start3 - (charLen == 2 ? 1 : 0)) {
          if (eawLen + charLen <= end) {
            result += char;
          } else {
            break;
          }
        }
        eawLen += charLen;
      }
      return result;
    };
  }
});

// node_modules/emoji-regex/index.js
var require_emoji_regex = __commonJS({
  "node_modules/emoji-regex/index.js"(exports, module2) {
    "use strict";
    module2.exports = function() {
      return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
    };
  }
});

// node_modules/string-width/index.js
var import_eastasianwidth, import_emoji_regex;
var init_string_width = __esm({
  "node_modules/string-width/index.js"() {
    init_strip_ansi();
    import_eastasianwidth = __toESM(require_eastasianwidth(), 1);
    import_emoji_regex = __toESM(require_emoji_regex(), 1);
  }
});

// node_modules/astro/dist/core/logger/core.js
function log(opts, level, type, ...args) {
  const logLevel = opts.level;
  const dest = opts.dest;
  const event = {
    type,
    level,
    args,
    message: ""
  };
  if (levels[logLevel] > levels[level]) {
    return;
  }
  dest.write(event);
}
function warn(opts, type, ...messages2) {
  return log(opts, "warn", type, ...messages2);
}
function debug(...args) {
  if ("_astroGlobalDebug" in globalThis) {
    globalThis._astroGlobalDebug(...args);
  }
}
var dateTimeFormat, levels, defaultLogLevel;
var init_core = __esm({
  "node_modules/astro/dist/core/logger/core.js"() {
    init_colors();
    init_string_width();
    dateTimeFormat = new Intl.DateTimeFormat([], {
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
    levels = {
      debug: 20,
      info: 30,
      warn: 40,
      error: 50,
      silent: 90
    };
    if (typeof process !== "undefined") {
      if (process.argv.includes("--verbose")) {
        defaultLogLevel = "debug";
      } else if (process.argv.includes("--silent")) {
        defaultLogLevel = "silent";
      } else {
        defaultLogLevel = "info";
      }
    } else {
      defaultLogLevel = "info";
    }
  }
});

// node_modules/astro/dist/core/routing/validation.js
function validateGetStaticPathsParameter([key2, value]) {
  if (!VALID_PARAM_TYPES.includes(typeof value)) {
    throw new Error(`[getStaticPaths] invalid route parameter for "${key2}". Expected a string or number, received \`${value}\` ("${typeof value}")`);
  }
}
function validateGetStaticPathsModule(mod, { ssr: ssr2 }) {
  if (mod.createCollection) {
    throw new Error(`[createCollection] deprecated. Please use getStaticPaths() instead.`);
  }
  if (!mod.getStaticPaths && !ssr2) {
    throw new Error(`[getStaticPaths] getStaticPaths() function is required. Make sure that you \`export\` the function from your component.`);
  }
}
function validateGetStaticPathsResult(result, logging) {
  if (!Array.isArray(result)) {
    throw new Error(`[getStaticPaths] invalid return value. Expected an array of path objects, but got \`${JSON.stringify(result)}\`.`);
  }
  result.forEach((pathObject) => {
    if (!pathObject.params) {
      warn(logging, "getStaticPaths", `invalid path object. Expected an object with key \`params\`, but got \`${JSON.stringify(pathObject)}\`. Skipped.`);
      return;
    }
    for (const [key2, val] of Object.entries(pathObject.params)) {
      if (!(typeof val === "undefined" || typeof val === "string")) {
        warn(logging, "getStaticPaths", `invalid path param: ${key2}. A string value was expected, but got \`${JSON.stringify(val)}\`.`);
      }
      if (val === "") {
        warn(logging, "getStaticPaths", `invalid path param: ${key2}. \`undefined\` expected for an optional param, but got empty string.`);
      }
    }
  });
}
var VALID_PARAM_TYPES;
var init_validation = __esm({
  "node_modules/astro/dist/core/routing/validation.js"() {
    init_core();
    VALID_PARAM_TYPES = ["string", "number", "undefined"];
  }
});

// node_modules/astro/dist/core/routing/params.js
function getParams(array) {
  const fn = (match) => {
    const params = {};
    array.forEach((key2, i3) => {
      if (key2.startsWith("...")) {
        params[key2.slice(3)] = match[i3 + 1] ? decodeURIComponent(match[i3 + 1]) : void 0;
      } else {
        params[key2] = decodeURIComponent(match[i3 + 1]);
      }
    });
    return params;
  };
  return fn;
}
function stringifyParams(params) {
  const validatedParams = Object.entries(params).reduce((acc, next) => {
    validateGetStaticPathsParameter(next);
    const [key2, value] = next;
    acc[key2] = `${value}`;
    return acc;
  }, {});
  return JSON.stringify(validatedParams, Object.keys(params).sort());
}
var init_params = __esm({
  "node_modules/astro/dist/core/routing/params.js"() {
    init_validation();
  }
});

// node_modules/astro/dist/core/render/script.js
var SCRIPT_EXTENSIONS, scriptRe, isScriptRequest;
var init_script = __esm({
  "node_modules/astro/dist/core/render/script.js"() {
    SCRIPT_EXTENSIONS = /* @__PURE__ */ new Set([".js", ".ts"]);
    scriptRe = new RegExp(`\\.(${Array.from(SCRIPT_EXTENSIONS).map((s4) => s4.slice(1)).join("|")})($|\\?)`);
    isScriptRequest = (request) => scriptRe.test(request);
  }
});

// node_modules/path-browserify/index.js
var require_path_browserify = __commonJS({
  "node_modules/path-browserify/index.js"(exports, module2) {
    "use strict";
    function assertPath3(path) {
      if (typeof path !== "string") {
        throw new TypeError("Path must be a string. Received " + JSON.stringify(path));
      }
    }
    function normalizeStringPosix2(path, allowAboveRoot) {
      var res = "";
      var lastSegmentLength = 0;
      var lastSlash = -1;
      var dots = 0;
      var code2;
      for (var i3 = 0; i3 <= path.length; ++i3) {
        if (i3 < path.length)
          code2 = path.charCodeAt(i3);
        else if (code2 === 47)
          break;
        else
          code2 = 47;
        if (code2 === 47) {
          if (lastSlash === i3 - 1 || dots === 1) {
          } else if (lastSlash !== i3 - 1 && dots === 2) {
            if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {
              if (res.length > 2) {
                var lastSlashIndex = res.lastIndexOf("/");
                if (lastSlashIndex !== res.length - 1) {
                  if (lastSlashIndex === -1) {
                    res = "";
                    lastSegmentLength = 0;
                  } else {
                    res = res.slice(0, lastSlashIndex);
                    lastSegmentLength = res.length - 1 - res.lastIndexOf("/");
                  }
                  lastSlash = i3;
                  dots = 0;
                  continue;
                }
              } else if (res.length === 2 || res.length === 1) {
                res = "";
                lastSegmentLength = 0;
                lastSlash = i3;
                dots = 0;
                continue;
              }
            }
            if (allowAboveRoot) {
              if (res.length > 0)
                res += "/..";
              else
                res = "..";
              lastSegmentLength = 2;
            }
          } else {
            if (res.length > 0)
              res += "/" + path.slice(lastSlash + 1, i3);
            else
              res = path.slice(lastSlash + 1, i3);
            lastSegmentLength = i3 - lastSlash - 1;
          }
          lastSlash = i3;
          dots = 0;
        } else if (code2 === 46 && dots !== -1) {
          ++dots;
        } else {
          dots = -1;
        }
      }
      return res;
    }
    function _format2(sep, pathObject) {
      var dir = pathObject.dir || pathObject.root;
      var base2 = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
      if (!dir) {
        return base2;
      }
      if (dir === pathObject.root) {
        return dir + base2;
      }
      return dir + sep + base2;
    }
    var posix2 = {
      resolve: function resolve2() {
        var resolvedPath = "";
        var resolvedAbsolute = false;
        var cwd;
        for (var i3 = arguments.length - 1; i3 >= -1 && !resolvedAbsolute; i3--) {
          var path;
          if (i3 >= 0)
            path = arguments[i3];
          else {
            if (cwd === void 0)
              cwd = process.cwd();
            path = cwd;
          }
          assertPath3(path);
          if (path.length === 0) {
            continue;
          }
          resolvedPath = path + "/" + resolvedPath;
          resolvedAbsolute = path.charCodeAt(0) === 47;
        }
        resolvedPath = normalizeStringPosix2(resolvedPath, !resolvedAbsolute);
        if (resolvedAbsolute) {
          if (resolvedPath.length > 0)
            return "/" + resolvedPath;
          else
            return "/";
        } else if (resolvedPath.length > 0) {
          return resolvedPath;
        } else {
          return ".";
        }
      },
      normalize: function normalize7(path) {
        assertPath3(path);
        if (path.length === 0)
          return ".";
        var isAbsolute2 = path.charCodeAt(0) === 47;
        var trailingSeparator = path.charCodeAt(path.length - 1) === 47;
        path = normalizeStringPosix2(path, !isAbsolute2);
        if (path.length === 0 && !isAbsolute2)
          path = ".";
        if (path.length > 0 && trailingSeparator)
          path += "/";
        if (isAbsolute2)
          return "/" + path;
        return path;
      },
      isAbsolute: function isAbsolute2(path) {
        assertPath3(path);
        return path.length > 0 && path.charCodeAt(0) === 47;
      },
      join: function join2() {
        if (arguments.length === 0)
          return ".";
        var joined;
        for (var i3 = 0; i3 < arguments.length; ++i3) {
          var arg = arguments[i3];
          assertPath3(arg);
          if (arg.length > 0) {
            if (joined === void 0)
              joined = arg;
            else
              joined += "/" + arg;
          }
        }
        if (joined === void 0)
          return ".";
        return posix2.normalize(joined);
      },
      relative: function relative2(from, to) {
        assertPath3(from);
        assertPath3(to);
        if (from === to)
          return "";
        from = posix2.resolve(from);
        to = posix2.resolve(to);
        if (from === to)
          return "";
        var fromStart = 1;
        for (; fromStart < from.length; ++fromStart) {
          if (from.charCodeAt(fromStart) !== 47)
            break;
        }
        var fromEnd = from.length;
        var fromLen = fromEnd - fromStart;
        var toStart = 1;
        for (; toStart < to.length; ++toStart) {
          if (to.charCodeAt(toStart) !== 47)
            break;
        }
        var toEnd = to.length;
        var toLen = toEnd - toStart;
        var length = fromLen < toLen ? fromLen : toLen;
        var lastCommonSep = -1;
        var i3 = 0;
        for (; i3 <= length; ++i3) {
          if (i3 === length) {
            if (toLen > length) {
              if (to.charCodeAt(toStart + i3) === 47) {
                return to.slice(toStart + i3 + 1);
              } else if (i3 === 0) {
                return to.slice(toStart + i3);
              }
            } else if (fromLen > length) {
              if (from.charCodeAt(fromStart + i3) === 47) {
                lastCommonSep = i3;
              } else if (i3 === 0) {
                lastCommonSep = 0;
              }
            }
            break;
          }
          var fromCode = from.charCodeAt(fromStart + i3);
          var toCode = to.charCodeAt(toStart + i3);
          if (fromCode !== toCode)
            break;
          else if (fromCode === 47)
            lastCommonSep = i3;
        }
        var out = "";
        for (i3 = fromStart + lastCommonSep + 1; i3 <= fromEnd; ++i3) {
          if (i3 === fromEnd || from.charCodeAt(i3) === 47) {
            if (out.length === 0)
              out += "..";
            else
              out += "/..";
          }
        }
        if (out.length > 0)
          return out + to.slice(toStart + lastCommonSep);
        else {
          toStart += lastCommonSep;
          if (to.charCodeAt(toStart) === 47)
            ++toStart;
          return to.slice(toStart);
        }
      },
      _makeLong: function _makeLong2(path) {
        return path;
      },
      dirname: function dirname2(path) {
        assertPath3(path);
        if (path.length === 0)
          return ".";
        var code2 = path.charCodeAt(0);
        var hasRoot = code2 === 47;
        var end = -1;
        var matchedSlash = true;
        for (var i3 = path.length - 1; i3 >= 1; --i3) {
          code2 = path.charCodeAt(i3);
          if (code2 === 47) {
            if (!matchedSlash) {
              end = i3;
              break;
            }
          } else {
            matchedSlash = false;
          }
        }
        if (end === -1)
          return hasRoot ? "/" : ".";
        if (hasRoot && end === 1)
          return "//";
        return path.slice(0, end);
      },
      basename: function basename3(path, ext) {
        if (ext !== void 0 && typeof ext !== "string")
          throw new TypeError('"ext" argument must be a string');
        assertPath3(path);
        var start3 = 0;
        var end = -1;
        var matchedSlash = true;
        var i3;
        if (ext !== void 0 && ext.length > 0 && ext.length <= path.length) {
          if (ext.length === path.length && ext === path)
            return "";
          var extIdx = ext.length - 1;
          var firstNonSlashEnd = -1;
          for (i3 = path.length - 1; i3 >= 0; --i3) {
            var code2 = path.charCodeAt(i3);
            if (code2 === 47) {
              if (!matchedSlash) {
                start3 = i3 + 1;
                break;
              }
            } else {
              if (firstNonSlashEnd === -1) {
                matchedSlash = false;
                firstNonSlashEnd = i3 + 1;
              }
              if (extIdx >= 0) {
                if (code2 === ext.charCodeAt(extIdx)) {
                  if (--extIdx === -1) {
                    end = i3;
                  }
                } else {
                  extIdx = -1;
                  end = firstNonSlashEnd;
                }
              }
            }
          }
          if (start3 === end)
            end = firstNonSlashEnd;
          else if (end === -1)
            end = path.length;
          return path.slice(start3, end);
        } else {
          for (i3 = path.length - 1; i3 >= 0; --i3) {
            if (path.charCodeAt(i3) === 47) {
              if (!matchedSlash) {
                start3 = i3 + 1;
                break;
              }
            } else if (end === -1) {
              matchedSlash = false;
              end = i3 + 1;
            }
          }
          if (end === -1)
            return "";
          return path.slice(start3, end);
        }
      },
      extname: function extname2(path) {
        assertPath3(path);
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var matchedSlash = true;
        var preDotState = 0;
        for (var i3 = path.length - 1; i3 >= 0; --i3) {
          var code2 = path.charCodeAt(i3);
          if (code2 === 47) {
            if (!matchedSlash) {
              startPart = i3 + 1;
              break;
            }
            continue;
          }
          if (end === -1) {
            matchedSlash = false;
            end = i3 + 1;
          }
          if (code2 === 46) {
            if (startDot === -1)
              startDot = i3;
            else if (preDotState !== 1)
              preDotState = 1;
          } else if (startDot !== -1) {
            preDotState = -1;
          }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
          return "";
        }
        return path.slice(startDot, end);
      },
      format: function format3(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
          throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
        }
        return _format2("/", pathObject);
      },
      parse: function parse8(path) {
        assertPath3(path);
        var ret = { root: "", dir: "", base: "", ext: "", name: "" };
        if (path.length === 0)
          return ret;
        var code2 = path.charCodeAt(0);
        var isAbsolute2 = code2 === 47;
        var start3;
        if (isAbsolute2) {
          ret.root = "/";
          start3 = 1;
        } else {
          start3 = 0;
        }
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var matchedSlash = true;
        var i3 = path.length - 1;
        var preDotState = 0;
        for (; i3 >= start3; --i3) {
          code2 = path.charCodeAt(i3);
          if (code2 === 47) {
            if (!matchedSlash) {
              startPart = i3 + 1;
              break;
            }
            continue;
          }
          if (end === -1) {
            matchedSlash = false;
            end = i3 + 1;
          }
          if (code2 === 46) {
            if (startDot === -1)
              startDot = i3;
            else if (preDotState !== 1)
              preDotState = 1;
          } else if (startDot !== -1) {
            preDotState = -1;
          }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
          if (end !== -1) {
            if (startPart === 0 && isAbsolute2)
              ret.base = ret.name = path.slice(1, end);
            else
              ret.base = ret.name = path.slice(startPart, end);
          }
        } else {
          if (startPart === 0 && isAbsolute2) {
            ret.name = path.slice(1, startDot);
            ret.base = path.slice(1, end);
          } else {
            ret.name = path.slice(startPart, startDot);
            ret.base = path.slice(startPart, end);
          }
          ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0)
          ret.dir = path.slice(0, startPart - 1);
        else if (isAbsolute2)
          ret.dir = "/";
        return ret;
      },
      sep: "/",
      delimiter: ":",
      win32: null,
      posix: null
    };
    posix2.posix = posix2;
    module2.exports = posix2;
  }
});

// node_modules/astro/dist/core/render/util.js
function createCanonicalURL(url59, base2, paginated) {
  let pathname = url59.replace(/\/index.html$/, "");
  if (paginated) {
    pathname = pathname.replace(/\/1\/?$/, "");
  }
  if (!import_path_browserify.default.extname(pathname))
    pathname = pathname.replace(/(\/+)?$/, "/");
  pathname = pathname.replace(/\/+/g, "/");
  return new URL(pathname, base2);
}
var import_path_browserify, STYLE_EXTENSIONS, cssRe, isCSSRequest;
var init_util2 = __esm({
  "node_modules/astro/dist/core/render/util.js"() {
    import_path_browserify = __toESM(require_path_browserify(), 1);
    STYLE_EXTENSIONS = /* @__PURE__ */ new Set([
      ".css",
      ".pcss",
      ".postcss",
      ".scss",
      ".sass",
      ".styl",
      ".stylus",
      ".less"
    ]);
    cssRe = new RegExp(`\\.(${Array.from(STYLE_EXTENSIONS).map((s4) => s4.slice(1)).join("|")})($|\\?)`);
    isCSSRequest = (request) => cssRe.test(request);
  }
});

// node_modules/astro/dist/core/render/result.js
function onlyAvailableInSSR(name) {
  return function _onlyAvailableInSSR() {
    throw new Error(`Oops, you are trying to use ${name}, which is only available with SSR.`);
  };
}
function getFunctionExpression(slot) {
  var _a8;
  if (!slot)
    return;
  if (((_a8 = slot.expressions) == null ? void 0 : _a8.length) !== 1)
    return;
  return slot.expressions[0];
}
function isPaginatedRoute({ page }) {
  return page && "currentPage" in page;
}
function createResult(args) {
  const { markdown, params, pathname, props: pageProps, renderers: renderers2, request, resolve: resolve2, site } = args;
  const paginated = isPaginatedRoute(pageProps);
  const url59 = new URL(request.url);
  const canonicalURL = createCanonicalURL("." + pathname, site ?? url59.origin, paginated);
  const response = {
    status: 200,
    statusText: "OK",
    headers: new Headers()
  };
  Object.defineProperty(response, "headers", {
    value: response.headers,
    enumerable: true,
    writable: false
  });
  const result = {
    styles: args.styles ?? /* @__PURE__ */ new Set(),
    scripts: args.scripts ?? /* @__PURE__ */ new Set(),
    links: args.links ?? /* @__PURE__ */ new Set(),
    createAstro(astroGlobal, props, slots) {
      const astroSlots = new Slots(result, slots);
      const Astro2 = {
        __proto__: astroGlobal,
        canonicalURL,
        params,
        props,
        request,
        redirect: args.ssr ? (path) => {
          return new Response(null, {
            status: 301,
            headers: {
              Location: path
            }
          });
        } : onlyAvailableInSSR("Astro.redirect"),
        resolve(path) {
          let extra = `This can be replaced with a dynamic import like so: await import("${path}")`;
          if (isCSSRequest(path)) {
            extra = `It looks like you are resolving styles. If you are adding a link tag, replace with this:
---
import "${path}";
---
`;
          } else if (isScriptRequest(path)) {
            extra = `It looks like you are resolving scripts. If you are adding a script tag, replace with this:

<script type="module" src={(await import("${path}?url")).default}><\/script>

or consider make it a module like so:

<script>
	import MyModule from "${path}";
<\/script>
`;
          }
          warn(args.logging, `deprecation`, `${bold("Astro.resolve()")} is deprecated. We see that you are trying to resolve ${path}.
${extra}`);
          return "";
        },
        response,
        slots: astroSlots
      };
      Object.defineProperty(Astro2, "__renderMarkdown", {
        enumerable: false,
        writable: false,
        value: async function(content3, opts) {
          if (typeof Deno !== "undefined") {
            throw new Error("Markdown is not supported in Deno SSR");
          }
          if (!renderMarkdown) {
            let astroRemark = "@astrojs/markdown-remark";
            renderMarkdown = (await import(astroRemark)).renderMarkdown;
          }
          const { code: code2 } = await renderMarkdown(content3, __spreadValues2(__spreadValues2({}, markdown), opts ?? {}));
          return code2;
        }
      });
      return Astro2;
    },
    resolve: resolve2,
    _metadata: {
      renderers: renderers2,
      pathname
    },
    response
  };
  return result;
}
var __defProp2, __getOwnPropSymbols3, __hasOwnProp3, __propIsEnum3, __defNormalProp2, __spreadValues2, __accessCheck2, __privateGet2, __privateAdd2, __privateSet2, _cache, _result, _slots, Slots, renderMarkdown;
var init_result = __esm({
  "node_modules/astro/dist/core/render/result.js"() {
    init_colors();
    init_server();
    init_core();
    init_script();
    init_util2();
    __defProp2 = Object.defineProperty;
    __getOwnPropSymbols3 = Object.getOwnPropertySymbols;
    __hasOwnProp3 = Object.prototype.hasOwnProperty;
    __propIsEnum3 = Object.prototype.propertyIsEnumerable;
    __defNormalProp2 = (obj, key2, value) => key2 in obj ? __defProp2(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
    __spreadValues2 = (a2, b2) => {
      for (var prop in b2 || (b2 = {}))
        if (__hasOwnProp3.call(b2, prop))
          __defNormalProp2(a2, prop, b2[prop]);
      if (__getOwnPropSymbols3)
        for (var prop of __getOwnPropSymbols3(b2)) {
          if (__propIsEnum3.call(b2, prop))
            __defNormalProp2(a2, prop, b2[prop]);
        }
      return a2;
    };
    __accessCheck2 = (obj, member, msg) => {
      if (!member.has(obj))
        throw TypeError("Cannot " + msg);
    };
    __privateGet2 = (obj, member, getter) => {
      __accessCheck2(obj, member, "read from private field");
      return getter ? getter.call(obj) : member.get(obj);
    };
    __privateAdd2 = (obj, member, value) => {
      if (member.has(obj))
        throw TypeError("Cannot add the same private member more than once");
      member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
    };
    __privateSet2 = (obj, member, value, setter) => {
      __accessCheck2(obj, member, "write to private field");
      setter ? setter.call(obj, value) : member.set(obj, value);
      return value;
    };
    Slots = class {
      constructor(result, slots) {
        __privateAdd2(this, _cache, /* @__PURE__ */ new Map());
        __privateAdd2(this, _result, void 0);
        __privateAdd2(this, _slots, void 0);
        __privateSet2(this, _result, result);
        __privateSet2(this, _slots, slots);
        if (slots) {
          for (const key2 of Object.keys(slots)) {
            if (this[key2] !== void 0) {
              throw new Error(`Unable to create a slot named "${key2}". "${key2}" is a reserved slot name!
Please update the name of this slot.`);
            }
            Object.defineProperty(this, key2, {
              get() {
                return true;
              },
              enumerable: true
            });
          }
        }
      }
      has(name) {
        if (!__privateGet2(this, _slots))
          return false;
        return Boolean(__privateGet2(this, _slots)[name]);
      }
      async render(name, args = []) {
        const cacheable = args.length === 0;
        if (!__privateGet2(this, _slots))
          return void 0;
        if (cacheable && __privateGet2(this, _cache).has(name)) {
          const result = __privateGet2(this, _cache).get(name);
          return result;
        }
        if (!this.has(name))
          return void 0;
        if (!cacheable) {
          const component = await __privateGet2(this, _slots)[name]();
          const expression = getFunctionExpression(component);
          if (expression) {
            const slot = expression(...args);
            return await renderSlot(__privateGet2(this, _result), slot).then((res) => res != null ? String(res) : res);
          }
        }
        const content3 = await renderSlot(__privateGet2(this, _result), __privateGet2(this, _slots)[name]).then((res) => res != null ? String(res) : res);
        if (cacheable)
          __privateGet2(this, _cache).set(name, content3);
        return content3;
      }
    };
    _cache = /* @__PURE__ */ new WeakMap();
    _result = /* @__PURE__ */ new WeakMap();
    _slots = /* @__PURE__ */ new WeakMap();
    renderMarkdown = null;
  }
});

// node_modules/astro/dist/core/render/paginate.js
function generatePaginateFunction(routeMatch) {
  return function paginateUtility(data3, args = {}) {
    let { pageSize: _pageSize, params: _params, props: _props } = args;
    const pageSize = _pageSize || 10;
    const paramName = "page";
    const additionalParams = _params || {};
    const additionalProps = _props || {};
    let includesFirstPageNumber;
    if (routeMatch.params.includes(`...${paramName}`)) {
      includesFirstPageNumber = false;
    } else if (routeMatch.params.includes(`${paramName}`)) {
      includesFirstPageNumber = true;
    } else {
      throw new Error(`[paginate()] page number param \`${paramName}\` not found in your filepath.
Rename your file to \`[...page].astro\` or customize the param name via the \`paginate([], {param: '...'}\` option.`);
    }
    const lastPage = Math.max(1, Math.ceil(data3.length / pageSize));
    const result = [...Array(lastPage).keys()].map((num) => {
      const pageNum = num + 1;
      const start3 = pageSize === Infinity ? 0 : (pageNum - 1) * pageSize;
      const end = Math.min(start3 + pageSize, data3.length);
      const params = __spreadProps2(__spreadValues3({}, additionalParams), {
        [paramName]: includesFirstPageNumber || pageNum > 1 ? String(pageNum) : void 0
      });
      return {
        params,
        props: __spreadProps2(__spreadValues3({}, additionalProps), {
          page: {
            data: data3.slice(start3, end),
            start: start3,
            end: end - 1,
            size: pageSize,
            total: data3.length,
            currentPage: pageNum,
            lastPage,
            url: {
              current: routeMatch.generate(__spreadValues3({}, params)),
              next: pageNum === lastPage ? void 0 : routeMatch.generate(__spreadProps2(__spreadValues3({}, params), { page: String(pageNum + 1) })),
              prev: pageNum === 1 ? void 0 : routeMatch.generate(__spreadProps2(__spreadValues3({}, params), {
                page: !includesFirstPageNumber && pageNum - 1 === 1 ? void 0 : String(pageNum - 1)
              }))
            }
          }
        })
      };
    });
    return result;
  };
}
var __defProp3, __defProps2, __getOwnPropDescs2, __getOwnPropSymbols4, __hasOwnProp4, __propIsEnum4, __defNormalProp3, __spreadValues3, __spreadProps2;
var init_paginate = __esm({
  "node_modules/astro/dist/core/render/paginate.js"() {
    __defProp3 = Object.defineProperty;
    __defProps2 = Object.defineProperties;
    __getOwnPropDescs2 = Object.getOwnPropertyDescriptors;
    __getOwnPropSymbols4 = Object.getOwnPropertySymbols;
    __hasOwnProp4 = Object.prototype.hasOwnProperty;
    __propIsEnum4 = Object.prototype.propertyIsEnumerable;
    __defNormalProp3 = (obj, key2, value) => key2 in obj ? __defProp3(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
    __spreadValues3 = (a2, b2) => {
      for (var prop in b2 || (b2 = {}))
        if (__hasOwnProp4.call(b2, prop))
          __defNormalProp3(a2, prop, b2[prop]);
      if (__getOwnPropSymbols4)
        for (var prop of __getOwnPropSymbols4(b2)) {
          if (__propIsEnum4.call(b2, prop))
            __defNormalProp3(a2, prop, b2[prop]);
        }
      return a2;
    };
    __spreadProps2 = (a2, b2) => __defProps2(a2, __getOwnPropDescs2(b2));
  }
});

// node_modules/astro/dist/core/render/route-cache.js
async function callGetStaticPaths({
  isValidate,
  logging,
  mod,
  route,
  ssr: ssr2
}) {
  validateGetStaticPathsModule(mod, { ssr: ssr2 });
  let staticPaths = [];
  if (mod.getStaticPaths) {
    staticPaths = (await mod.getStaticPaths({
      paginate: generatePaginateFunction(route),
      rss() {
        throw new Error("The RSS helper has been removed from getStaticPaths! Try the new @astrojs/rss package instead. See https://docs.astro.build/en/guides/rss/");
      }
    })).flat();
  }
  const keyedStaticPaths = staticPaths;
  keyedStaticPaths.keyed = /* @__PURE__ */ new Map();
  for (const sp of keyedStaticPaths) {
    const paramsKey = stringifyParams(sp.params);
    keyedStaticPaths.keyed.set(paramsKey, sp);
  }
  if (isValidate) {
    validateGetStaticPathsResult(keyedStaticPaths, logging);
  }
  return {
    staticPaths: keyedStaticPaths
  };
}
function findPathItemByKey(staticPaths, params) {
  const paramsKey = stringifyParams(params);
  let matchedStaticPath = staticPaths.keyed.get(paramsKey);
  if (matchedStaticPath) {
    return matchedStaticPath;
  }
  debug("findPathItemByKey", `Unexpected cache miss looking for ${paramsKey}`);
  matchedStaticPath = staticPaths.find(({ params: _params }) => JSON.stringify(_params) === paramsKey);
}
var RouteCache;
var init_route_cache = __esm({
  "node_modules/astro/dist/core/render/route-cache.js"() {
    init_core();
    init_params();
    init_validation();
    init_paginate();
    RouteCache = class {
      constructor(logging) {
        this.cache = {};
        this.logging = logging;
      }
      clearAll() {
        this.cache = {};
      }
      set(route, entry) {
        if (this.cache[route.component]) {
          warn(this.logging, "routeCache", `Internal Warning: route cache overwritten. (${route.component})`);
        }
        this.cache[route.component] = entry;
      }
      get(route) {
        return this.cache[route.component];
      }
    };
  }
});

// node_modules/astro/dist/core/render/core.js
async function getParamsAndProps(opts) {
  const { logging, mod, route, routeCache, pathname, ssr: ssr2 } = opts;
  let params = {};
  let pageProps;
  if (route && !route.pathname) {
    if (route.params.length) {
      const paramsMatch = route.pattern.exec(pathname);
      if (paramsMatch) {
        params = getParams(route.params)(paramsMatch);
      }
    }
    let routeCacheEntry = routeCache.get(route);
    if (!routeCacheEntry) {
      routeCacheEntry = await callGetStaticPaths({ mod, route, isValidate: true, logging, ssr: ssr2 });
      routeCache.set(route, routeCacheEntry);
    }
    const matchedStaticPath = findPathItemByKey(routeCacheEntry.staticPaths, params);
    if (!matchedStaticPath && !ssr2) {
      return 0;
    }
    pageProps = (matchedStaticPath == null ? void 0 : matchedStaticPath.props) ? __spreadValues4({}, matchedStaticPath.props) : {};
  } else {
    pageProps = {};
  }
  return [params, pageProps];
}
async function render(opts) {
  const {
    links,
    styles: styles7,
    logging,
    origin,
    markdown,
    mod,
    pathname,
    scripts,
    renderers: renderers2,
    request,
    resolve: resolve2,
    route,
    routeCache,
    site,
    ssr: ssr2
  } = opts;
  const paramsAndPropsRes = await getParamsAndProps({
    logging,
    mod,
    route,
    routeCache,
    pathname,
    ssr: ssr2
  });
  if (paramsAndPropsRes === 0) {
    throw new Error(`[getStaticPath] route pattern matched, but no matching static path found. (${pathname})`);
  }
  const [params, pageProps] = paramsAndPropsRes;
  const Component = await mod.default;
  if (!Component)
    throw new Error(`Expected an exported Astro component but received typeof ${typeof Component}`);
  if (!Component.isAstroComponentFactory)
    throw new Error(`Unable to SSR non-Astro component (${route == null ? void 0 : route.component})`);
  const result = createResult({
    links,
    styles: styles7,
    logging,
    markdown,
    origin,
    params,
    props: pageProps,
    pathname,
    resolve: resolve2,
    renderers: renderers2,
    request,
    site,
    scripts,
    ssr: ssr2
  });
  let page = await renderPage(result, Component, pageProps, null);
  if (page.type === "response") {
    return page;
  }
  let html6 = page.html;
  if (html6.indexOf("<!--astro:head:injected-->") == -1) {
    html6 = await renderHead(result) + html6;
  }
  html6 = html6.replace("<!--astro:head:injected-->", "");
  if (!/<!doctype html/i.test(html6)) {
    html6 = "<!DOCTYPE html>\n" + html6;
  }
  return {
    type: "html",
    html: html6,
    response: result.response
  };
}
var __defProp4, __getOwnPropSymbols5, __hasOwnProp5, __propIsEnum5, __defNormalProp4, __spreadValues4, GetParamsAndPropsError;
var init_core2 = __esm({
  "node_modules/astro/dist/core/render/core.js"() {
    init_server();
    init_params();
    init_result();
    init_route_cache();
    __defProp4 = Object.defineProperty;
    __getOwnPropSymbols5 = Object.getOwnPropertySymbols;
    __hasOwnProp5 = Object.prototype.hasOwnProperty;
    __propIsEnum5 = Object.prototype.propertyIsEnumerable;
    __defNormalProp4 = (obj, key2, value) => key2 in obj ? __defProp4(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
    __spreadValues4 = (a2, b2) => {
      for (var prop in b2 || (b2 = {}))
        if (__hasOwnProp5.call(b2, prop))
          __defNormalProp4(a2, prop, b2[prop]);
      if (__getOwnPropSymbols5)
        for (var prop of __getOwnPropSymbols5(b2)) {
          if (__propIsEnum5.call(b2, prop))
            __defNormalProp4(a2, prop, b2[prop]);
        }
      return a2;
    };
    GetParamsAndPropsError = /* @__PURE__ */ ((GetParamsAndPropsError2) => {
      GetParamsAndPropsError2[GetParamsAndPropsError2["NoMatchingStaticPath"] = 0] = "NoMatchingStaticPath";
      return GetParamsAndPropsError2;
    })(GetParamsAndPropsError || {});
  }
});

// node_modules/astro/dist/core/endpoint/index.js
async function call(mod, opts) {
  const paramsAndPropsResp = await getParamsAndProps(__spreadProps3(__spreadValues5({}, opts), { mod }));
  if (paramsAndPropsResp === GetParamsAndPropsError.NoMatchingStaticPath) {
    throw new Error(`[getStaticPath] route pattern matched, but no matching static path found. (${opts.pathname})`);
  }
  const [params] = paramsAndPropsResp;
  const response = await renderEndpoint(mod, opts.request, params);
  if (response instanceof Response) {
    return {
      type: "response",
      response
    };
  }
  return {
    type: "simple",
    body: response.body
  };
}
var __defProp5, __defProps3, __getOwnPropDescs3, __getOwnPropSymbols6, __hasOwnProp6, __propIsEnum6, __defNormalProp5, __spreadValues5, __spreadProps3;
var init_endpoint = __esm({
  "node_modules/astro/dist/core/endpoint/index.js"() {
    init_server();
    init_core2();
    __defProp5 = Object.defineProperty;
    __defProps3 = Object.defineProperties;
    __getOwnPropDescs3 = Object.getOwnPropertyDescriptors;
    __getOwnPropSymbols6 = Object.getOwnPropertySymbols;
    __hasOwnProp6 = Object.prototype.hasOwnProperty;
    __propIsEnum6 = Object.prototype.propertyIsEnumerable;
    __defNormalProp5 = (obj, key2, value) => key2 in obj ? __defProp5(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
    __spreadValues5 = (a2, b2) => {
      for (var prop in b2 || (b2 = {}))
        if (__hasOwnProp6.call(b2, prop))
          __defNormalProp5(a2, prop, b2[prop]);
      if (__getOwnPropSymbols6)
        for (var prop of __getOwnPropSymbols6(b2)) {
          if (__propIsEnum6.call(b2, prop))
            __defNormalProp5(a2, prop, b2[prop]);
        }
      return a2;
    };
    __spreadProps3 = (a2, b2) => __defProps3(a2, __getOwnPropDescs3(b2));
  }
});

// node_modules/astro/dist/core/logger/console.js
var import_util5, lastMessage, lastMessageCount, consoleLogDestination;
var init_console = __esm({
  "node_modules/astro/dist/core/logger/console.js"() {
    init_colors();
    import_util5 = require("util");
    init_core();
    lastMessageCount = 1;
    consoleLogDestination = {
      write(event) {
        let dest = console.error;
        if (levels[event.level] < levels["error"]) {
          dest = console.log;
        }
        function getPrefix() {
          let prefix = "";
          let type = event.type;
          if (type) {
            prefix += dim(dateTimeFormat.format(new Date()) + " ");
            if (event.level === "info") {
              type = bold(cyan(`[${type}]`));
            } else if (event.level === "warn") {
              type = bold(yellow(`[${type}]`));
            } else if (event.level === "error") {
              type = bold(red(`[${type}]`));
            }
            prefix += `${type} `;
          }
          return reset(prefix);
        }
        let message = (0, import_util5.format)(...event.args);
        if (message === lastMessage) {
          lastMessageCount++;
          message = `${message} ${yellow(`(x${lastMessageCount})`)}`;
        } else {
          lastMessage = message;
          lastMessageCount = 1;
        }
        const outMessage = getPrefix() + message;
        dest(outMessage);
        return true;
      }
    };
  }
});

// node_modules/astro/dist/core/path.js
function appendForwardSlash(path) {
  return path.endsWith("/") ? path : path + "/";
}
function prependForwardSlash(path) {
  return path[0] === "/" ? path : "/" + path;
}
function trimSlashes(path) {
  return path.replace(/^\/|\/$/g, "");
}
function isString(path) {
  return typeof path === "string" || path instanceof String;
}
function joinPaths(...paths) {
  return paths.filter(isString).map(trimSlashes).join("/");
}
var init_path = __esm({
  "node_modules/astro/dist/core/path.js"() {
  }
});

// node_modules/astro/dist/core/render/ssr-element.js
function getRootPath(site) {
  return appendForwardSlash(new URL(site || "http://localhost/").pathname);
}
function joinToRoot(href, site) {
  return import_path_browserify2.default.posix.join(getRootPath(site), href);
}
function createLinkStylesheetElement(href, site) {
  return {
    props: {
      rel: "stylesheet",
      href: joinToRoot(href, site)
    },
    children: ""
  };
}
function createLinkStylesheetElementSet(hrefs, site) {
  return new Set(hrefs.map((href) => createLinkStylesheetElement(href, site)));
}
function createModuleScriptElementWithSrc(src2, site) {
  return {
    props: {
      type: "module",
      src: joinToRoot(src2, site)
    },
    children: ""
  };
}
function createModuleScriptElementWithSrcSet(srces, site) {
  return new Set(srces.map((src2) => createModuleScriptElementWithSrc(src2, site)));
}
var import_path_browserify2;
var init_ssr_element = __esm({
  "node_modules/astro/dist/core/render/ssr-element.js"() {
    import_path_browserify2 = __toESM(require_path_browserify(), 1);
    init_path();
  }
});

// node_modules/astro/dist/core/routing/match.js
function matchRoute(pathname, manifest) {
  return manifest.routes.find((route) => route.pattern.test(pathname));
}
var init_match = __esm({
  "node_modules/astro/dist/core/routing/match.js"() {
  }
});

// node_modules/astro/dist/core/routing/manifest/generator.js
var init_generator = __esm({
  "node_modules/astro/dist/core/routing/manifest/generator.js"() {
  }
});

// node_modules/astro/dist/core/routing/manifest/serialization.js
var init_serialization = __esm({
  "node_modules/astro/dist/core/routing/manifest/serialization.js"() {
    init_generator();
  }
});

// node_modules/astro/dist/core/app/common.js
var init_common = __esm({
  "node_modules/astro/dist/core/app/common.js"() {
    init_serialization();
  }
});

// node_modules/astro/dist/core/app/index.js
var import_mime, __accessCheck3, __privateGet3, __privateAdd3, __privateSet3, __privateMethod, _manifest, _manifestData, _routeDataToRouteInfo, _routeCache, _encoder, _logging, _renderPage, renderPage_fn, _callEndpoint, callEndpoint_fn, pagesVirtualModuleId, resolvedPagesVirtualModuleId, App;
var init_app = __esm({
  "node_modules/astro/dist/core/app/index.js"() {
    import_mime = __toESM(require_mime(), 1);
    init_endpoint();
    init_console();
    init_path();
    init_core2();
    init_route_cache();
    init_ssr_element();
    init_match();
    init_common();
    __accessCheck3 = (obj, member, msg) => {
      if (!member.has(obj))
        throw TypeError("Cannot " + msg);
    };
    __privateGet3 = (obj, member, getter) => {
      __accessCheck3(obj, member, "read from private field");
      return getter ? getter.call(obj) : member.get(obj);
    };
    __privateAdd3 = (obj, member, value) => {
      if (member.has(obj))
        throw TypeError("Cannot add the same private member more than once");
      member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
    };
    __privateSet3 = (obj, member, value, setter) => {
      __accessCheck3(obj, member, "write to private field");
      setter ? setter.call(obj, value) : member.set(obj, value);
      return value;
    };
    __privateMethod = (obj, member, method) => {
      __accessCheck3(obj, member, "access private method");
      return method;
    };
    pagesVirtualModuleId = "@astrojs-pages-virtual-entry";
    resolvedPagesVirtualModuleId = "\0" + pagesVirtualModuleId;
    App = class {
      constructor(manifest) {
        __privateAdd3(this, _renderPage);
        __privateAdd3(this, _callEndpoint);
        __privateAdd3(this, _manifest, void 0);
        __privateAdd3(this, _manifestData, void 0);
        __privateAdd3(this, _routeDataToRouteInfo, void 0);
        __privateAdd3(this, _routeCache, void 0);
        __privateAdd3(this, _encoder, new TextEncoder());
        __privateAdd3(this, _logging, {
          dest: consoleLogDestination,
          level: "info"
        });
        __privateSet3(this, _manifest, manifest);
        __privateSet3(this, _manifestData, {
          routes: manifest.routes.map((route) => route.routeData)
        });
        __privateSet3(this, _routeDataToRouteInfo, new Map(manifest.routes.map((route) => [route.routeData, route])));
        __privateSet3(this, _routeCache, new RouteCache(__privateGet3(this, _logging)));
      }
      match(request) {
        const url59 = new URL(request.url);
        return matchRoute(url59.pathname, __privateGet3(this, _manifestData));
      }
      async render(request, routeData) {
        if (!routeData) {
          routeData = this.match(request);
          if (!routeData) {
            return new Response(null, {
              status: 404,
              statusText: "Not found"
            });
          }
        }
        const mod = __privateGet3(this, _manifest).pageMap.get(routeData.component);
        if (routeData.type === "page") {
          return __privateMethod(this, _renderPage, renderPage_fn).call(this, request, routeData, mod);
        } else if (routeData.type === "endpoint") {
          return __privateMethod(this, _callEndpoint, callEndpoint_fn).call(this, request, routeData, mod);
        } else {
          throw new Error(`Unsupported route type [${routeData.type}].`);
        }
      }
    };
    _manifest = /* @__PURE__ */ new WeakMap();
    _manifestData = /* @__PURE__ */ new WeakMap();
    _routeDataToRouteInfo = /* @__PURE__ */ new WeakMap();
    _routeCache = /* @__PURE__ */ new WeakMap();
    _encoder = /* @__PURE__ */ new WeakMap();
    _logging = /* @__PURE__ */ new WeakMap();
    _renderPage = /* @__PURE__ */ new WeakSet();
    renderPage_fn = async function(request, routeData, mod) {
      const url59 = new URL(request.url);
      const manifest = __privateGet3(this, _manifest);
      const renderers2 = manifest.renderers;
      const info = __privateGet3(this, _routeDataToRouteInfo).get(routeData);
      const links = createLinkStylesheetElementSet(info.links, manifest.site);
      const filteredScripts = info.scripts.filter((script) => typeof script !== "string" && (script == null ? void 0 : script.stage) !== "head-inline");
      const scripts = createModuleScriptElementWithSrcSet(filteredScripts, manifest.site);
      for (const script of info.scripts) {
        if (typeof script !== "string" && script.stage === "head-inline") {
          scripts.add({
            props: {},
            children: script.children
          });
        }
      }
      const result = await render({
        links,
        logging: __privateGet3(this, _logging),
        markdown: manifest.markdown,
        mod,
        origin: url59.origin,
        pathname: url59.pathname,
        scripts,
        renderers: renderers2,
        async resolve(specifier) {
          if (!(specifier in manifest.entryModules)) {
            throw new Error(`Unable to resolve [${specifier}]`);
          }
          const bundlePath = manifest.entryModules[specifier];
          return bundlePath.startsWith("data:") ? bundlePath : prependForwardSlash(joinPaths(manifest.base, bundlePath));
        },
        route: routeData,
        routeCache: __privateGet3(this, _routeCache),
        site: __privateGet3(this, _manifest).site,
        ssr: true,
        request
      });
      if (result.type === "response") {
        return result.response;
      }
      let html6 = result.html;
      let init2 = result.response;
      let headers = init2.headers;
      let bytes = __privateGet3(this, _encoder).encode(html6);
      headers.set("Content-Type", "text/html");
      headers.set("Content-Length", bytes.byteLength.toString());
      return new Response(bytes, init2);
    };
    _callEndpoint = /* @__PURE__ */ new WeakSet();
    callEndpoint_fn = async function(request, routeData, mod) {
      const url59 = new URL(request.url);
      const handler2 = mod;
      const result = await call(handler2, {
        logging: __privateGet3(this, _logging),
        origin: url59.origin,
        pathname: url59.pathname,
        request,
        route: routeData,
        routeCache: __privateGet3(this, _routeCache),
        ssr: true
      });
      if (result.type === "response") {
        return result.response;
      } else {
        const body3 = result.body;
        const headers = new Headers();
        const mimeType = import_mime.default.getType(url59.pathname);
        if (mimeType) {
          headers.set("Content-Type", mimeType);
        }
        const bytes = __privateGet3(this, _encoder).encode(body3);
        headers.set("Content-Length", bytes.byteLength.toString());
        return new Response(bytes, {
          status: 200,
          headers
        });
      }
    };
  }
});

// node_modules/@astrojs/netlify/dist/netlify-functions.js
var netlify_functions_exports = {};
__export(netlify_functions_exports, {
  createExports: () => createExports
});
function parseContentType(header) {
  return (header == null ? void 0 : header.split(";")[0]) ?? "";
}
var createExports;
var init_netlify_functions = __esm({
  "node_modules/@astrojs/netlify/dist/netlify-functions.js"() {
    init_mod();
    init_app();
    polyfill(globalThis, {
      exclude: "window document"
    });
    createExports = (manifest, args) => {
      const app = new App(manifest);
      const binaryMediaTypes = args.binaryMediaTypes ?? [];
      const knownBinaryMediaTypes = /* @__PURE__ */ new Set([
        "audio/3gpp",
        "audio/3gpp2",
        "audio/aac",
        "audio/midi",
        "audio/mpeg",
        "audio/ogg",
        "audio/opus",
        "audio/wav",
        "audio/webm",
        "audio/x-midi",
        "image/avif",
        "image/bmp",
        "image/gif",
        "image/vnd.microsoft.icon",
        "image/jpeg",
        "image/png",
        "image/svg+xml",
        "image/tiff",
        "image/webp",
        "video/3gpp",
        "video/3gpp2",
        "video/mp2t",
        "video/mp4",
        "video/mpeg",
        "video/ogg",
        "video/x-msvideo",
        "video/webm",
        ...binaryMediaTypes
      ]);
      const handler2 = async (event) => {
        const { httpMethod, headers, rawUrl, body: requestBody, isBase64Encoded } = event;
        const init2 = {
          method: httpMethod,
          headers: new Headers(headers)
        };
        if (httpMethod !== "GET" && httpMethod !== "HEAD") {
          const encoding = isBase64Encoded ? "base64" : "utf-8";
          init2.body = typeof requestBody === "string" ? Buffer.from(requestBody, encoding) : requestBody;
        }
        const request = new Request(rawUrl, init2);
        if (!app.match(request)) {
          return {
            statusCode: 404,
            body: "Not found"
          };
        }
        const response = await app.render(request);
        const responseHeaders = Object.fromEntries(response.headers.entries());
        const responseContentType = parseContentType(responseHeaders["content-type"]);
        const responseIsBase64Encoded = knownBinaryMediaTypes.has(responseContentType);
        const responseBody = responseIsBase64Encoded ? Buffer.from(await response.text(), "binary").toString("base64") : await response.text();
        const fnResponse = {
          statusCode: response.status,
          headers: responseHeaders,
          body: responseBody,
          isBase64Encoded: responseIsBase64Encoded
        };
        if (response.headers.has("set-cookie") && "raw" in response.headers) {
          const rawPacked = response.headers.raw();
          if ("set-cookie" in rawPacked) {
            fnResponse.multiValueHeaders = {
              "set-cookie": rawPacked["set-cookie"]
            };
          }
        }
        return fnResponse;
      };
      return { handler: handler2 };
    };
  }
});

// node_modules/solid-js/dist/server.js
function createSignal(value, options) {
  return [() => value, (v2) => {
    return value = typeof v2 === "function" ? v2(value) : v2;
  }];
}
function createEffect(fn, value) {
}
function createMemo(fn, value) {
  Owner = {
    owner: Owner,
    context: null
  };
  let v2;
  try {
    v2 = fn(value);
  } catch (err) {
    const fns = lookup(Owner, ERROR2);
    if (!fns)
      throw err;
    fns.forEach((f4) => f4(err));
  } finally {
    Owner = Owner.owner;
  }
  return () => v2;
}
function onMount(fn) {
}
function createContext(defaultValue) {
  const id = Symbol("context");
  return {
    id,
    Provider: createProvider(id),
    defaultValue
  };
}
function children(fn) {
  return createMemo(() => resolveChildren(fn()));
}
function lookup(owner, key2) {
  return owner ? owner.context && owner.context[key2] !== void 0 ? owner.context[key2] : lookup(owner.owner, key2) : void 0;
}
function resolveChildren(children2) {
  if (typeof children2 === "function" && !children2.length)
    return resolveChildren(children2());
  if (Array.isArray(children2)) {
    const results2 = [];
    for (let i3 = 0; i3 < children2.length; i3++) {
      const result = resolveChildren(children2[i3]);
      Array.isArray(result) ? results2.push.apply(results2, result) : results2.push(result);
    }
    return results2;
  }
  return children2;
}
function createProvider(id) {
  return function provider(props) {
    return createMemo(() => {
      Owner.context = {
        [id]: props.value
      };
      return children(() => props.children);
    });
  };
}
function setHydrateContext(context) {
  sharedConfig.context = context;
}
function nextHydrateContext() {
  return sharedConfig.context ? __spreadProps(__spreadValues({}, sharedConfig.context), {
    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,
    count: 0
  }) : void 0;
}
function createComponent(Comp, props) {
  if (sharedConfig.context && !sharedConfig.context.noHydrate) {
    const c2 = sharedConfig.context;
    setHydrateContext(nextHydrateContext());
    const r3 = Comp(props || {});
    setHydrateContext(c2);
    return r3;
  }
  return Comp(props || {});
}
var $PROXY, $DEVCOMP, ERROR2, Owner, sharedConfig, SuspenseContext;
var init_server2 = __esm({
  "node_modules/solid-js/dist/server.js"() {
    $PROXY = Symbol("solid-proxy");
    $DEVCOMP = Symbol("solid-dev-component");
    ERROR2 = Symbol("error");
    Owner = null;
    sharedConfig = {};
    SuspenseContext = createContext();
  }
});

// node_modules/solid-js/web/dist/server.js
function devalue(value) {
  var counts = /* @__PURE__ */ new Map();
  function walk(thing) {
    if (typeof thing === "function") {
      throw new Error("Cannot stringify a function");
    }
    if (counts.has(thing)) {
      counts.set(thing, counts.get(thing) + 1);
      return;
    }
    counts.set(thing, 1);
    if (!isPrimitive(thing)) {
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach(walk);
          break;
        case "Set":
        case "Map":
          Array.from(thing).forEach(walk);
          break;
        default:
          var proto = Object.getPrototypeOf(thing);
          if (proto !== Object.prototype && proto !== null && Object.getOwnPropertyNames(proto).sort().join("\0") !== objectProtoOwnPropertyNames) {
            throw new Error("Cannot stringify arbitrary non-POJOs");
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new Error("Cannot stringify POJOs with symbolic keys");
          }
          Object.keys(thing).forEach(function(key2) {
            return walk(thing[key2]);
          });
      }
    }
  }
  walk(value);
  var names = /* @__PURE__ */ new Map();
  Array.from(counts).filter(function(entry) {
    return entry[1] > 1;
  }).sort(function(a2, b2) {
    return b2[1] - a2[1];
  }).forEach(function(entry, i3) {
    names.set(entry[0], getName(i3));
  });
  function stringify3(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (isPrimitive(thing)) {
      return stringifyPrimitive(thing);
    }
    var type = getType(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return "Object(" + stringify3(thing.valueOf()) + ")";
      case "RegExp":
        return "new RegExp(" + stringifyString(thing.source) + ', "' + thing.flags + '")';
      case "Date":
        return "new Date(" + thing.getTime() + ")";
      case "Array":
        var members = thing.map(function(v2, i3) {
          return i3 in thing ? stringify3(v2) : "";
        });
        var tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return "[" + members.join(",") + tail + "]";
      case "Set":
      case "Map":
        return "new " + type + "([" + Array.from(thing).map(stringify3).join(",") + "])";
      default:
        var obj = "{" + Object.keys(thing).map(function(key2) {
          return safeKey(key2) + ":" + stringify3(thing[key2]);
        }).join(",") + "}";
        var proto = Object.getPrototypeOf(thing);
        if (proto === null) {
          return Object.keys(thing).length > 0 ? "Object.assign(Object.create(null)," + obj + ")" : "Object.create(null)";
        }
        return obj;
    }
  }
  var str = stringify3(value);
  if (names.size) {
    var params_1 = [];
    var statements_1 = [];
    var values_1 = [];
    names.forEach(function(name, thing) {
      params_1.push(name);
      if (isPrimitive(thing)) {
        values_1.push(stringifyPrimitive(thing));
        return;
      }
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values_1.push("Object(" + stringify3(thing.valueOf()) + ")");
          break;
        case "RegExp":
          values_1.push(thing.toString());
          break;
        case "Date":
          values_1.push("new Date(" + thing.getTime() + ")");
          break;
        case "Array":
          values_1.push("Array(" + thing.length + ")");
          thing.forEach(function(v2, i3) {
            statements_1.push(name + "[" + i3 + "]=" + stringify3(v2));
          });
          break;
        case "Set":
          values_1.push("new Set");
          statements_1.push(name + "." + Array.from(thing).map(function(v2) {
            return "add(" + stringify3(v2) + ")";
          }).join("."));
          break;
        case "Map":
          values_1.push("new Map");
          statements_1.push(name + "." + Array.from(thing).map(function(_a8) {
            var k2 = _a8[0], v2 = _a8[1];
            return "set(" + stringify3(k2) + ", " + stringify3(v2) + ")";
          }).join("."));
          break;
        default:
          values_1.push(Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}");
          Object.keys(thing).forEach(function(key2) {
            statements_1.push("" + name + safeProp(key2) + "=" + stringify3(thing[key2]));
          });
      }
    });
    statements_1.push("return " + str);
    return "(function(" + params_1.join(",") + "){" + statements_1.join(";") + "}(" + values_1.join(",") + "))";
  } else {
    return str;
  }
}
function getName(num) {
  var name = "";
  do {
    name = chars[num % chars.length] + name;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name) ? name + "_" : name;
}
function isPrimitive(thing) {
  return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
  if (typeof thing === "string")
    return stringifyString(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  var str = String(thing);
  if (typeof thing === "number")
    return str.replace(/^(-)?0\./, "$1.");
  return str;
}
function getType(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c2) {
  return escaped[c2] || c2;
}
function escapeUnsafeChars(str) {
  return str.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key2) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key2) ? key2 : escapeUnsafeChars(JSON.stringify(key2));
}
function safeProp(key2) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key2) ? "." + key2 : "[" + escapeUnsafeChars(JSON.stringify(key2)) + "]";
}
function stringifyString(str) {
  var result = '"';
  for (var i3 = 0; i3 < str.length; i3 += 1) {
    var char = str.charAt(i3);
    var code2 = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped) {
      result += escaped[char];
    } else if (code2 >= 55296 && code2 <= 57343) {
      var next = str.charCodeAt(i3 + 1);
      if (code2 <= 56319 && next >= 56320 && next <= 57343) {
        result += char + str[++i3];
      } else {
        result += "\\u" + code2.toString(16).toUpperCase();
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}
function renderToString(code2, options = {}) {
  let scripts = "";
  sharedConfig.context = {
    id: options.renderId || "",
    count: 0,
    suspense: {},
    assets: [],
    nonce: options.nonce,
    writeResource(id, p3, error3) {
      if (error3)
        return scripts += `_$HY.set("${id}", ${serializeError(p3)});`;
      scripts += `_$HY.set("${id}", ${devalue(p3)});`;
    }
  };
  let html6 = injectAssets(sharedConfig.context.assets, resolveSSRNode(escape2(code2())));
  if (scripts.length)
    html6 = injectScripts(html6, scripts, options.nonce);
  return html6;
}
function ssr(t3, ...nodes2) {
  if (nodes2.length) {
    let result = "";
    for (let i3 = 0; i3 < t3.length; i3++) {
      result += t3[i3];
      const node = nodes2[i3];
      if (node !== void 0)
        result += resolveSSRNode(node);
    }
    t3 = result;
  }
  return {
    t: t3
  };
}
function ssrAttribute(key2, value, isBoolean) {
  return isBoolean ? value ? " " + key2 : "" : value != null ? ` ${key2}="${value}"` : "";
}
function ssrHydrationKey() {
  const hk = getHydrationKey();
  return hk ? ` data-hk="${hk}"` : "";
}
function escape2(s4, attr) {
  const t3 = typeof s4;
  if (t3 !== "string") {
    if (!attr && t3 === "function")
      return escape2(s4(), attr);
    if (attr && t3 === "boolean")
      return String(s4);
    return s4;
  }
  const delim = attr ? '"' : "<";
  const escDelim = attr ? "&quot;" : "&lt;";
  let iDelim = s4.indexOf(delim);
  let iAmp = s4.indexOf("&");
  if (iDelim < 0 && iAmp < 0)
    return s4;
  let left = 0, out = "";
  while (iDelim >= 0 && iAmp >= 0) {
    if (iDelim < iAmp) {
      if (left < iDelim)
        out += s4.substring(left, iDelim);
      out += escDelim;
      left = iDelim + 1;
      iDelim = s4.indexOf(delim, left);
    } else {
      if (left < iAmp)
        out += s4.substring(left, iAmp);
      out += "&amp;";
      left = iAmp + 1;
      iAmp = s4.indexOf("&", left);
    }
  }
  if (iDelim >= 0) {
    do {
      if (left < iDelim)
        out += s4.substring(left, iDelim);
      out += escDelim;
      left = iDelim + 1;
      iDelim = s4.indexOf(delim, left);
    } while (iDelim >= 0);
  } else
    while (iAmp >= 0) {
      if (left < iAmp)
        out += s4.substring(left, iAmp);
      out += "&amp;";
      left = iAmp + 1;
      iAmp = s4.indexOf("&", left);
    }
  return left < s4.length ? out + s4.substring(left) : out;
}
function resolveSSRNode(node) {
  const t3 = typeof node;
  if (t3 === "string")
    return node;
  if (node == null || t3 === "boolean")
    return "";
  if (Array.isArray(node)) {
    let mapped = "";
    for (let i3 = 0, len = node.length; i3 < len; i3++)
      mapped += resolveSSRNode(node[i3]);
    return mapped;
  }
  if (t3 === "object")
    return resolveSSRNode(node.t);
  if (t3 === "function")
    return resolveSSRNode(node());
  return String(node);
}
function getHydrationKey() {
  const hydrate = sharedConfig.context;
  return hydrate && !hydrate.noHydrate && `${hydrate.id}${hydrate.count++}`;
}
function injectAssets(assets, html6) {
  for (let i3 = 0; i3 < assets.length; i3++) {
    html6 = html6.replace(`%%$${i3}%%`, assets[i3]());
  }
  return html6;
}
function injectScripts(html6, scripts, nonce) {
  const tag2 = `<script${nonce ? ` nonce="${nonce}"` : ""}>${scripts}<\/script>`;
  const index2 = html6.indexOf("<!--xs-->");
  if (index2 > -1) {
    return html6.slice(0, index2) + tag2 + html6.slice(index2);
  }
  return html6 + tag2;
}
function serializeError(error3) {
  if (error3.message) {
    const fields = {};
    const keys3 = Object.getOwnPropertyNames(error3);
    for (let i3 = 0; i3 < keys3.length; i3++) {
      const key2 = keys3[i3];
      const value = error3[key2];
      if (!value || key2 !== "message" && typeof value !== "function") {
        fields[key2] = value;
      }
    }
    return `Object.assign(new Error(${devalue(error3.message)}), ${devalue(fields)})`;
  }
  return devalue(error3);
}
var booleans, chars, unsafeChars, reserved, escaped, objectProtoOwnPropertyNames;
var init_server3 = __esm({
  "node_modules/solid-js/web/dist/server.js"() {
    init_server2();
    init_server2();
    booleans = ["allowfullscreen", "async", "autofocus", "autoplay", "checked", "controls", "default", "disabled", "formnovalidate", "hidden", "indeterminate", "ismap", "loop", "multiple", "muted", "nomodule", "novalidate", "open", "playsinline", "readonly", "required", "reversed", "seamless", "selected"];
    /* @__PURE__ */ new Set(["className", "value", "readOnly", "formNoValidate", "isMap", "noModule", "playsInline", ...booleans]);
    chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
    unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
    reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
    escaped = {
      "<": "\\u003C",
      ">": "\\u003E",
      "/": "\\u002F",
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
  }
});

// .netlify/functions-internal/chunks/chunk.3826580f.mjs
var langPicker, langPicker__button, langPicker__picker, langPicker__picker_show, langPicker__pickerflag_active, styles;
var init_chunk_3826580f = __esm({
  ".netlify/functions-internal/chunks/chunk.3826580f.mjs"() {
    langPicker = "_langPicker_18ajx_1";
    langPicker__button = "_langPicker__button_18ajx_6";
    langPicker__picker = "_langPicker__picker_18ajx_18";
    langPicker__picker_show = "_langPicker__picker_show_18ajx_35";
    langPicker__pickerflag_active = "_langPicker__pickerflag_active_18ajx_63";
    styles = {
      langPicker,
      langPicker__button,
      langPicker__picker,
      langPicker__picker_show,
      langPicker__pickerflag_active
    };
  }
});

// .netlify/functions-internal/chunks/chunk.67acf695.mjs
var counter, counter__title, counter__count, styles2, counter__count_format, styles$1;
var init_chunk_67acf695 = __esm({
  ".netlify/functions-internal/chunks/chunk.67acf695.mjs"() {
    counter = "_counter_1jzwa_1";
    counter__title = "_counter__title_1jzwa_6";
    counter__count = "_counter__count_1jzwa_13";
    styles2 = "_styles_1jzwa_22";
    counter__count_format = "_counter__count_format_1jzwa_22";
    styles$1 = {
      counter,
      counter__title,
      counter__count,
      styles: styles2,
      counter__count_format
    };
  }
});

// .netlify/functions-internal/chunks/chunk.2fcc1150.mjs
var form__wrp, form__SubmitBtn, hiddenInput, error, success, styles3;
var init_chunk_2fcc1150 = __esm({
  ".netlify/functions-internal/chunks/chunk.2fcc1150.mjs"() {
    form__wrp = "_form__wrp_1pszb_1";
    form__SubmitBtn = "_form__SubmitBtn_1pszb_8";
    hiddenInput = "_hiddenInput_1pszb_33";
    error = "_error_1pszb_39";
    success = "_success_1pszb_44";
    styles3 = {
      form__wrp,
      form__SubmitBtn,
      hiddenInput,
      error,
      success
    };
  }
});

// node_modules/solid-js/store/dist/server.js
function isWrappable(obj) {
  return obj != null && typeof obj === "object" && (Object.getPrototypeOf(obj) === Object.prototype || Array.isArray(obj));
}
function setProperty(state, property, value, force) {
  if (!force && state[property] === value)
    return;
  if (value === void 0) {
    delete state[property];
  } else
    state[property] = value;
}
function mergeStoreNode(state, value, force) {
  const keys3 = Object.keys(value);
  for (let i3 = 0; i3 < keys3.length; i3 += 1) {
    const key2 = keys3[i3];
    setProperty(state, key2, value[key2], force);
  }
}
function updateArray(current2, next) {
  if (typeof next === "function")
    next = next(current2);
  if (Array.isArray(next)) {
    if (current2 === next)
      return;
    let i3 = 0, len = next.length;
    for (; i3 < len; i3++) {
      const value = next[i3];
      if (current2[i3] !== value)
        setProperty(current2, i3, value);
    }
    setProperty(current2, "length", len);
  } else
    mergeStoreNode(current2, next);
}
function updatePath(current2, path, traversed = []) {
  let part, next = current2;
  if (path.length > 1) {
    part = path.shift();
    const partType = typeof part, isArray2 = Array.isArray(current2);
    if (Array.isArray(part)) {
      for (let i3 = 0; i3 < part.length; i3++) {
        updatePath(current2, [part[i3]].concat(path), traversed);
      }
      return;
    } else if (isArray2 && partType === "function") {
      for (let i3 = 0; i3 < current2.length; i3++) {
        if (part(current2[i3], i3))
          updatePath(current2, [i3].concat(path), traversed);
      }
      return;
    } else if (isArray2 && partType === "object") {
      const {
        from = 0,
        to = current2.length - 1,
        by = 1
      } = part;
      for (let i3 = from; i3 <= to; i3 += by) {
        updatePath(current2, [i3].concat(path), traversed);
      }
      return;
    } else if (path.length > 1) {
      updatePath(current2[part], path, [part].concat(traversed));
      return;
    }
    next = current2[part];
    traversed = [part].concat(traversed);
  }
  let value = path[0];
  if (typeof value === "function") {
    value = value(next, traversed);
    if (value === next)
      return;
  }
  if (part === void 0 && value == void 0)
    return;
  if (part === void 0 || isWrappable(next) && isWrappable(value) && !Array.isArray(value)) {
    mergeStoreNode(next, value);
  } else
    setProperty(current2, part, value);
}
function createStore(state) {
  const isArray2 = Array.isArray(state);
  function setStore2(...args) {
    isArray2 && args.length === 1 ? updateArray(state, args[0]) : updatePath(state, args);
  }
  return [state, setStore2];
}
var $RAW;
var init_server4 = __esm({
  "node_modules/solid-js/store/dist/server.js"() {
    $RAW = Symbol("state-raw");
  }
});

// .netlify/functions-internal/chunks/chunk.fa1fc0bc.mjs
var label$3, input$3, error$1, input__wrp$1, errMsg$1, input_req$1, styles$3, label$2, input$2, error2, input__wrp, errMsg, input_req, styles$2, label$1, input$1, styles$12, label, input, styles4;
var init_chunk_fa1fc0bc = __esm({
  ".netlify/functions-internal/chunks/chunk.fa1fc0bc.mjs"() {
    label$3 = "_label_1lukz_1";
    input$3 = "_input_1lukz_10";
    error$1 = "_error_1lukz_34";
    input__wrp$1 = "_input__wrp_1lukz_38";
    errMsg$1 = "_errMsg_1lukz_42";
    input_req$1 = "_input_req_1lukz_52";
    styles$3 = {
      label: label$3,
      input: input$3,
      error: error$1,
      input__wrp: input__wrp$1,
      errMsg: errMsg$1,
      input_req: input_req$1
    };
    label$2 = "_label_1lukz_1";
    input$2 = "_input_1lukz_10";
    error2 = "_error_1lukz_34";
    input__wrp = "_input__wrp_1lukz_38";
    errMsg = "_errMsg_1lukz_42";
    input_req = "_input_req_1lukz_52";
    styles$2 = {
      label: label$2,
      input: input$2,
      error: error2,
      input__wrp,
      errMsg,
      input_req
    };
    label$1 = "_label_pjs37_1";
    input$1 = "_input_pjs37_9";
    styles$12 = {
      label: label$1,
      input: input$1
    };
    label = "_label_pjs37_1";
    input = "_input_pjs37_9";
    styles4 = {
      label,
      input
    };
  }
});

// .netlify/functions-internal/chunks/chunk.dbf05238.mjs
var form, form__form, form__headerWrp, form__header, form__headerTitle, form__selectors, form__selectBtn, form__selectBtn_active, form__SubmitBtn2, styles$4, counter2, counter__counter, counter__input, label__tooltipInfo, counter__btn, counter__label, counter__labelText, styles$32, radio__label, radio__focus, radio__input, radio__box, radio__mark, styles$22, formSection, formSection__header, formSection__clear, formSection__fieldset, formSection__fieldsetGrid, formSection__itemsBlock, formSection__duration, fieldset_textInput, dontKnow, formSection__contacts, formSection__caption, styles$13, checkbox__label, checkbox__input, checkbox__box, checkbox__focus, checkbox__mark, styles5;
var init_chunk_dbf05238 = __esm({
  ".netlify/functions-internal/chunks/chunk.dbf05238.mjs"() {
    form = "_form_183vf_1";
    form__form = "_form__form_183vf_6";
    form__headerWrp = "_form__headerWrp_183vf_13";
    form__header = "_form__header_183vf_13";
    form__headerTitle = "_form__headerTitle_183vf_21";
    form__selectors = "_form__selectors_183vf_28";
    form__selectBtn = "_form__selectBtn_183vf_33";
    form__selectBtn_active = "_form__selectBtn_active_183vf_56";
    form__SubmitBtn2 = "_form__SubmitBtn_183vf_81";
    styles$4 = {
      form,
      form__form,
      form__headerWrp,
      form__header,
      form__headerTitle,
      form__selectors,
      form__selectBtn,
      form__selectBtn_active,
      form__SubmitBtn: form__SubmitBtn2
    };
    counter2 = "_counter_1hjr6_1";
    counter__counter = "_counter__counter_1hjr6_7";
    counter__input = "_counter__input_1hjr6_12";
    label__tooltipInfo = "_label__tooltipInfo_1hjr6_29";
    counter__btn = "_counter__btn_1hjr6_33";
    counter__label = "_counter__label_1hjr6_65";
    counter__labelText = "_counter__labelText_1hjr6_71";
    styles$32 = {
      counter: counter2,
      counter__counter,
      counter__input,
      label__tooltipInfo,
      counter__btn,
      counter__label,
      counter__labelText
    };
    radio__label = "_radio__label_10mos_1";
    radio__focus = "_radio__focus_10mos_10";
    radio__input = "_radio__input_10mos_14";
    radio__box = "_radio__box_10mos_21";
    radio__mark = "_radio__mark_10mos_33";
    styles$22 = {
      radio__label,
      radio__focus,
      radio__input,
      radio__box,
      radio__mark
    };
    formSection = "_formSection_1y6ua_1";
    formSection__header = "_formSection__header_1y6ua_8";
    formSection__clear = "_formSection__clear_1y6ua_16";
    formSection__fieldset = "_formSection__fieldset_1y6ua_39";
    formSection__fieldsetGrid = "_formSection__fieldsetGrid_1y6ua_45";
    formSection__itemsBlock = "_formSection__itemsBlock_1y6ua_53";
    formSection__duration = "_formSection__duration_1y6ua_64";
    fieldset_textInput = "_fieldset_textInput_1y6ua_69";
    dontKnow = "_dontKnow_1y6ua_78";
    formSection__contacts = "_formSection__contacts_1y6ua_82";
    formSection__caption = "_formSection__caption_1y6ua_89";
    styles$13 = {
      formSection,
      formSection__header,
      formSection__clear,
      formSection__fieldset,
      formSection__fieldsetGrid,
      formSection__itemsBlock,
      formSection__duration,
      fieldset_textInput,
      dontKnow,
      formSection__contacts,
      formSection__caption
    };
    checkbox__label = "_checkbox__label_v371m_1";
    checkbox__input = "_checkbox__input_v371m_10";
    checkbox__box = "_checkbox__box_v371m_17";
    checkbox__focus = "_checkbox__focus_v371m_23";
    checkbox__mark = "_checkbox__mark_v371m_34";
    styles5 = {
      checkbox__label,
      checkbox__input,
      checkbox__box,
      checkbox__focus,
      checkbox__mark
    };
  }
});

// .netlify/functions-internal/chunks/chunk.90110aa4.mjs
var project__controls, project__control, project__control_active, project__projects, project__list, item__header, list__counts, list__counts_devs, list__counts_time, item__tags, tag, item__link, item__link_mob, item__desc, project__item, item__img, list__countsWrp, project__controlsWrp, styles6;
var init_chunk_90110aa4 = __esm({
  ".netlify/functions-internal/chunks/chunk.90110aa4.mjs"() {
    project__controls = "_project__controls_zqtoi_1";
    project__control = "_project__control_zqtoi_1";
    project__control_active = "_project__control_active_zqtoi_37";
    project__projects = "_project__projects_zqtoi_65";
    project__list = "_project__list_zqtoi_76";
    item__header = "_item__header_zqtoi_80";
    list__counts = "_list__counts_zqtoi_87";
    list__counts_devs = "_list__counts_devs_zqtoi_95";
    list__counts_time = "_list__counts_time_zqtoi_100";
    item__tags = "_item__tags_zqtoi_104";
    tag = "_tag_zqtoi_109";
    item__link = "_item__link_zqtoi_121";
    item__link_mob = "_item__link_mob_zqtoi_129";
    item__desc = "_item__desc_zqtoi_139";
    project__item = "_project__item_zqtoi_145";
    item__img = "_item__img_zqtoi_151";
    list__countsWrp = "_list__countsWrp_zqtoi_169";
    project__controlsWrp = "_project__controlsWrp_zqtoi_174";
    styles6 = {
      project__controls,
      project__control,
      project__control_active,
      project__projects,
      project__list,
      item__header,
      list__counts,
      list__counts_devs,
      list__counts_time,
      item__tags,
      tag,
      item__link,
      item__link_mob,
      item__desc,
      project__item,
      item__img,
      list__countsWrp,
      project__controlsWrp
    };
  }
});

// node_modules/@astrojs/markdown-remark/dist/load-plugins.js
async function importPlugin(p3) {
  if (typeof p3 === "string") {
    const importResult = await import(p3);
    return importResult.default;
  }
  return p3;
}
function loadPlugins(items) {
  return items.map((p3) => {
    return new Promise((resolve2, reject) => {
      if (Array.isArray(p3)) {
        const [plugin2, opts] = p3;
        return importPlugin(plugin2).then((m3) => resolve2([m3, opts])).catch((e3) => reject(e3));
      }
      return importPlugin(p3).then((m3) => resolve2([m3])).catch((e3) => reject(e3));
    });
  });
}
var init_load_plugins = __esm({
  "node_modules/@astrojs/markdown-remark/dist/load-plugins.js"() {
  }
});

// node_modules/github-slugger/regex.js
var require_regex = __commonJS({
  "node_modules/github-slugger/regex.js"(exports, module2) {
    module2.exports = /[\0-\x1F!-,\.\/:-@\[-\^`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482\u0530\u0557\u0558\u055A-\u055F\u0589-\u0590\u05BE\u05C0\u05C3\u05C6\u05C8-\u05CF\u05EB-\u05EE\u05F3-\u060F\u061B-\u061F\u066A-\u066D\u06D4\u06DD\u06DE\u06E9\u06FD\u06FE\u0700-\u070F\u074B\u074C\u07B2-\u07BF\u07F6-\u07F9\u07FB\u07FC\u07FE\u07FF\u082E-\u083F\u085C-\u085F\u086B-\u089F\u08B5\u08BE-\u08D2\u08E2\u0964\u0965\u0970\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA\u09BB\u09C5\u09C6\u09C9\u09CA\u09CF-\u09D6\u09D8-\u09DB\u09DE\u09E4\u09E5\u09F2-\u09FB\u09FD\u09FF\u0A00\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A\u0A3B\u0A3D\u0A43-\u0A46\u0A49\u0A4A\u0A4E-\u0A50\u0A52-\u0A58\u0A5D\u0A5F-\u0A65\u0A76-\u0A80\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA\u0ABB\u0AC6\u0ACA\u0ACE\u0ACF\u0AD1-\u0ADF\u0AE4\u0AE5\u0AF0-\u0AF8\u0B00\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A\u0B3B\u0B45\u0B46\u0B49\u0B4A\u0B4E-\u0B55\u0B58-\u0B5B\u0B5E\u0B64\u0B65\u0B70\u0B72-\u0B81\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BBD\u0BC3-\u0BC5\u0BC9\u0BCE\u0BCF\u0BD1-\u0BD6\u0BD8-\u0BE5\u0BF0-\u0BFF\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C45\u0C49\u0C4E-\u0C54\u0C57\u0C5B-\u0C5F\u0C64\u0C65\u0C70-\u0C7F\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA\u0CBB\u0CC5\u0CC9\u0CCE-\u0CD4\u0CD7-\u0CDD\u0CDF\u0CE4\u0CE5\u0CF0\u0CF3-\u0CFF\u0D04\u0D0D\u0D11\u0D45\u0D49\u0D4F-\u0D53\u0D58-\u0D5E\u0D64\u0D65\u0D70-\u0D79\u0D80\u0D81\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0DC9\u0DCB-\u0DCE\u0DD5\u0DD7\u0DE0-\u0DE5\u0DF0\u0DF1\u0DF4-\u0E00\u0E3B-\u0E3F\u0E4F\u0E5A-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EBE\u0EBF\u0EC5\u0EC7\u0ECE\u0ECF\u0EDA\u0EDB\u0EE0-\u0EFF\u0F01-\u0F17\u0F1A-\u0F1F\u0F2A-\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F48\u0F6D-\u0F70\u0F85\u0F98\u0FBD-\u0FC5\u0FC7-\u0FFF\u104A-\u104F\u109E\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B\u135C\u1360-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16ED\u16F9-\u16FF\u170D\u1715-\u171F\u1735-\u173F\u1754-\u175F\u176D\u1771\u1774-\u177F\u17D4-\u17D6\u17D8-\u17DB\u17DE\u17DF\u17EA-\u180A\u180E\u180F\u181A-\u181F\u1879-\u187F\u18AB-\u18AF\u18F6-\u18FF\u191F\u192C-\u192F\u193C-\u1945\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19CF\u19DA-\u19FF\u1A1C-\u1A1F\u1A5F\u1A7D\u1A7E\u1A8A-\u1A8F\u1A9A-\u1AA6\u1AA8-\u1AAF\u1ABF-\u1AFF\u1B4C-\u1B4F\u1B5A-\u1B6A\u1B74-\u1B7F\u1BF4-\u1BFF\u1C38-\u1C3F\u1C4A-\u1C4C\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CCF\u1CD3\u1CFB-\u1CFF\u1DFA\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u203E\u2041-\u2053\u2055-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u20CF\u20F1-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u215F\u2189-\u24B5\u24EA-\u2BFF\u2C2F\u2C5F\u2CE5-\u2CEA\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7E\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF\u2E00-\u2E2E\u2E30-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u3040\u3097\u3098\u309B\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31BB-\u31EF\u3200-\u33FF\u4DB6-\u4DFF\u9FF0-\u9FFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA62C-\uA63F\uA673\uA67E\uA6F2-\uA716\uA720\uA721\uA789\uA78A\uA7C0\uA7C1\uA7C7-\uA7F6\uA828-\uA83F\uA874-\uA87F\uA8C6-\uA8CF\uA8DA-\uA8DF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA954-\uA95F\uA97D-\uA97F\uA9C1-\uA9CE\uA9DA-\uA9DF\uA9FF\uAA37-\uAA3F\uAA4E\uAA4F\uAA5A-\uAA5F\uAA77-\uAA79\uAAC3-\uAADA\uAADE\uAADF\uAAF0\uAAF1\uAAF7-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB68-\uAB6F\uABEB\uABEE\uABEF\uABFA-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFDFF\uFE10-\uFE1F\uFE30-\uFE32\uFE35-\uFE4C\uFE50-\uFE6F\uFE75\uFEFD-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF3E\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDD3F\uDD75-\uDDFC\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEDF\uDEE1-\uDEFF\uDF20-\uDF2C\uDF4B-\uDF4F\uDF7B-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0\uDFD6-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE36\uDE37\uDE3B-\uDE3E\uDE40-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE7-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD28-\uDD2F\uDD3A-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF51-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC47-\uDC65\uDC70-\uDC7E\uDCBB-\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD40-\uDD43\uDD47-\uDD4F\uDD74\uDD75\uDD77-\uDD7F\uDDC5-\uDDC8\uDDCD-\uDDCF\uDDDB\uDDDD-\uDDFF\uDE12\uDE38-\uDE3D\uDE3F-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEEB-\uDEEF\uDEFA-\uDEFF\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A\uDF45\uDF46\uDF49\uDF4A\uDF4E\uDF4F\uDF51-\uDF56\uDF58-\uDF5C\uDF64\uDF65\uDF6D-\uDF6F\uDF75-\uDFFF]|\uD805[\uDC4B-\uDC4F\uDC5A-\uDC5D\uDC60-\uDC7F\uDCC6\uDCC8-\uDCCF\uDCDA-\uDD7F\uDDB6\uDDB7\uDDC1-\uDDD7\uDDDE-\uDDFF\uDE41-\uDE43\uDE45-\uDE4F\uDE5A-\uDE7F\uDEB9-\uDEBF\uDECA-\uDEFF\uDF1B\uDF1C\uDF2C-\uDF2F\uDF3A-\uDFFF]|\uD806[\uDC3B-\uDC9F\uDCEA-\uDCFE\uDD00-\uDD9F\uDDA8\uDDA9\uDDD8\uDDD9\uDDE2\uDDE5-\uDDFF\uDE3F-\uDE46\uDE48-\uDE4F\uDE9A-\uDE9C\uDE9E-\uDEBF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC37\uDC41-\uDC4F\uDC5A-\uDC71\uDC90\uDC91\uDCA8\uDCB7-\uDCFF\uDD07\uDD0A\uDD37-\uDD39\uDD3B\uDD3E\uDD48-\uDD4F\uDD5A-\uDD5F\uDD66\uDD69\uDD8F\uDD92\uDD99-\uDD9F\uDDAA-\uDEDF\uDEF7-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC6F-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80B\uD80E-\uD810\uD812-\uD819\uD823-\uD82B\uD82D\uD82E\uD830-\uD833\uD837\uD839\uD83D-\uD83F\uD87B-\uD87D\uD87F-\uDB3F\uDB41-\uDBFF][\uDC00-\uDFFF]|\uD80D[\uDC2F-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F\uDE6A-\uDECF\uDEEE\uDEEF\uDEF5-\uDEFF\uDF37-\uDF3F\uDF44-\uDF4F\uDF5A-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4E\uDF88-\uDF8E\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD822[\uDEF3-\uDFFF]|\uD82C[\uDD1F-\uDD4F\uDD53-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDC9C\uDC9F-\uDFFF]|\uD834[\uDC00-\uDD64\uDD6A-\uDD6C\uDD73-\uDD7A\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDE41\uDE45-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC\uDFCD]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE9A\uDEA0\uDEB0-\uDFFF]|\uD838[\uDC07\uDC19\uDC1A\uDC22\uDC25\uDC2B-\uDCFF\uDD2D-\uDD2F\uDD3E\uDD3F\uDD4A-\uDD4D\uDD4F-\uDEBF\uDEFA-\uDFFF]|\uD83A[\uDCC5-\uDCCF\uDCD7-\uDCFF\uDD4C-\uDD4F\uDD5A-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD83C[\uDC00-\uDD2F\uDD4A-\uDD4F\uDD6A-\uDD6F\uDD8A-\uDFFF]|\uD869[\uDED7-\uDEFF]|\uD86D[\uDF35-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uDB40[\uDC00-\uDCFF\uDDF0-\uDFFF]/g;
  }
});

// node_modules/github-slugger/index.js
var require_github_slugger = __commonJS({
  "node_modules/github-slugger/index.js"(exports, module2) {
    var regex = require_regex();
    module2.exports = BananaSlug;
    var own17 = Object.hasOwnProperty;
    function BananaSlug() {
      const self2 = this;
      if (!(self2 instanceof BananaSlug))
        return new BananaSlug();
      self2.reset();
    }
    BananaSlug.prototype.slug = function(value, maintainCase) {
      const self2 = this;
      let slug2 = slugger2(value, maintainCase === true);
      const originalSlug = slug2;
      while (own17.call(self2.occurrences, slug2)) {
        self2.occurrences[originalSlug]++;
        slug2 = originalSlug + "-" + self2.occurrences[originalSlug];
      }
      self2.occurrences[slug2] = 0;
      return slug2;
    };
    BananaSlug.prototype.reset = function() {
      this.occurrences = /* @__PURE__ */ Object.create(null);
    };
    function slugger2(string3, maintainCase) {
      if (typeof string3 !== "string")
        return "";
      if (!maintainCase)
        string3 = string3.toLowerCase();
      return string3.replace(regex, "").replace(/ /g, "-");
    }
    BananaSlug.slug = slugger2;
  }
});

// node_modules/property-information/lib/util/schema.js
var Schema;
var init_schema = __esm({
  "node_modules/property-information/lib/util/schema.js"() {
    Schema = class {
      constructor(property, normal, space) {
        this.property = property;
        this.normal = normal;
        if (space) {
          this.space = space;
        }
      }
    };
    Schema.prototype.property = {};
    Schema.prototype.normal = {};
    Schema.prototype.space = null;
  }
});

// node_modules/property-information/lib/util/merge.js
function merge(definitions2, space) {
  const property = {};
  const normal = {};
  let index2 = -1;
  while (++index2 < definitions2.length) {
    Object.assign(property, definitions2[index2].property);
    Object.assign(normal, definitions2[index2].normal);
  }
  return new Schema(property, normal, space);
}
var init_merge = __esm({
  "node_modules/property-information/lib/util/merge.js"() {
    init_schema();
  }
});

// node_modules/property-information/lib/normalize.js
function normalize(value) {
  return value.toLowerCase();
}
var init_normalize = __esm({
  "node_modules/property-information/lib/normalize.js"() {
  }
});

// node_modules/property-information/lib/util/info.js
var Info;
var init_info = __esm({
  "node_modules/property-information/lib/util/info.js"() {
    Info = class {
      constructor(property, attribute) {
        this.property = property;
        this.attribute = attribute;
      }
    };
    Info.prototype.space = null;
    Info.prototype.boolean = false;
    Info.prototype.booleanish = false;
    Info.prototype.overloadedBoolean = false;
    Info.prototype.number = false;
    Info.prototype.commaSeparated = false;
    Info.prototype.spaceSeparated = false;
    Info.prototype.commaOrSpaceSeparated = false;
    Info.prototype.mustUseProperty = false;
    Info.prototype.defined = false;
  }
});

// node_modules/property-information/lib/util/types.js
var types_exports = {};
__export(types_exports, {
  boolean: () => boolean,
  booleanish: () => booleanish,
  commaOrSpaceSeparated: () => commaOrSpaceSeparated,
  commaSeparated: () => commaSeparated,
  number: () => number,
  overloadedBoolean: () => overloadedBoolean,
  spaceSeparated: () => spaceSeparated
});
function increment() {
  return 2 ** ++powers;
}
var powers, boolean, booleanish, overloadedBoolean, number, spaceSeparated, commaSeparated, commaOrSpaceSeparated;
var init_types = __esm({
  "node_modules/property-information/lib/util/types.js"() {
    powers = 0;
    boolean = increment();
    booleanish = increment();
    overloadedBoolean = increment();
    number = increment();
    spaceSeparated = increment();
    commaSeparated = increment();
    commaOrSpaceSeparated = increment();
  }
});

// node_modules/property-information/lib/util/defined-info.js
function mark(values, key2, value) {
  if (value) {
    values[key2] = value;
  }
}
var checks, DefinedInfo;
var init_defined_info = __esm({
  "node_modules/property-information/lib/util/defined-info.js"() {
    init_info();
    init_types();
    checks = Object.keys(types_exports);
    DefinedInfo = class extends Info {
      constructor(property, attribute, mask, space) {
        let index2 = -1;
        super(property, attribute);
        mark(this, "space", space);
        if (typeof mask === "number") {
          while (++index2 < checks.length) {
            const check2 = checks[index2];
            mark(this, checks[index2], (mask & types_exports[check2]) === types_exports[check2]);
          }
        }
      }
    };
    DefinedInfo.prototype.defined = true;
  }
});

// node_modules/property-information/lib/util/create.js
function create(definition2) {
  const property = {};
  const normal = {};
  let prop;
  for (prop in definition2.properties) {
    if (own.call(definition2.properties, prop)) {
      const value = definition2.properties[prop];
      const info = new DefinedInfo(prop, definition2.transform(definition2.attributes || {}, prop), value, definition2.space);
      if (definition2.mustUseProperty && definition2.mustUseProperty.includes(prop)) {
        info.mustUseProperty = true;
      }
      property[prop] = info;
      normal[normalize(prop)] = prop;
      normal[normalize(info.attribute)] = prop;
    }
  }
  return new Schema(property, normal, definition2.space);
}
var own;
var init_create = __esm({
  "node_modules/property-information/lib/util/create.js"() {
    init_normalize();
    init_schema();
    init_defined_info();
    own = {}.hasOwnProperty;
  }
});

// node_modules/property-information/lib/xlink.js
var xlink;
var init_xlink = __esm({
  "node_modules/property-information/lib/xlink.js"() {
    init_create();
    xlink = create({
      space: "xlink",
      transform(_, prop) {
        return "xlink:" + prop.slice(5).toLowerCase();
      },
      properties: {
        xLinkActuate: null,
        xLinkArcRole: null,
        xLinkHref: null,
        xLinkRole: null,
        xLinkShow: null,
        xLinkTitle: null,
        xLinkType: null
      }
    });
  }
});

// node_modules/property-information/lib/xml.js
var xml;
var init_xml = __esm({
  "node_modules/property-information/lib/xml.js"() {
    init_create();
    xml = create({
      space: "xml",
      transform(_, prop) {
        return "xml:" + prop.slice(3).toLowerCase();
      },
      properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
    });
  }
});

// node_modules/property-information/lib/util/case-sensitive-transform.js
function caseSensitiveTransform(attributes2, attribute) {
  return attribute in attributes2 ? attributes2[attribute] : attribute;
}
var init_case_sensitive_transform = __esm({
  "node_modules/property-information/lib/util/case-sensitive-transform.js"() {
  }
});

// node_modules/property-information/lib/util/case-insensitive-transform.js
function caseInsensitiveTransform(attributes2, property) {
  return caseSensitiveTransform(attributes2, property.toLowerCase());
}
var init_case_insensitive_transform = __esm({
  "node_modules/property-information/lib/util/case-insensitive-transform.js"() {
    init_case_sensitive_transform();
  }
});

// node_modules/property-information/lib/xmlns.js
var xmlns;
var init_xmlns = __esm({
  "node_modules/property-information/lib/xmlns.js"() {
    init_create();
    init_case_insensitive_transform();
    xmlns = create({
      space: "xmlns",
      attributes: { xmlnsxlink: "xmlns:xlink" },
      transform: caseInsensitiveTransform,
      properties: { xmlns: null, xmlnsXLink: null }
    });
  }
});

// node_modules/property-information/lib/aria.js
var aria;
var init_aria = __esm({
  "node_modules/property-information/lib/aria.js"() {
    init_types();
    init_create();
    aria = create({
      transform(_, prop) {
        return prop === "role" ? prop : "aria-" + prop.slice(4).toLowerCase();
      },
      properties: {
        ariaActiveDescendant: null,
        ariaAtomic: booleanish,
        ariaAutoComplete: null,
        ariaBusy: booleanish,
        ariaChecked: booleanish,
        ariaColCount: number,
        ariaColIndex: number,
        ariaColSpan: number,
        ariaControls: spaceSeparated,
        ariaCurrent: null,
        ariaDescribedBy: spaceSeparated,
        ariaDetails: null,
        ariaDisabled: booleanish,
        ariaDropEffect: spaceSeparated,
        ariaErrorMessage: null,
        ariaExpanded: booleanish,
        ariaFlowTo: spaceSeparated,
        ariaGrabbed: booleanish,
        ariaHasPopup: null,
        ariaHidden: booleanish,
        ariaInvalid: null,
        ariaKeyShortcuts: null,
        ariaLabel: null,
        ariaLabelledBy: spaceSeparated,
        ariaLevel: number,
        ariaLive: null,
        ariaModal: booleanish,
        ariaMultiLine: booleanish,
        ariaMultiSelectable: booleanish,
        ariaOrientation: null,
        ariaOwns: spaceSeparated,
        ariaPlaceholder: null,
        ariaPosInSet: number,
        ariaPressed: booleanish,
        ariaReadOnly: booleanish,
        ariaRelevant: null,
        ariaRequired: booleanish,
        ariaRoleDescription: spaceSeparated,
        ariaRowCount: number,
        ariaRowIndex: number,
        ariaRowSpan: number,
        ariaSelected: booleanish,
        ariaSetSize: number,
        ariaSort: null,
        ariaValueMax: number,
        ariaValueMin: number,
        ariaValueNow: number,
        ariaValueText: null,
        role: null
      }
    });
  }
});

// node_modules/property-information/lib/html.js
var html;
var init_html = __esm({
  "node_modules/property-information/lib/html.js"() {
    init_types();
    init_create();
    init_case_insensitive_transform();
    html = create({
      space: "html",
      attributes: {
        acceptcharset: "accept-charset",
        classname: "class",
        htmlfor: "for",
        httpequiv: "http-equiv"
      },
      transform: caseInsensitiveTransform,
      mustUseProperty: ["checked", "multiple", "muted", "selected"],
      properties: {
        abbr: null,
        accept: commaSeparated,
        acceptCharset: spaceSeparated,
        accessKey: spaceSeparated,
        action: null,
        allow: null,
        allowFullScreen: boolean,
        allowPaymentRequest: boolean,
        allowUserMedia: boolean,
        alt: null,
        as: null,
        async: boolean,
        autoCapitalize: null,
        autoComplete: spaceSeparated,
        autoFocus: boolean,
        autoPlay: boolean,
        capture: boolean,
        charSet: null,
        checked: boolean,
        cite: null,
        className: spaceSeparated,
        cols: number,
        colSpan: null,
        content: null,
        contentEditable: booleanish,
        controls: boolean,
        controlsList: spaceSeparated,
        coords: number | commaSeparated,
        crossOrigin: null,
        data: null,
        dateTime: null,
        decoding: null,
        default: boolean,
        defer: boolean,
        dir: null,
        dirName: null,
        disabled: boolean,
        download: overloadedBoolean,
        draggable: booleanish,
        encType: null,
        enterKeyHint: null,
        form: null,
        formAction: null,
        formEncType: null,
        formMethod: null,
        formNoValidate: boolean,
        formTarget: null,
        headers: spaceSeparated,
        height: number,
        hidden: boolean,
        high: number,
        href: null,
        hrefLang: null,
        htmlFor: spaceSeparated,
        httpEquiv: spaceSeparated,
        id: null,
        imageSizes: null,
        imageSrcSet: null,
        inputMode: null,
        integrity: null,
        is: null,
        isMap: boolean,
        itemId: null,
        itemProp: spaceSeparated,
        itemRef: spaceSeparated,
        itemScope: boolean,
        itemType: spaceSeparated,
        kind: null,
        label: null,
        lang: null,
        language: null,
        list: null,
        loading: null,
        loop: boolean,
        low: number,
        manifest: null,
        max: null,
        maxLength: number,
        media: null,
        method: null,
        min: null,
        minLength: number,
        multiple: boolean,
        muted: boolean,
        name: null,
        nonce: null,
        noModule: boolean,
        noValidate: boolean,
        onAbort: null,
        onAfterPrint: null,
        onAuxClick: null,
        onBeforePrint: null,
        onBeforeUnload: null,
        onBlur: null,
        onCancel: null,
        onCanPlay: null,
        onCanPlayThrough: null,
        onChange: null,
        onClick: null,
        onClose: null,
        onContextLost: null,
        onContextMenu: null,
        onContextRestored: null,
        onCopy: null,
        onCueChange: null,
        onCut: null,
        onDblClick: null,
        onDrag: null,
        onDragEnd: null,
        onDragEnter: null,
        onDragExit: null,
        onDragLeave: null,
        onDragOver: null,
        onDragStart: null,
        onDrop: null,
        onDurationChange: null,
        onEmptied: null,
        onEnded: null,
        onError: null,
        onFocus: null,
        onFormData: null,
        onHashChange: null,
        onInput: null,
        onInvalid: null,
        onKeyDown: null,
        onKeyPress: null,
        onKeyUp: null,
        onLanguageChange: null,
        onLoad: null,
        onLoadedData: null,
        onLoadedMetadata: null,
        onLoadEnd: null,
        onLoadStart: null,
        onMessage: null,
        onMessageError: null,
        onMouseDown: null,
        onMouseEnter: null,
        onMouseLeave: null,
        onMouseMove: null,
        onMouseOut: null,
        onMouseOver: null,
        onMouseUp: null,
        onOffline: null,
        onOnline: null,
        onPageHide: null,
        onPageShow: null,
        onPaste: null,
        onPause: null,
        onPlay: null,
        onPlaying: null,
        onPopState: null,
        onProgress: null,
        onRateChange: null,
        onRejectionHandled: null,
        onReset: null,
        onResize: null,
        onScroll: null,
        onSecurityPolicyViolation: null,
        onSeeked: null,
        onSeeking: null,
        onSelect: null,
        onSlotChange: null,
        onStalled: null,
        onStorage: null,
        onSubmit: null,
        onSuspend: null,
        onTimeUpdate: null,
        onToggle: null,
        onUnhandledRejection: null,
        onUnload: null,
        onVolumeChange: null,
        onWaiting: null,
        onWheel: null,
        open: boolean,
        optimum: number,
        pattern: null,
        ping: spaceSeparated,
        placeholder: null,
        playsInline: boolean,
        poster: null,
        preload: null,
        readOnly: boolean,
        referrerPolicy: null,
        rel: spaceSeparated,
        required: boolean,
        reversed: boolean,
        rows: number,
        rowSpan: number,
        sandbox: spaceSeparated,
        scope: null,
        scoped: boolean,
        seamless: boolean,
        selected: boolean,
        shape: null,
        size: number,
        sizes: null,
        slot: null,
        span: number,
        spellCheck: booleanish,
        src: null,
        srcDoc: null,
        srcLang: null,
        srcSet: null,
        start: number,
        step: null,
        style: null,
        tabIndex: number,
        target: null,
        title: null,
        translate: null,
        type: null,
        typeMustMatch: boolean,
        useMap: null,
        value: booleanish,
        width: number,
        wrap: null,
        align: null,
        aLink: null,
        archive: spaceSeparated,
        axis: null,
        background: null,
        bgColor: null,
        border: number,
        borderColor: null,
        bottomMargin: number,
        cellPadding: null,
        cellSpacing: null,
        char: null,
        charOff: null,
        classId: null,
        clear: null,
        code: null,
        codeBase: null,
        codeType: null,
        color: null,
        compact: boolean,
        declare: boolean,
        event: null,
        face: null,
        frame: null,
        frameBorder: null,
        hSpace: number,
        leftMargin: number,
        link: null,
        longDesc: null,
        lowSrc: null,
        marginHeight: number,
        marginWidth: number,
        noResize: boolean,
        noHref: boolean,
        noShade: boolean,
        noWrap: boolean,
        object: null,
        profile: null,
        prompt: null,
        rev: null,
        rightMargin: number,
        rules: null,
        scheme: null,
        scrolling: booleanish,
        standby: null,
        summary: null,
        text: null,
        topMargin: number,
        valueType: null,
        version: null,
        vAlign: null,
        vLink: null,
        vSpace: number,
        allowTransparency: null,
        autoCorrect: null,
        autoSave: null,
        disablePictureInPicture: boolean,
        disableRemotePlayback: boolean,
        prefix: null,
        property: null,
        results: number,
        security: null,
        unselectable: null
      }
    });
  }
});

// node_modules/property-information/lib/svg.js
var svg;
var init_svg = __esm({
  "node_modules/property-information/lib/svg.js"() {
    init_types();
    init_create();
    init_case_sensitive_transform();
    svg = create({
      space: "svg",
      attributes: {
        accentHeight: "accent-height",
        alignmentBaseline: "alignment-baseline",
        arabicForm: "arabic-form",
        baselineShift: "baseline-shift",
        capHeight: "cap-height",
        className: "class",
        clipPath: "clip-path",
        clipRule: "clip-rule",
        colorInterpolation: "color-interpolation",
        colorInterpolationFilters: "color-interpolation-filters",
        colorProfile: "color-profile",
        colorRendering: "color-rendering",
        crossOrigin: "crossorigin",
        dataType: "datatype",
        dominantBaseline: "dominant-baseline",
        enableBackground: "enable-background",
        fillOpacity: "fill-opacity",
        fillRule: "fill-rule",
        floodColor: "flood-color",
        floodOpacity: "flood-opacity",
        fontFamily: "font-family",
        fontSize: "font-size",
        fontSizeAdjust: "font-size-adjust",
        fontStretch: "font-stretch",
        fontStyle: "font-style",
        fontVariant: "font-variant",
        fontWeight: "font-weight",
        glyphName: "glyph-name",
        glyphOrientationHorizontal: "glyph-orientation-horizontal",
        glyphOrientationVertical: "glyph-orientation-vertical",
        hrefLang: "hreflang",
        horizAdvX: "horiz-adv-x",
        horizOriginX: "horiz-origin-x",
        horizOriginY: "horiz-origin-y",
        imageRendering: "image-rendering",
        letterSpacing: "letter-spacing",
        lightingColor: "lighting-color",
        markerEnd: "marker-end",
        markerMid: "marker-mid",
        markerStart: "marker-start",
        navDown: "nav-down",
        navDownLeft: "nav-down-left",
        navDownRight: "nav-down-right",
        navLeft: "nav-left",
        navNext: "nav-next",
        navPrev: "nav-prev",
        navRight: "nav-right",
        navUp: "nav-up",
        navUpLeft: "nav-up-left",
        navUpRight: "nav-up-right",
        onAbort: "onabort",
        onActivate: "onactivate",
        onAfterPrint: "onafterprint",
        onBeforePrint: "onbeforeprint",
        onBegin: "onbegin",
        onCancel: "oncancel",
        onCanPlay: "oncanplay",
        onCanPlayThrough: "oncanplaythrough",
        onChange: "onchange",
        onClick: "onclick",
        onClose: "onclose",
        onCopy: "oncopy",
        onCueChange: "oncuechange",
        onCut: "oncut",
        onDblClick: "ondblclick",
        onDrag: "ondrag",
        onDragEnd: "ondragend",
        onDragEnter: "ondragenter",
        onDragExit: "ondragexit",
        onDragLeave: "ondragleave",
        onDragOver: "ondragover",
        onDragStart: "ondragstart",
        onDrop: "ondrop",
        onDurationChange: "ondurationchange",
        onEmptied: "onemptied",
        onEnd: "onend",
        onEnded: "onended",
        onError: "onerror",
        onFocus: "onfocus",
        onFocusIn: "onfocusin",
        onFocusOut: "onfocusout",
        onHashChange: "onhashchange",
        onInput: "oninput",
        onInvalid: "oninvalid",
        onKeyDown: "onkeydown",
        onKeyPress: "onkeypress",
        onKeyUp: "onkeyup",
        onLoad: "onload",
        onLoadedData: "onloadeddata",
        onLoadedMetadata: "onloadedmetadata",
        onLoadStart: "onloadstart",
        onMessage: "onmessage",
        onMouseDown: "onmousedown",
        onMouseEnter: "onmouseenter",
        onMouseLeave: "onmouseleave",
        onMouseMove: "onmousemove",
        onMouseOut: "onmouseout",
        onMouseOver: "onmouseover",
        onMouseUp: "onmouseup",
        onMouseWheel: "onmousewheel",
        onOffline: "onoffline",
        onOnline: "ononline",
        onPageHide: "onpagehide",
        onPageShow: "onpageshow",
        onPaste: "onpaste",
        onPause: "onpause",
        onPlay: "onplay",
        onPlaying: "onplaying",
        onPopState: "onpopstate",
        onProgress: "onprogress",
        onRateChange: "onratechange",
        onRepeat: "onrepeat",
        onReset: "onreset",
        onResize: "onresize",
        onScroll: "onscroll",
        onSeeked: "onseeked",
        onSeeking: "onseeking",
        onSelect: "onselect",
        onShow: "onshow",
        onStalled: "onstalled",
        onStorage: "onstorage",
        onSubmit: "onsubmit",
        onSuspend: "onsuspend",
        onTimeUpdate: "ontimeupdate",
        onToggle: "ontoggle",
        onUnload: "onunload",
        onVolumeChange: "onvolumechange",
        onWaiting: "onwaiting",
        onZoom: "onzoom",
        overlinePosition: "overline-position",
        overlineThickness: "overline-thickness",
        paintOrder: "paint-order",
        panose1: "panose-1",
        pointerEvents: "pointer-events",
        referrerPolicy: "referrerpolicy",
        renderingIntent: "rendering-intent",
        shapeRendering: "shape-rendering",
        stopColor: "stop-color",
        stopOpacity: "stop-opacity",
        strikethroughPosition: "strikethrough-position",
        strikethroughThickness: "strikethrough-thickness",
        strokeDashArray: "stroke-dasharray",
        strokeDashOffset: "stroke-dashoffset",
        strokeLineCap: "stroke-linecap",
        strokeLineJoin: "stroke-linejoin",
        strokeMiterLimit: "stroke-miterlimit",
        strokeOpacity: "stroke-opacity",
        strokeWidth: "stroke-width",
        tabIndex: "tabindex",
        textAnchor: "text-anchor",
        textDecoration: "text-decoration",
        textRendering: "text-rendering",
        typeOf: "typeof",
        underlinePosition: "underline-position",
        underlineThickness: "underline-thickness",
        unicodeBidi: "unicode-bidi",
        unicodeRange: "unicode-range",
        unitsPerEm: "units-per-em",
        vAlphabetic: "v-alphabetic",
        vHanging: "v-hanging",
        vIdeographic: "v-ideographic",
        vMathematical: "v-mathematical",
        vectorEffect: "vector-effect",
        vertAdvY: "vert-adv-y",
        vertOriginX: "vert-origin-x",
        vertOriginY: "vert-origin-y",
        wordSpacing: "word-spacing",
        writingMode: "writing-mode",
        xHeight: "x-height",
        playbackOrder: "playbackorder",
        timelineBegin: "timelinebegin"
      },
      transform: caseSensitiveTransform,
      properties: {
        about: commaOrSpaceSeparated,
        accentHeight: number,
        accumulate: null,
        additive: null,
        alignmentBaseline: null,
        alphabetic: number,
        amplitude: number,
        arabicForm: null,
        ascent: number,
        attributeName: null,
        attributeType: null,
        azimuth: number,
        bandwidth: null,
        baselineShift: null,
        baseFrequency: null,
        baseProfile: null,
        bbox: null,
        begin: null,
        bias: number,
        by: null,
        calcMode: null,
        capHeight: number,
        className: spaceSeparated,
        clip: null,
        clipPath: null,
        clipPathUnits: null,
        clipRule: null,
        color: null,
        colorInterpolation: null,
        colorInterpolationFilters: null,
        colorProfile: null,
        colorRendering: null,
        content: null,
        contentScriptType: null,
        contentStyleType: null,
        crossOrigin: null,
        cursor: null,
        cx: null,
        cy: null,
        d: null,
        dataType: null,
        defaultAction: null,
        descent: number,
        diffuseConstant: number,
        direction: null,
        display: null,
        dur: null,
        divisor: number,
        dominantBaseline: null,
        download: boolean,
        dx: null,
        dy: null,
        edgeMode: null,
        editable: null,
        elevation: number,
        enableBackground: null,
        end: null,
        event: null,
        exponent: number,
        externalResourcesRequired: null,
        fill: null,
        fillOpacity: number,
        fillRule: null,
        filter: null,
        filterRes: null,
        filterUnits: null,
        floodColor: null,
        floodOpacity: null,
        focusable: null,
        focusHighlight: null,
        fontFamily: null,
        fontSize: null,
        fontSizeAdjust: null,
        fontStretch: null,
        fontStyle: null,
        fontVariant: null,
        fontWeight: null,
        format: null,
        fr: null,
        from: null,
        fx: null,
        fy: null,
        g1: commaSeparated,
        g2: commaSeparated,
        glyphName: commaSeparated,
        glyphOrientationHorizontal: null,
        glyphOrientationVertical: null,
        glyphRef: null,
        gradientTransform: null,
        gradientUnits: null,
        handler: null,
        hanging: number,
        hatchContentUnits: null,
        hatchUnits: null,
        height: null,
        href: null,
        hrefLang: null,
        horizAdvX: number,
        horizOriginX: number,
        horizOriginY: number,
        id: null,
        ideographic: number,
        imageRendering: null,
        initialVisibility: null,
        in: null,
        in2: null,
        intercept: number,
        k: number,
        k1: number,
        k2: number,
        k3: number,
        k4: number,
        kernelMatrix: commaOrSpaceSeparated,
        kernelUnitLength: null,
        keyPoints: null,
        keySplines: null,
        keyTimes: null,
        kerning: null,
        lang: null,
        lengthAdjust: null,
        letterSpacing: null,
        lightingColor: null,
        limitingConeAngle: number,
        local: null,
        markerEnd: null,
        markerMid: null,
        markerStart: null,
        markerHeight: null,
        markerUnits: null,
        markerWidth: null,
        mask: null,
        maskContentUnits: null,
        maskUnits: null,
        mathematical: null,
        max: null,
        media: null,
        mediaCharacterEncoding: null,
        mediaContentEncodings: null,
        mediaSize: number,
        mediaTime: null,
        method: null,
        min: null,
        mode: null,
        name: null,
        navDown: null,
        navDownLeft: null,
        navDownRight: null,
        navLeft: null,
        navNext: null,
        navPrev: null,
        navRight: null,
        navUp: null,
        navUpLeft: null,
        navUpRight: null,
        numOctaves: null,
        observer: null,
        offset: null,
        onAbort: null,
        onActivate: null,
        onAfterPrint: null,
        onBeforePrint: null,
        onBegin: null,
        onCancel: null,
        onCanPlay: null,
        onCanPlayThrough: null,
        onChange: null,
        onClick: null,
        onClose: null,
        onCopy: null,
        onCueChange: null,
        onCut: null,
        onDblClick: null,
        onDrag: null,
        onDragEnd: null,
        onDragEnter: null,
        onDragExit: null,
        onDragLeave: null,
        onDragOver: null,
        onDragStart: null,
        onDrop: null,
        onDurationChange: null,
        onEmptied: null,
        onEnd: null,
        onEnded: null,
        onError: null,
        onFocus: null,
        onFocusIn: null,
        onFocusOut: null,
        onHashChange: null,
        onInput: null,
        onInvalid: null,
        onKeyDown: null,
        onKeyPress: null,
        onKeyUp: null,
        onLoad: null,
        onLoadedData: null,
        onLoadedMetadata: null,
        onLoadStart: null,
        onMessage: null,
        onMouseDown: null,
        onMouseEnter: null,
        onMouseLeave: null,
        onMouseMove: null,
        onMouseOut: null,
        onMouseOver: null,
        onMouseUp: null,
        onMouseWheel: null,
        onOffline: null,
        onOnline: null,
        onPageHide: null,
        onPageShow: null,
        onPaste: null,
        onPause: null,
        onPlay: null,
        onPlaying: null,
        onPopState: null,
        onProgress: null,
        onRateChange: null,
        onRepeat: null,
        onReset: null,
        onResize: null,
        onScroll: null,
        onSeeked: null,
        onSeeking: null,
        onSelect: null,
        onShow: null,
        onStalled: null,
        onStorage: null,
        onSubmit: null,
        onSuspend: null,
        onTimeUpdate: null,
        onToggle: null,
        onUnload: null,
        onVolumeChange: null,
        onWaiting: null,
        onZoom: null,
        opacity: null,
        operator: null,
        order: null,
        orient: null,
        orientation: null,
        origin: null,
        overflow: null,
        overlay: null,
        overlinePosition: number,
        overlineThickness: number,
        paintOrder: null,
        panose1: null,
        path: null,
        pathLength: number,
        patternContentUnits: null,
        patternTransform: null,
        patternUnits: null,
        phase: null,
        ping: spaceSeparated,
        pitch: null,
        playbackOrder: null,
        pointerEvents: null,
        points: null,
        pointsAtX: number,
        pointsAtY: number,
        pointsAtZ: number,
        preserveAlpha: null,
        preserveAspectRatio: null,
        primitiveUnits: null,
        propagate: null,
        property: commaOrSpaceSeparated,
        r: null,
        radius: null,
        referrerPolicy: null,
        refX: null,
        refY: null,
        rel: commaOrSpaceSeparated,
        rev: commaOrSpaceSeparated,
        renderingIntent: null,
        repeatCount: null,
        repeatDur: null,
        requiredExtensions: commaOrSpaceSeparated,
        requiredFeatures: commaOrSpaceSeparated,
        requiredFonts: commaOrSpaceSeparated,
        requiredFormats: commaOrSpaceSeparated,
        resource: null,
        restart: null,
        result: null,
        rotate: null,
        rx: null,
        ry: null,
        scale: null,
        seed: null,
        shapeRendering: null,
        side: null,
        slope: null,
        snapshotTime: null,
        specularConstant: number,
        specularExponent: number,
        spreadMethod: null,
        spacing: null,
        startOffset: null,
        stdDeviation: null,
        stemh: null,
        stemv: null,
        stitchTiles: null,
        stopColor: null,
        stopOpacity: null,
        strikethroughPosition: number,
        strikethroughThickness: number,
        string: null,
        stroke: null,
        strokeDashArray: commaOrSpaceSeparated,
        strokeDashOffset: null,
        strokeLineCap: null,
        strokeLineJoin: null,
        strokeMiterLimit: number,
        strokeOpacity: number,
        strokeWidth: null,
        style: null,
        surfaceScale: number,
        syncBehavior: null,
        syncBehaviorDefault: null,
        syncMaster: null,
        syncTolerance: null,
        syncToleranceDefault: null,
        systemLanguage: commaOrSpaceSeparated,
        tabIndex: number,
        tableValues: null,
        target: null,
        targetX: number,
        targetY: number,
        textAnchor: null,
        textDecoration: null,
        textRendering: null,
        textLength: null,
        timelineBegin: null,
        title: null,
        transformBehavior: null,
        type: null,
        typeOf: commaOrSpaceSeparated,
        to: null,
        transform: null,
        u1: null,
        u2: null,
        underlinePosition: number,
        underlineThickness: number,
        unicode: null,
        unicodeBidi: null,
        unicodeRange: null,
        unitsPerEm: number,
        values: null,
        vAlphabetic: number,
        vMathematical: number,
        vectorEffect: null,
        vHanging: number,
        vIdeographic: number,
        version: null,
        vertAdvY: number,
        vertOriginX: number,
        vertOriginY: number,
        viewBox: null,
        viewTarget: null,
        visibility: null,
        width: null,
        widths: null,
        wordSpacing: null,
        writingMode: null,
        x: null,
        x1: null,
        x2: null,
        xChannelSelector: null,
        xHeight: number,
        y: null,
        y1: null,
        y2: null,
        yChannelSelector: null,
        z: null,
        zoomAndPan: null
      }
    });
  }
});

// node_modules/property-information/lib/find.js
function find(schema, value) {
  const normal = normalize(value);
  let prop = value;
  let Type = Info;
  if (normal in schema.normal) {
    return schema.property[schema.normal[normal]];
  }
  if (normal.length > 4 && normal.slice(0, 4) === "data" && valid.test(value)) {
    if (value.charAt(4) === "-") {
      const rest = value.slice(5).replace(dash, camelcase);
      prop = "data" + rest.charAt(0).toUpperCase() + rest.slice(1);
    } else {
      const rest = value.slice(4);
      if (!dash.test(rest)) {
        let dashes = rest.replace(cap, kebab);
        if (dashes.charAt(0) !== "-") {
          dashes = "-" + dashes;
        }
        value = "data" + dashes;
      }
    }
    Type = DefinedInfo;
  }
  return new Type(prop, value);
}
function kebab($0) {
  return "-" + $0.toLowerCase();
}
function camelcase($0) {
  return $0.charAt(1).toUpperCase();
}
var valid, dash, cap;
var init_find = __esm({
  "node_modules/property-information/lib/find.js"() {
    init_normalize();
    init_defined_info();
    init_info();
    valid = /^data[-\w.:]+$/i;
    dash = /-[a-z]/g;
    cap = /[A-Z]/g;
  }
});

// node_modules/property-information/lib/hast-to-react.js
var hastToReact;
var init_hast_to_react = __esm({
  "node_modules/property-information/lib/hast-to-react.js"() {
    hastToReact = {
      classId: "classID",
      dataType: "datatype",
      itemId: "itemID",
      strokeDashArray: "strokeDasharray",
      strokeDashOffset: "strokeDashoffset",
      strokeLineCap: "strokeLinecap",
      strokeLineJoin: "strokeLinejoin",
      strokeMiterLimit: "strokeMiterlimit",
      typeOf: "typeof",
      xLinkActuate: "xlinkActuate",
      xLinkArcRole: "xlinkArcrole",
      xLinkHref: "xlinkHref",
      xLinkRole: "xlinkRole",
      xLinkShow: "xlinkShow",
      xLinkTitle: "xlinkTitle",
      xLinkType: "xlinkType",
      xmlnsXLink: "xmlnsXlink"
    };
  }
});

// node_modules/property-information/index.js
var html2, svg2;
var init_property_information = __esm({
  "node_modules/property-information/index.js"() {
    init_merge();
    init_xlink();
    init_xml();
    init_xmlns();
    init_aria();
    init_html();
    init_svg();
    init_find();
    init_hast_to_react();
    init_normalize();
    html2 = merge([xml, xlink, xmlns, aria, html], "html");
    svg2 = merge([xml, xlink, xmlns, aria, svg], "svg");
  }
});

// node_modules/html-void-elements/index.js
var htmlVoidElements;
var init_html_void_elements = __esm({
  "node_modules/html-void-elements/index.js"() {
    htmlVoidElements = [
      "area",
      "base",
      "basefont",
      "bgsound",
      "br",
      "col",
      "command",
      "embed",
      "frame",
      "hr",
      "image",
      "img",
      "input",
      "isindex",
      "keygen",
      "link",
      "menuitem",
      "meta",
      "nextid",
      "param",
      "source",
      "track",
      "wbr"
    ];
  }
});

// node_modules/hast-util-is-element/index.js
function anyFactory(tests) {
  const checks2 = [];
  let index2 = -1;
  while (++index2 < tests.length) {
    checks2[index2] = convertElement(tests[index2]);
  }
  return castFactory(any2);
  function any2(...parameters) {
    let index3 = -1;
    while (++index3 < checks2.length) {
      if (checks2[index3].call(this, ...parameters)) {
        return true;
      }
    }
    return false;
  }
}
function tagNameFactory(check2) {
  return tagName;
  function tagName(node) {
    return element(node) && node.tagName === check2;
  }
}
function castFactory(check2) {
  return assertion;
  function assertion(node, ...parameters) {
    return element(node) && Boolean(check2.call(this, node, ...parameters));
  }
}
function element(node) {
  return Boolean(node && typeof node === "object" && node.type === "element" && typeof node.tagName === "string");
}
var isElement, convertElement;
var init_hast_util_is_element = __esm({
  "node_modules/hast-util-is-element/index.js"() {
    isElement = function(node, test, index2, parent, context) {
      const check2 = convertElement(test);
      if (index2 !== void 0 && index2 !== null && (typeof index2 !== "number" || index2 < 0 || index2 === Number.POSITIVE_INFINITY)) {
        throw new Error("Expected positive finite index for child node");
      }
      if (parent !== void 0 && parent !== null && (!parent.type || !parent.children)) {
        throw new Error("Expected parent node");
      }
      if (!node || !node.type || typeof node.type !== "string") {
        return false;
      }
      if ((parent === void 0 || parent === null) !== (index2 === void 0 || index2 === null)) {
        throw new Error("Expected both parent and index");
      }
      return check2.call(context, node, index2, parent);
    };
    convertElement = function(test) {
      if (test === void 0 || test === null) {
        return element;
      }
      if (typeof test === "string") {
        return tagNameFactory(test);
      }
      if (typeof test === "object") {
        return anyFactory(test);
      }
      if (typeof test === "function") {
        return castFactory(test);
      }
      throw new Error("Expected function, string, or array as test");
    };
  }
});

// node_modules/unist-util-is/index.js
function anyFactory2(tests) {
  const checks2 = [];
  let index2 = -1;
  while (++index2 < tests.length) {
    checks2[index2] = convert(tests[index2]);
  }
  return castFactory2(any2);
  function any2(...parameters) {
    let index3 = -1;
    while (++index3 < checks2.length) {
      if (checks2[index3].call(this, ...parameters))
        return true;
    }
    return false;
  }
}
function propsFactory(check2) {
  return castFactory2(all5);
  function all5(node) {
    let key2;
    for (key2 in check2) {
      if (node[key2] !== check2[key2])
        return false;
    }
    return true;
  }
}
function typeFactory(check2) {
  return castFactory2(type);
  function type(node) {
    return node && node.type === check2;
  }
}
function castFactory2(check2) {
  return assertion;
  function assertion(...parameters) {
    return Boolean(check2.call(this, ...parameters));
  }
}
function ok() {
  return true;
}
var convert;
var init_unist_util_is = __esm({
  "node_modules/unist-util-is/index.js"() {
    convert = function(test) {
      if (test === void 0 || test === null) {
        return ok;
      }
      if (typeof test === "string") {
        return typeFactory(test);
      }
      if (typeof test === "object") {
        return Array.isArray(test) ? anyFactory2(test) : propsFactory(test);
      }
      if (typeof test === "function") {
        return castFactory2(test);
      }
      throw new Error("Expected function, string, or object as test");
    };
  }
});

// node_modules/hast-util-to-html/lib/omission/util/comment.js
var comment;
var init_comment = __esm({
  "node_modules/hast-util-to-html/lib/omission/util/comment.js"() {
    init_unist_util_is();
    comment = convert("comment");
  }
});

// node_modules/hast-util-whitespace/index.js
function whitespace(thing) {
  var value = thing && typeof thing === "object" && thing.type === "text" ? thing.value || "" : thing;
  return typeof value === "string" && value.replace(/[ \t\n\f\r]/g, "") === "";
}
var init_hast_util_whitespace = __esm({
  "node_modules/hast-util-whitespace/index.js"() {
  }
});

// node_modules/hast-util-to-html/lib/omission/util/siblings.js
function siblings(increment2) {
  return sibling;
  function sibling(parent, index2, includeWhitespace) {
    const siblings2 = parent && parent.children;
    let offset2 = index2 + increment2;
    let next = siblings2 && siblings2[offset2];
    if (!includeWhitespace) {
      while (next && whitespace(next)) {
        offset2 += increment2;
        next = siblings2[offset2];
      }
    }
    return next;
  }
}
var siblingAfter, siblingBefore;
var init_siblings = __esm({
  "node_modules/hast-util-to-html/lib/omission/util/siblings.js"() {
    init_hast_util_whitespace();
    siblingAfter = siblings(1);
    siblingBefore = siblings(-1);
  }
});

// node_modules/hast-util-to-html/lib/omission/util/whitespace-start.js
function whitespaceStart(node) {
  return isText(node) && whitespace(node.value.charAt(0));
}
var isText;
var init_whitespace_start = __esm({
  "node_modules/hast-util-to-html/lib/omission/util/whitespace-start.js"() {
    init_unist_util_is();
    init_hast_util_whitespace();
    isText = convert("text");
  }
});

// node_modules/hast-util-to-html/lib/omission/omission.js
function omission(handlers3) {
  return omit;
  function omit(node, index2, parent) {
    return own2.call(handlers3, node.tagName) && handlers3[node.tagName](node, index2, parent);
  }
}
var own2;
var init_omission = __esm({
  "node_modules/hast-util-to-html/lib/omission/omission.js"() {
    own2 = {}.hasOwnProperty;
  }
});

// node_modules/hast-util-to-html/lib/omission/closing.js
function headOrColgroupOrCaption(_, index2, parent) {
  const next = siblingAfter(parent, index2, true);
  return !next || !comment(next) && !whitespaceStart(next);
}
function html3(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || !comment(next);
}
function body(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || !comment(next);
}
function p2(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return next ? isElement(next, [
    "address",
    "article",
    "aside",
    "blockquote",
    "details",
    "div",
    "dl",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "form",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "header",
    "hgroup",
    "hr",
    "main",
    "menu",
    "nav",
    "ol",
    "p",
    "pre",
    "section",
    "table",
    "ul"
  ]) : !parent || !isElement(parent, [
    "a",
    "audio",
    "del",
    "ins",
    "map",
    "noscript",
    "video"
  ]);
}
function li(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || isElement(next, "li");
}
function dt(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return next && isElement(next, ["dt", "dd"]);
}
function dd(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || isElement(next, ["dt", "dd"]);
}
function rubyElement(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || isElement(next, ["rp", "rt"]);
}
function optgroup(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || isElement(next, "optgroup");
}
function option(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || isElement(next, ["option", "optgroup"]);
}
function menuitem(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || isElement(next, ["menuitem", "hr", "menu"]);
}
function thead(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return next && isElement(next, ["tbody", "tfoot"]);
}
function tbody(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || isElement(next, ["tbody", "tfoot"]);
}
function tfoot(_, index2, parent) {
  return !siblingAfter(parent, index2);
}
function tr(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || isElement(next, "tr");
}
function cells(_, index2, parent) {
  const next = siblingAfter(parent, index2);
  return !next || isElement(next, ["td", "th"]);
}
var closing;
var init_closing = __esm({
  "node_modules/hast-util-to-html/lib/omission/closing.js"() {
    init_hast_util_is_element();
    init_comment();
    init_siblings();
    init_whitespace_start();
    init_omission();
    closing = omission({
      html: html3,
      head: headOrColgroupOrCaption,
      body,
      p: p2,
      li,
      dt,
      dd,
      rt: rubyElement,
      rp: rubyElement,
      optgroup,
      option,
      menuitem,
      colgroup: headOrColgroupOrCaption,
      caption: headOrColgroupOrCaption,
      thead,
      tbody,
      tfoot,
      tr,
      td: cells,
      th: cells
    });
  }
});

// node_modules/hast-util-to-html/lib/omission/opening.js
function html4(node) {
  const head2 = siblingAfter(node, -1);
  return !head2 || !comment(head2);
}
function head(node) {
  const children2 = node.children;
  const seen = [];
  let index2 = -1;
  let child;
  while (++index2 < children2.length) {
    child = children2[index2];
    if (isElement(child, ["title", "base"])) {
      if (seen.includes(child.tagName))
        return false;
      seen.push(child.tagName);
    }
  }
  return children2.length > 0;
}
function body2(node) {
  const head2 = siblingAfter(node, -1, true);
  return !head2 || !comment(head2) && !whitespaceStart(head2) && !isElement(head2, ["meta", "link", "script", "style", "template"]);
}
function colgroup(node, index2, parent) {
  const previous2 = siblingBefore(parent, index2);
  const head2 = siblingAfter(node, -1, true);
  if (isElement(previous2, "colgroup") && closing(previous2, parent.children.indexOf(previous2), parent)) {
    return false;
  }
  return head2 && isElement(head2, "col");
}
function tbody2(node, index2, parent) {
  const previous2 = siblingBefore(parent, index2);
  const head2 = siblingAfter(node, -1);
  if (isElement(previous2, ["thead", "tbody"]) && closing(previous2, parent.children.indexOf(previous2), parent)) {
    return false;
  }
  return head2 && isElement(head2, "tr");
}
var opening;
var init_opening = __esm({
  "node_modules/hast-util-to-html/lib/omission/opening.js"() {
    init_hast_util_is_element();
    init_comment();
    init_siblings();
    init_whitespace_start();
    init_closing();
    init_omission();
    opening = omission({
      html: html4,
      head,
      body: body2,
      colgroup,
      tbody: tbody2
    });
  }
});

// node_modules/hast-util-to-html/lib/omission/index.js
var omission2;
var init_omission2 = __esm({
  "node_modules/hast-util-to-html/lib/omission/index.js"() {
    init_opening();
    init_closing();
    omission2 = { opening, closing };
  }
});

// node_modules/space-separated-tokens/index.js
function parse(value) {
  const input2 = String(value || "").trim();
  return input2 ? input2.split(/[ \t\n\r\f]+/g) : [];
}
function stringify(values) {
  return values.join(" ").trim();
}
var init_space_separated_tokens = __esm({
  "node_modules/space-separated-tokens/index.js"() {
  }
});

// node_modules/comma-separated-tokens/index.js
function parse2(value) {
  var tokens = [];
  var input2 = String(value || "");
  var index2 = input2.indexOf(",");
  var start3 = 0;
  var end;
  var token;
  while (!end) {
    if (index2 === -1) {
      index2 = input2.length;
      end = true;
    }
    token = input2.slice(start3, index2).trim();
    if (token || !end) {
      tokens.push(token);
    }
    start3 = index2 + 1;
    index2 = input2.indexOf(",", start3);
  }
  return tokens;
}
function stringify2(values, options) {
  var settings = options || {};
  if (values[values.length - 1] === "") {
    values = values.concat("");
  }
  return values.join((settings.padRight ? " " : "") + "," + (settings.padLeft === false ? "" : " ")).trim();
}
var init_comma_separated_tokens = __esm({
  "node_modules/comma-separated-tokens/index.js"() {
  }
});

// node_modules/stringify-entities/lib/core.js
function core(value, options) {
  value = value.replace(options.subset ? charactersToExpression(options.subset) : /["&'<>`]/g, basic);
  if (options.subset || options.escapeOnly) {
    return value;
  }
  return value.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, surrogate).replace(/[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g, basic);
  function surrogate(pair, index2, all5) {
    return options.format((pair.charCodeAt(0) - 55296) * 1024 + pair.charCodeAt(1) - 56320 + 65536, all5.charCodeAt(index2 + 2), options);
  }
  function basic(character, index2, all5) {
    return options.format(character.charCodeAt(0), all5.charCodeAt(index2 + 1), options);
  }
}
function charactersToExpression(subset) {
  const groups = [];
  let index2 = -1;
  while (++index2 < subset.length) {
    groups.push(subset[index2].replace(/[|\\{}()[\]^$+*?.]/g, "\\$&"));
  }
  return new RegExp("(?:" + groups.join("|") + ")", "g");
}
var init_core3 = __esm({
  "node_modules/stringify-entities/lib/core.js"() {
  }
});

// node_modules/stringify-entities/lib/util/to-hexadecimal.js
function toHexadecimal(code2, next, omit) {
  const value = "&#x" + code2.toString(16).toUpperCase();
  return omit && next && !/[\dA-Fa-f]/.test(String.fromCharCode(next)) ? value : value + ";";
}
var init_to_hexadecimal = __esm({
  "node_modules/stringify-entities/lib/util/to-hexadecimal.js"() {
  }
});

// node_modules/stringify-entities/lib/util/to-decimal.js
function toDecimal(code2, next, omit) {
  const value = "&#" + String(code2);
  return omit && next && !/\d/.test(String.fromCharCode(next)) ? value : value + ";";
}
var init_to_decimal = __esm({
  "node_modules/stringify-entities/lib/util/to-decimal.js"() {
  }
});

// node_modules/character-entities-legacy/index.js
var characterEntitiesLegacy;
var init_character_entities_legacy = __esm({
  "node_modules/character-entities-legacy/index.js"() {
    characterEntitiesLegacy = [
      "AElig",
      "AMP",
      "Aacute",
      "Acirc",
      "Agrave",
      "Aring",
      "Atilde",
      "Auml",
      "COPY",
      "Ccedil",
      "ETH",
      "Eacute",
      "Ecirc",
      "Egrave",
      "Euml",
      "GT",
      "Iacute",
      "Icirc",
      "Igrave",
      "Iuml",
      "LT",
      "Ntilde",
      "Oacute",
      "Ocirc",
      "Ograve",
      "Oslash",
      "Otilde",
      "Ouml",
      "QUOT",
      "REG",
      "THORN",
      "Uacute",
      "Ucirc",
      "Ugrave",
      "Uuml",
      "Yacute",
      "aacute",
      "acirc",
      "acute",
      "aelig",
      "agrave",
      "amp",
      "aring",
      "atilde",
      "auml",
      "brvbar",
      "ccedil",
      "cedil",
      "cent",
      "copy",
      "curren",
      "deg",
      "divide",
      "eacute",
      "ecirc",
      "egrave",
      "eth",
      "euml",
      "frac12",
      "frac14",
      "frac34",
      "gt",
      "iacute",
      "icirc",
      "iexcl",
      "igrave",
      "iquest",
      "iuml",
      "laquo",
      "lt",
      "macr",
      "micro",
      "middot",
      "nbsp",
      "not",
      "ntilde",
      "oacute",
      "ocirc",
      "ograve",
      "ordf",
      "ordm",
      "oslash",
      "otilde",
      "ouml",
      "para",
      "plusmn",
      "pound",
      "quot",
      "raquo",
      "reg",
      "sect",
      "shy",
      "sup1",
      "sup2",
      "sup3",
      "szlig",
      "thorn",
      "times",
      "uacute",
      "ucirc",
      "ugrave",
      "uml",
      "uuml",
      "yacute",
      "yen",
      "yuml"
    ];
  }
});

// node_modules/character-entities-html4/index.js
var characterEntitiesHtml4;
var init_character_entities_html4 = __esm({
  "node_modules/character-entities-html4/index.js"() {
    characterEntitiesHtml4 = {
      nbsp: "\xA0",
      iexcl: "\xA1",
      cent: "\xA2",
      pound: "\xA3",
      curren: "\xA4",
      yen: "\xA5",
      brvbar: "\xA6",
      sect: "\xA7",
      uml: "\xA8",
      copy: "\xA9",
      ordf: "\xAA",
      laquo: "\xAB",
      not: "\xAC",
      shy: "\xAD",
      reg: "\xAE",
      macr: "\xAF",
      deg: "\xB0",
      plusmn: "\xB1",
      sup2: "\xB2",
      sup3: "\xB3",
      acute: "\xB4",
      micro: "\xB5",
      para: "\xB6",
      middot: "\xB7",
      cedil: "\xB8",
      sup1: "\xB9",
      ordm: "\xBA",
      raquo: "\xBB",
      frac14: "\xBC",
      frac12: "\xBD",
      frac34: "\xBE",
      iquest: "\xBF",
      Agrave: "\xC0",
      Aacute: "\xC1",
      Acirc: "\xC2",
      Atilde: "\xC3",
      Auml: "\xC4",
      Aring: "\xC5",
      AElig: "\xC6",
      Ccedil: "\xC7",
      Egrave: "\xC8",
      Eacute: "\xC9",
      Ecirc: "\xCA",
      Euml: "\xCB",
      Igrave: "\xCC",
      Iacute: "\xCD",
      Icirc: "\xCE",
      Iuml: "\xCF",
      ETH: "\xD0",
      Ntilde: "\xD1",
      Ograve: "\xD2",
      Oacute: "\xD3",
      Ocirc: "\xD4",
      Otilde: "\xD5",
      Ouml: "\xD6",
      times: "\xD7",
      Oslash: "\xD8",
      Ugrave: "\xD9",
      Uacute: "\xDA",
      Ucirc: "\xDB",
      Uuml: "\xDC",
      Yacute: "\xDD",
      THORN: "\xDE",
      szlig: "\xDF",
      agrave: "\xE0",
      aacute: "\xE1",
      acirc: "\xE2",
      atilde: "\xE3",
      auml: "\xE4",
      aring: "\xE5",
      aelig: "\xE6",
      ccedil: "\xE7",
      egrave: "\xE8",
      eacute: "\xE9",
      ecirc: "\xEA",
      euml: "\xEB",
      igrave: "\xEC",
      iacute: "\xED",
      icirc: "\xEE",
      iuml: "\xEF",
      eth: "\xF0",
      ntilde: "\xF1",
      ograve: "\xF2",
      oacute: "\xF3",
      ocirc: "\xF4",
      otilde: "\xF5",
      ouml: "\xF6",
      divide: "\xF7",
      oslash: "\xF8",
      ugrave: "\xF9",
      uacute: "\xFA",
      ucirc: "\xFB",
      uuml: "\xFC",
      yacute: "\xFD",
      thorn: "\xFE",
      yuml: "\xFF",
      fnof: "\u0192",
      Alpha: "\u0391",
      Beta: "\u0392",
      Gamma: "\u0393",
      Delta: "\u0394",
      Epsilon: "\u0395",
      Zeta: "\u0396",
      Eta: "\u0397",
      Theta: "\u0398",
      Iota: "\u0399",
      Kappa: "\u039A",
      Lambda: "\u039B",
      Mu: "\u039C",
      Nu: "\u039D",
      Xi: "\u039E",
      Omicron: "\u039F",
      Pi: "\u03A0",
      Rho: "\u03A1",
      Sigma: "\u03A3",
      Tau: "\u03A4",
      Upsilon: "\u03A5",
      Phi: "\u03A6",
      Chi: "\u03A7",
      Psi: "\u03A8",
      Omega: "\u03A9",
      alpha: "\u03B1",
      beta: "\u03B2",
      gamma: "\u03B3",
      delta: "\u03B4",
      epsilon: "\u03B5",
      zeta: "\u03B6",
      eta: "\u03B7",
      theta: "\u03B8",
      iota: "\u03B9",
      kappa: "\u03BA",
      lambda: "\u03BB",
      mu: "\u03BC",
      nu: "\u03BD",
      xi: "\u03BE",
      omicron: "\u03BF",
      pi: "\u03C0",
      rho: "\u03C1",
      sigmaf: "\u03C2",
      sigma: "\u03C3",
      tau: "\u03C4",
      upsilon: "\u03C5",
      phi: "\u03C6",
      chi: "\u03C7",
      psi: "\u03C8",
      omega: "\u03C9",
      thetasym: "\u03D1",
      upsih: "\u03D2",
      piv: "\u03D6",
      bull: "\u2022",
      hellip: "\u2026",
      prime: "\u2032",
      Prime: "\u2033",
      oline: "\u203E",
      frasl: "\u2044",
      weierp: "\u2118",
      image: "\u2111",
      real: "\u211C",
      trade: "\u2122",
      alefsym: "\u2135",
      larr: "\u2190",
      uarr: "\u2191",
      rarr: "\u2192",
      darr: "\u2193",
      harr: "\u2194",
      crarr: "\u21B5",
      lArr: "\u21D0",
      uArr: "\u21D1",
      rArr: "\u21D2",
      dArr: "\u21D3",
      hArr: "\u21D4",
      forall: "\u2200",
      part: "\u2202",
      exist: "\u2203",
      empty: "\u2205",
      nabla: "\u2207",
      isin: "\u2208",
      notin: "\u2209",
      ni: "\u220B",
      prod: "\u220F",
      sum: "\u2211",
      minus: "\u2212",
      lowast: "\u2217",
      radic: "\u221A",
      prop: "\u221D",
      infin: "\u221E",
      ang: "\u2220",
      and: "\u2227",
      or: "\u2228",
      cap: "\u2229",
      cup: "\u222A",
      int: "\u222B",
      there4: "\u2234",
      sim: "\u223C",
      cong: "\u2245",
      asymp: "\u2248",
      ne: "\u2260",
      equiv: "\u2261",
      le: "\u2264",
      ge: "\u2265",
      sub: "\u2282",
      sup: "\u2283",
      nsub: "\u2284",
      sube: "\u2286",
      supe: "\u2287",
      oplus: "\u2295",
      otimes: "\u2297",
      perp: "\u22A5",
      sdot: "\u22C5",
      lceil: "\u2308",
      rceil: "\u2309",
      lfloor: "\u230A",
      rfloor: "\u230B",
      lang: "\u2329",
      rang: "\u232A",
      loz: "\u25CA",
      spades: "\u2660",
      clubs: "\u2663",
      hearts: "\u2665",
      diams: "\u2666",
      quot: '"',
      amp: "&",
      lt: "<",
      gt: ">",
      OElig: "\u0152",
      oelig: "\u0153",
      Scaron: "\u0160",
      scaron: "\u0161",
      Yuml: "\u0178",
      circ: "\u02C6",
      tilde: "\u02DC",
      ensp: "\u2002",
      emsp: "\u2003",
      thinsp: "\u2009",
      zwnj: "\u200C",
      zwj: "\u200D",
      lrm: "\u200E",
      rlm: "\u200F",
      ndash: "\u2013",
      mdash: "\u2014",
      lsquo: "\u2018",
      rsquo: "\u2019",
      sbquo: "\u201A",
      ldquo: "\u201C",
      rdquo: "\u201D",
      bdquo: "\u201E",
      dagger: "\u2020",
      Dagger: "\u2021",
      permil: "\u2030",
      lsaquo: "\u2039",
      rsaquo: "\u203A",
      euro: "\u20AC"
    };
  }
});

// node_modules/stringify-entities/lib/constant/dangerous.js
var dangerous;
var init_dangerous = __esm({
  "node_modules/stringify-entities/lib/constant/dangerous.js"() {
    dangerous = [
      "cent",
      "copy",
      "divide",
      "gt",
      "lt",
      "not",
      "para",
      "times"
    ];
  }
});

// node_modules/stringify-entities/lib/util/to-named.js
function toNamed(code2, next, omit, attribute) {
  const character = String.fromCharCode(code2);
  if (own3.call(characters, character)) {
    const name = characters[character];
    const value = "&" + name;
    if (omit && characterEntitiesLegacy.includes(name) && !dangerous.includes(name) && (!attribute || next && next !== 61 && /[^\da-z]/i.test(String.fromCharCode(next)))) {
      return value;
    }
    return value + ";";
  }
  return "";
}
var own3, characters, key;
var init_to_named = __esm({
  "node_modules/stringify-entities/lib/util/to-named.js"() {
    init_character_entities_legacy();
    init_character_entities_html4();
    init_dangerous();
    own3 = {}.hasOwnProperty;
    characters = {};
    for (key in characterEntitiesHtml4) {
      if (own3.call(characterEntitiesHtml4, key)) {
        characters[characterEntitiesHtml4[key]] = key;
      }
    }
  }
});

// node_modules/stringify-entities/lib/util/format-smart.js
function formatSmart(code2, next, options) {
  let numeric = toHexadecimal(code2, next, options.omitOptionalSemicolons);
  let named;
  if (options.useNamedReferences || options.useShortestReferences) {
    named = toNamed(code2, next, options.omitOptionalSemicolons, options.attribute);
  }
  if ((options.useShortestReferences || !named) && options.useShortestReferences) {
    const decimal = toDecimal(code2, next, options.omitOptionalSemicolons);
    if (decimal.length < numeric.length) {
      numeric = decimal;
    }
  }
  return named && (!options.useShortestReferences || named.length < numeric.length) ? named : numeric;
}
var init_format_smart = __esm({
  "node_modules/stringify-entities/lib/util/format-smart.js"() {
    init_to_hexadecimal();
    init_to_decimal();
    init_to_named();
  }
});

// node_modules/stringify-entities/lib/util/format-basic.js
function formatBasic(code2) {
  return "&#x" + code2.toString(16).toUpperCase() + ";";
}
var init_format_basic = __esm({
  "node_modules/stringify-entities/lib/util/format-basic.js"() {
  }
});

// node_modules/stringify-entities/lib/index.js
function stringifyEntities(value, options) {
  return core(value, Object.assign({ format: formatSmart }, options));
}
function stringifyEntitiesLight(value, options) {
  return core(value, Object.assign({ format: formatBasic }, options));
}
var init_lib = __esm({
  "node_modules/stringify-entities/lib/index.js"() {
    init_core3();
    init_format_smart();
    init_format_basic();
  }
});

// node_modules/stringify-entities/index.js
var init_stringify_entities = __esm({
  "node_modules/stringify-entities/index.js"() {
    init_lib();
  }
});

// node_modules/ccount/index.js
function ccount(value, character) {
  const source = String(value);
  if (typeof character !== "string") {
    throw new TypeError("Expected character");
  }
  let count = 0;
  let index2 = source.indexOf(character);
  while (index2 !== -1) {
    count++;
    index2 = source.indexOf(character, index2 + character.length);
  }
  return count;
}
var init_ccount = __esm({
  "node_modules/ccount/index.js"() {
  }
});

// node_modules/hast-util-to-html/lib/constants.js
var constants;
var init_constants = __esm({
  "node_modules/hast-util-to-html/lib/constants.js"() {
    constants = {
      name: [
        ["	\n\f\r &/=>".split(""), "	\n\f\r \"&'/=>`".split("")],
        [`\0	
\f\r "&'/<=>`.split(""), "\0	\n\f\r \"&'/<=>`".split("")]
      ],
      unquoted: [
        ["	\n\f\r &>".split(""), "\0	\n\f\r \"&'<=>`".split("")],
        ["\0	\n\f\r \"&'<=>`".split(""), "\0	\n\f\r \"&'<=>`".split("")]
      ],
      single: [
        ["&'".split(""), "\"&'`".split("")],
        ["\0&'".split(""), "\0\"&'`".split("")]
      ],
      double: [
        ['"&'.split(""), "\"&'`".split("")],
        ['\0"&'.split(""), "\0\"&'`".split("")]
      ]
    };
  }
});

// node_modules/hast-util-to-html/lib/comment.js
function comment2(ctx, node) {
  return ctx.bogusComments ? "<?" + stringifyEntities(node.value, Object.assign({}, ctx.entities, { subset: [">"] })) + ">" : "<!--" + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode2) + "-->";
  function encode2($0) {
    return stringifyEntities($0, Object.assign({}, ctx.entities, { subset: ["<", ">"] }));
  }
}
var init_comment2 = __esm({
  "node_modules/hast-util-to-html/lib/comment.js"() {
    init_stringify_entities();
  }
});

// node_modules/hast-util-to-html/lib/doctype.js
function doctype(ctx) {
  return "<!" + (ctx.upperDoctype ? "DOCTYPE" : "doctype") + (ctx.tightDoctype ? "" : " ") + "html>";
}
var init_doctype = __esm({
  "node_modules/hast-util-to-html/lib/doctype.js"() {
  }
});

// node_modules/hast-util-to-html/lib/text.js
function text(ctx, node, _, parent) {
  return parent && parent.type === "element" && (parent.tagName === "script" || parent.tagName === "style") ? node.value : stringifyEntities(node.value, Object.assign({}, ctx.entities, { subset: ["<", "&"] }));
}
var init_text = __esm({
  "node_modules/hast-util-to-html/lib/text.js"() {
    init_stringify_entities();
  }
});

// node_modules/hast-util-to-html/lib/raw.js
function raw(ctx, node, index2, parent) {
  return ctx.dangerous ? node.value : text(ctx, node, index2, parent);
}
var init_raw = __esm({
  "node_modules/hast-util-to-html/lib/raw.js"() {
    init_text();
  }
});

// node_modules/hast-util-to-html/lib/tree.js
function one(ctx, node, index2, parent) {
  if (!node || !node.type) {
    throw new Error("Expected node, not `" + node + "`");
  }
  if (!own4.call(handlers, node.type)) {
    throw new Error("Cannot compile unknown node `" + node.type + "`");
  }
  return handlers[node.type](ctx, node, index2, parent);
}
function all(ctx, parent) {
  const results2 = [];
  const children2 = parent && parent.children || [];
  let index2 = -1;
  while (++index2 < children2.length) {
    results2[index2] = one(ctx, children2[index2], index2, parent);
  }
  return results2.join("");
}
function element2(ctx, node, index2, parent) {
  const schema = ctx.schema;
  const omit = schema.space === "svg" ? void 0 : ctx.omit;
  let selfClosing = schema.space === "svg" ? ctx.closeEmpty : ctx.voids.includes(node.tagName.toLowerCase());
  const parts = [];
  let last;
  if (schema.space === "html" && node.tagName === "svg") {
    ctx.schema = svg2;
  }
  const attrs = serializeAttributes(ctx, node.properties);
  const content3 = all(ctx, schema.space === "html" && node.tagName === "template" ? node.content : node);
  ctx.schema = schema;
  if (content3)
    selfClosing = false;
  if (attrs || !omit || !omit.opening(node, index2, parent)) {
    parts.push("<", node.tagName, attrs ? " " + attrs : "");
    if (selfClosing && (schema.space === "svg" || ctx.close)) {
      last = attrs.charAt(attrs.length - 1);
      if (!ctx.tightClose || last === "/" || last && last !== '"' && last !== "'") {
        parts.push(" ");
      }
      parts.push("/");
    }
    parts.push(">");
  }
  parts.push(content3);
  if (!selfClosing && (!omit || !omit.closing(node, index2, parent))) {
    parts.push("</" + node.tagName + ">");
  }
  return parts.join("");
}
function serializeAttributes(ctx, props) {
  const values = [];
  let index2 = -1;
  let key2;
  let value;
  let last;
  for (key2 in props) {
    if (props[key2] !== void 0 && props[key2] !== null) {
      value = serializeAttribute(ctx, key2, props[key2]);
      if (value)
        values.push(value);
    }
  }
  while (++index2 < values.length) {
    last = ctx.tight ? values[index2].charAt(values[index2].length - 1) : null;
    if (index2 !== values.length - 1 && last !== '"' && last !== "'") {
      values[index2] += " ";
    }
  }
  return values.join("");
}
function serializeAttribute(ctx, key2, value) {
  const info = find(ctx.schema, key2);
  let quote = ctx.quote;
  let result;
  if (info.overloadedBoolean && (value === info.attribute || value === "")) {
    value = true;
  } else if (info.boolean || info.overloadedBoolean && typeof value !== "string") {
    value = Boolean(value);
  }
  if (value === void 0 || value === null || value === false || typeof value === "number" && Number.isNaN(value)) {
    return "";
  }
  const name = stringifyEntities(info.attribute, Object.assign({}, ctx.entities, {
    subset: constants.name[ctx.schema.space === "html" ? ctx.valid : 1][ctx.safe]
  }));
  if (value === true)
    return name;
  value = typeof value === "object" && "length" in value ? (info.commaSeparated ? stringify2 : stringify)(value, {
    padLeft: !ctx.tightLists
  }) : String(value);
  if (ctx.collapseEmpty && !value)
    return name;
  if (ctx.unquoted) {
    result = stringifyEntities(value, Object.assign({}, ctx.entities, {
      subset: constants.unquoted[ctx.valid][ctx.safe],
      attribute: true
    }));
  }
  if (result !== value) {
    if (ctx.smart && ccount(value, quote) > ccount(value, ctx.alternative)) {
      quote = ctx.alternative;
    }
    result = quote + stringifyEntities(value, Object.assign({}, ctx.entities, {
      subset: (quote === "'" ? constants.single : constants.double)[ctx.schema.space === "html" ? ctx.valid : 1][ctx.safe],
      attribute: true
    })) + quote;
  }
  return name + (result ? "=" + result : result);
}
var handlers, own4;
var init_tree = __esm({
  "node_modules/hast-util-to-html/lib/tree.js"() {
    init_property_information();
    init_space_separated_tokens();
    init_comma_separated_tokens();
    init_stringify_entities();
    init_ccount();
    init_constants();
    init_comment2();
    init_doctype();
    init_raw();
    init_text();
    handlers = {
      comment: comment2,
      doctype,
      element: element2,
      raw,
      root: all,
      text
    };
    own4 = {}.hasOwnProperty;
  }
});

// node_modules/hast-util-to-html/lib/index.js
function toHtml(node, options = {}) {
  const quote = options.quote || '"';
  const alternative = quote === '"' ? "'" : '"';
  if (quote !== '"' && quote !== "'") {
    throw new Error("Invalid quote `" + quote + "`, expected `'` or `\"`");
  }
  const context = {
    valid: options.allowParseErrors ? 0 : 1,
    safe: options.allowDangerousCharacters ? 0 : 1,
    schema: options.space === "svg" ? svg2 : html2,
    omit: options.omitOptionalTags ? omission2 : void 0,
    quote,
    alternative,
    smart: options.quoteSmart,
    unquoted: options.preferUnquoted,
    tight: options.tightAttributes,
    upperDoctype: options.upperDoctype,
    tightDoctype: options.tightDoctype,
    bogusComments: options.bogusComments,
    tightLists: options.tightCommaSeparatedLists,
    tightClose: options.tightSelfClosing,
    collapseEmpty: options.collapseEmptyAttributes,
    dangerous: options.allowDangerousHtml,
    voids: options.voids || htmlVoidElements.concat(),
    entities: options.entities || {},
    close: options.closeSelfClosing,
    closeEmpty: options.closeEmptyElements
  };
  return one(context, Array.isArray(node) ? { type: "root", children: node } : node, null, null);
}
var init_lib2 = __esm({
  "node_modules/hast-util-to-html/lib/index.js"() {
    init_property_information();
    init_html_void_elements();
    init_omission2();
    init_tree();
  }
});

// node_modules/hast-util-to-html/index.js
var init_hast_util_to_html = __esm({
  "node_modules/hast-util-to-html/index.js"() {
    init_lib2();
  }
});

// node_modules/unist-util-visit-parents/color.js
function color(d2) {
  return "\x1B[33m" + d2 + "\x1B[39m";
}
var init_color = __esm({
  "node_modules/unist-util-visit-parents/color.js"() {
  }
});

// node_modules/unist-util-visit-parents/index.js
function toResult(value) {
  if (Array.isArray(value)) {
    return value;
  }
  if (typeof value === "number") {
    return [CONTINUE, value];
  }
  return [value];
}
var CONTINUE, SKIP, EXIT, visitParents;
var init_unist_util_visit_parents = __esm({
  "node_modules/unist-util-visit-parents/index.js"() {
    init_unist_util_is();
    init_color();
    CONTINUE = true;
    SKIP = "skip";
    EXIT = false;
    visitParents = function(tree, test, visitor, reverse) {
      if (typeof test === "function" && typeof visitor !== "function") {
        reverse = visitor;
        visitor = test;
        test = null;
      }
      const is = convert(test);
      const step = reverse ? -1 : 1;
      factory2(tree, null, [])();
      function factory2(node, index2, parents) {
        const value = typeof node === "object" && node !== null ? node : {};
        let name;
        if (typeof value.type === "string") {
          name = typeof value.tagName === "string" ? value.tagName : typeof value.name === "string" ? value.name : void 0;
          Object.defineProperty(visit6, "name", {
            value: "node (" + color(value.type + (name ? "<" + name + ">" : "")) + ")"
          });
        }
        return visit6;
        function visit6() {
          let result = [];
          let subresult;
          let offset2;
          let grandparents;
          if (!test || is(node, index2, parents[parents.length - 1] || null)) {
            result = toResult(visitor(node, parents));
            if (result[0] === EXIT) {
              return result;
            }
          }
          if (node.children && result[0] !== SKIP) {
            offset2 = (reverse ? node.children.length : -1) + step;
            grandparents = parents.concat(node);
            while (offset2 > -1 && offset2 < node.children.length) {
              subresult = factory2(node.children[offset2], offset2, grandparents)();
              if (subresult[0] === EXIT) {
                return subresult;
              }
              offset2 = typeof subresult[1] === "number" ? subresult[1] : offset2 + step;
            }
          }
          return result;
        }
      }
    };
  }
});

// node_modules/unist-util-visit/index.js
var visit;
var init_unist_util_visit = __esm({
  "node_modules/unist-util-visit/index.js"() {
    init_unist_util_visit_parents();
    visit = function(tree, test, visitor, reverse) {
      if (typeof test === "function" && typeof visitor !== "function") {
        reverse = visitor;
        visitor = test;
        test = null;
      }
      visitParents(tree, test, overload, reverse);
      function overload(node, parents) {
        const parent = parents[parents.length - 1];
        return visitor(node, parent ? parent.children.indexOf(node) : null, parent);
      }
    };
  }
});

// node_modules/@astrojs/markdown-remark/dist/rehype-collect-headers.js
function createCollectHeaders() {
  const headers = [];
  const slugger2 = new import_github_slugger.default();
  function rehypeCollectHeaders() {
    return function(tree) {
      visit(tree, (node) => {
        if (node.type !== "element")
          return;
        const { tagName } = node;
        if (tagName[0] !== "h")
          return;
        const [_, level] = tagName.match(/h([0-6])/) ?? [];
        if (!level)
          return;
        const depth = Number.parseInt(level);
        let text8 = "";
        let isJSX = false;
        visit(node, (child, _2, parent) => {
          if (child.type === "element" || parent == null) {
            return;
          }
          if (child.type === "raw") {
            if (child.value.startsWith("\n<") || child.value.endsWith(">\n")) {
              return;
            }
          }
          if (child.type === "text" || child.type === "raw") {
            if ((/* @__PURE__ */ new Set(["code", "pre"])).has(parent.tagName)) {
              text8 += child.value;
            } else {
              text8 += child.value.replace(/\{/g, "${");
              isJSX = isJSX || child.value.includes("{");
            }
          }
        });
        node.properties = node.properties || {};
        if (typeof node.properties.id !== "string") {
          if (isJSX) {
            const raw3 = toHtml(node.children, { allowDangerousHtml: true }).replace(/\n(<)/g, "<").replace(/(>)\n/g, ">");
            node.properties.id = `$$slug(\`${text8}\`)`;
            node.type = "raw";
            node.value = `<${node.tagName} id={${node.properties.id}}>${raw3}</${node.tagName}>`;
          } else {
            node.properties.id = slugger2.slug(text8);
          }
        }
        headers.push({ depth, slug: node.properties.id, text: text8 });
      });
    };
  }
  return {
    headers,
    rehypeCollectHeaders
  };
}
var import_github_slugger;
var init_rehype_collect_headers = __esm({
  "node_modules/@astrojs/markdown-remark/dist/rehype-collect-headers.js"() {
    import_github_slugger = __toESM(require_github_slugger(), 1);
    init_hast_util_to_html();
    init_unist_util_visit();
  }
});

// node_modules/@astrojs/markdown-remark/dist/rehype-escape.js
function rehypeEscape() {
  return function(node) {
    return visit(node, "element", (el) => {
      if (el.tagName === "code" || el.tagName === "pre") {
        el.properties["is:raw"] = true;
        visit(el, "raw", (raw3) => {
          raw3.value = raw3.value.replace(/</g, "&lt;").replace(/>/g, "&gt;");
        });
      }
      return el;
    });
  };
}
var init_rehype_escape = __esm({
  "node_modules/@astrojs/markdown-remark/dist/rehype-escape.js"() {
    init_unist_util_visit();
  }
});

// node_modules/unist-util-map/index.js
function map(tree, iteratee) {
  return preorder(tree, null, null);
  function preorder(node, index2, parent) {
    var newNode = Object.assign({}, iteratee(node, index2, parent));
    if ("children" in node) {
      newNode.children = node.children.map(function(child, index3) {
        return preorder(child, index3, node);
      });
    }
    return newNode;
  }
}
var init_unist_util_map = __esm({
  "node_modules/unist-util-map/index.js"() {
  }
});

// node_modules/@astrojs/markdown-remark/dist/rehype-expressions.js
function rehypeExpressions() {
  return function(node) {
    return map(node, (child) => {
      if (child.type === "text") {
        return __spreadProps4(__spreadValues6({}, child), { type: "raw" });
      }
      if (child.type === "mdxTextExpression") {
        return { type: "raw", value: `{${child.value}}` };
      }
      if (child.type === "mdxFlowExpression") {
        return { type: "raw", value: `{${child.value}}` };
      }
      return child;
    });
  };
}
var __defProp6, __defProps4, __getOwnPropDescs4, __getOwnPropSymbols7, __hasOwnProp7, __propIsEnum7, __defNormalProp6, __spreadValues6, __spreadProps4;
var init_rehype_expressions = __esm({
  "node_modules/@astrojs/markdown-remark/dist/rehype-expressions.js"() {
    init_unist_util_map();
    __defProp6 = Object.defineProperty;
    __defProps4 = Object.defineProperties;
    __getOwnPropDescs4 = Object.getOwnPropertyDescriptors;
    __getOwnPropSymbols7 = Object.getOwnPropertySymbols;
    __hasOwnProp7 = Object.prototype.hasOwnProperty;
    __propIsEnum7 = Object.prototype.propertyIsEnumerable;
    __defNormalProp6 = (obj, key2, value) => key2 in obj ? __defProp6(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
    __spreadValues6 = (a2, b2) => {
      for (var prop in b2 || (b2 = {}))
        if (__hasOwnProp7.call(b2, prop))
          __defNormalProp6(a2, prop, b2[prop]);
      if (__getOwnPropSymbols7)
        for (var prop of __getOwnPropSymbols7(b2)) {
          if (__propIsEnum7.call(b2, prop))
            __defNormalProp6(a2, prop, b2[prop]);
        }
      return a2;
    };
    __spreadProps4 = (a2, b2) => __defProps4(a2, __getOwnPropDescs4(b2));
  }
});

// node_modules/@astrojs/markdown-remark/dist/rehype-islands.js
function rehypeIslands() {
  return function(node) {
    return visit2(node, "element", (el) => {
      if (el.tagName == "astro-root") {
        visit2(el, "text", (child, index2, parent) => {
          if (child.type === "text") {
            if (parent && child.value.indexOf("<!--") > -1 && index2 != null) {
              parent.children.splice(index2, 1, __spreadProps5(__spreadValues7({}, child), {
                type: "comment",
                value: child.value.replace("<!--", "").replace("-->", "").trim()
              }));
              return [SKIP, index2];
            }
            child.value = child.value.replace(/\n+/g, "");
            return child;
          }
        });
      }
    });
  };
}
var __defProp7, __defProps5, __getOwnPropDescs5, __getOwnPropSymbols8, __hasOwnProp8, __propIsEnum8, __defNormalProp7, __spreadValues7, __spreadProps5, visit2;
var init_rehype_islands = __esm({
  "node_modules/@astrojs/markdown-remark/dist/rehype-islands.js"() {
    init_unist_util_visit();
    __defProp7 = Object.defineProperty;
    __defProps5 = Object.defineProperties;
    __getOwnPropDescs5 = Object.getOwnPropertyDescriptors;
    __getOwnPropSymbols8 = Object.getOwnPropertySymbols;
    __hasOwnProp8 = Object.prototype.hasOwnProperty;
    __propIsEnum8 = Object.prototype.propertyIsEnumerable;
    __defNormalProp7 = (obj, key2, value) => key2 in obj ? __defProp7(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
    __spreadValues7 = (a2, b2) => {
      for (var prop in b2 || (b2 = {}))
        if (__hasOwnProp8.call(b2, prop))
          __defNormalProp7(a2, prop, b2[prop]);
      if (__getOwnPropSymbols8)
        for (var prop of __getOwnPropSymbols8(b2)) {
          if (__propIsEnum8.call(b2, prop))
            __defNormalProp7(a2, prop, b2[prop]);
        }
      return a2;
    };
    __spreadProps5 = (a2, b2) => __defProps5(a2, __getOwnPropDescs5(b2));
    visit2 = visit;
  }
});

// node_modules/@astrojs/markdown-remark/dist/rehype-jsx.js
function rehypeJsx() {
  return function(tree) {
    visit(tree, MDX_ELEMENTS, (node, index2, parent) => {
      if (index2 === null || !Boolean(parent))
        return;
      const attrs = node.attributes.reduce((acc, entry) => {
        let attr = entry.value;
        if (attr && typeof attr === "object") {
          attr = `{${attr.value}}`;
        } else if (attr && entry.type === "mdxJsxExpressionAttribute") {
          attr = `{${attr}}`;
        } else if (attr === null) {
          attr = "";
        } else if (typeof attr === "string") {
          attr = `"${attr}"`;
        }
        if (!entry.name) {
          return acc + ` ${attr}`;
        }
        return acc + ` ${entry.name}${attr ? "=" : ""}${attr}`;
      }, "");
      if (node.children.length === 0) {
        node.type = "raw";
        node.value = `<${node.name}${attrs} />`;
        return;
      }
      if (node.name === "a") {
        visit(node, "element", (el, elIndex, elParent) => {
          const isAutolink = el.tagName === "a" && el.children.length === 1 && el.children[0].type === "text" && el.children[0].value.match(/^(https?:\/\/|www\.)/i);
          if (isAutolink) {
            elParent.children.splice(elIndex, 1, el.children[0]);
          }
        });
      }
      const openingTag = {
        type: "raw",
        value: `
<${node.name}${attrs}>`
      };
      const closingTag = {
        type: "raw",
        value: `</${node.name}>
`
      };
      parent.children.splice(index2, 1, openingTag, ...node.children, closingTag);
    });
  };
}
var MDX_ELEMENTS;
var init_rehype_jsx = __esm({
  "node_modules/@astrojs/markdown-remark/dist/rehype-jsx.js"() {
    init_unist_util_visit();
    MDX_ELEMENTS = ["mdxJsxFlowElement", "mdxJsxTextElement"];
  }
});

// node_modules/@astrojs/markdown-remark/dist/remark-mark-and-unravel.js
function remarkMarkAndUnravel() {
  return (tree) => {
    visit(tree, (node, index2, parent_) => {
      const parent = parent_;
      let offset2 = -1;
      let all5 = true;
      let oneOrMore;
      if (parent && typeof index2 === "number" && node.type === "paragraph") {
        const children2 = node.children;
        while (++offset2 < children2.length) {
          const child = children2[offset2];
          if (child.type === "mdxJsxTextElement" || child.type === "mdxTextExpression") {
            oneOrMore = true;
          } else if (child.type === "text" && /^[\t\r\n ]+$/.test(String(child.value))) {
          } else {
            all5 = false;
            break;
          }
        }
        if (all5 && oneOrMore) {
          offset2 = -1;
          while (++offset2 < children2.length) {
            const child = children2[offset2];
            if (child.type === "mdxJsxTextElement") {
              child.type = "mdxJsxFlowElement";
            }
            if (child.type === "mdxTextExpression") {
              child.type = "mdxFlowExpression";
            }
          }
          parent.children.splice(index2, 1, ...children2);
          return index2;
        }
      }
      if (node.type === "mdxJsxFlowElement" || node.type === "mdxJsxTextElement") {
        const data3 = node.data || (node.data = {});
        data3._mdxExplicitJsx = true;
      }
    });
  };
}
var init_remark_mark_and_unravel = __esm({
  "node_modules/@astrojs/markdown-remark/dist/remark-mark-and-unravel.js"() {
    init_unist_util_visit();
  }
});

// node_modules/mdast-util-mdx-expression/index.js
function enterMdxFlowExpression(token) {
  this.enter({ type: "mdxFlowExpression", value: "" }, token);
  this.buffer();
}
function enterMdxTextExpression(token) {
  this.enter({ type: "mdxTextExpression", value: "" }, token);
  this.buffer();
}
function exitMdxExpression(token) {
  const value = this.resume();
  const estree = token.estree;
  const node = this.exit(token);
  node.value = value;
  if (estree) {
    node.data = { estree };
  }
}
function exitMdxExpressionData(token) {
  this.config.enter.data.call(this, token);
  this.config.exit.data.call(this, token);
}
function handleMdxExpression(node) {
  const value = node.value || "";
  return "{" + value + "}";
}
var mdxExpressionFromMarkdown, mdxExpressionToMarkdown;
var init_mdast_util_mdx_expression = __esm({
  "node_modules/mdast-util-mdx-expression/index.js"() {
    mdxExpressionFromMarkdown = {
      enter: {
        mdxFlowExpression: enterMdxFlowExpression,
        mdxTextExpression: enterMdxTextExpression
      },
      exit: {
        mdxFlowExpression: exitMdxExpression,
        mdxFlowExpressionChunk: exitMdxExpressionData,
        mdxTextExpression: exitMdxExpression,
        mdxTextExpressionChunk: exitMdxExpressionData
      }
    };
    mdxExpressionToMarkdown = {
      handlers: {
        mdxFlowExpression: handleMdxExpression,
        mdxTextExpression: handleMdxExpression
      },
      unsafe: [
        { character: "{", inConstruct: ["phrasing"] },
        { atBreak: true, character: "{" }
      ]
    };
  }
});

// node_modules/character-reference-invalid/index.js
var characterReferenceInvalid;
var init_character_reference_invalid = __esm({
  "node_modules/character-reference-invalid/index.js"() {
    characterReferenceInvalid = {
      0: "\uFFFD",
      128: "\u20AC",
      130: "\u201A",
      131: "\u0192",
      132: "\u201E",
      133: "\u2026",
      134: "\u2020",
      135: "\u2021",
      136: "\u02C6",
      137: "\u2030",
      138: "\u0160",
      139: "\u2039",
      140: "\u0152",
      142: "\u017D",
      145: "\u2018",
      146: "\u2019",
      147: "\u201C",
      148: "\u201D",
      149: "\u2022",
      150: "\u2013",
      151: "\u2014",
      152: "\u02DC",
      153: "\u2122",
      154: "\u0161",
      155: "\u203A",
      156: "\u0153",
      158: "\u017E",
      159: "\u0178"
    };
  }
});

// node_modules/is-decimal/index.js
function isDecimal(character) {
  const code2 = typeof character === "string" ? character.charCodeAt(0) : character;
  return code2 >= 48 && code2 <= 57;
}
var init_is_decimal = __esm({
  "node_modules/is-decimal/index.js"() {
  }
});

// node_modules/is-hexadecimal/index.js
function isHexadecimal(character) {
  const code2 = typeof character === "string" ? character.charCodeAt(0) : character;
  return code2 >= 97 && code2 <= 102 || code2 >= 65 && code2 <= 70 || code2 >= 48 && code2 <= 57;
}
var init_is_hexadecimal = __esm({
  "node_modules/is-hexadecimal/index.js"() {
  }
});

// node_modules/is-alphabetical/index.js
function isAlphabetical(character) {
  const code2 = typeof character === "string" ? character.charCodeAt(0) : character;
  return code2 >= 97 && code2 <= 122 || code2 >= 65 && code2 <= 90;
}
var init_is_alphabetical = __esm({
  "node_modules/is-alphabetical/index.js"() {
  }
});

// node_modules/is-alphanumerical/index.js
function isAlphanumerical(character) {
  return isAlphabetical(character) || isDecimal(character);
}
var init_is_alphanumerical = __esm({
  "node_modules/is-alphanumerical/index.js"() {
    init_is_alphabetical();
    init_is_decimal();
  }
});

// node_modules/character-entities/index.js
var characterEntities;
var init_character_entities = __esm({
  "node_modules/character-entities/index.js"() {
    characterEntities = {
      AEli: "\xC6",
      AElig: "\xC6",
      AM: "&",
      AMP: "&",
      Aacut: "\xC1",
      Aacute: "\xC1",
      Abreve: "\u0102",
      Acir: "\xC2",
      Acirc: "\xC2",
      Acy: "\u0410",
      Afr: "\u{1D504}",
      Agrav: "\xC0",
      Agrave: "\xC0",
      Alpha: "\u0391",
      Amacr: "\u0100",
      And: "\u2A53",
      Aogon: "\u0104",
      Aopf: "\u{1D538}",
      ApplyFunction: "\u2061",
      Arin: "\xC5",
      Aring: "\xC5",
      Ascr: "\u{1D49C}",
      Assign: "\u2254",
      Atild: "\xC3",
      Atilde: "\xC3",
      Aum: "\xC4",
      Auml: "\xC4",
      Backslash: "\u2216",
      Barv: "\u2AE7",
      Barwed: "\u2306",
      Bcy: "\u0411",
      Because: "\u2235",
      Bernoullis: "\u212C",
      Beta: "\u0392",
      Bfr: "\u{1D505}",
      Bopf: "\u{1D539}",
      Breve: "\u02D8",
      Bscr: "\u212C",
      Bumpeq: "\u224E",
      CHcy: "\u0427",
      COP: "\xA9",
      COPY: "\xA9",
      Cacute: "\u0106",
      Cap: "\u22D2",
      CapitalDifferentialD: "\u2145",
      Cayleys: "\u212D",
      Ccaron: "\u010C",
      Ccedi: "\xC7",
      Ccedil: "\xC7",
      Ccirc: "\u0108",
      Cconint: "\u2230",
      Cdot: "\u010A",
      Cedilla: "\xB8",
      CenterDot: "\xB7",
      Cfr: "\u212D",
      Chi: "\u03A7",
      CircleDot: "\u2299",
      CircleMinus: "\u2296",
      CirclePlus: "\u2295",
      CircleTimes: "\u2297",
      ClockwiseContourIntegral: "\u2232",
      CloseCurlyDoubleQuote: "\u201D",
      CloseCurlyQuote: "\u2019",
      Colon: "\u2237",
      Colone: "\u2A74",
      Congruent: "\u2261",
      Conint: "\u222F",
      ContourIntegral: "\u222E",
      Copf: "\u2102",
      Coproduct: "\u2210",
      CounterClockwiseContourIntegral: "\u2233",
      Cross: "\u2A2F",
      Cscr: "\u{1D49E}",
      Cup: "\u22D3",
      CupCap: "\u224D",
      DD: "\u2145",
      DDotrahd: "\u2911",
      DJcy: "\u0402",
      DScy: "\u0405",
      DZcy: "\u040F",
      Dagger: "\u2021",
      Darr: "\u21A1",
      Dashv: "\u2AE4",
      Dcaron: "\u010E",
      Dcy: "\u0414",
      Del: "\u2207",
      Delta: "\u0394",
      Dfr: "\u{1D507}",
      DiacriticalAcute: "\xB4",
      DiacriticalDot: "\u02D9",
      DiacriticalDoubleAcute: "\u02DD",
      DiacriticalGrave: "`",
      DiacriticalTilde: "\u02DC",
      Diamond: "\u22C4",
      DifferentialD: "\u2146",
      Dopf: "\u{1D53B}",
      Dot: "\xA8",
      DotDot: "\u20DC",
      DotEqual: "\u2250",
      DoubleContourIntegral: "\u222F",
      DoubleDot: "\xA8",
      DoubleDownArrow: "\u21D3",
      DoubleLeftArrow: "\u21D0",
      DoubleLeftRightArrow: "\u21D4",
      DoubleLeftTee: "\u2AE4",
      DoubleLongLeftArrow: "\u27F8",
      DoubleLongLeftRightArrow: "\u27FA",
      DoubleLongRightArrow: "\u27F9",
      DoubleRightArrow: "\u21D2",
      DoubleRightTee: "\u22A8",
      DoubleUpArrow: "\u21D1",
      DoubleUpDownArrow: "\u21D5",
      DoubleVerticalBar: "\u2225",
      DownArrow: "\u2193",
      DownArrowBar: "\u2913",
      DownArrowUpArrow: "\u21F5",
      DownBreve: "\u0311",
      DownLeftRightVector: "\u2950",
      DownLeftTeeVector: "\u295E",
      DownLeftVector: "\u21BD",
      DownLeftVectorBar: "\u2956",
      DownRightTeeVector: "\u295F",
      DownRightVector: "\u21C1",
      DownRightVectorBar: "\u2957",
      DownTee: "\u22A4",
      DownTeeArrow: "\u21A7",
      Downarrow: "\u21D3",
      Dscr: "\u{1D49F}",
      Dstrok: "\u0110",
      ENG: "\u014A",
      ET: "\xD0",
      ETH: "\xD0",
      Eacut: "\xC9",
      Eacute: "\xC9",
      Ecaron: "\u011A",
      Ecir: "\xCA",
      Ecirc: "\xCA",
      Ecy: "\u042D",
      Edot: "\u0116",
      Efr: "\u{1D508}",
      Egrav: "\xC8",
      Egrave: "\xC8",
      Element: "\u2208",
      Emacr: "\u0112",
      EmptySmallSquare: "\u25FB",
      EmptyVerySmallSquare: "\u25AB",
      Eogon: "\u0118",
      Eopf: "\u{1D53C}",
      Epsilon: "\u0395",
      Equal: "\u2A75",
      EqualTilde: "\u2242",
      Equilibrium: "\u21CC",
      Escr: "\u2130",
      Esim: "\u2A73",
      Eta: "\u0397",
      Eum: "\xCB",
      Euml: "\xCB",
      Exists: "\u2203",
      ExponentialE: "\u2147",
      Fcy: "\u0424",
      Ffr: "\u{1D509}",
      FilledSmallSquare: "\u25FC",
      FilledVerySmallSquare: "\u25AA",
      Fopf: "\u{1D53D}",
      ForAll: "\u2200",
      Fouriertrf: "\u2131",
      Fscr: "\u2131",
      GJcy: "\u0403",
      G: ">",
      GT: ">",
      Gamma: "\u0393",
      Gammad: "\u03DC",
      Gbreve: "\u011E",
      Gcedil: "\u0122",
      Gcirc: "\u011C",
      Gcy: "\u0413",
      Gdot: "\u0120",
      Gfr: "\u{1D50A}",
      Gg: "\u22D9",
      Gopf: "\u{1D53E}",
      GreaterEqual: "\u2265",
      GreaterEqualLess: "\u22DB",
      GreaterFullEqual: "\u2267",
      GreaterGreater: "\u2AA2",
      GreaterLess: "\u2277",
      GreaterSlantEqual: "\u2A7E",
      GreaterTilde: "\u2273",
      Gscr: "\u{1D4A2}",
      Gt: "\u226B",
      HARDcy: "\u042A",
      Hacek: "\u02C7",
      Hat: "^",
      Hcirc: "\u0124",
      Hfr: "\u210C",
      HilbertSpace: "\u210B",
      Hopf: "\u210D",
      HorizontalLine: "\u2500",
      Hscr: "\u210B",
      Hstrok: "\u0126",
      HumpDownHump: "\u224E",
      HumpEqual: "\u224F",
      IEcy: "\u0415",
      IJlig: "\u0132",
      IOcy: "\u0401",
      Iacut: "\xCD",
      Iacute: "\xCD",
      Icir: "\xCE",
      Icirc: "\xCE",
      Icy: "\u0418",
      Idot: "\u0130",
      Ifr: "\u2111",
      Igrav: "\xCC",
      Igrave: "\xCC",
      Im: "\u2111",
      Imacr: "\u012A",
      ImaginaryI: "\u2148",
      Implies: "\u21D2",
      Int: "\u222C",
      Integral: "\u222B",
      Intersection: "\u22C2",
      InvisibleComma: "\u2063",
      InvisibleTimes: "\u2062",
      Iogon: "\u012E",
      Iopf: "\u{1D540}",
      Iota: "\u0399",
      Iscr: "\u2110",
      Itilde: "\u0128",
      Iukcy: "\u0406",
      Ium: "\xCF",
      Iuml: "\xCF",
      Jcirc: "\u0134",
      Jcy: "\u0419",
      Jfr: "\u{1D50D}",
      Jopf: "\u{1D541}",
      Jscr: "\u{1D4A5}",
      Jsercy: "\u0408",
      Jukcy: "\u0404",
      KHcy: "\u0425",
      KJcy: "\u040C",
      Kappa: "\u039A",
      Kcedil: "\u0136",
      Kcy: "\u041A",
      Kfr: "\u{1D50E}",
      Kopf: "\u{1D542}",
      Kscr: "\u{1D4A6}",
      LJcy: "\u0409",
      L: "<",
      LT: "<",
      Lacute: "\u0139",
      Lambda: "\u039B",
      Lang: "\u27EA",
      Laplacetrf: "\u2112",
      Larr: "\u219E",
      Lcaron: "\u013D",
      Lcedil: "\u013B",
      Lcy: "\u041B",
      LeftAngleBracket: "\u27E8",
      LeftArrow: "\u2190",
      LeftArrowBar: "\u21E4",
      LeftArrowRightArrow: "\u21C6",
      LeftCeiling: "\u2308",
      LeftDoubleBracket: "\u27E6",
      LeftDownTeeVector: "\u2961",
      LeftDownVector: "\u21C3",
      LeftDownVectorBar: "\u2959",
      LeftFloor: "\u230A",
      LeftRightArrow: "\u2194",
      LeftRightVector: "\u294E",
      LeftTee: "\u22A3",
      LeftTeeArrow: "\u21A4",
      LeftTeeVector: "\u295A",
      LeftTriangle: "\u22B2",
      LeftTriangleBar: "\u29CF",
      LeftTriangleEqual: "\u22B4",
      LeftUpDownVector: "\u2951",
      LeftUpTeeVector: "\u2960",
      LeftUpVector: "\u21BF",
      LeftUpVectorBar: "\u2958",
      LeftVector: "\u21BC",
      LeftVectorBar: "\u2952",
      Leftarrow: "\u21D0",
      Leftrightarrow: "\u21D4",
      LessEqualGreater: "\u22DA",
      LessFullEqual: "\u2266",
      LessGreater: "\u2276",
      LessLess: "\u2AA1",
      LessSlantEqual: "\u2A7D",
      LessTilde: "\u2272",
      Lfr: "\u{1D50F}",
      Ll: "\u22D8",
      Lleftarrow: "\u21DA",
      Lmidot: "\u013F",
      LongLeftArrow: "\u27F5",
      LongLeftRightArrow: "\u27F7",
      LongRightArrow: "\u27F6",
      Longleftarrow: "\u27F8",
      Longleftrightarrow: "\u27FA",
      Longrightarrow: "\u27F9",
      Lopf: "\u{1D543}",
      LowerLeftArrow: "\u2199",
      LowerRightArrow: "\u2198",
      Lscr: "\u2112",
      Lsh: "\u21B0",
      Lstrok: "\u0141",
      Lt: "\u226A",
      Map: "\u2905",
      Mcy: "\u041C",
      MediumSpace: "\u205F",
      Mellintrf: "\u2133",
      Mfr: "\u{1D510}",
      MinusPlus: "\u2213",
      Mopf: "\u{1D544}",
      Mscr: "\u2133",
      Mu: "\u039C",
      NJcy: "\u040A",
      Nacute: "\u0143",
      Ncaron: "\u0147",
      Ncedil: "\u0145",
      Ncy: "\u041D",
      NegativeMediumSpace: "\u200B",
      NegativeThickSpace: "\u200B",
      NegativeThinSpace: "\u200B",
      NegativeVeryThinSpace: "\u200B",
      NestedGreaterGreater: "\u226B",
      NestedLessLess: "\u226A",
      NewLine: "\n",
      Nfr: "\u{1D511}",
      NoBreak: "\u2060",
      NonBreakingSpace: "\xA0",
      Nopf: "\u2115",
      Not: "\u2AEC",
      NotCongruent: "\u2262",
      NotCupCap: "\u226D",
      NotDoubleVerticalBar: "\u2226",
      NotElement: "\u2209",
      NotEqual: "\u2260",
      NotEqualTilde: "\u2242\u0338",
      NotExists: "\u2204",
      NotGreater: "\u226F",
      NotGreaterEqual: "\u2271",
      NotGreaterFullEqual: "\u2267\u0338",
      NotGreaterGreater: "\u226B\u0338",
      NotGreaterLess: "\u2279",
      NotGreaterSlantEqual: "\u2A7E\u0338",
      NotGreaterTilde: "\u2275",
      NotHumpDownHump: "\u224E\u0338",
      NotHumpEqual: "\u224F\u0338",
      NotLeftTriangle: "\u22EA",
      NotLeftTriangleBar: "\u29CF\u0338",
      NotLeftTriangleEqual: "\u22EC",
      NotLess: "\u226E",
      NotLessEqual: "\u2270",
      NotLessGreater: "\u2278",
      NotLessLess: "\u226A\u0338",
      NotLessSlantEqual: "\u2A7D\u0338",
      NotLessTilde: "\u2274",
      NotNestedGreaterGreater: "\u2AA2\u0338",
      NotNestedLessLess: "\u2AA1\u0338",
      NotPrecedes: "\u2280",
      NotPrecedesEqual: "\u2AAF\u0338",
      NotPrecedesSlantEqual: "\u22E0",
      NotReverseElement: "\u220C",
      NotRightTriangle: "\u22EB",
      NotRightTriangleBar: "\u29D0\u0338",
      NotRightTriangleEqual: "\u22ED",
      NotSquareSubset: "\u228F\u0338",
      NotSquareSubsetEqual: "\u22E2",
      NotSquareSuperset: "\u2290\u0338",
      NotSquareSupersetEqual: "\u22E3",
      NotSubset: "\u2282\u20D2",
      NotSubsetEqual: "\u2288",
      NotSucceeds: "\u2281",
      NotSucceedsEqual: "\u2AB0\u0338",
      NotSucceedsSlantEqual: "\u22E1",
      NotSucceedsTilde: "\u227F\u0338",
      NotSuperset: "\u2283\u20D2",
      NotSupersetEqual: "\u2289",
      NotTilde: "\u2241",
      NotTildeEqual: "\u2244",
      NotTildeFullEqual: "\u2247",
      NotTildeTilde: "\u2249",
      NotVerticalBar: "\u2224",
      Nscr: "\u{1D4A9}",
      Ntild: "\xD1",
      Ntilde: "\xD1",
      Nu: "\u039D",
      OElig: "\u0152",
      Oacut: "\xD3",
      Oacute: "\xD3",
      Ocir: "\xD4",
      Ocirc: "\xD4",
      Ocy: "\u041E",
      Odblac: "\u0150",
      Ofr: "\u{1D512}",
      Ograv: "\xD2",
      Ograve: "\xD2",
      Omacr: "\u014C",
      Omega: "\u03A9",
      Omicron: "\u039F",
      Oopf: "\u{1D546}",
      OpenCurlyDoubleQuote: "\u201C",
      OpenCurlyQuote: "\u2018",
      Or: "\u2A54",
      Oscr: "\u{1D4AA}",
      Oslas: "\xD8",
      Oslash: "\xD8",
      Otild: "\xD5",
      Otilde: "\xD5",
      Otimes: "\u2A37",
      Oum: "\xD6",
      Ouml: "\xD6",
      OverBar: "\u203E",
      OverBrace: "\u23DE",
      OverBracket: "\u23B4",
      OverParenthesis: "\u23DC",
      PartialD: "\u2202",
      Pcy: "\u041F",
      Pfr: "\u{1D513}",
      Phi: "\u03A6",
      Pi: "\u03A0",
      PlusMinus: "\xB1",
      Poincareplane: "\u210C",
      Popf: "\u2119",
      Pr: "\u2ABB",
      Precedes: "\u227A",
      PrecedesEqual: "\u2AAF",
      PrecedesSlantEqual: "\u227C",
      PrecedesTilde: "\u227E",
      Prime: "\u2033",
      Product: "\u220F",
      Proportion: "\u2237",
      Proportional: "\u221D",
      Pscr: "\u{1D4AB}",
      Psi: "\u03A8",
      QUO: '"',
      QUOT: '"',
      Qfr: "\u{1D514}",
      Qopf: "\u211A",
      Qscr: "\u{1D4AC}",
      RBarr: "\u2910",
      RE: "\xAE",
      REG: "\xAE",
      Racute: "\u0154",
      Rang: "\u27EB",
      Rarr: "\u21A0",
      Rarrtl: "\u2916",
      Rcaron: "\u0158",
      Rcedil: "\u0156",
      Rcy: "\u0420",
      Re: "\u211C",
      ReverseElement: "\u220B",
      ReverseEquilibrium: "\u21CB",
      ReverseUpEquilibrium: "\u296F",
      Rfr: "\u211C",
      Rho: "\u03A1",
      RightAngleBracket: "\u27E9",
      RightArrow: "\u2192",
      RightArrowBar: "\u21E5",
      RightArrowLeftArrow: "\u21C4",
      RightCeiling: "\u2309",
      RightDoubleBracket: "\u27E7",
      RightDownTeeVector: "\u295D",
      RightDownVector: "\u21C2",
      RightDownVectorBar: "\u2955",
      RightFloor: "\u230B",
      RightTee: "\u22A2",
      RightTeeArrow: "\u21A6",
      RightTeeVector: "\u295B",
      RightTriangle: "\u22B3",
      RightTriangleBar: "\u29D0",
      RightTriangleEqual: "\u22B5",
      RightUpDownVector: "\u294F",
      RightUpTeeVector: "\u295C",
      RightUpVector: "\u21BE",
      RightUpVectorBar: "\u2954",
      RightVector: "\u21C0",
      RightVectorBar: "\u2953",
      Rightarrow: "\u21D2",
      Ropf: "\u211D",
      RoundImplies: "\u2970",
      Rrightarrow: "\u21DB",
      Rscr: "\u211B",
      Rsh: "\u21B1",
      RuleDelayed: "\u29F4",
      SHCHcy: "\u0429",
      SHcy: "\u0428",
      SOFTcy: "\u042C",
      Sacute: "\u015A",
      Sc: "\u2ABC",
      Scaron: "\u0160",
      Scedil: "\u015E",
      Scirc: "\u015C",
      Scy: "\u0421",
      Sfr: "\u{1D516}",
      ShortDownArrow: "\u2193",
      ShortLeftArrow: "\u2190",
      ShortRightArrow: "\u2192",
      ShortUpArrow: "\u2191",
      Sigma: "\u03A3",
      SmallCircle: "\u2218",
      Sopf: "\u{1D54A}",
      Sqrt: "\u221A",
      Square: "\u25A1",
      SquareIntersection: "\u2293",
      SquareSubset: "\u228F",
      SquareSubsetEqual: "\u2291",
      SquareSuperset: "\u2290",
      SquareSupersetEqual: "\u2292",
      SquareUnion: "\u2294",
      Sscr: "\u{1D4AE}",
      Star: "\u22C6",
      Sub: "\u22D0",
      Subset: "\u22D0",
      SubsetEqual: "\u2286",
      Succeeds: "\u227B",
      SucceedsEqual: "\u2AB0",
      SucceedsSlantEqual: "\u227D",
      SucceedsTilde: "\u227F",
      SuchThat: "\u220B",
      Sum: "\u2211",
      Sup: "\u22D1",
      Superset: "\u2283",
      SupersetEqual: "\u2287",
      Supset: "\u22D1",
      THOR: "\xDE",
      THORN: "\xDE",
      TRADE: "\u2122",
      TSHcy: "\u040B",
      TScy: "\u0426",
      Tab: "	",
      Tau: "\u03A4",
      Tcaron: "\u0164",
      Tcedil: "\u0162",
      Tcy: "\u0422",
      Tfr: "\u{1D517}",
      Therefore: "\u2234",
      Theta: "\u0398",
      ThickSpace: "\u205F\u200A",
      ThinSpace: "\u2009",
      Tilde: "\u223C",
      TildeEqual: "\u2243",
      TildeFullEqual: "\u2245",
      TildeTilde: "\u2248",
      Topf: "\u{1D54B}",
      TripleDot: "\u20DB",
      Tscr: "\u{1D4AF}",
      Tstrok: "\u0166",
      Uacut: "\xDA",
      Uacute: "\xDA",
      Uarr: "\u219F",
      Uarrocir: "\u2949",
      Ubrcy: "\u040E",
      Ubreve: "\u016C",
      Ucir: "\xDB",
      Ucirc: "\xDB",
      Ucy: "\u0423",
      Udblac: "\u0170",
      Ufr: "\u{1D518}",
      Ugrav: "\xD9",
      Ugrave: "\xD9",
      Umacr: "\u016A",
      UnderBar: "_",
      UnderBrace: "\u23DF",
      UnderBracket: "\u23B5",
      UnderParenthesis: "\u23DD",
      Union: "\u22C3",
      UnionPlus: "\u228E",
      Uogon: "\u0172",
      Uopf: "\u{1D54C}",
      UpArrow: "\u2191",
      UpArrowBar: "\u2912",
      UpArrowDownArrow: "\u21C5",
      UpDownArrow: "\u2195",
      UpEquilibrium: "\u296E",
      UpTee: "\u22A5",
      UpTeeArrow: "\u21A5",
      Uparrow: "\u21D1",
      Updownarrow: "\u21D5",
      UpperLeftArrow: "\u2196",
      UpperRightArrow: "\u2197",
      Upsi: "\u03D2",
      Upsilon: "\u03A5",
      Uring: "\u016E",
      Uscr: "\u{1D4B0}",
      Utilde: "\u0168",
      Uum: "\xDC",
      Uuml: "\xDC",
      VDash: "\u22AB",
      Vbar: "\u2AEB",
      Vcy: "\u0412",
      Vdash: "\u22A9",
      Vdashl: "\u2AE6",
      Vee: "\u22C1",
      Verbar: "\u2016",
      Vert: "\u2016",
      VerticalBar: "\u2223",
      VerticalLine: "|",
      VerticalSeparator: "\u2758",
      VerticalTilde: "\u2240",
      VeryThinSpace: "\u200A",
      Vfr: "\u{1D519}",
      Vopf: "\u{1D54D}",
      Vscr: "\u{1D4B1}",
      Vvdash: "\u22AA",
      Wcirc: "\u0174",
      Wedge: "\u22C0",
      Wfr: "\u{1D51A}",
      Wopf: "\u{1D54E}",
      Wscr: "\u{1D4B2}",
      Xfr: "\u{1D51B}",
      Xi: "\u039E",
      Xopf: "\u{1D54F}",
      Xscr: "\u{1D4B3}",
      YAcy: "\u042F",
      YIcy: "\u0407",
      YUcy: "\u042E",
      Yacut: "\xDD",
      Yacute: "\xDD",
      Ycirc: "\u0176",
      Ycy: "\u042B",
      Yfr: "\u{1D51C}",
      Yopf: "\u{1D550}",
      Yscr: "\u{1D4B4}",
      Yuml: "\u0178",
      ZHcy: "\u0416",
      Zacute: "\u0179",
      Zcaron: "\u017D",
      Zcy: "\u0417",
      Zdot: "\u017B",
      ZeroWidthSpace: "\u200B",
      Zeta: "\u0396",
      Zfr: "\u2128",
      Zopf: "\u2124",
      Zscr: "\u{1D4B5}",
      aacut: "\xE1",
      aacute: "\xE1",
      abreve: "\u0103",
      ac: "\u223E",
      acE: "\u223E\u0333",
      acd: "\u223F",
      acir: "\xE2",
      acirc: "\xE2",
      acut: "\xB4",
      acute: "\xB4",
      acy: "\u0430",
      aeli: "\xE6",
      aelig: "\xE6",
      af: "\u2061",
      afr: "\u{1D51E}",
      agrav: "\xE0",
      agrave: "\xE0",
      alefsym: "\u2135",
      aleph: "\u2135",
      alpha: "\u03B1",
      amacr: "\u0101",
      amalg: "\u2A3F",
      am: "&",
      amp: "&",
      and: "\u2227",
      andand: "\u2A55",
      andd: "\u2A5C",
      andslope: "\u2A58",
      andv: "\u2A5A",
      ang: "\u2220",
      ange: "\u29A4",
      angle: "\u2220",
      angmsd: "\u2221",
      angmsdaa: "\u29A8",
      angmsdab: "\u29A9",
      angmsdac: "\u29AA",
      angmsdad: "\u29AB",
      angmsdae: "\u29AC",
      angmsdaf: "\u29AD",
      angmsdag: "\u29AE",
      angmsdah: "\u29AF",
      angrt: "\u221F",
      angrtvb: "\u22BE",
      angrtvbd: "\u299D",
      angsph: "\u2222",
      angst: "\xC5",
      angzarr: "\u237C",
      aogon: "\u0105",
      aopf: "\u{1D552}",
      ap: "\u2248",
      apE: "\u2A70",
      apacir: "\u2A6F",
      ape: "\u224A",
      apid: "\u224B",
      apos: "'",
      approx: "\u2248",
      approxeq: "\u224A",
      arin: "\xE5",
      aring: "\xE5",
      ascr: "\u{1D4B6}",
      ast: "*",
      asymp: "\u2248",
      asympeq: "\u224D",
      atild: "\xE3",
      atilde: "\xE3",
      aum: "\xE4",
      auml: "\xE4",
      awconint: "\u2233",
      awint: "\u2A11",
      bNot: "\u2AED",
      backcong: "\u224C",
      backepsilon: "\u03F6",
      backprime: "\u2035",
      backsim: "\u223D",
      backsimeq: "\u22CD",
      barvee: "\u22BD",
      barwed: "\u2305",
      barwedge: "\u2305",
      bbrk: "\u23B5",
      bbrktbrk: "\u23B6",
      bcong: "\u224C",
      bcy: "\u0431",
      bdquo: "\u201E",
      becaus: "\u2235",
      because: "\u2235",
      bemptyv: "\u29B0",
      bepsi: "\u03F6",
      bernou: "\u212C",
      beta: "\u03B2",
      beth: "\u2136",
      between: "\u226C",
      bfr: "\u{1D51F}",
      bigcap: "\u22C2",
      bigcirc: "\u25EF",
      bigcup: "\u22C3",
      bigodot: "\u2A00",
      bigoplus: "\u2A01",
      bigotimes: "\u2A02",
      bigsqcup: "\u2A06",
      bigstar: "\u2605",
      bigtriangledown: "\u25BD",
      bigtriangleup: "\u25B3",
      biguplus: "\u2A04",
      bigvee: "\u22C1",
      bigwedge: "\u22C0",
      bkarow: "\u290D",
      blacklozenge: "\u29EB",
      blacksquare: "\u25AA",
      blacktriangle: "\u25B4",
      blacktriangledown: "\u25BE",
      blacktriangleleft: "\u25C2",
      blacktriangleright: "\u25B8",
      blank: "\u2423",
      blk12: "\u2592",
      blk14: "\u2591",
      blk34: "\u2593",
      block: "\u2588",
      bne: "=\u20E5",
      bnequiv: "\u2261\u20E5",
      bnot: "\u2310",
      bopf: "\u{1D553}",
      bot: "\u22A5",
      bottom: "\u22A5",
      bowtie: "\u22C8",
      boxDL: "\u2557",
      boxDR: "\u2554",
      boxDl: "\u2556",
      boxDr: "\u2553",
      boxH: "\u2550",
      boxHD: "\u2566",
      boxHU: "\u2569",
      boxHd: "\u2564",
      boxHu: "\u2567",
      boxUL: "\u255D",
      boxUR: "\u255A",
      boxUl: "\u255C",
      boxUr: "\u2559",
      boxV: "\u2551",
      boxVH: "\u256C",
      boxVL: "\u2563",
      boxVR: "\u2560",
      boxVh: "\u256B",
      boxVl: "\u2562",
      boxVr: "\u255F",
      boxbox: "\u29C9",
      boxdL: "\u2555",
      boxdR: "\u2552",
      boxdl: "\u2510",
      boxdr: "\u250C",
      boxh: "\u2500",
      boxhD: "\u2565",
      boxhU: "\u2568",
      boxhd: "\u252C",
      boxhu: "\u2534",
      boxminus: "\u229F",
      boxplus: "\u229E",
      boxtimes: "\u22A0",
      boxuL: "\u255B",
      boxuR: "\u2558",
      boxul: "\u2518",
      boxur: "\u2514",
      boxv: "\u2502",
      boxvH: "\u256A",
      boxvL: "\u2561",
      boxvR: "\u255E",
      boxvh: "\u253C",
      boxvl: "\u2524",
      boxvr: "\u251C",
      bprime: "\u2035",
      breve: "\u02D8",
      brvba: "\xA6",
      brvbar: "\xA6",
      bscr: "\u{1D4B7}",
      bsemi: "\u204F",
      bsim: "\u223D",
      bsime: "\u22CD",
      bsol: "\\",
      bsolb: "\u29C5",
      bsolhsub: "\u27C8",
      bull: "\u2022",
      bullet: "\u2022",
      bump: "\u224E",
      bumpE: "\u2AAE",
      bumpe: "\u224F",
      bumpeq: "\u224F",
      cacute: "\u0107",
      cap: "\u2229",
      capand: "\u2A44",
      capbrcup: "\u2A49",
      capcap: "\u2A4B",
      capcup: "\u2A47",
      capdot: "\u2A40",
      caps: "\u2229\uFE00",
      caret: "\u2041",
      caron: "\u02C7",
      ccaps: "\u2A4D",
      ccaron: "\u010D",
      ccedi: "\xE7",
      ccedil: "\xE7",
      ccirc: "\u0109",
      ccups: "\u2A4C",
      ccupssm: "\u2A50",
      cdot: "\u010B",
      cedi: "\xB8",
      cedil: "\xB8",
      cemptyv: "\u29B2",
      cen: "\xA2",
      cent: "\xA2",
      centerdot: "\xB7",
      cfr: "\u{1D520}",
      chcy: "\u0447",
      check: "\u2713",
      checkmark: "\u2713",
      chi: "\u03C7",
      cir: "\u25CB",
      cirE: "\u29C3",
      circ: "\u02C6",
      circeq: "\u2257",
      circlearrowleft: "\u21BA",
      circlearrowright: "\u21BB",
      circledR: "\xAE",
      circledS: "\u24C8",
      circledast: "\u229B",
      circledcirc: "\u229A",
      circleddash: "\u229D",
      cire: "\u2257",
      cirfnint: "\u2A10",
      cirmid: "\u2AEF",
      cirscir: "\u29C2",
      clubs: "\u2663",
      clubsuit: "\u2663",
      colon: ":",
      colone: "\u2254",
      coloneq: "\u2254",
      comma: ",",
      commat: "@",
      comp: "\u2201",
      compfn: "\u2218",
      complement: "\u2201",
      complexes: "\u2102",
      cong: "\u2245",
      congdot: "\u2A6D",
      conint: "\u222E",
      copf: "\u{1D554}",
      coprod: "\u2210",
      cop: "\xA9",
      copy: "\xA9",
      copysr: "\u2117",
      crarr: "\u21B5",
      cross: "\u2717",
      cscr: "\u{1D4B8}",
      csub: "\u2ACF",
      csube: "\u2AD1",
      csup: "\u2AD0",
      csupe: "\u2AD2",
      ctdot: "\u22EF",
      cudarrl: "\u2938",
      cudarrr: "\u2935",
      cuepr: "\u22DE",
      cuesc: "\u22DF",
      cularr: "\u21B6",
      cularrp: "\u293D",
      cup: "\u222A",
      cupbrcap: "\u2A48",
      cupcap: "\u2A46",
      cupcup: "\u2A4A",
      cupdot: "\u228D",
      cupor: "\u2A45",
      cups: "\u222A\uFE00",
      curarr: "\u21B7",
      curarrm: "\u293C",
      curlyeqprec: "\u22DE",
      curlyeqsucc: "\u22DF",
      curlyvee: "\u22CE",
      curlywedge: "\u22CF",
      curre: "\xA4",
      curren: "\xA4",
      curvearrowleft: "\u21B6",
      curvearrowright: "\u21B7",
      cuvee: "\u22CE",
      cuwed: "\u22CF",
      cwconint: "\u2232",
      cwint: "\u2231",
      cylcty: "\u232D",
      dArr: "\u21D3",
      dHar: "\u2965",
      dagger: "\u2020",
      daleth: "\u2138",
      darr: "\u2193",
      dash: "\u2010",
      dashv: "\u22A3",
      dbkarow: "\u290F",
      dblac: "\u02DD",
      dcaron: "\u010F",
      dcy: "\u0434",
      dd: "\u2146",
      ddagger: "\u2021",
      ddarr: "\u21CA",
      ddotseq: "\u2A77",
      de: "\xB0",
      deg: "\xB0",
      delta: "\u03B4",
      demptyv: "\u29B1",
      dfisht: "\u297F",
      dfr: "\u{1D521}",
      dharl: "\u21C3",
      dharr: "\u21C2",
      diam: "\u22C4",
      diamond: "\u22C4",
      diamondsuit: "\u2666",
      diams: "\u2666",
      die: "\xA8",
      digamma: "\u03DD",
      disin: "\u22F2",
      div: "\xF7",
      divid: "\xF7",
      divide: "\xF7",
      divideontimes: "\u22C7",
      divonx: "\u22C7",
      djcy: "\u0452",
      dlcorn: "\u231E",
      dlcrop: "\u230D",
      dollar: "$",
      dopf: "\u{1D555}",
      dot: "\u02D9",
      doteq: "\u2250",
      doteqdot: "\u2251",
      dotminus: "\u2238",
      dotplus: "\u2214",
      dotsquare: "\u22A1",
      doublebarwedge: "\u2306",
      downarrow: "\u2193",
      downdownarrows: "\u21CA",
      downharpoonleft: "\u21C3",
      downharpoonright: "\u21C2",
      drbkarow: "\u2910",
      drcorn: "\u231F",
      drcrop: "\u230C",
      dscr: "\u{1D4B9}",
      dscy: "\u0455",
      dsol: "\u29F6",
      dstrok: "\u0111",
      dtdot: "\u22F1",
      dtri: "\u25BF",
      dtrif: "\u25BE",
      duarr: "\u21F5",
      duhar: "\u296F",
      dwangle: "\u29A6",
      dzcy: "\u045F",
      dzigrarr: "\u27FF",
      eDDot: "\u2A77",
      eDot: "\u2251",
      eacut: "\xE9",
      eacute: "\xE9",
      easter: "\u2A6E",
      ecaron: "\u011B",
      ecir: "\xEA",
      ecirc: "\xEA",
      ecolon: "\u2255",
      ecy: "\u044D",
      edot: "\u0117",
      ee: "\u2147",
      efDot: "\u2252",
      efr: "\u{1D522}",
      eg: "\u2A9A",
      egrav: "\xE8",
      egrave: "\xE8",
      egs: "\u2A96",
      egsdot: "\u2A98",
      el: "\u2A99",
      elinters: "\u23E7",
      ell: "\u2113",
      els: "\u2A95",
      elsdot: "\u2A97",
      emacr: "\u0113",
      empty: "\u2205",
      emptyset: "\u2205",
      emptyv: "\u2205",
      emsp13: "\u2004",
      emsp14: "\u2005",
      emsp: "\u2003",
      eng: "\u014B",
      ensp: "\u2002",
      eogon: "\u0119",
      eopf: "\u{1D556}",
      epar: "\u22D5",
      eparsl: "\u29E3",
      eplus: "\u2A71",
      epsi: "\u03B5",
      epsilon: "\u03B5",
      epsiv: "\u03F5",
      eqcirc: "\u2256",
      eqcolon: "\u2255",
      eqsim: "\u2242",
      eqslantgtr: "\u2A96",
      eqslantless: "\u2A95",
      equals: "=",
      equest: "\u225F",
      equiv: "\u2261",
      equivDD: "\u2A78",
      eqvparsl: "\u29E5",
      erDot: "\u2253",
      erarr: "\u2971",
      escr: "\u212F",
      esdot: "\u2250",
      esim: "\u2242",
      eta: "\u03B7",
      et: "\xF0",
      eth: "\xF0",
      eum: "\xEB",
      euml: "\xEB",
      euro: "\u20AC",
      excl: "!",
      exist: "\u2203",
      expectation: "\u2130",
      exponentiale: "\u2147",
      fallingdotseq: "\u2252",
      fcy: "\u0444",
      female: "\u2640",
      ffilig: "\uFB03",
      fflig: "\uFB00",
      ffllig: "\uFB04",
      ffr: "\u{1D523}",
      filig: "\uFB01",
      fjlig: "fj",
      flat: "\u266D",
      fllig: "\uFB02",
      fltns: "\u25B1",
      fnof: "\u0192",
      fopf: "\u{1D557}",
      forall: "\u2200",
      fork: "\u22D4",
      forkv: "\u2AD9",
      fpartint: "\u2A0D",
      frac1: "\xBC",
      frac12: "\xBD",
      frac13: "\u2153",
      frac14: "\xBC",
      frac15: "\u2155",
      frac16: "\u2159",
      frac18: "\u215B",
      frac23: "\u2154",
      frac25: "\u2156",
      frac3: "\xBE",
      frac34: "\xBE",
      frac35: "\u2157",
      frac38: "\u215C",
      frac45: "\u2158",
      frac56: "\u215A",
      frac58: "\u215D",
      frac78: "\u215E",
      frasl: "\u2044",
      frown: "\u2322",
      fscr: "\u{1D4BB}",
      gE: "\u2267",
      gEl: "\u2A8C",
      gacute: "\u01F5",
      gamma: "\u03B3",
      gammad: "\u03DD",
      gap: "\u2A86",
      gbreve: "\u011F",
      gcirc: "\u011D",
      gcy: "\u0433",
      gdot: "\u0121",
      ge: "\u2265",
      gel: "\u22DB",
      geq: "\u2265",
      geqq: "\u2267",
      geqslant: "\u2A7E",
      ges: "\u2A7E",
      gescc: "\u2AA9",
      gesdot: "\u2A80",
      gesdoto: "\u2A82",
      gesdotol: "\u2A84",
      gesl: "\u22DB\uFE00",
      gesles: "\u2A94",
      gfr: "\u{1D524}",
      gg: "\u226B",
      ggg: "\u22D9",
      gimel: "\u2137",
      gjcy: "\u0453",
      gl: "\u2277",
      glE: "\u2A92",
      gla: "\u2AA5",
      glj: "\u2AA4",
      gnE: "\u2269",
      gnap: "\u2A8A",
      gnapprox: "\u2A8A",
      gne: "\u2A88",
      gneq: "\u2A88",
      gneqq: "\u2269",
      gnsim: "\u22E7",
      gopf: "\u{1D558}",
      grave: "`",
      gscr: "\u210A",
      gsim: "\u2273",
      gsime: "\u2A8E",
      gsiml: "\u2A90",
      g: ">",
      gt: ">",
      gtcc: "\u2AA7",
      gtcir: "\u2A7A",
      gtdot: "\u22D7",
      gtlPar: "\u2995",
      gtquest: "\u2A7C",
      gtrapprox: "\u2A86",
      gtrarr: "\u2978",
      gtrdot: "\u22D7",
      gtreqless: "\u22DB",
      gtreqqless: "\u2A8C",
      gtrless: "\u2277",
      gtrsim: "\u2273",
      gvertneqq: "\u2269\uFE00",
      gvnE: "\u2269\uFE00",
      hArr: "\u21D4",
      hairsp: "\u200A",
      half: "\xBD",
      hamilt: "\u210B",
      hardcy: "\u044A",
      harr: "\u2194",
      harrcir: "\u2948",
      harrw: "\u21AD",
      hbar: "\u210F",
      hcirc: "\u0125",
      hearts: "\u2665",
      heartsuit: "\u2665",
      hellip: "\u2026",
      hercon: "\u22B9",
      hfr: "\u{1D525}",
      hksearow: "\u2925",
      hkswarow: "\u2926",
      hoarr: "\u21FF",
      homtht: "\u223B",
      hookleftarrow: "\u21A9",
      hookrightarrow: "\u21AA",
      hopf: "\u{1D559}",
      horbar: "\u2015",
      hscr: "\u{1D4BD}",
      hslash: "\u210F",
      hstrok: "\u0127",
      hybull: "\u2043",
      hyphen: "\u2010",
      iacut: "\xED",
      iacute: "\xED",
      ic: "\u2063",
      icir: "\xEE",
      icirc: "\xEE",
      icy: "\u0438",
      iecy: "\u0435",
      iexc: "\xA1",
      iexcl: "\xA1",
      iff: "\u21D4",
      ifr: "\u{1D526}",
      igrav: "\xEC",
      igrave: "\xEC",
      ii: "\u2148",
      iiiint: "\u2A0C",
      iiint: "\u222D",
      iinfin: "\u29DC",
      iiota: "\u2129",
      ijlig: "\u0133",
      imacr: "\u012B",
      image: "\u2111",
      imagline: "\u2110",
      imagpart: "\u2111",
      imath: "\u0131",
      imof: "\u22B7",
      imped: "\u01B5",
      in: "\u2208",
      incare: "\u2105",
      infin: "\u221E",
      infintie: "\u29DD",
      inodot: "\u0131",
      int: "\u222B",
      intcal: "\u22BA",
      integers: "\u2124",
      intercal: "\u22BA",
      intlarhk: "\u2A17",
      intprod: "\u2A3C",
      iocy: "\u0451",
      iogon: "\u012F",
      iopf: "\u{1D55A}",
      iota: "\u03B9",
      iprod: "\u2A3C",
      iques: "\xBF",
      iquest: "\xBF",
      iscr: "\u{1D4BE}",
      isin: "\u2208",
      isinE: "\u22F9",
      isindot: "\u22F5",
      isins: "\u22F4",
      isinsv: "\u22F3",
      isinv: "\u2208",
      it: "\u2062",
      itilde: "\u0129",
      iukcy: "\u0456",
      ium: "\xEF",
      iuml: "\xEF",
      jcirc: "\u0135",
      jcy: "\u0439",
      jfr: "\u{1D527}",
      jmath: "\u0237",
      jopf: "\u{1D55B}",
      jscr: "\u{1D4BF}",
      jsercy: "\u0458",
      jukcy: "\u0454",
      kappa: "\u03BA",
      kappav: "\u03F0",
      kcedil: "\u0137",
      kcy: "\u043A",
      kfr: "\u{1D528}",
      kgreen: "\u0138",
      khcy: "\u0445",
      kjcy: "\u045C",
      kopf: "\u{1D55C}",
      kscr: "\u{1D4C0}",
      lAarr: "\u21DA",
      lArr: "\u21D0",
      lAtail: "\u291B",
      lBarr: "\u290E",
      lE: "\u2266",
      lEg: "\u2A8B",
      lHar: "\u2962",
      lacute: "\u013A",
      laemptyv: "\u29B4",
      lagran: "\u2112",
      lambda: "\u03BB",
      lang: "\u27E8",
      langd: "\u2991",
      langle: "\u27E8",
      lap: "\u2A85",
      laqu: "\xAB",
      laquo: "\xAB",
      larr: "\u2190",
      larrb: "\u21E4",
      larrbfs: "\u291F",
      larrfs: "\u291D",
      larrhk: "\u21A9",
      larrlp: "\u21AB",
      larrpl: "\u2939",
      larrsim: "\u2973",
      larrtl: "\u21A2",
      lat: "\u2AAB",
      latail: "\u2919",
      late: "\u2AAD",
      lates: "\u2AAD\uFE00",
      lbarr: "\u290C",
      lbbrk: "\u2772",
      lbrace: "{",
      lbrack: "[",
      lbrke: "\u298B",
      lbrksld: "\u298F",
      lbrkslu: "\u298D",
      lcaron: "\u013E",
      lcedil: "\u013C",
      lceil: "\u2308",
      lcub: "{",
      lcy: "\u043B",
      ldca: "\u2936",
      ldquo: "\u201C",
      ldquor: "\u201E",
      ldrdhar: "\u2967",
      ldrushar: "\u294B",
      ldsh: "\u21B2",
      le: "\u2264",
      leftarrow: "\u2190",
      leftarrowtail: "\u21A2",
      leftharpoondown: "\u21BD",
      leftharpoonup: "\u21BC",
      leftleftarrows: "\u21C7",
      leftrightarrow: "\u2194",
      leftrightarrows: "\u21C6",
      leftrightharpoons: "\u21CB",
      leftrightsquigarrow: "\u21AD",
      leftthreetimes: "\u22CB",
      leg: "\u22DA",
      leq: "\u2264",
      leqq: "\u2266",
      leqslant: "\u2A7D",
      les: "\u2A7D",
      lescc: "\u2AA8",
      lesdot: "\u2A7F",
      lesdoto: "\u2A81",
      lesdotor: "\u2A83",
      lesg: "\u22DA\uFE00",
      lesges: "\u2A93",
      lessapprox: "\u2A85",
      lessdot: "\u22D6",
      lesseqgtr: "\u22DA",
      lesseqqgtr: "\u2A8B",
      lessgtr: "\u2276",
      lesssim: "\u2272",
      lfisht: "\u297C",
      lfloor: "\u230A",
      lfr: "\u{1D529}",
      lg: "\u2276",
      lgE: "\u2A91",
      lhard: "\u21BD",
      lharu: "\u21BC",
      lharul: "\u296A",
      lhblk: "\u2584",
      ljcy: "\u0459",
      ll: "\u226A",
      llarr: "\u21C7",
      llcorner: "\u231E",
      llhard: "\u296B",
      lltri: "\u25FA",
      lmidot: "\u0140",
      lmoust: "\u23B0",
      lmoustache: "\u23B0",
      lnE: "\u2268",
      lnap: "\u2A89",
      lnapprox: "\u2A89",
      lne: "\u2A87",
      lneq: "\u2A87",
      lneqq: "\u2268",
      lnsim: "\u22E6",
      loang: "\u27EC",
      loarr: "\u21FD",
      lobrk: "\u27E6",
      longleftarrow: "\u27F5",
      longleftrightarrow: "\u27F7",
      longmapsto: "\u27FC",
      longrightarrow: "\u27F6",
      looparrowleft: "\u21AB",
      looparrowright: "\u21AC",
      lopar: "\u2985",
      lopf: "\u{1D55D}",
      loplus: "\u2A2D",
      lotimes: "\u2A34",
      lowast: "\u2217",
      lowbar: "_",
      loz: "\u25CA",
      lozenge: "\u25CA",
      lozf: "\u29EB",
      lpar: "(",
      lparlt: "\u2993",
      lrarr: "\u21C6",
      lrcorner: "\u231F",
      lrhar: "\u21CB",
      lrhard: "\u296D",
      lrm: "\u200E",
      lrtri: "\u22BF",
      lsaquo: "\u2039",
      lscr: "\u{1D4C1}",
      lsh: "\u21B0",
      lsim: "\u2272",
      lsime: "\u2A8D",
      lsimg: "\u2A8F",
      lsqb: "[",
      lsquo: "\u2018",
      lsquor: "\u201A",
      lstrok: "\u0142",
      l: "<",
      lt: "<",
      ltcc: "\u2AA6",
      ltcir: "\u2A79",
      ltdot: "\u22D6",
      lthree: "\u22CB",
      ltimes: "\u22C9",
      ltlarr: "\u2976",
      ltquest: "\u2A7B",
      ltrPar: "\u2996",
      ltri: "\u25C3",
      ltrie: "\u22B4",
      ltrif: "\u25C2",
      lurdshar: "\u294A",
      luruhar: "\u2966",
      lvertneqq: "\u2268\uFE00",
      lvnE: "\u2268\uFE00",
      mDDot: "\u223A",
      mac: "\xAF",
      macr: "\xAF",
      male: "\u2642",
      malt: "\u2720",
      maltese: "\u2720",
      map: "\u21A6",
      mapsto: "\u21A6",
      mapstodown: "\u21A7",
      mapstoleft: "\u21A4",
      mapstoup: "\u21A5",
      marker: "\u25AE",
      mcomma: "\u2A29",
      mcy: "\u043C",
      mdash: "\u2014",
      measuredangle: "\u2221",
      mfr: "\u{1D52A}",
      mho: "\u2127",
      micr: "\xB5",
      micro: "\xB5",
      mid: "\u2223",
      midast: "*",
      midcir: "\u2AF0",
      middo: "\xB7",
      middot: "\xB7",
      minus: "\u2212",
      minusb: "\u229F",
      minusd: "\u2238",
      minusdu: "\u2A2A",
      mlcp: "\u2ADB",
      mldr: "\u2026",
      mnplus: "\u2213",
      models: "\u22A7",
      mopf: "\u{1D55E}",
      mp: "\u2213",
      mscr: "\u{1D4C2}",
      mstpos: "\u223E",
      mu: "\u03BC",
      multimap: "\u22B8",
      mumap: "\u22B8",
      nGg: "\u22D9\u0338",
      nGt: "\u226B\u20D2",
      nGtv: "\u226B\u0338",
      nLeftarrow: "\u21CD",
      nLeftrightarrow: "\u21CE",
      nLl: "\u22D8\u0338",
      nLt: "\u226A\u20D2",
      nLtv: "\u226A\u0338",
      nRightarrow: "\u21CF",
      nVDash: "\u22AF",
      nVdash: "\u22AE",
      nabla: "\u2207",
      nacute: "\u0144",
      nang: "\u2220\u20D2",
      nap: "\u2249",
      napE: "\u2A70\u0338",
      napid: "\u224B\u0338",
      napos: "\u0149",
      napprox: "\u2249",
      natur: "\u266E",
      natural: "\u266E",
      naturals: "\u2115",
      nbs: "\xA0",
      nbsp: "\xA0",
      nbump: "\u224E\u0338",
      nbumpe: "\u224F\u0338",
      ncap: "\u2A43",
      ncaron: "\u0148",
      ncedil: "\u0146",
      ncong: "\u2247",
      ncongdot: "\u2A6D\u0338",
      ncup: "\u2A42",
      ncy: "\u043D",
      ndash: "\u2013",
      ne: "\u2260",
      neArr: "\u21D7",
      nearhk: "\u2924",
      nearr: "\u2197",
      nearrow: "\u2197",
      nedot: "\u2250\u0338",
      nequiv: "\u2262",
      nesear: "\u2928",
      nesim: "\u2242\u0338",
      nexist: "\u2204",
      nexists: "\u2204",
      nfr: "\u{1D52B}",
      ngE: "\u2267\u0338",
      nge: "\u2271",
      ngeq: "\u2271",
      ngeqq: "\u2267\u0338",
      ngeqslant: "\u2A7E\u0338",
      nges: "\u2A7E\u0338",
      ngsim: "\u2275",
      ngt: "\u226F",
      ngtr: "\u226F",
      nhArr: "\u21CE",
      nharr: "\u21AE",
      nhpar: "\u2AF2",
      ni: "\u220B",
      nis: "\u22FC",
      nisd: "\u22FA",
      niv: "\u220B",
      njcy: "\u045A",
      nlArr: "\u21CD",
      nlE: "\u2266\u0338",
      nlarr: "\u219A",
      nldr: "\u2025",
      nle: "\u2270",
      nleftarrow: "\u219A",
      nleftrightarrow: "\u21AE",
      nleq: "\u2270",
      nleqq: "\u2266\u0338",
      nleqslant: "\u2A7D\u0338",
      nles: "\u2A7D\u0338",
      nless: "\u226E",
      nlsim: "\u2274",
      nlt: "\u226E",
      nltri: "\u22EA",
      nltrie: "\u22EC",
      nmid: "\u2224",
      nopf: "\u{1D55F}",
      no: "\xAC",
      not: "\xAC",
      notin: "\u2209",
      notinE: "\u22F9\u0338",
      notindot: "\u22F5\u0338",
      notinva: "\u2209",
      notinvb: "\u22F7",
      notinvc: "\u22F6",
      notni: "\u220C",
      notniva: "\u220C",
      notnivb: "\u22FE",
      notnivc: "\u22FD",
      npar: "\u2226",
      nparallel: "\u2226",
      nparsl: "\u2AFD\u20E5",
      npart: "\u2202\u0338",
      npolint: "\u2A14",
      npr: "\u2280",
      nprcue: "\u22E0",
      npre: "\u2AAF\u0338",
      nprec: "\u2280",
      npreceq: "\u2AAF\u0338",
      nrArr: "\u21CF",
      nrarr: "\u219B",
      nrarrc: "\u2933\u0338",
      nrarrw: "\u219D\u0338",
      nrightarrow: "\u219B",
      nrtri: "\u22EB",
      nrtrie: "\u22ED",
      nsc: "\u2281",
      nsccue: "\u22E1",
      nsce: "\u2AB0\u0338",
      nscr: "\u{1D4C3}",
      nshortmid: "\u2224",
      nshortparallel: "\u2226",
      nsim: "\u2241",
      nsime: "\u2244",
      nsimeq: "\u2244",
      nsmid: "\u2224",
      nspar: "\u2226",
      nsqsube: "\u22E2",
      nsqsupe: "\u22E3",
      nsub: "\u2284",
      nsubE: "\u2AC5\u0338",
      nsube: "\u2288",
      nsubset: "\u2282\u20D2",
      nsubseteq: "\u2288",
      nsubseteqq: "\u2AC5\u0338",
      nsucc: "\u2281",
      nsucceq: "\u2AB0\u0338",
      nsup: "\u2285",
      nsupE: "\u2AC6\u0338",
      nsupe: "\u2289",
      nsupset: "\u2283\u20D2",
      nsupseteq: "\u2289",
      nsupseteqq: "\u2AC6\u0338",
      ntgl: "\u2279",
      ntild: "\xF1",
      ntilde: "\xF1",
      ntlg: "\u2278",
      ntriangleleft: "\u22EA",
      ntrianglelefteq: "\u22EC",
      ntriangleright: "\u22EB",
      ntrianglerighteq: "\u22ED",
      nu: "\u03BD",
      num: "#",
      numero: "\u2116",
      numsp: "\u2007",
      nvDash: "\u22AD",
      nvHarr: "\u2904",
      nvap: "\u224D\u20D2",
      nvdash: "\u22AC",
      nvge: "\u2265\u20D2",
      nvgt: ">\u20D2",
      nvinfin: "\u29DE",
      nvlArr: "\u2902",
      nvle: "\u2264\u20D2",
      nvlt: "<\u20D2",
      nvltrie: "\u22B4\u20D2",
      nvrArr: "\u2903",
      nvrtrie: "\u22B5\u20D2",
      nvsim: "\u223C\u20D2",
      nwArr: "\u21D6",
      nwarhk: "\u2923",
      nwarr: "\u2196",
      nwarrow: "\u2196",
      nwnear: "\u2927",
      oS: "\u24C8",
      oacut: "\xF3",
      oacute: "\xF3",
      oast: "\u229B",
      ocir: "\xF4",
      ocirc: "\xF4",
      ocy: "\u043E",
      odash: "\u229D",
      odblac: "\u0151",
      odiv: "\u2A38",
      odot: "\u2299",
      odsold: "\u29BC",
      oelig: "\u0153",
      ofcir: "\u29BF",
      ofr: "\u{1D52C}",
      ogon: "\u02DB",
      ograv: "\xF2",
      ograve: "\xF2",
      ogt: "\u29C1",
      ohbar: "\u29B5",
      ohm: "\u03A9",
      oint: "\u222E",
      olarr: "\u21BA",
      olcir: "\u29BE",
      olcross: "\u29BB",
      oline: "\u203E",
      olt: "\u29C0",
      omacr: "\u014D",
      omega: "\u03C9",
      omicron: "\u03BF",
      omid: "\u29B6",
      ominus: "\u2296",
      oopf: "\u{1D560}",
      opar: "\u29B7",
      operp: "\u29B9",
      oplus: "\u2295",
      or: "\u2228",
      orarr: "\u21BB",
      ord: "\xBA",
      order: "\u2134",
      orderof: "\u2134",
      ordf: "\xAA",
      ordm: "\xBA",
      origof: "\u22B6",
      oror: "\u2A56",
      orslope: "\u2A57",
      orv: "\u2A5B",
      oscr: "\u2134",
      oslas: "\xF8",
      oslash: "\xF8",
      osol: "\u2298",
      otild: "\xF5",
      otilde: "\xF5",
      otimes: "\u2297",
      otimesas: "\u2A36",
      oum: "\xF6",
      ouml: "\xF6",
      ovbar: "\u233D",
      par: "\xB6",
      para: "\xB6",
      parallel: "\u2225",
      parsim: "\u2AF3",
      parsl: "\u2AFD",
      part: "\u2202",
      pcy: "\u043F",
      percnt: "%",
      period: ".",
      permil: "\u2030",
      perp: "\u22A5",
      pertenk: "\u2031",
      pfr: "\u{1D52D}",
      phi: "\u03C6",
      phiv: "\u03D5",
      phmmat: "\u2133",
      phone: "\u260E",
      pi: "\u03C0",
      pitchfork: "\u22D4",
      piv: "\u03D6",
      planck: "\u210F",
      planckh: "\u210E",
      plankv: "\u210F",
      plus: "+",
      plusacir: "\u2A23",
      plusb: "\u229E",
      pluscir: "\u2A22",
      plusdo: "\u2214",
      plusdu: "\u2A25",
      pluse: "\u2A72",
      plusm: "\xB1",
      plusmn: "\xB1",
      plussim: "\u2A26",
      plustwo: "\u2A27",
      pm: "\xB1",
      pointint: "\u2A15",
      popf: "\u{1D561}",
      poun: "\xA3",
      pound: "\xA3",
      pr: "\u227A",
      prE: "\u2AB3",
      prap: "\u2AB7",
      prcue: "\u227C",
      pre: "\u2AAF",
      prec: "\u227A",
      precapprox: "\u2AB7",
      preccurlyeq: "\u227C",
      preceq: "\u2AAF",
      precnapprox: "\u2AB9",
      precneqq: "\u2AB5",
      precnsim: "\u22E8",
      precsim: "\u227E",
      prime: "\u2032",
      primes: "\u2119",
      prnE: "\u2AB5",
      prnap: "\u2AB9",
      prnsim: "\u22E8",
      prod: "\u220F",
      profalar: "\u232E",
      profline: "\u2312",
      profsurf: "\u2313",
      prop: "\u221D",
      propto: "\u221D",
      prsim: "\u227E",
      prurel: "\u22B0",
      pscr: "\u{1D4C5}",
      psi: "\u03C8",
      puncsp: "\u2008",
      qfr: "\u{1D52E}",
      qint: "\u2A0C",
      qopf: "\u{1D562}",
      qprime: "\u2057",
      qscr: "\u{1D4C6}",
      quaternions: "\u210D",
      quatint: "\u2A16",
      quest: "?",
      questeq: "\u225F",
      quo: '"',
      quot: '"',
      rAarr: "\u21DB",
      rArr: "\u21D2",
      rAtail: "\u291C",
      rBarr: "\u290F",
      rHar: "\u2964",
      race: "\u223D\u0331",
      racute: "\u0155",
      radic: "\u221A",
      raemptyv: "\u29B3",
      rang: "\u27E9",
      rangd: "\u2992",
      range: "\u29A5",
      rangle: "\u27E9",
      raqu: "\xBB",
      raquo: "\xBB",
      rarr: "\u2192",
      rarrap: "\u2975",
      rarrb: "\u21E5",
      rarrbfs: "\u2920",
      rarrc: "\u2933",
      rarrfs: "\u291E",
      rarrhk: "\u21AA",
      rarrlp: "\u21AC",
      rarrpl: "\u2945",
      rarrsim: "\u2974",
      rarrtl: "\u21A3",
      rarrw: "\u219D",
      ratail: "\u291A",
      ratio: "\u2236",
      rationals: "\u211A",
      rbarr: "\u290D",
      rbbrk: "\u2773",
      rbrace: "}",
      rbrack: "]",
      rbrke: "\u298C",
      rbrksld: "\u298E",
      rbrkslu: "\u2990",
      rcaron: "\u0159",
      rcedil: "\u0157",
      rceil: "\u2309",
      rcub: "}",
      rcy: "\u0440",
      rdca: "\u2937",
      rdldhar: "\u2969",
      rdquo: "\u201D",
      rdquor: "\u201D",
      rdsh: "\u21B3",
      real: "\u211C",
      realine: "\u211B",
      realpart: "\u211C",
      reals: "\u211D",
      rect: "\u25AD",
      re: "\xAE",
      reg: "\xAE",
      rfisht: "\u297D",
      rfloor: "\u230B",
      rfr: "\u{1D52F}",
      rhard: "\u21C1",
      rharu: "\u21C0",
      rharul: "\u296C",
      rho: "\u03C1",
      rhov: "\u03F1",
      rightarrow: "\u2192",
      rightarrowtail: "\u21A3",
      rightharpoondown: "\u21C1",
      rightharpoonup: "\u21C0",
      rightleftarrows: "\u21C4",
      rightleftharpoons: "\u21CC",
      rightrightarrows: "\u21C9",
      rightsquigarrow: "\u219D",
      rightthreetimes: "\u22CC",
      ring: "\u02DA",
      risingdotseq: "\u2253",
      rlarr: "\u21C4",
      rlhar: "\u21CC",
      rlm: "\u200F",
      rmoust: "\u23B1",
      rmoustache: "\u23B1",
      rnmid: "\u2AEE",
      roang: "\u27ED",
      roarr: "\u21FE",
      robrk: "\u27E7",
      ropar: "\u2986",
      ropf: "\u{1D563}",
      roplus: "\u2A2E",
      rotimes: "\u2A35",
      rpar: ")",
      rpargt: "\u2994",
      rppolint: "\u2A12",
      rrarr: "\u21C9",
      rsaquo: "\u203A",
      rscr: "\u{1D4C7}",
      rsh: "\u21B1",
      rsqb: "]",
      rsquo: "\u2019",
      rsquor: "\u2019",
      rthree: "\u22CC",
      rtimes: "\u22CA",
      rtri: "\u25B9",
      rtrie: "\u22B5",
      rtrif: "\u25B8",
      rtriltri: "\u29CE",
      ruluhar: "\u2968",
      rx: "\u211E",
      sacute: "\u015B",
      sbquo: "\u201A",
      sc: "\u227B",
      scE: "\u2AB4",
      scap: "\u2AB8",
      scaron: "\u0161",
      sccue: "\u227D",
      sce: "\u2AB0",
      scedil: "\u015F",
      scirc: "\u015D",
      scnE: "\u2AB6",
      scnap: "\u2ABA",
      scnsim: "\u22E9",
      scpolint: "\u2A13",
      scsim: "\u227F",
      scy: "\u0441",
      sdot: "\u22C5",
      sdotb: "\u22A1",
      sdote: "\u2A66",
      seArr: "\u21D8",
      searhk: "\u2925",
      searr: "\u2198",
      searrow: "\u2198",
      sec: "\xA7",
      sect: "\xA7",
      semi: ";",
      seswar: "\u2929",
      setminus: "\u2216",
      setmn: "\u2216",
      sext: "\u2736",
      sfr: "\u{1D530}",
      sfrown: "\u2322",
      sharp: "\u266F",
      shchcy: "\u0449",
      shcy: "\u0448",
      shortmid: "\u2223",
      shortparallel: "\u2225",
      sh: "\xAD",
      shy: "\xAD",
      sigma: "\u03C3",
      sigmaf: "\u03C2",
      sigmav: "\u03C2",
      sim: "\u223C",
      simdot: "\u2A6A",
      sime: "\u2243",
      simeq: "\u2243",
      simg: "\u2A9E",
      simgE: "\u2AA0",
      siml: "\u2A9D",
      simlE: "\u2A9F",
      simne: "\u2246",
      simplus: "\u2A24",
      simrarr: "\u2972",
      slarr: "\u2190",
      smallsetminus: "\u2216",
      smashp: "\u2A33",
      smeparsl: "\u29E4",
      smid: "\u2223",
      smile: "\u2323",
      smt: "\u2AAA",
      smte: "\u2AAC",
      smtes: "\u2AAC\uFE00",
      softcy: "\u044C",
      sol: "/",
      solb: "\u29C4",
      solbar: "\u233F",
      sopf: "\u{1D564}",
      spades: "\u2660",
      spadesuit: "\u2660",
      spar: "\u2225",
      sqcap: "\u2293",
      sqcaps: "\u2293\uFE00",
      sqcup: "\u2294",
      sqcups: "\u2294\uFE00",
      sqsub: "\u228F",
      sqsube: "\u2291",
      sqsubset: "\u228F",
      sqsubseteq: "\u2291",
      sqsup: "\u2290",
      sqsupe: "\u2292",
      sqsupset: "\u2290",
      sqsupseteq: "\u2292",
      squ: "\u25A1",
      square: "\u25A1",
      squarf: "\u25AA",
      squf: "\u25AA",
      srarr: "\u2192",
      sscr: "\u{1D4C8}",
      ssetmn: "\u2216",
      ssmile: "\u2323",
      sstarf: "\u22C6",
      star: "\u2606",
      starf: "\u2605",
      straightepsilon: "\u03F5",
      straightphi: "\u03D5",
      strns: "\xAF",
      sub: "\u2282",
      subE: "\u2AC5",
      subdot: "\u2ABD",
      sube: "\u2286",
      subedot: "\u2AC3",
      submult: "\u2AC1",
      subnE: "\u2ACB",
      subne: "\u228A",
      subplus: "\u2ABF",
      subrarr: "\u2979",
      subset: "\u2282",
      subseteq: "\u2286",
      subseteqq: "\u2AC5",
      subsetneq: "\u228A",
      subsetneqq: "\u2ACB",
      subsim: "\u2AC7",
      subsub: "\u2AD5",
      subsup: "\u2AD3",
      succ: "\u227B",
      succapprox: "\u2AB8",
      succcurlyeq: "\u227D",
      succeq: "\u2AB0",
      succnapprox: "\u2ABA",
      succneqq: "\u2AB6",
      succnsim: "\u22E9",
      succsim: "\u227F",
      sum: "\u2211",
      sung: "\u266A",
      sup: "\u2283",
      sup1: "\xB9",
      sup2: "\xB2",
      sup3: "\xB3",
      supE: "\u2AC6",
      supdot: "\u2ABE",
      supdsub: "\u2AD8",
      supe: "\u2287",
      supedot: "\u2AC4",
      suphsol: "\u27C9",
      suphsub: "\u2AD7",
      suplarr: "\u297B",
      supmult: "\u2AC2",
      supnE: "\u2ACC",
      supne: "\u228B",
      supplus: "\u2AC0",
      supset: "\u2283",
      supseteq: "\u2287",
      supseteqq: "\u2AC6",
      supsetneq: "\u228B",
      supsetneqq: "\u2ACC",
      supsim: "\u2AC8",
      supsub: "\u2AD4",
      supsup: "\u2AD6",
      swArr: "\u21D9",
      swarhk: "\u2926",
      swarr: "\u2199",
      swarrow: "\u2199",
      swnwar: "\u292A",
      szli: "\xDF",
      szlig: "\xDF",
      target: "\u2316",
      tau: "\u03C4",
      tbrk: "\u23B4",
      tcaron: "\u0165",
      tcedil: "\u0163",
      tcy: "\u0442",
      tdot: "\u20DB",
      telrec: "\u2315",
      tfr: "\u{1D531}",
      there4: "\u2234",
      therefore: "\u2234",
      theta: "\u03B8",
      thetasym: "\u03D1",
      thetav: "\u03D1",
      thickapprox: "\u2248",
      thicksim: "\u223C",
      thinsp: "\u2009",
      thkap: "\u2248",
      thksim: "\u223C",
      thor: "\xFE",
      thorn: "\xFE",
      tilde: "\u02DC",
      time: "\xD7",
      times: "\xD7",
      timesb: "\u22A0",
      timesbar: "\u2A31",
      timesd: "\u2A30",
      tint: "\u222D",
      toea: "\u2928",
      top: "\u22A4",
      topbot: "\u2336",
      topcir: "\u2AF1",
      topf: "\u{1D565}",
      topfork: "\u2ADA",
      tosa: "\u2929",
      tprime: "\u2034",
      trade: "\u2122",
      triangle: "\u25B5",
      triangledown: "\u25BF",
      triangleleft: "\u25C3",
      trianglelefteq: "\u22B4",
      triangleq: "\u225C",
      triangleright: "\u25B9",
      trianglerighteq: "\u22B5",
      tridot: "\u25EC",
      trie: "\u225C",
      triminus: "\u2A3A",
      triplus: "\u2A39",
      trisb: "\u29CD",
      tritime: "\u2A3B",
      trpezium: "\u23E2",
      tscr: "\u{1D4C9}",
      tscy: "\u0446",
      tshcy: "\u045B",
      tstrok: "\u0167",
      twixt: "\u226C",
      twoheadleftarrow: "\u219E",
      twoheadrightarrow: "\u21A0",
      uArr: "\u21D1",
      uHar: "\u2963",
      uacut: "\xFA",
      uacute: "\xFA",
      uarr: "\u2191",
      ubrcy: "\u045E",
      ubreve: "\u016D",
      ucir: "\xFB",
      ucirc: "\xFB",
      ucy: "\u0443",
      udarr: "\u21C5",
      udblac: "\u0171",
      udhar: "\u296E",
      ufisht: "\u297E",
      ufr: "\u{1D532}",
      ugrav: "\xF9",
      ugrave: "\xF9",
      uharl: "\u21BF",
      uharr: "\u21BE",
      uhblk: "\u2580",
      ulcorn: "\u231C",
      ulcorner: "\u231C",
      ulcrop: "\u230F",
      ultri: "\u25F8",
      umacr: "\u016B",
      um: "\xA8",
      uml: "\xA8",
      uogon: "\u0173",
      uopf: "\u{1D566}",
      uparrow: "\u2191",
      updownarrow: "\u2195",
      upharpoonleft: "\u21BF",
      upharpoonright: "\u21BE",
      uplus: "\u228E",
      upsi: "\u03C5",
      upsih: "\u03D2",
      upsilon: "\u03C5",
      upuparrows: "\u21C8",
      urcorn: "\u231D",
      urcorner: "\u231D",
      urcrop: "\u230E",
      uring: "\u016F",
      urtri: "\u25F9",
      uscr: "\u{1D4CA}",
      utdot: "\u22F0",
      utilde: "\u0169",
      utri: "\u25B5",
      utrif: "\u25B4",
      uuarr: "\u21C8",
      uum: "\xFC",
      uuml: "\xFC",
      uwangle: "\u29A7",
      vArr: "\u21D5",
      vBar: "\u2AE8",
      vBarv: "\u2AE9",
      vDash: "\u22A8",
      vangrt: "\u299C",
      varepsilon: "\u03F5",
      varkappa: "\u03F0",
      varnothing: "\u2205",
      varphi: "\u03D5",
      varpi: "\u03D6",
      varpropto: "\u221D",
      varr: "\u2195",
      varrho: "\u03F1",
      varsigma: "\u03C2",
      varsubsetneq: "\u228A\uFE00",
      varsubsetneqq: "\u2ACB\uFE00",
      varsupsetneq: "\u228B\uFE00",
      varsupsetneqq: "\u2ACC\uFE00",
      vartheta: "\u03D1",
      vartriangleleft: "\u22B2",
      vartriangleright: "\u22B3",
      vcy: "\u0432",
      vdash: "\u22A2",
      vee: "\u2228",
      veebar: "\u22BB",
      veeeq: "\u225A",
      vellip: "\u22EE",
      verbar: "|",
      vert: "|",
      vfr: "\u{1D533}",
      vltri: "\u22B2",
      vnsub: "\u2282\u20D2",
      vnsup: "\u2283\u20D2",
      vopf: "\u{1D567}",
      vprop: "\u221D",
      vrtri: "\u22B3",
      vscr: "\u{1D4CB}",
      vsubnE: "\u2ACB\uFE00",
      vsubne: "\u228A\uFE00",
      vsupnE: "\u2ACC\uFE00",
      vsupne: "\u228B\uFE00",
      vzigzag: "\u299A",
      wcirc: "\u0175",
      wedbar: "\u2A5F",
      wedge: "\u2227",
      wedgeq: "\u2259",
      weierp: "\u2118",
      wfr: "\u{1D534}",
      wopf: "\u{1D568}",
      wp: "\u2118",
      wr: "\u2240",
      wreath: "\u2240",
      wscr: "\u{1D4CC}",
      xcap: "\u22C2",
      xcirc: "\u25EF",
      xcup: "\u22C3",
      xdtri: "\u25BD",
      xfr: "\u{1D535}",
      xhArr: "\u27FA",
      xharr: "\u27F7",
      xi: "\u03BE",
      xlArr: "\u27F8",
      xlarr: "\u27F5",
      xmap: "\u27FC",
      xnis: "\u22FB",
      xodot: "\u2A00",
      xopf: "\u{1D569}",
      xoplus: "\u2A01",
      xotime: "\u2A02",
      xrArr: "\u27F9",
      xrarr: "\u27F6",
      xscr: "\u{1D4CD}",
      xsqcup: "\u2A06",
      xuplus: "\u2A04",
      xutri: "\u25B3",
      xvee: "\u22C1",
      xwedge: "\u22C0",
      yacut: "\xFD",
      yacute: "\xFD",
      yacy: "\u044F",
      ycirc: "\u0177",
      ycy: "\u044B",
      ye: "\xA5",
      yen: "\xA5",
      yfr: "\u{1D536}",
      yicy: "\u0457",
      yopf: "\u{1D56A}",
      yscr: "\u{1D4CE}",
      yucy: "\u044E",
      yum: "\xFF",
      yuml: "\xFF",
      zacute: "\u017A",
      zcaron: "\u017E",
      zcy: "\u0437",
      zdot: "\u017C",
      zeetrf: "\u2128",
      zeta: "\u03B6",
      zfr: "\u{1D537}",
      zhcy: "\u0436",
      zigrarr: "\u21DD",
      zopf: "\u{1D56B}",
      zscr: "\u{1D4CF}",
      zwj: "\u200D",
      zwnj: "\u200C"
    };
  }
});

// node_modules/decode-named-character-reference/index.js
function decodeNamedCharacterReference(value) {
  return own5.call(characterEntities, value) ? characterEntities[value] : false;
}
var own5;
var init_decode_named_character_reference = __esm({
  "node_modules/decode-named-character-reference/index.js"() {
    init_character_entities();
    own5 = {}.hasOwnProperty;
  }
});

// node_modules/parse-entities/lib/index.js
function parseEntities(value, options = {}) {
  const additional = typeof options.additional === "string" ? options.additional.charCodeAt(0) : options.additional;
  const result = [];
  let index2 = 0;
  let lines = -1;
  let queue = "";
  let point4;
  let indent2;
  if (options.position) {
    if ("start" in options.position || "indent" in options.position) {
      indent2 = options.position.indent;
      point4 = options.position.start;
    } else {
      point4 = options.position;
    }
  }
  let line = (point4 ? point4.line : 0) || 1;
  let column = (point4 ? point4.column : 0) || 1;
  let previous2 = now();
  let character;
  index2--;
  while (++index2 <= value.length) {
    if (character === 10) {
      column = (indent2 ? indent2[lines] : 0) || 1;
    }
    character = value.charCodeAt(index2);
    if (character === 38) {
      const following = value.charCodeAt(index2 + 1);
      if (following === 9 || following === 10 || following === 12 || following === 32 || following === 38 || following === 60 || Number.isNaN(following) || additional && following === additional) {
        queue += fromCharCode(character);
        column++;
        continue;
      }
      const start3 = index2 + 1;
      let begin = start3;
      let end = start3;
      let type;
      if (following === 35) {
        end = ++begin;
        const following2 = value.charCodeAt(end);
        if (following2 === 88 || following2 === 120) {
          type = "hexadecimal";
          end = ++begin;
        } else {
          type = "decimal";
        }
      } else {
        type = "named";
      }
      let characterReferenceCharacters = "";
      let characterReference2 = "";
      let characters2 = "";
      const test = type === "named" ? isAlphanumerical : type === "decimal" ? isDecimal : isHexadecimal;
      end--;
      while (++end <= value.length) {
        const following2 = value.charCodeAt(end);
        if (!test(following2)) {
          break;
        }
        characters2 += fromCharCode(following2);
        if (type === "named" && characterEntitiesLegacy.includes(characters2)) {
          characterReferenceCharacters = characters2;
          characterReference2 = decodeNamedCharacterReference(characters2);
        }
      }
      let terminated = value.charCodeAt(end) === 59;
      if (terminated) {
        end++;
        const namedReference = type === "named" ? decodeNamedCharacterReference(characters2) : false;
        if (namedReference) {
          characterReferenceCharacters = characters2;
          characterReference2 = namedReference;
        }
      }
      let diff = 1 + end - start3;
      let reference = "";
      if (!terminated && options.nonTerminated === false) {
      } else if (!characters2) {
        if (type !== "named") {
          warning(4, diff);
        }
      } else if (type === "named") {
        if (terminated && !characterReference2) {
          warning(5, 1);
        } else {
          if (characterReferenceCharacters !== characters2) {
            end = begin + characterReferenceCharacters.length;
            diff = 1 + end - begin;
            terminated = false;
          }
          if (!terminated) {
            const reason = characterReferenceCharacters ? 1 : 3;
            if (options.attribute) {
              const following2 = value.charCodeAt(end);
              if (following2 === 61) {
                warning(reason, diff);
                characterReference2 = "";
              } else if (isAlphanumerical(following2)) {
                characterReference2 = "";
              } else {
                warning(reason, diff);
              }
            } else {
              warning(reason, diff);
            }
          }
        }
        reference = characterReference2;
      } else {
        if (!terminated) {
          warning(2, diff);
        }
        let referenceCode = Number.parseInt(characters2, type === "hexadecimal" ? 16 : 10);
        if (prohibited(referenceCode)) {
          warning(7, diff);
          reference = fromCharCode(65533);
        } else if (referenceCode in characterReferenceInvalid) {
          warning(6, diff);
          reference = characterReferenceInvalid[referenceCode];
        } else {
          let output = "";
          if (disallowed(referenceCode)) {
            warning(6, diff);
          }
          if (referenceCode > 65535) {
            referenceCode -= 65536;
            output += fromCharCode(referenceCode >>> (10 & 1023) | 55296);
            referenceCode = 56320 | referenceCode & 1023;
          }
          reference = output + fromCharCode(referenceCode);
        }
      }
      if (reference) {
        flush();
        previous2 = now();
        index2 = end - 1;
        column += end - start3 + 1;
        result.push(reference);
        const next = now();
        next.offset++;
        if (options.reference) {
          options.reference.call(options.referenceContext, reference, { start: previous2, end: next }, value.slice(start3 - 1, end));
        }
        previous2 = next;
      } else {
        characters2 = value.slice(start3 - 1, end);
        queue += characters2;
        column += characters2.length;
        index2 = end - 1;
      }
    } else {
      if (character === 10) {
        line++;
        lines++;
        column = 0;
      }
      if (Number.isNaN(character)) {
        flush();
      } else {
        queue += fromCharCode(character);
        column++;
      }
    }
  }
  return result.join("");
  function now() {
    return {
      line,
      column,
      offset: index2 + ((point4 ? point4.offset : 0) || 0)
    };
  }
  function warning(code2, offset2) {
    let position3;
    if (options.warning) {
      position3 = now();
      position3.column += offset2;
      position3.offset += offset2;
      options.warning.call(options.warningContext, messages[code2], position3, code2);
    }
  }
  function flush() {
    if (queue) {
      result.push(queue);
      if (options.text) {
        options.text.call(options.textContext, queue, {
          start: previous2,
          end: now()
        });
      }
      queue = "";
    }
  }
}
function prohibited(code2) {
  return code2 >= 55296 && code2 <= 57343 || code2 > 1114111;
}
function disallowed(code2) {
  return code2 >= 1 && code2 <= 8 || code2 === 11 || code2 >= 13 && code2 <= 31 || code2 >= 127 && code2 <= 159 || code2 >= 64976 && code2 <= 65007 || (code2 & 65535) === 65535 || (code2 & 65535) === 65534;
}
var fromCharCode, messages;
var init_lib3 = __esm({
  "node_modules/parse-entities/lib/index.js"() {
    init_character_entities_legacy();
    init_character_reference_invalid();
    init_is_decimal();
    init_is_hexadecimal();
    init_is_alphanumerical();
    init_decode_named_character_reference();
    fromCharCode = String.fromCharCode;
    messages = [
      "",
      "Named character references must be terminated by a semicolon",
      "Numeric character references must be terminated by a semicolon",
      "Named character references cannot be empty",
      "Numeric character references cannot be empty",
      "Named character references must be known",
      "Numeric character references cannot be disallowed",
      "Numeric character references cannot be outside the permissible Unicode range"
    ];
  }
});

// node_modules/parse-entities/index.js
var init_parse_entities = __esm({
  "node_modules/parse-entities/index.js"() {
    init_lib3();
  }
});

// node_modules/unist-util-stringify-position/index.js
function stringifyPosition(value) {
  if (!value || typeof value !== "object") {
    return "";
  }
  if ("position" in value || "type" in value) {
    return position(value.position);
  }
  if ("start" in value || "end" in value) {
    return position(value);
  }
  if ("line" in value || "column" in value) {
    return point(value);
  }
  return "";
}
function point(point4) {
  return index(point4 && point4.line) + ":" + index(point4 && point4.column);
}
function position(pos) {
  return point(pos && pos.start) + "-" + point(pos && pos.end);
}
function index(value) {
  return value && typeof value === "number" ? value : 1;
}
var init_unist_util_stringify_position = __esm({
  "node_modules/unist-util-stringify-position/index.js"() {
  }
});

// node_modules/vfile-message/index.js
var VFileMessage;
var init_vfile_message = __esm({
  "node_modules/vfile-message/index.js"() {
    init_unist_util_stringify_position();
    VFileMessage = class extends Error {
      constructor(reason, place, origin) {
        const parts = [null, null];
        let position3 = {
          start: { line: null, column: null },
          end: { line: null, column: null }
        };
        super();
        if (typeof place === "string") {
          origin = place;
          place = void 0;
        }
        if (typeof origin === "string") {
          const index2 = origin.indexOf(":");
          if (index2 === -1) {
            parts[1] = origin;
          } else {
            parts[0] = origin.slice(0, index2);
            parts[1] = origin.slice(index2 + 1);
          }
        }
        if (place) {
          if ("type" in place || "position" in place) {
            if (place.position) {
              position3 = place.position;
            }
          } else if ("start" in place || "end" in place) {
            position3 = place;
          } else if ("line" in place || "column" in place) {
            position3.start = place;
          }
        }
        this.name = stringifyPosition(place) || "1:1";
        this.message = typeof reason === "object" ? reason.message : reason;
        this.stack = typeof reason === "object" ? reason.stack : "";
        this.reason = this.message;
        this.fatal;
        this.line = position3.start.line;
        this.column = position3.start.column;
        this.source = parts[0];
        this.ruleId = parts[1];
        this.position = position3;
        this.actual;
        this.expected;
        this.file;
        this.url;
        this.note;
      }
    };
    VFileMessage.prototype.file = "";
    VFileMessage.prototype.name = "";
    VFileMessage.prototype.reason = "";
    VFileMessage.prototype.message = "";
    VFileMessage.prototype.stack = "";
    VFileMessage.prototype.fatal = null;
    VFileMessage.prototype.column = null;
    VFileMessage.prototype.line = null;
    VFileMessage.prototype.source = null;
    VFileMessage.prototype.ruleId = null;
    VFileMessage.prototype.position = null;
  }
});

// node_modules/mdast-util-to-markdown/lib/util/track.js
function track(options_) {
  const options = options_ || {};
  const now = options.now || {};
  let lineShift = options.lineShift || 0;
  let line = now.line || 1;
  let column = now.column || 1;
  return { move, current: current2, shift };
  function current2() {
    return { now: { line, column }, lineShift };
  }
  function shift(value) {
    lineShift += value;
  }
  function move(value = "") {
    const chunks = value.split(/\r?\n|\r/g);
    const tail = chunks[chunks.length - 1];
    line += chunks.length - 1;
    column = chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift;
    return value;
  }
}
var init_track = __esm({
  "node_modules/mdast-util-to-markdown/lib/util/track.js"() {
  }
});

// node_modules/mdast-util-to-markdown/lib/util/container-flow.js
function containerFlow(parent, context, safeOptions) {
  const indexStack = context.indexStack;
  const children2 = parent.children || [];
  const tracker = track(safeOptions);
  const results2 = [];
  let index2 = -1;
  indexStack.push(-1);
  while (++index2 < children2.length) {
    const child = children2[index2];
    indexStack[indexStack.length - 1] = index2;
    results2.push(tracker.move(context.handle(child, parent, context, __spreadValues({
      before: "\n",
      after: "\n"
    }, tracker.current()))));
    if (child.type !== "list") {
      context.bulletLastUsed = void 0;
    }
    if (index2 < children2.length - 1) {
      results2.push(tracker.move(between(child, children2[index2 + 1])));
    }
  }
  indexStack.pop();
  return results2.join("");
  function between(left, right) {
    let index3 = context.join.length;
    while (index3--) {
      const result = context.join[index3](left, right, parent, context);
      if (result === true || result === 1) {
        break;
      }
      if (typeof result === "number") {
        return "\n".repeat(1 + result);
      }
      if (result === false) {
        return "\n\n<!---->\n\n";
      }
    }
    return "\n\n";
  }
}
var init_container_flow = __esm({
  "node_modules/mdast-util-to-markdown/lib/util/container-flow.js"() {
    init_track();
  }
});

// node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js
function containerPhrasing(parent, context, safeOptions) {
  const indexStack = context.indexStack;
  const children2 = parent.children || [];
  const results2 = [];
  let index2 = -1;
  let before = safeOptions.before;
  indexStack.push(-1);
  let tracker = track(safeOptions);
  while (++index2 < children2.length) {
    const child = children2[index2];
    let after;
    indexStack[indexStack.length - 1] = index2;
    if (index2 + 1 < children2.length) {
      let handle = context.handle.handlers[children2[index2 + 1].type];
      if (handle && handle.peek)
        handle = handle.peek;
      after = handle ? handle(children2[index2 + 1], parent, context, __spreadValues({
        before: "",
        after: ""
      }, tracker.current())).charAt(0) : "";
    } else {
      after = safeOptions.after;
    }
    if (results2.length > 0 && (before === "\r" || before === "\n") && child.type === "html") {
      results2[results2.length - 1] = results2[results2.length - 1].replace(/(\r?\n|\r)$/, " ");
      before = " ";
      tracker = track(safeOptions);
      tracker.move(results2.join(""));
    }
    results2.push(tracker.move(context.handle(child, parent, context, __spreadProps(__spreadValues({}, tracker.current()), {
      before,
      after
    }))));
    before = results2[results2.length - 1].slice(-1);
  }
  indexStack.pop();
  return results2.join("");
}
var init_container_phrasing = __esm({
  "node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js"() {
    init_track();
  }
});

// node_modules/mdast-util-to-markdown/lib/util/check-quote.js
function checkQuote(context) {
  const marker = context.options.quote || '"';
  if (marker !== '"' && marker !== "'") {
    throw new Error("Cannot serialize title with `" + marker + "` for `options.quote`, expected `\"`, or `'`");
  }
  return marker;
}
var init_check_quote = __esm({
  "node_modules/mdast-util-to-markdown/lib/util/check-quote.js"() {
  }
});

// node_modules/mdast-util-to-markdown/lib/util/indent-lines.js
function indentLines(value, map3) {
  const result = [];
  let start3 = 0;
  let line = 0;
  let match;
  while (match = eol.exec(value)) {
    one5(value.slice(start3, match.index));
    result.push(match[0]);
    start3 = match.index + match[0].length;
    line++;
  }
  one5(value.slice(start3));
  return result.join("");
  function one5(value2) {
    result.push(map3(value2, line, !value2));
  }
}
var eol;
var init_indent_lines = __esm({
  "node_modules/mdast-util-to-markdown/lib/util/indent-lines.js"() {
    eol = /\r?\n|\r/g;
  }
});

// node_modules/mdast-util-mdx-jsx/index.js
function buffer() {
  this.buffer();
}
function data(token) {
  this.config.enter.data.call(this, token);
  this.config.exit.data.call(this, token);
}
function enterMdxJsxTag(token) {
  const tag2 = { name: null, attributes: [], start: token.start, end: token.end };
  if (!this.getData("mdxJsxTagStack"))
    this.setData("mdxJsxTagStack", []);
  this.setData("mdxJsxTag", tag2);
  this.buffer();
}
function enterMdxJsxTagClosingMarker(token) {
  const stack = this.getData("mdxJsxTagStack");
  if (stack.length === 0) {
    throw new VFileMessage("Unexpected closing slash `/` in tag, expected an open tag first", { start: token.start, end: token.end }, "mdast-util-mdx-jsx:unexpected-closing-slash");
  }
}
function enterMdxJsxTagAnyAttribute(token) {
  const tag2 = this.getData("mdxJsxTag");
  if (tag2.close) {
    throw new VFileMessage("Unexpected attribute in closing tag, expected the end of the tag", { start: token.start, end: token.end }, "mdast-util-mdx-jsx:unexpected-attribute");
  }
}
function enterMdxJsxTagSelfClosingMarker(token) {
  const tag2 = this.getData("mdxJsxTag");
  if (tag2.close) {
    throw new VFileMessage("Unexpected self-closing slash `/` in closing tag, expected the end of the tag", { start: token.start, end: token.end }, "mdast-util-mdx-jsx:unexpected-self-closing-slash");
  }
}
function exitMdxJsxTagClosingMarker() {
  const tag2 = this.getData("mdxJsxTag");
  tag2.close = true;
}
function exitMdxJsxTagNamePrimary(token) {
  const tag2 = this.getData("mdxJsxTag");
  tag2.name = this.sliceSerialize(token);
}
function exitMdxJsxTagNameMember(token) {
  const tag2 = this.getData("mdxJsxTag");
  tag2.name += "." + this.sliceSerialize(token);
}
function exitMdxJsxTagNameLocal(token) {
  const tag2 = this.getData("mdxJsxTag");
  tag2.name += ":" + this.sliceSerialize(token);
}
function enterMdxJsxTagAttribute(token) {
  const tag2 = this.getData("mdxJsxTag");
  enterMdxJsxTagAnyAttribute.call(this, token);
  tag2.attributes.push({ type: "mdxJsxAttribute", name: "", value: null });
}
function enterMdxJsxTagExpressionAttribute(token) {
  const tag2 = this.getData("mdxJsxTag");
  enterMdxJsxTagAnyAttribute.call(this, token);
  tag2.attributes.push({ type: "mdxJsxExpressionAttribute", value: "" });
  this.buffer();
}
function exitMdxJsxTagExpressionAttribute(token) {
  const tag2 = this.getData("mdxJsxTag");
  const tail = tag2.attributes[tag2.attributes.length - 1];
  const estree = token.estree;
  tail.value = this.resume();
  if (estree) {
    tail.data = { estree };
  }
}
function exitMdxJsxTagAttributeNamePrimary(token) {
  const tag2 = this.getData("mdxJsxTag");
  const node = tag2.attributes[tag2.attributes.length - 1];
  node.name = this.sliceSerialize(token);
}
function exitMdxJsxTagAttributeNameLocal(token) {
  const tag2 = this.getData("mdxJsxTag");
  const node = tag2.attributes[tag2.attributes.length - 1];
  node.name += ":" + this.sliceSerialize(token);
}
function exitMdxJsxTagAttributeValueLiteral() {
  const tag2 = this.getData("mdxJsxTag");
  tag2.attributes[tag2.attributes.length - 1].value = parseEntities(this.resume(), { nonTerminated: false });
}
function exitMdxJsxTagAttributeValueExpression(token) {
  const tag2 = this.getData("mdxJsxTag");
  const tail = tag2.attributes[tag2.attributes.length - 1];
  const node = { type: "mdxJsxAttributeValueExpression", value: this.resume() };
  const estree = token.estree;
  if (estree) {
    node.data = { estree };
  }
  tail.value = node;
}
function exitMdxJsxTagSelfClosingMarker() {
  const tag2 = this.getData("mdxJsxTag");
  tag2.selfClosing = true;
}
function exitMdxJsxTag(token) {
  const tag2 = this.getData("mdxJsxTag");
  const stack = this.getData("mdxJsxTagStack");
  const tail = stack[stack.length - 1];
  if (tag2.close && tail.name !== tag2.name) {
    throw new VFileMessage("Unexpected closing tag `" + serializeAbbreviatedTag(tag2) + "`, expected corresponding closing tag for `" + serializeAbbreviatedTag(tail) + "` (" + stringifyPosition(tail) + ")", { start: token.start, end: token.end }, "mdast-util-mdx-jsx:end-tag-mismatch");
  }
  this.resume();
  if (tag2.close) {
    stack.pop();
  } else {
    this.enter({
      type: token.type === "mdxJsxTextTag" ? "mdxJsxTextElement" : "mdxJsxFlowElement",
      name: tag2.name,
      attributes: tag2.attributes,
      children: []
    }, token, onErrorRightIsTag);
  }
  if (tag2.selfClosing || tag2.close) {
    this.exit(token, onErrorLeftIsTag);
  } else {
    stack.push(tag2);
  }
}
function onErrorRightIsTag(closing2, open) {
  const tag2 = this.getData("mdxJsxTag");
  const place = closing2 ? " before the end of `" + closing2.type + "`" : "";
  const position3 = closing2 ? { start: closing2.start, end: closing2.end } : void 0;
  throw new VFileMessage("Expected a closing tag for `" + serializeAbbreviatedTag(tag2) + "` (" + stringifyPosition({ start: open.start, end: open.end }) + ")" + place, position3, "mdast-util-mdx-jsx:end-tag-mismatch");
}
function onErrorLeftIsTag(a2, b2) {
  const tag2 = this.getData("mdxJsxTag");
  throw new VFileMessage("Expected the closing tag `" + serializeAbbreviatedTag(tag2) + "` either after the end of `" + b2.type + "` (" + stringifyPosition(b2.end) + ") or another opening tag after the start of `" + b2.type + "` (" + stringifyPosition(b2.start) + ")", { start: a2.start, end: a2.end }, "mdast-util-mdx-jsx:end-tag-mismatch");
}
function serializeAbbreviatedTag(tag2) {
  return "<" + (tag2.close ? "/" : "") + (tag2.name || "") + ">";
}
function mdxElement(node, _, context) {
  const selfClosing = node.name && (!node.children || node.children.length === 0);
  const quote = checkQuote(context);
  const exit2 = context.enter(node.type);
  let attributeValue = "";
  let index2 = -1;
  const attributes2 = [];
  let result;
  if (node.attributes && node.attributes.length > 0) {
    if (!node.name) {
      throw new Error("Cannot serialize fragment w/ attributes");
    }
    const isMultiFlow = node.type === "mdxJsxFlowElement" && node.attributes.length > 1;
    while (++index2 < node.attributes.length) {
      const attribute = node.attributes[index2];
      if (attribute.type === "mdxJsxExpressionAttribute") {
        result = "{" + (attribute.value || "") + "}";
      } else {
        if (!attribute.name) {
          throw new Error("Cannot serialize attribute w/o name");
        }
        result = attribute.name + (attribute.value === void 0 || attribute.value === null ? "" : "=" + (typeof attribute.value === "object" ? "{" + (attribute.value.value || "") + "}" : quote + stringifyEntitiesLight(attribute.value, { subset: [quote] }) + quote));
      }
      attributes2.push((isMultiFlow ? "\n  " : " ") + result);
    }
    attributeValue = attributes2.join("") + (isMultiFlow ? "\n" : "");
  }
  const value = "<" + (node.name || "") + attributeValue + (selfClosing ? "/" : "") + ">" + (node.children && node.children.length > 0 ? node.type === "mdxJsxFlowElement" ? "\n" + indent(containerFlow(node, context)) + "\n" : containerPhrasing(node, context, { before: "<", after: ">" }) : "") + (selfClosing ? "" : "</" + (node.name || "") + ">");
  exit2();
  return value;
}
function peekElement() {
  return "<";
}
function indent(value) {
  return indentLines(value, map3);
  function map3(line, _, blank) {
    return (blank ? "" : "  ") + line;
  }
}
var mdxJsxFromMarkdown, mdxJsxToMarkdown;
var init_mdast_util_mdx_jsx = __esm({
  "node_modules/mdast-util-mdx-jsx/index.js"() {
    init_parse_entities();
    init_unist_util_stringify_position();
    init_vfile_message();
    init_stringify_entities();
    init_container_flow();
    init_container_phrasing();
    init_check_quote();
    init_indent_lines();
    mdxElement.peek = peekElement;
    mdxJsxFromMarkdown = {
      canContainEols: ["mdxJsxTextElement"],
      enter: {
        mdxJsxFlowTag: enterMdxJsxTag,
        mdxJsxFlowTagClosingMarker: enterMdxJsxTagClosingMarker,
        mdxJsxFlowTagAttribute: enterMdxJsxTagAttribute,
        mdxJsxFlowTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,
        mdxJsxFlowTagAttributeValueLiteral: buffer,
        mdxJsxFlowTagAttributeValueExpression: buffer,
        mdxJsxFlowTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker,
        mdxJsxTextTag: enterMdxJsxTag,
        mdxJsxTextTagClosingMarker: enterMdxJsxTagClosingMarker,
        mdxJsxTextTagAttribute: enterMdxJsxTagAttribute,
        mdxJsxTextTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,
        mdxJsxTextTagAttributeValueLiteral: buffer,
        mdxJsxTextTagAttributeValueExpression: buffer,
        mdxJsxTextTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker
      },
      exit: {
        mdxJsxFlowTagClosingMarker: exitMdxJsxTagClosingMarker,
        mdxJsxFlowTagNamePrimary: exitMdxJsxTagNamePrimary,
        mdxJsxFlowTagNameMember: exitMdxJsxTagNameMember,
        mdxJsxFlowTagNameLocal: exitMdxJsxTagNameLocal,
        mdxJsxFlowTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,
        mdxJsxFlowTagExpressionAttributeValue: data,
        mdxJsxFlowTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,
        mdxJsxFlowTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,
        mdxJsxFlowTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,
        mdxJsxFlowTagAttributeValueLiteralValue: data,
        mdxJsxFlowTagAttributeValueExpression: exitMdxJsxTagAttributeValueExpression,
        mdxJsxFlowTagAttributeValueExpressionValue: data,
        mdxJsxFlowTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,
        mdxJsxFlowTag: exitMdxJsxTag,
        mdxJsxTextTagClosingMarker: exitMdxJsxTagClosingMarker,
        mdxJsxTextTagNamePrimary: exitMdxJsxTagNamePrimary,
        mdxJsxTextTagNameMember: exitMdxJsxTagNameMember,
        mdxJsxTextTagNameLocal: exitMdxJsxTagNameLocal,
        mdxJsxTextTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,
        mdxJsxTextTagExpressionAttributeValue: data,
        mdxJsxTextTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,
        mdxJsxTextTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,
        mdxJsxTextTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,
        mdxJsxTextTagAttributeValueLiteralValue: data,
        mdxJsxTextTagAttributeValueExpression: exitMdxJsxTagAttributeValueExpression,
        mdxJsxTextTagAttributeValueExpressionValue: data,
        mdxJsxTextTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,
        mdxJsxTextTag: exitMdxJsxTag
      }
    };
    mdxJsxToMarkdown = {
      handlers: {
        mdxJsxFlowElement: mdxElement,
        mdxJsxTextElement: mdxElement
      },
      unsafe: [
        { character: "<", inConstruct: ["phrasing"] },
        { atBreak: true, character: "<" }
      ],
      fences: true,
      resourceLink: true
    };
  }
});

// node_modules/@astrojs/markdown-remark/dist/mdast-util-mdxish.js
function mdxFromMarkdown() {
  return [mdxExpressionFromMarkdown, mdxJsxFromMarkdown];
}
function mdxToMarkdown() {
  return {
    extensions: [mdxExpressionToMarkdown, mdxJsxToMarkdown]
  };
}
var init_mdast_util_mdxish = __esm({
  "node_modules/@astrojs/markdown-remark/dist/mdast-util-mdxish.js"() {
    init_mdast_util_mdx_expression();
    init_mdast_util_mdx_jsx();
  }
});

// node_modules/estree-util-is-identifier-name/regex.js
var start, cont;
var init_regex = __esm({
  "node_modules/estree-util-is-identifier-name/regex.js"() {
    start = /[$A-Z_a-z\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/;
    cont = /[\d\u00B7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F]/;
  }
});

// node_modules/estree-util-is-identifier-name/index.js
function start2(code2) {
  return start.test(String.fromCharCode(code2));
}
function cont2(code2) {
  const character = String.fromCharCode(code2);
  return start.test(character) || cont.test(character);
}
var init_estree_util_is_identifier_name = __esm({
  "node_modules/estree-util-is-identifier-name/index.js"() {
    init_regex();
  }
});

// node_modules/micromark-util-character/lib/unicode-punctuation-regex.js
var unicodePunctuationRegex;
var init_unicode_punctuation_regex = __esm({
  "node_modules/micromark-util-character/lib/unicode-punctuation-regex.js"() {
    unicodePunctuationRegex = /[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;
  }
});

// node_modules/micromark-util-character/index.js
function asciiControl(code2) {
  return code2 !== null && (code2 < 32 || code2 === 127);
}
function markdownLineEndingOrSpace(code2) {
  return code2 !== null && (code2 < 0 || code2 === 32);
}
function markdownLineEnding(code2) {
  return code2 !== null && code2 < -2;
}
function markdownSpace(code2) {
  return code2 === -2 || code2 === -1 || code2 === 32;
}
function regexCheck(regex) {
  return check2;
  function check2(code2) {
    return code2 !== null && regex.test(String.fromCharCode(code2));
  }
}
var asciiAlpha, asciiDigit, asciiHexDigit, asciiAlphanumeric, asciiPunctuation, asciiAtext, unicodeWhitespace, unicodePunctuation;
var init_micromark_util_character = __esm({
  "node_modules/micromark-util-character/index.js"() {
    init_unicode_punctuation_regex();
    asciiAlpha = regexCheck(/[A-Za-z]/);
    asciiDigit = regexCheck(/\d/);
    asciiHexDigit = regexCheck(/[\dA-Fa-f]/);
    asciiAlphanumeric = regexCheck(/[\dA-Za-z]/);
    asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);
    asciiAtext = regexCheck(/[#-'*+\--9=?A-Z^-~]/);
    unicodeWhitespace = regexCheck(/\s/);
    unicodePunctuation = regexCheck(unicodePunctuationRegex);
  }
});

// node_modules/micromark-factory-space/index.js
function factorySpace(effects, ok2, type, max) {
  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;
  let size = 0;
  return start3;
  function start3(code2) {
    if (markdownSpace(code2)) {
      effects.enter(type);
      return prefix(code2);
    }
    return ok2(code2);
  }
  function prefix(code2) {
    if (markdownSpace(code2) && size++ < limit) {
      effects.consume(code2);
      return prefix;
    }
    effects.exit(type);
    return ok2(code2);
  }
}
var init_micromark_factory_space = __esm({
  "node_modules/micromark-factory-space/index.js"() {
    init_micromark_util_character();
  }
});

// node_modules/unist-util-position-from-estree/index.js
function positionFromEstree(value) {
  const node = value || {};
  const loc = node.loc || {};
  const range2 = node.range || [0, 0];
  const startOffset = range2[0] || node.start;
  const endOffset = range2[1] || node.end;
  return {
    start: {
      line: loc.start && typeof loc.start.line === "number" && loc.start.line > -1 ? loc.start.line : void 0,
      column: loc.start && typeof loc.start.column === "number" && loc.start.column > -1 ? loc.start.column + 1 : void 0,
      offset: typeof startOffset === "number" && startOffset > -1 ? startOffset : void 0
    },
    end: {
      line: loc.end && typeof loc.end.line === "number" && loc.end.line > -1 ? loc.end.line : void 0,
      column: loc.end && typeof loc.end.column === "number" && loc.end.column > -1 ? loc.end.column + 1 : void 0,
      offset: typeof endOffset === "number" && endOffset > -1 ? endOffset : void 0
    }
  };
}
var init_unist_util_position_from_estree = __esm({
  "node_modules/unist-util-position-from-estree/index.js"() {
  }
});

// node_modules/estree-util-visit/color.js
function color2(d2) {
  return "\x1B[33m" + d2 + "\x1B[39m";
}
var init_color2 = __esm({
  "node_modules/estree-util-visit/color.js"() {
  }
});

// node_modules/estree-util-visit/index.js
function visit3(tree, visitor) {
  var enter;
  var leave;
  if (typeof visitor === "function") {
    enter = visitor;
  } else if (visitor && typeof visitor === "object") {
    enter = visitor.enter;
    leave = visitor.leave;
  }
  build(tree, null, null, [])();
  function build(node, key2, index2, parents) {
    if (nodelike(node)) {
      visit6.displayName = "node (" + color2(node.type) + ")";
    }
    return visit6;
    function visit6() {
      var result = enter ? toResult2(enter(node, key2, index2, parents)) : [];
      var cKey;
      var cIndex;
      var grandparents;
      var subresult;
      var value;
      var subvalue;
      if (result[0] === EXIT2) {
        return result;
      }
      if (result[0] !== SKIP2) {
        for (cKey in node) {
          if (own6.call(node, cKey) && node[cKey] && typeof node[cKey] === "object" && cKey !== "data" && cKey !== "position") {
            value = node[cKey];
            grandparents = parents.concat(node);
            if (Array.isArray(value)) {
              cIndex = 0;
              while (cIndex > -1 && cIndex < value.length) {
                subvalue = value[cIndex];
                if (nodelike(subvalue)) {
                  subresult = build(subvalue, cKey, cIndex, grandparents)();
                  if (subresult[0] === EXIT2)
                    return subresult;
                  cIndex = typeof subresult[1] === "number" ? subresult[1] : cIndex + 1;
                } else {
                  cIndex++;
                }
              }
            } else if (nodelike(value)) {
              subresult = build(value, cKey, null, grandparents)();
              if (subresult[0] === EXIT2)
                return subresult;
            }
          }
        }
      }
      return leave ? toResult2(leave(node, key2, index2, parents)) : result;
    }
  }
}
function toResult2(value) {
  if (Array.isArray(value)) {
    return value;
  }
  if (typeof value === "number") {
    return [CONTINUE2, value];
  }
  return [value];
}
function nodelike(value) {
  return Boolean(value && typeof value === "object" && typeof value.type === "string" && value.type.length > 0);
}
var own6, CONTINUE2, SKIP2, EXIT2;
var init_estree_util_visit = __esm({
  "node_modules/estree-util-visit/index.js"() {
    init_color2();
    own6 = {}.hasOwnProperty;
    CONTINUE2 = Symbol("continue");
    SKIP2 = Symbol("skip");
    EXIT2 = Symbol("exit");
  }
});

// node_modules/vfile-location/index.js
function location(file59) {
  var value = String(file59);
  var indices = [];
  var search3 = /\r?\n|\r/g;
  while (search3.test(value)) {
    indices.push(search3.lastIndex);
  }
  indices.push(value.length + 1);
  return { toPoint, toOffset };
  function toPoint(offset2) {
    var index2 = -1;
    if (offset2 > -1 && offset2 < indices[indices.length - 1]) {
      while (++index2 < indices.length) {
        if (indices[index2] > offset2) {
          return {
            line: index2 + 1,
            column: offset2 - (indices[index2 - 1] || 0) + 1,
            offset: offset2
          };
        }
      }
    }
    return { line: void 0, column: void 0, offset: void 0 };
  }
  function toOffset(point4) {
    var line = point4 && point4.line;
    var column = point4 && point4.column;
    var offset2;
    if (typeof line === "number" && typeof column === "number" && !Number.isNaN(line) && !Number.isNaN(column) && line - 1 in indices) {
      offset2 = (indices[line - 2] || 0) + column - 1 || 0;
    }
    return offset2 > -1 && offset2 < indices[indices.length - 1] ? offset2 : -1;
  }
}
var init_vfile_location = __esm({
  "node_modules/vfile-location/index.js"() {
  }
});

// node_modules/micromark-util-events-to-acorn/index.js
function eventsToAcorn(events, options) {
  const { prefix = "", suffix = "" } = options;
  const acornOptions = Object.assign({}, options.acornOptions);
  const comments = [];
  const tokens = [];
  const onComment = acornOptions.onComment;
  const onToken = acornOptions.onToken;
  const acornConfig = Object.assign({}, acornOptions, {
    onComment: comments,
    onToken: onToken ? tokens : void 0,
    preserveParens: true
  });
  const chunks = [];
  const lines = {};
  let index2 = -1;
  let swallow = false;
  let estree;
  let exception;
  let startLine;
  if (options.start) {
    startLine = options.start.line;
    lines[startLine] = options.start;
  }
  while (++index2 < events.length) {
    const [kind, token, context] = events[index2];
    if (kind === "exit") {
      chunks.push(context.sliceSerialize(token));
      setPoint(token.start);
      setPoint(token.end);
    }
  }
  const source = chunks.join("");
  const value = prefix + source + suffix;
  const isEmptyExpression = options.expression && empty(source);
  const place = location(source);
  if (isEmptyExpression && !options.allowEmpty) {
    throw new VFileMessage("Unexpected empty expression", parseOffsetToUnistPoint(0), "micromark-extension-mdx-expression:unexpected-empty-expression");
  }
  try {
    estree = options.expression && !isEmptyExpression ? options.acorn.parseExpressionAt(value, 0, acornConfig) : options.acorn.parse(value, acornConfig);
  } catch (error_) {
    const error3 = error_;
    const point4 = parseOffsetToUnistPoint(error3.pos);
    error3.message = String(error3.message).replace(/ \(\d+:\d+\)$/, "");
    error3.pos = point4.offset;
    error3.loc = {
      line: point4.line,
      column: point4.column - 1
    };
    exception = error3;
    swallow = error3.raisedAt >= prefix.length + source.length || error3.message === "Unterminated comment";
  }
  if (estree && options.expression && !isEmptyExpression) {
    if (empty(value.slice(estree.end, value.length - suffix.length))) {
      estree = {
        type: "Program",
        start: 0,
        end: prefix.length + source.length,
        body: [
          {
            type: "ExpressionStatement",
            expression: estree,
            start: 0,
            end: prefix.length + source.length
          }
        ],
        sourceType: "module",
        comments: []
      };
    } else {
      const point4 = parseOffsetToUnistPoint(estree.end);
      exception = new Error("Unexpected content after expression");
      exception.pos = point4.offset;
      exception.loc = {
        line: point4.line,
        column: point4.column - 1
      };
      estree = void 0;
    }
  }
  if (estree) {
    estree.comments = comments;
    visit3(estree, (esnode, field, index3, parents) => {
      let context = parents[parents.length - 1];
      let prop = field;
      if (esnode.type === "ParenthesizedExpression" && context && prop) {
        if (typeof index3 === "number") {
          context = context[prop];
          prop = index3;
        }
        context[prop] = esnode.expression;
      }
      fixPosition(esnode);
    });
    if (Array.isArray(onComment)) {
      onComment.push(...comments);
    } else if (typeof onComment === "function") {
      for (const comment5 of comments) {
        onComment(comment5.type === "Block", comment5.value, comment5.start, comment5.end, comment5.loc.start, comment5.loc.end);
      }
    }
    for (const token of tokens) {
      fixPosition(token);
      if (Array.isArray(onToken)) {
        onToken.push(token);
      } else {
        onToken(token);
      }
    }
  }
  return {
    estree,
    error: exception,
    swallow
  };
  function fixPosition(nodeOrToken) {
    const pointStart2 = parseOffsetToUnistPoint(nodeOrToken.start);
    const pointEnd2 = parseOffsetToUnistPoint(nodeOrToken.end);
    nodeOrToken.start = pointStart2.offset;
    nodeOrToken.end = pointEnd2.offset;
    nodeOrToken.loc = {
      start: {
        line: pointStart2.line,
        column: pointStart2.column - 1,
        offset: pointStart2.offset
      },
      end: {
        line: pointEnd2.line,
        column: pointEnd2.column - 1,
        offset: pointEnd2.offset
      }
    };
    nodeOrToken.range = [nodeOrToken.start, nodeOrToken.end];
  }
  function parseOffsetToUnistPoint(acornOffset) {
    let sourceOffset = acornOffset - prefix.length;
    if (sourceOffset < 0) {
      sourceOffset = 0;
    } else if (sourceOffset > source.length) {
      sourceOffset = source.length;
    }
    const pointInSource = place.toPoint(sourceOffset);
    const line = startLine + (pointInSource.line - 1);
    const column = lines[line].column + (pointInSource.column - 1);
    const offset2 = lines[line].offset + (pointInSource.column - 1);
    return {
      line,
      column,
      offset: offset2
    };
  }
  function setPoint(point4) {
    if (!startLine || point4.line < startLine) {
      startLine = point4.line;
    }
    if (!(point4.line in lines) || lines[point4.line].offset > point4.offset) {
      lines[point4.line] = point4;
    }
  }
}
function empty(value) {
  return /^\s*$/.test(value.replace(/\/\*[\s\S]*?\*\//g, "").replace(/\/\/[^\r\n]*(\r\n|\n|\r)/g, ""));
}
var init_micromark_util_events_to_acorn = __esm({
  "node_modules/micromark-util-events-to-acorn/index.js"() {
    init_estree_util_visit();
    init_vfile_message();
    init_vfile_location();
  }
});

// node_modules/micromark-factory-mdx-expression/index.js
function factoryMdxExpression(effects, ok2, type, markerType, chunkType, acorn, acornOptions, addResult, spread, allowEmpty, allowLazy, startColumn) {
  const self2 = this;
  const eventStart = this.events.length + 3;
  const tail = this.events[this.events.length - 1];
  const initialPrefix = tail && tail[1].type === "linePrefix" ? tail[2].sliceSerialize(tail[1], true).length : 0;
  const prefixExpressionIndent = initialPrefix ? initialPrefix + 1 : 0;
  let balance = 1;
  let startPosition;
  let lastCrash;
  return start3;
  function start3(code2) {
    effects.enter(type);
    effects.enter(markerType);
    effects.consume(code2);
    effects.exit(markerType);
    startPosition = self2.now();
    return atBreak;
  }
  function atBreak(code2) {
    if (code2 === null) {
      throw lastCrash || new VFileMessage("Unexpected end of file in expression, expected a corresponding closing brace for `{`", self2.now(), "micromark-extension-mdx-expression:unexpected-eof");
    }
    if (code2 === 125) {
      return atClosingBrace(code2);
    }
    if (markdownLineEnding(code2)) {
      effects.enter("lineEnding");
      effects.consume(code2);
      effects.exit("lineEnding");
      const prefixTagIndent = startColumn ? startColumn + 4 - self2.now().column : 0;
      const indent2 = Math.max(prefixExpressionIndent, prefixTagIndent);
      return indent2 ? factorySpace(effects, atBreak, "linePrefix", indent2) : atBreak;
    }
    const now = self2.now();
    if (now.line !== startPosition.line && !allowLazy && self2.parser.lazy[now.line]) {
      throw new VFileMessage("Unexpected end of file in expression, expected a corresponding closing brace for `{`", self2.now(), "micromark-extension-mdx-expression:unexpected-eof");
    }
    effects.enter(chunkType);
    return inside(code2);
  }
  function inside(code2) {
    if (code2 === null || code2 === 125 || markdownLineEnding(code2)) {
      effects.exit(chunkType);
      return atBreak(code2);
    }
    if (code2 === 123 && !acorn) {
      effects.consume(code2);
      balance++;
      return inside;
    }
    effects.consume(code2);
    return inside;
  }
  function atClosingBrace(code2) {
    balance--;
    if (!acorn) {
      if (balance) {
        effects.enter(chunkType);
        effects.consume(code2);
        return inside;
      }
      effects.enter(markerType);
      effects.consume(code2);
      effects.exit(markerType);
      effects.exit(type);
      return ok2;
    }
    const result = eventsToAcorn(self2.events.slice(eventStart), {
      acorn,
      acornOptions,
      start: startPosition,
      expression: true,
      allowEmpty,
      prefix: spread ? "({" : "",
      suffix: spread ? "})" : ""
    });
    const estree = result.estree;
    if (spread && estree) {
      const head2 = estree.body[0];
      if (head2.type !== "ExpressionStatement" || head2.expression.type !== "ObjectExpression") {
        throw new VFileMessage("Unexpected `" + head2.type + "` in code: expected an object spread (`{...spread}`)", positionFromEstree(head2).start, "micromark-extension-mdx-expression:non-spread");
      } else if (head2.expression.properties[1]) {
        throw new VFileMessage("Unexpected extra content in spread: only a single spread is supported", positionFromEstree(head2.expression.properties[1]).start, "micromark-extension-mdx-expression:spread-extra");
      } else if (head2.expression.properties[0] && head2.expression.properties[0].type !== "SpreadElement") {
        throw new VFileMessage("Unexpected `" + head2.expression.properties[0].type + "` in code: only spread elements are supported", positionFromEstree(head2.expression.properties[0]).start, "micromark-extension-mdx-expression:non-spread");
      }
    }
    if (result.error) {
      lastCrash = new VFileMessage("Could not parse expression with acorn: " + result.error.message, {
        line: result.error.loc.line,
        column: result.error.loc.column + 1,
        offset: result.error.pos
      }, "micromark-extension-mdx-expression:acorn");
      if (code2 !== null && result.swallow) {
        effects.enter(chunkType);
        effects.consume(code2);
        return inside;
      }
      throw lastCrash;
    }
    effects.enter(markerType);
    effects.consume(code2);
    effects.exit(markerType);
    Object.assign(effects.exit(type), addResult ? {
      estree
    } : void 0);
    return ok2;
  }
}
var init_micromark_factory_mdx_expression = __esm({
  "node_modules/micromark-factory-mdx-expression/index.js"() {
    init_micromark_util_character();
    init_micromark_factory_space();
    init_unist_util_position_from_estree();
    init_vfile_message();
    init_micromark_util_events_to_acorn();
  }
});

// node_modules/@astrojs/micromark-extension-mdx-jsx/lib/factory-tag.js
function factoryTag(effects, ok2, nok, acorn, acornOptions, addResult, allowLazy, tagType, tagMarkerType, tagClosingMarkerType, tagSelfClosingMarker, tagNameType, tagNamePrimaryType, tagNameMemberMarkerType, tagNameMemberType, tagNamePrefixMarkerType, tagNameLocalType, tagExpressionAttributeType, tagExpressionAttributeMarkerType, tagExpressionAttributeValueType, tagAttributeType, tagAttributeNameType, tagAttributeNamePrimaryType, tagAttributeNamePrefixMarkerType, tagAttributeNameLocalType, tagAttributeInitializerMarkerType, tagAttributeValueLiteralType, tagAttributeValueLiteralMarkerType, tagAttributeValueLiteralValueType, tagAttributeValueExpressionType, tagAttributeValueExpressionMarkerType, tagAttributeValueExpressionValueType) {
  const self2 = this;
  let returnState;
  let marker;
  let startPoint;
  return start3;
  function start3(code2) {
    startPoint = self2.now();
    effects.enter(tagType);
    effects.enter(tagMarkerType);
    effects.consume(code2);
    effects.exit(tagMarkerType);
    return afterStart;
  }
  function afterStart(code2) {
    if (markdownLineEnding(code2) || markdownSpace(code2)) {
      return nok(code2);
    }
    returnState = beforeName;
    return optionalEsWhitespace(code2);
  }
  function beforeName(code2) {
    if (code2 === 47) {
      effects.enter(tagClosingMarkerType);
      effects.consume(code2);
      effects.exit(tagClosingMarkerType);
      returnState = beforeClosingTagName;
      return optionalEsWhitespace;
    }
    if (code2 === 62) {
      return tagEnd(code2);
    }
    if (code2 !== null && start2(code2)) {
      effects.enter(tagNameType);
      effects.enter(tagNamePrimaryType);
      effects.consume(code2);
      return primaryName;
    }
    crash(code2, "before name", "a character that can start a name, such as a letter, `$`, or `_`" + (code2 === 33 ? " (note: to create a comment in MDX, use `{/* text */}`)" : ""));
  }
  function beforeClosingTagName(code2) {
    if (code2 === 62) {
      return tagEnd(code2);
    }
    if (code2 !== null && start2(code2)) {
      effects.enter(tagNameType);
      effects.enter(tagNamePrimaryType);
      effects.consume(code2);
      return primaryName;
    }
    crash(code2, "before name", "a character that can start a name, such as a letter, `$`, or `_`" + (code2 === 42 || code2 === 47 ? " (note: JS comments in JSX tags are not supported in MDX)" : ""));
  }
  function primaryName(code2) {
    if (code2 === 45 || code2 !== null && cont2(code2)) {
      effects.consume(code2);
      return primaryName;
    }
    if (code2 === 46 || code2 === 47 || code2 === 58 || code2 === 62 || code2 === 123 || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2)) {
      effects.exit(tagNamePrimaryType);
      returnState = afterPrimaryName;
      return optionalEsWhitespace(code2);
    }
    crash(code2, "in name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag" + (code2 === 64 ? " (note: to create a link in MDX, use `[text](url)`)" : ""));
  }
  function afterPrimaryName(code2) {
    if (code2 === 46) {
      effects.enter(tagNameMemberMarkerType);
      effects.consume(code2);
      effects.exit(tagNameMemberMarkerType);
      returnState = beforeMemberName;
      return optionalEsWhitespace;
    }
    if (code2 === 58 && !isAfterWhitespace()) {
      effects.enter(tagNamePrefixMarkerType);
      effects.consume(code2);
      effects.exit(tagNamePrefixMarkerType);
      returnState = beforeLocalName;
      return optionalEsWhitespace;
    }
    if (code2 === 47 || code2 === 62 || code2 === 123 || code2 !== null && idStartAttr(code2)) {
      effects.exit(tagNameType);
      return beforeAttribute(code2);
    }
    crash(code2, "after name", "a character that can start an attribute name, such as a letter, `:`, `@`, `$`, or `_`; whitespace before attributes; or the end of the tag");
  }
  function beforeMemberName(code2) {
    if (code2 !== null && start2(code2)) {
      effects.enter(tagNameMemberType);
      effects.consume(code2);
      return memberName;
    }
    crash(code2, "before member name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag");
  }
  function memberName(code2) {
    if (code2 === 45 || code2 !== null && cont2(code2)) {
      effects.consume(code2);
      return memberName;
    }
    if (code2 === 46 || code2 === 47 || code2 === 62 || code2 === 123 || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2)) {
      effects.exit(tagNameMemberType);
      returnState = afterMemberName;
      return optionalEsWhitespace(code2);
    }
    crash(code2, "in member name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag" + (code2 === 64 ? " (note: to create a link in MDX, use `[text](url)`)" : ""));
  }
  function afterMemberName(code2) {
    if (code2 === 46) {
      effects.enter(tagNameMemberMarkerType);
      effects.consume(code2);
      effects.exit(tagNameMemberMarkerType);
      returnState = beforeMemberName;
      return optionalEsWhitespace;
    }
    if (code2 === 47 || code2 === 62 || code2 === 123 || code2 !== null && idStartAttr(code2)) {
      effects.exit(tagNameType);
      return beforeAttribute(code2);
    }
    crash(code2, "after member name", "a character that can start an attribute name, such as a letter, `:`, `@`, `$`, or `_`; whitespace before attributes; or the end of the tag");
  }
  function beforeLocalName(code2) {
    if (code2 !== null && start2(code2)) {
      effects.enter(tagNameLocalType);
      effects.consume(code2);
      return localName;
    }
    crash(code2, "before local name", "a character that can start a name, such as a letter, `$`, or `_`" + (code2 === 43 || code2 !== null && code2 > 46 && code2 < 58 ? " (note: to create a link in MDX, use `[text](url)`)" : ""));
  }
  function localName(code2) {
    if (code2 === 45 || code2 !== null && cont2(code2)) {
      effects.consume(code2);
      return localName;
    }
    if (code2 === 47 || code2 === 62 || code2 === 123 || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2)) {
      effects.exit(tagNameLocalType);
      returnState = afterLocalName;
      return optionalEsWhitespace(code2);
    }
    crash(code2, "in local name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag");
  }
  function afterLocalName(code2) {
    if (code2 === 47 || code2 === 62 || code2 === 123 || code2 !== null && idStartAttr(code2)) {
      effects.exit(tagNameType);
      return beforeAttribute(code2);
    }
    crash(code2, "after local name", "a character that can start an attribute name, such as a letter, `:`, `@`, `$`, or `_`; whitespace before attributes; or the end of the tag");
  }
  function beforeAttribute(code2) {
    if (code2 === 47) {
      effects.enter(tagSelfClosingMarker);
      effects.consume(code2);
      effects.exit(tagSelfClosingMarker);
      returnState = selfClosing;
      return optionalEsWhitespace;
    }
    if (code2 === 62) {
      return tagEnd(code2);
    }
    if (code2 === 123) {
      return factoryMdxExpression.call(self2, effects, afterAttributeExpression, tagExpressionAttributeType, tagExpressionAttributeMarkerType, tagExpressionAttributeValueType, acorn, acornOptions, addResult, true, false, allowLazy, startPoint.column)(code2);
    }
    if (code2 !== null && idStartAttr(code2)) {
      effects.enter(tagAttributeType);
      effects.enter(tagAttributeNameType);
      effects.enter(tagAttributeNamePrimaryType);
      effects.consume(code2);
      return attributePrimaryName;
    }
    crash(code2, "before attribute name", "a character that can start an attribute name, such as a letter, `:`, `@`, `$`, or `_`; whitespace before attributes; or the end of the tag");
  }
  function afterAttributeExpression(code2) {
    returnState = beforeAttribute;
    return optionalEsWhitespace(code2);
  }
  function attributePrimaryName(code2) {
    if (code2 === 45 || code2 !== null && idContAttr(code2)) {
      effects.consume(code2);
      return attributePrimaryName;
    }
    if (code2 === 47 || code2 === 58 || code2 === 61 || code2 === 62 || code2 === 123 || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2)) {
      effects.exit(tagAttributeNamePrimaryType);
      returnState = afterAttributePrimaryName;
      return optionalEsWhitespace(code2);
    }
    crash(code2, "in attribute name", "an attribute name character such as letters, digits, `.`, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag");
  }
  function afterAttributePrimaryName(code2) {
    if (code2 === 58 && !isAfterWhitespace()) {
      effects.enter(tagAttributeNamePrefixMarkerType);
      effects.consume(code2);
      effects.exit(tagAttributeNamePrefixMarkerType);
      returnState = beforeAttributeLocalName;
      return optionalEsWhitespace;
    }
    if (code2 === 61) {
      effects.exit(tagAttributeNameType);
      effects.enter(tagAttributeInitializerMarkerType);
      effects.consume(code2);
      effects.exit(tagAttributeInitializerMarkerType);
      returnState = beforeAttributeValue;
      return optionalEsWhitespace;
    }
    if (code2 === 47 || code2 === 62 || code2 === 123 || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2) || code2 !== null && idStartAttr(code2)) {
      effects.exit(tagAttributeNameType);
      effects.exit(tagAttributeType);
      returnState = beforeAttribute;
      return optionalEsWhitespace(code2);
    }
    crash(code2, "after attribute name", "a character that can start an attribute name, such as a letter, `:`, `@`, `$`, or `_`; `=` to initialize a value; or the end of the tag");
  }
  function beforeAttributeLocalName(code2) {
    if (code2 !== null && start2(code2)) {
      effects.enter(tagAttributeNameLocalType);
      effects.consume(code2);
      return attributeLocalName;
    }
    crash(code2, "before local attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag");
  }
  function attributeLocalName(code2) {
    if (code2 === 45 || code2 !== null && idContAttr(code2)) {
      effects.consume(code2);
      return attributeLocalName;
    }
    if (code2 === 47 || code2 === 61 || code2 === 62 || code2 === 123 || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2)) {
      effects.exit(tagAttributeNameLocalType);
      effects.exit(tagAttributeNameType);
      returnState = afterAttributeLocalName;
      return optionalEsWhitespace(code2);
    }
    crash(code2, "in local attribute name", "an attribute name character such as letters, digits, `.`, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag");
  }
  function afterAttributeLocalName(code2) {
    if (code2 === 61) {
      effects.enter(tagAttributeInitializerMarkerType);
      effects.consume(code2);
      effects.exit(tagAttributeInitializerMarkerType);
      returnState = beforeAttributeValue;
      return optionalEsWhitespace;
    }
    if (code2 === 47 || code2 === 62 || code2 === 123 || code2 !== null && idStartAttr(code2)) {
      effects.exit(tagAttributeType);
      return beforeAttribute(code2);
    }
    crash(code2, "after local attribute name", "a character that can start an attribute name, such as a letter, `:`, `@`, `$`, or `_`; `=` to initialize a value; or the end of the tag");
  }
  function beforeAttributeValue(code2) {
    if (code2 === 34 || code2 === 39) {
      effects.enter(tagAttributeValueLiteralType);
      effects.enter(tagAttributeValueLiteralMarkerType);
      effects.consume(code2);
      effects.exit(tagAttributeValueLiteralMarkerType);
      marker = code2;
      return attributeValueQuotedStart;
    }
    if (code2 === 123) {
      return factoryMdxExpression.call(self2, effects, afterAttributeValueExpression, tagAttributeValueExpressionType, tagAttributeValueExpressionMarkerType, tagAttributeValueExpressionValueType, acorn, acornOptions, addResult, false, false, allowLazy, startPoint.column)(code2);
    }
    crash(code2, "before attribute value", "a character that can start an attribute value, such as `\"`, `'`, or `{`" + (code2 === 60 ? " (note: to use an element or fragment as a prop value in MDX, use `{<element />}`)" : ""));
  }
  function afterAttributeValueExpression(code2) {
    effects.exit(tagAttributeType);
    returnState = beforeAttribute;
    return optionalEsWhitespace(code2);
  }
  function attributeValueQuotedStart(code2) {
    if (code2 === null) {
      crash(code2, "in attribute value", "a corresponding closing quote `" + String.fromCharCode(marker) + "`");
    }
    if (code2 === marker) {
      effects.enter(tagAttributeValueLiteralMarkerType);
      effects.consume(code2);
      effects.exit(tagAttributeValueLiteralMarkerType);
      effects.exit(tagAttributeValueLiteralType);
      effects.exit(tagAttributeType);
      marker = void 0;
      returnState = beforeAttribute;
      return optionalEsWhitespace;
    }
    if (markdownLineEnding(code2)) {
      returnState = attributeValueQuotedStart;
      return optionalEsWhitespace(code2);
    }
    effects.enter(tagAttributeValueLiteralValueType);
    return attributeValueQuoted(code2);
  }
  function attributeValueQuoted(code2) {
    if (code2 === null || code2 === marker || markdownLineEnding(code2)) {
      effects.exit(tagAttributeValueLiteralValueType);
      return attributeValueQuotedStart(code2);
    }
    effects.consume(code2);
    return attributeValueQuoted;
  }
  function selfClosing(code2) {
    if (code2 === 62) {
      return tagEnd(code2);
    }
    crash(code2, "after self-closing slash", "`>` to end the tag" + (code2 === 42 || code2 === 47 ? " (note: JS comments in JSX tags are not supported in MDX)" : ""));
  }
  function tagEnd(code2) {
    effects.enter(tagMarkerType);
    effects.consume(code2);
    effects.exit(tagMarkerType);
    effects.exit(tagType);
    return ok2;
  }
  function optionalEsWhitespace(code2) {
    if (markdownLineEnding(code2)) {
      if (allowLazy) {
        effects.enter("lineEnding");
        effects.consume(code2);
        effects.exit("lineEnding");
        return factorySpace(effects, optionalEsWhitespace, "linePrefix", 4);
      }
      return effects.attempt(lazyLineEnd, factorySpace(effects, optionalEsWhitespace, "linePrefix", 4), crashEol)(code2);
    }
    if (markdownSpace(code2) || unicodeWhitespace(code2)) {
      effects.enter("esWhitespace");
      return optionalEsWhitespaceContinue(code2);
    }
    return returnState(code2);
  }
  function optionalEsWhitespaceContinue(code2) {
    if (markdownLineEnding(code2) || !(markdownSpace(code2) || unicodeWhitespace(code2))) {
      effects.exit("esWhitespace");
      return optionalEsWhitespace(code2);
    }
    effects.consume(code2);
    return optionalEsWhitespaceContinue;
  }
  function isAfterWhitespace() {
    return markdownLineEndingOrSpace(self2.previous) || unicodeWhitespace(self2.previous);
  }
  function idStartAttr(code2) {
    return (code2 === 58 || code2 === 64) && isAfterWhitespace() || start2(code2);
  }
  function idContAttr(code2) {
    return code2 === 46 || cont2(code2);
  }
  function crashEol() {
    throw new VFileMessage("Unexpected lazy line in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc", self2.now(), "micromark-extension-mdx-jsx:unexpected-eof");
  }
  function crash(code2, at3, expect) {
    throw new VFileMessage("Unexpected " + (code2 === null ? "end of file" : "character `" + (code2 === 96 ? "` ` `" : String.fromCharCode(code2)) + "` (" + serializeCharCode(code2) + ")") + " " + at3 + ", expected " + expect, self2.now(), "micromark-extension-mdx-jsx:unexpected-" + (code2 === null ? "eof" : "character"));
  }
}
function tokenizeLazyLineEnd(effects, ok2, nok) {
  const self2 = this;
  return start3;
  function start3(code2) {
    effects.enter("lineEnding");
    effects.consume(code2);
    effects.exit("lineEnding");
    return lineStart;
  }
  function lineStart(code2) {
    return self2.parser.lazy[self2.now().line] ? nok(code2) : ok2(code2);
  }
}
function serializeCharCode(code2) {
  return "U+" + code2.toString(16).toUpperCase().padStart(4, "0");
}
var lazyLineEnd;
var init_factory_tag = __esm({
  "node_modules/@astrojs/micromark-extension-mdx-jsx/lib/factory-tag.js"() {
    init_estree_util_is_identifier_name();
    init_micromark_factory_mdx_expression();
    init_micromark_factory_space();
    init_micromark_util_character();
    init_vfile_message();
    lazyLineEnd = {
      tokenize: tokenizeLazyLineEnd,
      partial: true
    };
  }
});

// node_modules/@astrojs/micromark-extension-mdx-jsx/lib/jsx-text.js
function jsxText(acorn, acornOptions, addResult) {
  return {
    tokenize: tokenizeJsxText
  };
  function tokenizeJsxText(effects, ok2, nok) {
    return factoryTag.call(this, effects, ok2, nok, acorn, acornOptions, addResult, true, "mdxJsxTextTag", "mdxJsxTextTagMarker", "mdxJsxTextTagClosingMarker", "mdxJsxTextTagSelfClosingMarker", "mdxJsxTextTagName", "mdxJsxTextTagNamePrimary", "mdxJsxTextTagNameMemberMarker", "mdxJsxTextTagNameMember", "mdxJsxTextTagNamePrefixMarker", "mdxJsxTextTagNameLocal", "mdxJsxTextTagExpressionAttribute", "mdxJsxTextTagExpressionAttributeMarker", "mdxJsxTextTagExpressionAttributeValue", "mdxJsxTextTagAttribute", "mdxJsxTextTagAttributeName", "mdxJsxTextTagAttributeNamePrimary", "mdxJsxTextTagAttributeNamePrefixMarker", "mdxJsxTextTagAttributeNameLocal", "mdxJsxTextTagAttributeInitializerMarker", "mdxJsxTextTagAttributeValueLiteral", "mdxJsxTextTagAttributeValueLiteralMarker", "mdxJsxTextTagAttributeValueLiteralValue", "mdxJsxTextTagAttributeValueExpression", "mdxJsxTextTagAttributeValueExpressionMarker", "mdxJsxTextTagAttributeValueExpressionValue");
  }
}
var init_jsx_text = __esm({
  "node_modules/@astrojs/micromark-extension-mdx-jsx/lib/jsx-text.js"() {
    init_factory_tag();
  }
});

// node_modules/@astrojs/micromark-extension-mdx-jsx/lib/jsx-flow.js
function jsxFlow(acorn, acornOptions, addResult) {
  return {
    tokenize: tokenizeJsxFlow,
    concrete: true
  };
  function tokenizeJsxFlow(effects, ok2, nok) {
    const self2 = this;
    return start3;
    function start3(code2) {
      return factoryTag.call(self2, effects, factorySpace(effects, after, "whitespace"), nok, acorn, acornOptions, addResult, false, "mdxJsxFlowTag", "mdxJsxFlowTagMarker", "mdxJsxFlowTagClosingMarker", "mdxJsxFlowTagSelfClosingMarker", "mdxJsxFlowTagName", "mdxJsxFlowTagNamePrimary", "mdxJsxFlowTagNameMemberMarker", "mdxJsxFlowTagNameMember", "mdxJsxFlowTagNamePrefixMarker", "mdxJsxFlowTagNameLocal", "mdxJsxFlowTagExpressionAttribute", "mdxJsxFlowTagExpressionAttributeMarker", "mdxJsxFlowTagExpressionAttributeValue", "mdxJsxFlowTagAttribute", "mdxJsxFlowTagAttributeName", "mdxJsxFlowTagAttributeNamePrimary", "mdxJsxFlowTagAttributeNamePrefixMarker", "mdxJsxFlowTagAttributeNameLocal", "mdxJsxFlowTagAttributeInitializerMarker", "mdxJsxFlowTagAttributeValueLiteral", "mdxJsxFlowTagAttributeValueLiteralMarker", "mdxJsxFlowTagAttributeValueLiteralValue", "mdxJsxFlowTagAttributeValueExpression", "mdxJsxFlowTagAttributeValueExpressionMarker", "mdxJsxFlowTagAttributeValueExpressionValue")(code2);
    }
    function after(code2) {
      return code2 === 60 ? start3(code2) : code2 === null || markdownLineEnding(code2) ? ok2(code2) : nok(code2);
    }
  }
}
var init_jsx_flow = __esm({
  "node_modules/@astrojs/micromark-extension-mdx-jsx/lib/jsx-flow.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    init_factory_tag();
  }
});

// node_modules/@astrojs/micromark-extension-mdx-jsx/lib/syntax.js
function mdxJsx(options = {}) {
  const acorn = options.acorn;
  let acornOptions;
  if (acorn) {
    if (!acorn.parse || !acorn.parseExpressionAt) {
      throw new Error("Expected a proper `acorn` instance passed in as `options.acorn`");
    }
    acornOptions = Object.assign({
      ecmaVersion: 2020,
      sourceType: "module"
    }, options.acornOptions, {
      locations: true
    });
  } else if (options.acornOptions || options.addResult) {
    throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
  }
  return {
    flow: {
      [60]: jsxFlow(acorn, acornOptions, options.addResult)
    },
    text: {
      [60]: jsxText(acorn, acornOptions, options.addResult)
    }
  };
}
var init_syntax = __esm({
  "node_modules/@astrojs/micromark-extension-mdx-jsx/lib/syntax.js"() {
    init_jsx_text();
    init_jsx_flow();
  }
});

// node_modules/@astrojs/micromark-extension-mdx-jsx/index.js
var init_micromark_extension_mdx_jsx = __esm({
  "node_modules/@astrojs/micromark-extension-mdx-jsx/index.js"() {
    init_syntax();
  }
});

// node_modules/acorn/dist/acorn.mjs
function isInAstralSet(code2, set) {
  var pos = 65536;
  for (var i3 = 0; i3 < set.length; i3 += 2) {
    pos += set[i3];
    if (pos > code2) {
      return false;
    }
    pos += set[i3 + 1];
    if (pos >= code2) {
      return true;
    }
  }
}
function isIdentifierStart(code2, astral) {
  if (code2 < 65) {
    return code2 === 36;
  }
  if (code2 < 91) {
    return true;
  }
  if (code2 < 97) {
    return code2 === 95;
  }
  if (code2 < 123) {
    return true;
  }
  if (code2 <= 65535) {
    return code2 >= 170 && nonASCIIidentifierStart.test(String.fromCharCode(code2));
  }
  if (astral === false) {
    return false;
  }
  return isInAstralSet(code2, astralIdentifierStartCodes);
}
function isIdentifierChar(code2, astral) {
  if (code2 < 48) {
    return code2 === 36;
  }
  if (code2 < 58) {
    return true;
  }
  if (code2 < 65) {
    return false;
  }
  if (code2 < 91) {
    return true;
  }
  if (code2 < 97) {
    return code2 === 95;
  }
  if (code2 < 123) {
    return true;
  }
  if (code2 <= 65535) {
    return code2 >= 170 && nonASCIIidentifier.test(String.fromCharCode(code2));
  }
  if (astral === false) {
    return false;
  }
  return isInAstralSet(code2, astralIdentifierStartCodes) || isInAstralSet(code2, astralIdentifierCodes);
}
function binop(name, prec) {
  return new TokenType(name, { beforeExpr: true, binop: prec });
}
function kw(name, options) {
  if (options === void 0)
    options = {};
  options.keyword = name;
  return keywords[name] = new TokenType(name, options);
}
function isNewLine(code2) {
  return code2 === 10 || code2 === 13 || code2 === 8232 || code2 === 8233;
}
function nextLineBreak(code2, from, end) {
  if (end === void 0)
    end = code2.length;
  for (var i3 = from; i3 < end; i3++) {
    var next = code2.charCodeAt(i3);
    if (isNewLine(next)) {
      return i3 < end - 1 && next === 13 && code2.charCodeAt(i3 + 1) === 10 ? i3 + 2 : i3 + 1;
    }
  }
  return -1;
}
function wordsRegexp(words) {
  return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$");
}
function codePointToString(code2) {
  if (code2 <= 65535) {
    return String.fromCharCode(code2);
  }
  code2 -= 65536;
  return String.fromCharCode((code2 >> 10) + 55296, (code2 & 1023) + 56320);
}
function getLineInfo(input2, offset2) {
  for (var line = 1, cur = 0; ; ) {
    var nextBreak = nextLineBreak(input2, cur, offset2);
    if (nextBreak < 0) {
      return new Position(line, offset2 - cur);
    }
    ++line;
    cur = nextBreak;
  }
}
function getOptions(opts) {
  var options = {};
  for (var opt in defaultOptions) {
    options[opt] = opts && hasOwn2(opts, opt) ? opts[opt] : defaultOptions[opt];
  }
  if (options.ecmaVersion === "latest") {
    options.ecmaVersion = 1e8;
  } else if (options.ecmaVersion == null) {
    if (!warnedAboutEcmaVersion && typeof console === "object" && console.warn) {
      warnedAboutEcmaVersion = true;
      console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.");
    }
    options.ecmaVersion = 11;
  } else if (options.ecmaVersion >= 2015) {
    options.ecmaVersion -= 2009;
  }
  if (options.allowReserved == null) {
    options.allowReserved = options.ecmaVersion < 5;
  }
  if (isArray(options.onToken)) {
    var tokens = options.onToken;
    options.onToken = function(token) {
      return tokens.push(token);
    };
  }
  if (isArray(options.onComment)) {
    options.onComment = pushComment(options, options.onComment);
  }
  return options;
}
function pushComment(options, array) {
  return function(block, text8, start3, end, startLoc, endLoc) {
    var comment5 = {
      type: block ? "Block" : "Line",
      value: text8,
      start: start3,
      end
    };
    if (options.locations) {
      comment5.loc = new SourceLocation(this, startLoc, endLoc);
    }
    if (options.ranges) {
      comment5.range = [start3, end];
    }
    array.push(comment5);
  };
}
function functionFlags(async, generator) {
  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);
}
function isPrivateNameConflicted(privateNameMap, element6) {
  var name = element6.key.name;
  var curr = privateNameMap[name];
  var next = "true";
  if (element6.type === "MethodDefinition" && (element6.kind === "get" || element6.kind === "set")) {
    next = (element6.static ? "s" : "i") + element6.kind;
  }
  if (curr === "iget" && next === "iset" || curr === "iset" && next === "iget" || curr === "sget" && next === "sset" || curr === "sset" && next === "sget") {
    privateNameMap[name] = "true";
    return false;
  } else if (!curr) {
    privateNameMap[name] = next;
    return false;
  } else {
    return true;
  }
}
function checkKeyName(node, name) {
  var computed = node.computed;
  var key2 = node.key;
  return !computed && (key2.type === "Identifier" && key2.name === name || key2.type === "Literal" && key2.value === name);
}
function isPrivateFieldAccess(node) {
  return node.type === "MemberExpression" && node.property.type === "PrivateIdentifier" || node.type === "ChainExpression" && isPrivateFieldAccess(node.expression);
}
function finishNodeAt(node, type, pos, loc) {
  node.type = type;
  node.end = pos;
  if (this.options.locations) {
    node.loc.end = loc;
  }
  if (this.options.ranges) {
    node.range[1] = pos;
  }
  return node;
}
function buildUnicodeData(ecmaVersion) {
  var d2 = data2[ecmaVersion] = {
    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues),
    nonBinary: {
      General_Category: wordsRegexp(unicodeGeneralCategoryValues),
      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])
    }
  };
  d2.nonBinary.Script_Extensions = d2.nonBinary.Script;
  d2.nonBinary.gc = d2.nonBinary.General_Category;
  d2.nonBinary.sc = d2.nonBinary.Script;
  d2.nonBinary.scx = d2.nonBinary.Script_Extensions;
}
function isSyntaxCharacter(ch) {
  return ch === 36 || ch >= 40 && ch <= 43 || ch === 46 || ch === 63 || ch >= 91 && ch <= 94 || ch >= 123 && ch <= 125;
}
function isRegExpIdentifierStart(ch) {
  return isIdentifierStart(ch, true) || ch === 36 || ch === 95;
}
function isRegExpIdentifierPart(ch) {
  return isIdentifierChar(ch, true) || ch === 36 || ch === 95 || ch === 8204 || ch === 8205;
}
function isControlLetter(ch) {
  return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122;
}
function isValidUnicode(ch) {
  return ch >= 0 && ch <= 1114111;
}
function isCharacterClassEscape(ch) {
  return ch === 100 || ch === 68 || ch === 115 || ch === 83 || ch === 119 || ch === 87;
}
function isUnicodePropertyNameCharacter(ch) {
  return isControlLetter(ch) || ch === 95;
}
function isUnicodePropertyValueCharacter(ch) {
  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);
}
function isDecimalDigit(ch) {
  return ch >= 48 && ch <= 57;
}
function isHexDigit(ch) {
  return ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102;
}
function hexToInt(ch) {
  if (ch >= 65 && ch <= 70) {
    return 10 + (ch - 65);
  }
  if (ch >= 97 && ch <= 102) {
    return 10 + (ch - 97);
  }
  return ch - 48;
}
function isOctalDigit(ch) {
  return ch >= 48 && ch <= 55;
}
function stringToNumber(str, isLegacyOctalNumericLiteral) {
  if (isLegacyOctalNumericLiteral) {
    return parseInt(str, 8);
  }
  return parseFloat(str.replace(/_/g, ""));
}
function stringToBigInt(str) {
  if (typeof BigInt !== "function") {
    return null;
  }
  return BigInt(str.replace(/_/g, ""));
}
var astralIdentifierCodes, astralIdentifierStartCodes, nonASCIIidentifierChars, nonASCIIidentifierStartChars, reservedWords, ecma5AndLessKeywords, keywords$1, keywordRelationalOperator, nonASCIIidentifierStart, nonASCIIidentifier, TokenType, beforeExpr, startsExpr, keywords, types$1, lineBreak, lineBreakG, nonASCIIwhitespace, skipWhiteSpace, ref, hasOwnProperty, toString2, hasOwn2, isArray, loneSurrogate, Position, SourceLocation, defaultOptions, warnedAboutEcmaVersion, SCOPE_TOP, SCOPE_FUNCTION, SCOPE_ASYNC, SCOPE_GENERATOR, SCOPE_ARROW, SCOPE_SIMPLE_CATCH, SCOPE_SUPER, SCOPE_DIRECT_SUPER, SCOPE_CLASS_STATIC_BLOCK, SCOPE_VAR, BIND_NONE, BIND_VAR, BIND_LEXICAL, BIND_FUNCTION, BIND_SIMPLE_CATCH, BIND_OUTSIDE, Parser, prototypeAccessors, pp$9, literal, DestructuringErrors, pp$8, loopLabel, switchLabel, empty$1, FUNC_STATEMENT, FUNC_HANGING_STATEMENT, FUNC_NULLABLE_ID, pp$7, TokContext, types3, pp$6, pp$5, empty2, pp$4, pp$3, Scope, Node2, pp$2, ecma9BinaryProperties, ecma10BinaryProperties, ecma11BinaryProperties, ecma12BinaryProperties, ecma13BinaryProperties, unicodeBinaryProperties, unicodeGeneralCategoryValues, ecma9ScriptValues, ecma10ScriptValues, ecma11ScriptValues, ecma12ScriptValues, ecma13ScriptValues, unicodeScriptValues, data2, ecmaVersion, i3, list3, pp$1, RegExpValidationState, Token, pp, INVALID_TEMPLATE_ESCAPE_ERROR, version;
var init_acorn = __esm({
  "node_modules/acorn/dist/acorn.mjs"() {
    astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
    astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];
    nonASCIIidentifierChars = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";
    nonASCIIidentifierStartChars = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
    reservedWords = {
      3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
      5: "class enum extends super const export import",
      6: "enum",
      strict: "implements interface let package private protected public static yield",
      strictBind: "eval arguments"
    };
    ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";
    keywords$1 = {
      5: ecma5AndLessKeywords,
      "5module": ecma5AndLessKeywords + " export import",
      6: ecma5AndLessKeywords + " const class extends export import super"
    };
    keywordRelationalOperator = /^in(stanceof)?$/;
    nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
    nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
    TokenType = function TokenType2(label2, conf) {
      if (conf === void 0)
        conf = {};
      this.label = label2;
      this.keyword = conf.keyword;
      this.beforeExpr = !!conf.beforeExpr;
      this.startsExpr = !!conf.startsExpr;
      this.isLoop = !!conf.isLoop;
      this.isAssign = !!conf.isAssign;
      this.prefix = !!conf.prefix;
      this.postfix = !!conf.postfix;
      this.binop = conf.binop || null;
      this.updateContext = null;
    };
    beforeExpr = { beforeExpr: true };
    startsExpr = { startsExpr: true };
    keywords = {};
    types$1 = {
      num: new TokenType("num", startsExpr),
      regexp: new TokenType("regexp", startsExpr),
      string: new TokenType("string", startsExpr),
      name: new TokenType("name", startsExpr),
      privateId: new TokenType("privateId", startsExpr),
      eof: new TokenType("eof"),
      bracketL: new TokenType("[", { beforeExpr: true, startsExpr: true }),
      bracketR: new TokenType("]"),
      braceL: new TokenType("{", { beforeExpr: true, startsExpr: true }),
      braceR: new TokenType("}"),
      parenL: new TokenType("(", { beforeExpr: true, startsExpr: true }),
      parenR: new TokenType(")"),
      comma: new TokenType(",", beforeExpr),
      semi: new TokenType(";", beforeExpr),
      colon: new TokenType(":", beforeExpr),
      dot: new TokenType("."),
      question: new TokenType("?", beforeExpr),
      questionDot: new TokenType("?."),
      arrow: new TokenType("=>", beforeExpr),
      template: new TokenType("template"),
      invalidTemplate: new TokenType("invalidTemplate"),
      ellipsis: new TokenType("...", beforeExpr),
      backQuote: new TokenType("`", startsExpr),
      dollarBraceL: new TokenType("${", { beforeExpr: true, startsExpr: true }),
      eq: new TokenType("=", { beforeExpr: true, isAssign: true }),
      assign: new TokenType("_=", { beforeExpr: true, isAssign: true }),
      incDec: new TokenType("++/--", { prefix: true, postfix: true, startsExpr: true }),
      prefix: new TokenType("!/~", { beforeExpr: true, prefix: true, startsExpr: true }),
      logicalOR: binop("||", 1),
      logicalAND: binop("&&", 2),
      bitwiseOR: binop("|", 3),
      bitwiseXOR: binop("^", 4),
      bitwiseAND: binop("&", 5),
      equality: binop("==/!=/===/!==", 6),
      relational: binop("</>/<=/>=", 7),
      bitShift: binop("<</>>/>>>", 8),
      plusMin: new TokenType("+/-", { beforeExpr: true, binop: 9, prefix: true, startsExpr: true }),
      modulo: binop("%", 10),
      star: binop("*", 10),
      slash: binop("/", 10),
      starstar: new TokenType("**", { beforeExpr: true }),
      coalesce: binop("??", 1),
      _break: kw("break"),
      _case: kw("case", beforeExpr),
      _catch: kw("catch"),
      _continue: kw("continue"),
      _debugger: kw("debugger"),
      _default: kw("default", beforeExpr),
      _do: kw("do", { isLoop: true, beforeExpr: true }),
      _else: kw("else", beforeExpr),
      _finally: kw("finally"),
      _for: kw("for", { isLoop: true }),
      _function: kw("function", startsExpr),
      _if: kw("if"),
      _return: kw("return", beforeExpr),
      _switch: kw("switch"),
      _throw: kw("throw", beforeExpr),
      _try: kw("try"),
      _var: kw("var"),
      _const: kw("const"),
      _while: kw("while", { isLoop: true }),
      _with: kw("with"),
      _new: kw("new", { beforeExpr: true, startsExpr: true }),
      _this: kw("this", startsExpr),
      _super: kw("super", startsExpr),
      _class: kw("class", startsExpr),
      _extends: kw("extends", beforeExpr),
      _export: kw("export"),
      _import: kw("import", startsExpr),
      _null: kw("null", startsExpr),
      _true: kw("true", startsExpr),
      _false: kw("false", startsExpr),
      _in: kw("in", { beforeExpr: true, binop: 7 }),
      _instanceof: kw("instanceof", { beforeExpr: true, binop: 7 }),
      _typeof: kw("typeof", { beforeExpr: true, prefix: true, startsExpr: true }),
      _void: kw("void", { beforeExpr: true, prefix: true, startsExpr: true }),
      _delete: kw("delete", { beforeExpr: true, prefix: true, startsExpr: true })
    };
    lineBreak = /\r\n?|\n|\u2028|\u2029/;
    lineBreakG = new RegExp(lineBreak.source, "g");
    nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
    skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
    ref = Object.prototype;
    hasOwnProperty = ref.hasOwnProperty;
    toString2 = ref.toString;
    hasOwn2 = Object.hasOwn || function(obj, propName) {
      return hasOwnProperty.call(obj, propName);
    };
    isArray = Array.isArray || function(obj) {
      return toString2.call(obj) === "[object Array]";
    };
    loneSurrogate = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/;
    Position = function Position2(line, col) {
      this.line = line;
      this.column = col;
    };
    Position.prototype.offset = function offset(n2) {
      return new Position(this.line, this.column + n2);
    };
    SourceLocation = function SourceLocation2(p3, start3, end) {
      this.start = start3;
      this.end = end;
      if (p3.sourceFile !== null) {
        this.source = p3.sourceFile;
      }
    };
    defaultOptions = {
      ecmaVersion: null,
      sourceType: "script",
      onInsertedSemicolon: null,
      onTrailingComma: null,
      allowReserved: null,
      allowReturnOutsideFunction: false,
      allowImportExportEverywhere: false,
      allowAwaitOutsideFunction: null,
      allowSuperOutsideMethod: null,
      allowHashBang: false,
      locations: false,
      onToken: null,
      onComment: null,
      ranges: false,
      program: null,
      sourceFile: null,
      directSourceFile: null,
      preserveParens: false
    };
    warnedAboutEcmaVersion = false;
    SCOPE_TOP = 1;
    SCOPE_FUNCTION = 2;
    SCOPE_ASYNC = 4;
    SCOPE_GENERATOR = 8;
    SCOPE_ARROW = 16;
    SCOPE_SIMPLE_CATCH = 32;
    SCOPE_SUPER = 64;
    SCOPE_DIRECT_SUPER = 128;
    SCOPE_CLASS_STATIC_BLOCK = 256;
    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;
    BIND_NONE = 0;
    BIND_VAR = 1;
    BIND_LEXICAL = 2;
    BIND_FUNCTION = 3;
    BIND_SIMPLE_CATCH = 4;
    BIND_OUTSIDE = 5;
    Parser = function Parser2(options, input2, startPos) {
      this.options = options = getOptions(options);
      this.sourceFile = options.sourceFile;
      this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);
      var reserved2 = "";
      if (options.allowReserved !== true) {
        reserved2 = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];
        if (options.sourceType === "module") {
          reserved2 += " await";
        }
      }
      this.reservedWords = wordsRegexp(reserved2);
      var reservedStrict = (reserved2 ? reserved2 + " " : "") + reservedWords.strict;
      this.reservedWordsStrict = wordsRegexp(reservedStrict);
      this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);
      this.input = String(input2);
      this.containsEsc = false;
      if (startPos) {
        this.pos = startPos;
        this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
        this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
      } else {
        this.pos = this.lineStart = 0;
        this.curLine = 1;
      }
      this.type = types$1.eof;
      this.value = null;
      this.start = this.end = this.pos;
      this.startLoc = this.endLoc = this.curPosition();
      this.lastTokEndLoc = this.lastTokStartLoc = null;
      this.lastTokStart = this.lastTokEnd = this.pos;
      this.context = this.initialContext();
      this.exprAllowed = true;
      this.inModule = options.sourceType === "module";
      this.strict = this.inModule || this.strictDirective(this.pos);
      this.potentialArrowAt = -1;
      this.potentialArrowInForAwait = false;
      this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;
      this.labels = [];
      this.undefinedExports = /* @__PURE__ */ Object.create(null);
      if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!") {
        this.skipLineComment(2);
      }
      this.scopeStack = [];
      this.enterScope(SCOPE_TOP);
      this.regexpState = null;
      this.privateNameStack = [];
    };
    prototypeAccessors = { inFunction: { configurable: true }, inGenerator: { configurable: true }, inAsync: { configurable: true }, canAwait: { configurable: true }, allowSuper: { configurable: true }, allowDirectSuper: { configurable: true }, treatFunctionsAsVar: { configurable: true }, allowNewDotTarget: { configurable: true }, inClassStaticBlock: { configurable: true } };
    Parser.prototype.parse = function parse3() {
      var node = this.options.program || this.startNode();
      this.nextToken();
      return this.parseTopLevel(node);
    };
    prototypeAccessors.inFunction.get = function() {
      return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;
    };
    prototypeAccessors.inGenerator.get = function() {
      return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit;
    };
    prototypeAccessors.inAsync.get = function() {
      return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit;
    };
    prototypeAccessors.canAwait.get = function() {
      for (var i3 = this.scopeStack.length - 1; i3 >= 0; i3--) {
        var scope = this.scopeStack[i3];
        if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) {
          return false;
        }
        if (scope.flags & SCOPE_FUNCTION) {
          return (scope.flags & SCOPE_ASYNC) > 0;
        }
      }
      return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
    };
    prototypeAccessors.allowSuper.get = function() {
      var ref2 = this.currentThisScope();
      var flags2 = ref2.flags;
      var inClassFieldInit = ref2.inClassFieldInit;
      return (flags2 & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod;
    };
    prototypeAccessors.allowDirectSuper.get = function() {
      return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;
    };
    prototypeAccessors.treatFunctionsAsVar.get = function() {
      return this.treatFunctionsAsVarInScope(this.currentScope());
    };
    prototypeAccessors.allowNewDotTarget.get = function() {
      var ref2 = this.currentThisScope();
      var flags2 = ref2.flags;
      var inClassFieldInit = ref2.inClassFieldInit;
      return (flags2 & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit;
    };
    prototypeAccessors.inClassStaticBlock.get = function() {
      return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0;
    };
    Parser.extend = function extend() {
      var plugins = [], len = arguments.length;
      while (len--)
        plugins[len] = arguments[len];
      var cls = this;
      for (var i3 = 0; i3 < plugins.length; i3++) {
        cls = plugins[i3](cls);
      }
      return cls;
    };
    Parser.parse = function parse4(input2, options) {
      return new this(options, input2).parse();
    };
    Parser.parseExpressionAt = function parseExpressionAt(input2, pos, options) {
      var parser = new this(options, input2, pos);
      parser.nextToken();
      return parser.parseExpression();
    };
    Parser.tokenizer = function tokenizer(input2, options) {
      return new this(options, input2);
    };
    Object.defineProperties(Parser.prototype, prototypeAccessors);
    pp$9 = Parser.prototype;
    literal = /^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;
    pp$9.strictDirective = function(start3) {
      if (this.options.ecmaVersion < 5) {
        return false;
      }
      for (; ; ) {
        skipWhiteSpace.lastIndex = start3;
        start3 += skipWhiteSpace.exec(this.input)[0].length;
        var match = literal.exec(this.input.slice(start3));
        if (!match) {
          return false;
        }
        if ((match[1] || match[2]) === "use strict") {
          skipWhiteSpace.lastIndex = start3 + match[0].length;
          var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;
          var next = this.input.charAt(end);
          return next === ";" || next === "}" || lineBreak.test(spaceAfter[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "=");
        }
        start3 += match[0].length;
        skipWhiteSpace.lastIndex = start3;
        start3 += skipWhiteSpace.exec(this.input)[0].length;
        if (this.input[start3] === ";") {
          start3++;
        }
      }
    };
    pp$9.eat = function(type) {
      if (this.type === type) {
        this.next();
        return true;
      } else {
        return false;
      }
    };
    pp$9.isContextual = function(name) {
      return this.type === types$1.name && this.value === name && !this.containsEsc;
    };
    pp$9.eatContextual = function(name) {
      if (!this.isContextual(name)) {
        return false;
      }
      this.next();
      return true;
    };
    pp$9.expectContextual = function(name) {
      if (!this.eatContextual(name)) {
        this.unexpected();
      }
    };
    pp$9.canInsertSemicolon = function() {
      return this.type === types$1.eof || this.type === types$1.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
    };
    pp$9.insertSemicolon = function() {
      if (this.canInsertSemicolon()) {
        if (this.options.onInsertedSemicolon) {
          this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);
        }
        return true;
      }
    };
    pp$9.semicolon = function() {
      if (!this.eat(types$1.semi) && !this.insertSemicolon()) {
        this.unexpected();
      }
    };
    pp$9.afterTrailingComma = function(tokType, notNext) {
      if (this.type === tokType) {
        if (this.options.onTrailingComma) {
          this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);
        }
        if (!notNext) {
          this.next();
        }
        return true;
      }
    };
    pp$9.expect = function(type) {
      this.eat(type) || this.unexpected();
    };
    pp$9.unexpected = function(pos) {
      this.raise(pos != null ? pos : this.start, "Unexpected token");
    };
    DestructuringErrors = function DestructuringErrors2() {
      this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
    };
    pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {
      if (!refDestructuringErrors) {
        return;
      }
      if (refDestructuringErrors.trailingComma > -1) {
        this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element");
      }
      var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
      if (parens > -1) {
        this.raiseRecoverable(parens, "Parenthesized pattern");
      }
    };
    pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
      if (!refDestructuringErrors) {
        return false;
      }
      var shorthandAssign = refDestructuringErrors.shorthandAssign;
      var doubleProto = refDestructuringErrors.doubleProto;
      if (!andThrow) {
        return shorthandAssign >= 0 || doubleProto >= 0;
      }
      if (shorthandAssign >= 0) {
        this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns");
      }
      if (doubleProto >= 0) {
        this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property");
      }
    };
    pp$9.checkYieldAwaitInDefaultParams = function() {
      if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {
        this.raise(this.yieldPos, "Yield expression cannot be a default value");
      }
      if (this.awaitPos) {
        this.raise(this.awaitPos, "Await expression cannot be a default value");
      }
    };
    pp$9.isSimpleAssignTarget = function(expr) {
      if (expr.type === "ParenthesizedExpression") {
        return this.isSimpleAssignTarget(expr.expression);
      }
      return expr.type === "Identifier" || expr.type === "MemberExpression";
    };
    pp$8 = Parser.prototype;
    pp$8.parseTopLevel = function(node) {
      var exports = /* @__PURE__ */ Object.create(null);
      if (!node.body) {
        node.body = [];
      }
      while (this.type !== types$1.eof) {
        var stmt = this.parseStatement(null, true, exports);
        node.body.push(stmt);
      }
      if (this.inModule) {
        for (var i3 = 0, list3 = Object.keys(this.undefinedExports); i3 < list3.length; i3 += 1) {
          var name = list3[i3];
          this.raiseRecoverable(this.undefinedExports[name].start, "Export '" + name + "' is not defined");
        }
      }
      this.adaptDirectivePrologue(node.body);
      this.next();
      node.sourceType = this.options.sourceType;
      return this.finishNode(node, "Program");
    };
    loopLabel = { kind: "loop" };
    switchLabel = { kind: "switch" };
    pp$8.isLet = function(context) {
      if (this.options.ecmaVersion < 6 || !this.isContextual("let")) {
        return false;
      }
      skipWhiteSpace.lastIndex = this.pos;
      var skip = skipWhiteSpace.exec(this.input);
      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
      if (nextCh === 91 || nextCh === 92 || nextCh > 55295 && nextCh < 56320) {
        return true;
      }
      if (context) {
        return false;
      }
      if (nextCh === 123) {
        return true;
      }
      if (isIdentifierStart(nextCh, true)) {
        var pos = next + 1;
        while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) {
          ++pos;
        }
        if (nextCh === 92 || nextCh > 55295 && nextCh < 56320) {
          return true;
        }
        var ident = this.input.slice(next, pos);
        if (!keywordRelationalOperator.test(ident)) {
          return true;
        }
      }
      return false;
    };
    pp$8.isAsyncFunction = function() {
      if (this.options.ecmaVersion < 8 || !this.isContextual("async")) {
        return false;
      }
      skipWhiteSpace.lastIndex = this.pos;
      var skip = skipWhiteSpace.exec(this.input);
      var next = this.pos + skip[0].length, after;
      return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === "function" && (next + 8 === this.input.length || !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 55295 && after < 56320));
    };
    pp$8.parseStatement = function(context, topLevel, exports) {
      var starttype = this.type, node = this.startNode(), kind;
      if (this.isLet(context)) {
        starttype = types$1._var;
        kind = "let";
      }
      switch (starttype) {
        case types$1._break:
        case types$1._continue:
          return this.parseBreakContinueStatement(node, starttype.keyword);
        case types$1._debugger:
          return this.parseDebuggerStatement(node);
        case types$1._do:
          return this.parseDoStatement(node);
        case types$1._for:
          return this.parseForStatement(node);
        case types$1._function:
          if (context && (this.strict || context !== "if" && context !== "label") && this.options.ecmaVersion >= 6) {
            this.unexpected();
          }
          return this.parseFunctionStatement(node, false, !context);
        case types$1._class:
          if (context) {
            this.unexpected();
          }
          return this.parseClass(node, true);
        case types$1._if:
          return this.parseIfStatement(node);
        case types$1._return:
          return this.parseReturnStatement(node);
        case types$1._switch:
          return this.parseSwitchStatement(node);
        case types$1._throw:
          return this.parseThrowStatement(node);
        case types$1._try:
          return this.parseTryStatement(node);
        case types$1._const:
        case types$1._var:
          kind = kind || this.value;
          if (context && kind !== "var") {
            this.unexpected();
          }
          return this.parseVarStatement(node, kind);
        case types$1._while:
          return this.parseWhileStatement(node);
        case types$1._with:
          return this.parseWithStatement(node);
        case types$1.braceL:
          return this.parseBlock(true, node);
        case types$1.semi:
          return this.parseEmptyStatement(node);
        case types$1._export:
        case types$1._import:
          if (this.options.ecmaVersion > 10 && starttype === types$1._import) {
            skipWhiteSpace.lastIndex = this.pos;
            var skip = skipWhiteSpace.exec(this.input);
            var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
            if (nextCh === 40 || nextCh === 46) {
              return this.parseExpressionStatement(node, this.parseExpression());
            }
          }
          if (!this.options.allowImportExportEverywhere) {
            if (!topLevel) {
              this.raise(this.start, "'import' and 'export' may only appear at the top level");
            }
            if (!this.inModule) {
              this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'");
            }
          }
          return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports);
        default:
          if (this.isAsyncFunction()) {
            if (context) {
              this.unexpected();
            }
            this.next();
            return this.parseFunctionStatement(node, true, !context);
          }
          var maybeName = this.value, expr = this.parseExpression();
          if (starttype === types$1.name && expr.type === "Identifier" && this.eat(types$1.colon)) {
            return this.parseLabeledStatement(node, maybeName, expr, context);
          } else {
            return this.parseExpressionStatement(node, expr);
          }
      }
    };
    pp$8.parseBreakContinueStatement = function(node, keyword) {
      var isBreak = keyword === "break";
      this.next();
      if (this.eat(types$1.semi) || this.insertSemicolon()) {
        node.label = null;
      } else if (this.type !== types$1.name) {
        this.unexpected();
      } else {
        node.label = this.parseIdent();
        this.semicolon();
      }
      var i3 = 0;
      for (; i3 < this.labels.length; ++i3) {
        var lab = this.labels[i3];
        if (node.label == null || lab.name === node.label.name) {
          if (lab.kind != null && (isBreak || lab.kind === "loop")) {
            break;
          }
          if (node.label && isBreak) {
            break;
          }
        }
      }
      if (i3 === this.labels.length) {
        this.raise(node.start, "Unsyntactic " + keyword);
      }
      return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
    };
    pp$8.parseDebuggerStatement = function(node) {
      this.next();
      this.semicolon();
      return this.finishNode(node, "DebuggerStatement");
    };
    pp$8.parseDoStatement = function(node) {
      this.next();
      this.labels.push(loopLabel);
      node.body = this.parseStatement("do");
      this.labels.pop();
      this.expect(types$1._while);
      node.test = this.parseParenExpression();
      if (this.options.ecmaVersion >= 6) {
        this.eat(types$1.semi);
      } else {
        this.semicolon();
      }
      return this.finishNode(node, "DoWhileStatement");
    };
    pp$8.parseForStatement = function(node) {
      this.next();
      var awaitAt = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
      this.labels.push(loopLabel);
      this.enterScope(0);
      this.expect(types$1.parenL);
      if (this.type === types$1.semi) {
        if (awaitAt > -1) {
          this.unexpected(awaitAt);
        }
        return this.parseFor(node, null);
      }
      var isLet = this.isLet();
      if (this.type === types$1._var || this.type === types$1._const || isLet) {
        var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
        this.next();
        this.parseVar(init$1, true, kind);
        this.finishNode(init$1, "VariableDeclaration");
        if ((this.type === types$1._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && init$1.declarations.length === 1) {
          if (this.options.ecmaVersion >= 9) {
            if (this.type === types$1._in) {
              if (awaitAt > -1) {
                this.unexpected(awaitAt);
              }
            } else {
              node.await = awaitAt > -1;
            }
          }
          return this.parseForIn(node, init$1);
        }
        if (awaitAt > -1) {
          this.unexpected(awaitAt);
        }
        return this.parseFor(node, init$1);
      }
      var startsWithLet = this.isContextual("let"), isForOf = false;
      var refDestructuringErrors = new DestructuringErrors();
      var init2 = this.parseExpression(awaitAt > -1 ? "await" : true, refDestructuringErrors);
      if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
        if (this.options.ecmaVersion >= 9) {
          if (this.type === types$1._in) {
            if (awaitAt > -1) {
              this.unexpected(awaitAt);
            }
          } else {
            node.await = awaitAt > -1;
          }
        }
        if (startsWithLet && isForOf) {
          this.raise(init2.start, "The left-hand side of a for-of loop may not start with 'let'.");
        }
        this.toAssignable(init2, false, refDestructuringErrors);
        this.checkLValPattern(init2);
        return this.parseForIn(node, init2);
      } else {
        this.checkExpressionErrors(refDestructuringErrors, true);
      }
      if (awaitAt > -1) {
        this.unexpected(awaitAt);
      }
      return this.parseFor(node, init2);
    };
    pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {
      this.next();
      return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);
    };
    pp$8.parseIfStatement = function(node) {
      this.next();
      node.test = this.parseParenExpression();
      node.consequent = this.parseStatement("if");
      node.alternate = this.eat(types$1._else) ? this.parseStatement("if") : null;
      return this.finishNode(node, "IfStatement");
    };
    pp$8.parseReturnStatement = function(node) {
      if (!this.inFunction && !this.options.allowReturnOutsideFunction) {
        this.raise(this.start, "'return' outside of function");
      }
      this.next();
      if (this.eat(types$1.semi) || this.insertSemicolon()) {
        node.argument = null;
      } else {
        node.argument = this.parseExpression();
        this.semicolon();
      }
      return this.finishNode(node, "ReturnStatement");
    };
    pp$8.parseSwitchStatement = function(node) {
      this.next();
      node.discriminant = this.parseParenExpression();
      node.cases = [];
      this.expect(types$1.braceL);
      this.labels.push(switchLabel);
      this.enterScope(0);
      var cur;
      for (var sawDefault = false; this.type !== types$1.braceR; ) {
        if (this.type === types$1._case || this.type === types$1._default) {
          var isCase = this.type === types$1._case;
          if (cur) {
            this.finishNode(cur, "SwitchCase");
          }
          node.cases.push(cur = this.startNode());
          cur.consequent = [];
          this.next();
          if (isCase) {
            cur.test = this.parseExpression();
          } else {
            if (sawDefault) {
              this.raiseRecoverable(this.lastTokStart, "Multiple default clauses");
            }
            sawDefault = true;
            cur.test = null;
          }
          this.expect(types$1.colon);
        } else {
          if (!cur) {
            this.unexpected();
          }
          cur.consequent.push(this.parseStatement(null));
        }
      }
      this.exitScope();
      if (cur) {
        this.finishNode(cur, "SwitchCase");
      }
      this.next();
      this.labels.pop();
      return this.finishNode(node, "SwitchStatement");
    };
    pp$8.parseThrowStatement = function(node) {
      this.next();
      if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {
        this.raise(this.lastTokEnd, "Illegal newline after throw");
      }
      node.argument = this.parseExpression();
      this.semicolon();
      return this.finishNode(node, "ThrowStatement");
    };
    empty$1 = [];
    pp$8.parseTryStatement = function(node) {
      this.next();
      node.block = this.parseBlock();
      node.handler = null;
      if (this.type === types$1._catch) {
        var clause = this.startNode();
        this.next();
        if (this.eat(types$1.parenL)) {
          clause.param = this.parseBindingAtom();
          var simple = clause.param.type === "Identifier";
          this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);
          this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);
          this.expect(types$1.parenR);
        } else {
          if (this.options.ecmaVersion < 10) {
            this.unexpected();
          }
          clause.param = null;
          this.enterScope(0);
        }
        clause.body = this.parseBlock(false);
        this.exitScope();
        node.handler = this.finishNode(clause, "CatchClause");
      }
      node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;
      if (!node.handler && !node.finalizer) {
        this.raise(node.start, "Missing catch or finally clause");
      }
      return this.finishNode(node, "TryStatement");
    };
    pp$8.parseVarStatement = function(node, kind) {
      this.next();
      this.parseVar(node, false, kind);
      this.semicolon();
      return this.finishNode(node, "VariableDeclaration");
    };
    pp$8.parseWhileStatement = function(node) {
      this.next();
      node.test = this.parseParenExpression();
      this.labels.push(loopLabel);
      node.body = this.parseStatement("while");
      this.labels.pop();
      return this.finishNode(node, "WhileStatement");
    };
    pp$8.parseWithStatement = function(node) {
      if (this.strict) {
        this.raise(this.start, "'with' in strict mode");
      }
      this.next();
      node.object = this.parseParenExpression();
      node.body = this.parseStatement("with");
      return this.finishNode(node, "WithStatement");
    };
    pp$8.parseEmptyStatement = function(node) {
      this.next();
      return this.finishNode(node, "EmptyStatement");
    };
    pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {
      for (var i$12 = 0, list3 = this.labels; i$12 < list3.length; i$12 += 1) {
        var label2 = list3[i$12];
        if (label2.name === maybeName) {
          this.raise(expr.start, "Label '" + maybeName + "' is already declared");
        }
      }
      var kind = this.type.isLoop ? "loop" : this.type === types$1._switch ? "switch" : null;
      for (var i3 = this.labels.length - 1; i3 >= 0; i3--) {
        var label$12 = this.labels[i3];
        if (label$12.statementStart === node.start) {
          label$12.statementStart = this.start;
          label$12.kind = kind;
        } else {
          break;
        }
      }
      this.labels.push({ name: maybeName, kind, statementStart: this.start });
      node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
      this.labels.pop();
      node.label = expr;
      return this.finishNode(node, "LabeledStatement");
    };
    pp$8.parseExpressionStatement = function(node, expr) {
      node.expression = expr;
      this.semicolon();
      return this.finishNode(node, "ExpressionStatement");
    };
    pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {
      if (createNewLexicalScope === void 0)
        createNewLexicalScope = true;
      if (node === void 0)
        node = this.startNode();
      node.body = [];
      this.expect(types$1.braceL);
      if (createNewLexicalScope) {
        this.enterScope(0);
      }
      while (this.type !== types$1.braceR) {
        var stmt = this.parseStatement(null);
        node.body.push(stmt);
      }
      if (exitStrict) {
        this.strict = false;
      }
      this.next();
      if (createNewLexicalScope) {
        this.exitScope();
      }
      return this.finishNode(node, "BlockStatement");
    };
    pp$8.parseFor = function(node, init2) {
      node.init = init2;
      this.expect(types$1.semi);
      node.test = this.type === types$1.semi ? null : this.parseExpression();
      this.expect(types$1.semi);
      node.update = this.type === types$1.parenR ? null : this.parseExpression();
      this.expect(types$1.parenR);
      node.body = this.parseStatement("for");
      this.exitScope();
      this.labels.pop();
      return this.finishNode(node, "ForStatement");
    };
    pp$8.parseForIn = function(node, init2) {
      var isForIn = this.type === types$1._in;
      this.next();
      if (init2.type === "VariableDeclaration" && init2.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init2.kind !== "var" || init2.declarations[0].id.type !== "Identifier")) {
        this.raise(init2.start, (isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer");
      }
      node.left = init2;
      node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();
      this.expect(types$1.parenR);
      node.body = this.parseStatement("for");
      this.exitScope();
      this.labels.pop();
      return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement");
    };
    pp$8.parseVar = function(node, isFor, kind) {
      node.declarations = [];
      node.kind = kind;
      for (; ; ) {
        var decl = this.startNode();
        this.parseVarId(decl, kind);
        if (this.eat(types$1.eq)) {
          decl.init = this.parseMaybeAssign(isFor);
        } else if (kind === "const" && !(this.type === types$1._in || this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
          this.unexpected();
        } else if (decl.id.type !== "Identifier" && !(isFor && (this.type === types$1._in || this.isContextual("of")))) {
          this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");
        } else {
          decl.init = null;
        }
        node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
        if (!this.eat(types$1.comma)) {
          break;
        }
      }
      return node;
    };
    pp$8.parseVarId = function(decl, kind) {
      decl.id = this.parseBindingAtom();
      this.checkLValPattern(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);
    };
    FUNC_STATEMENT = 1;
    FUNC_HANGING_STATEMENT = 2;
    FUNC_NULLABLE_ID = 4;
    pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {
      this.initFunction(node);
      if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {
        if (this.type === types$1.star && statement & FUNC_HANGING_STATEMENT) {
          this.unexpected();
        }
        node.generator = this.eat(types$1.star);
      }
      if (this.options.ecmaVersion >= 8) {
        node.async = !!isAsync;
      }
      if (statement & FUNC_STATEMENT) {
        node.id = statement & FUNC_NULLABLE_ID && this.type !== types$1.name ? null : this.parseIdent();
        if (node.id && !(statement & FUNC_HANGING_STATEMENT)) {
          this.checkLValSimple(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION);
        }
      }
      var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
      this.yieldPos = 0;
      this.awaitPos = 0;
      this.awaitIdentPos = 0;
      this.enterScope(functionFlags(node.async, node.generator));
      if (!(statement & FUNC_STATEMENT)) {
        node.id = this.type === types$1.name ? this.parseIdent() : null;
      }
      this.parseFunctionParams(node);
      this.parseFunctionBody(node, allowExpressionBody, false, forInit);
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      this.awaitIdentPos = oldAwaitIdentPos;
      return this.finishNode(node, statement & FUNC_STATEMENT ? "FunctionDeclaration" : "FunctionExpression");
    };
    pp$8.parseFunctionParams = function(node) {
      this.expect(types$1.parenL);
      node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
      this.checkYieldAwaitInDefaultParams();
    };
    pp$8.parseClass = function(node, isStatement) {
      this.next();
      var oldStrict = this.strict;
      this.strict = true;
      this.parseClassId(node, isStatement);
      this.parseClassSuper(node);
      var privateNameMap = this.enterClassBody();
      var classBody = this.startNode();
      var hadConstructor = false;
      classBody.body = [];
      this.expect(types$1.braceL);
      while (this.type !== types$1.braceR) {
        var element6 = this.parseClassElement(node.superClass !== null);
        if (element6) {
          classBody.body.push(element6);
          if (element6.type === "MethodDefinition" && element6.kind === "constructor") {
            if (hadConstructor) {
              this.raise(element6.start, "Duplicate constructor in the same class");
            }
            hadConstructor = true;
          } else if (element6.key && element6.key.type === "PrivateIdentifier" && isPrivateNameConflicted(privateNameMap, element6)) {
            this.raiseRecoverable(element6.key.start, "Identifier '#" + element6.key.name + "' has already been declared");
          }
        }
      }
      this.strict = oldStrict;
      this.next();
      node.body = this.finishNode(classBody, "ClassBody");
      this.exitClassBody();
      return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
    };
    pp$8.parseClassElement = function(constructorAllowsSuper) {
      if (this.eat(types$1.semi)) {
        return null;
      }
      var ecmaVersion = this.options.ecmaVersion;
      var node = this.startNode();
      var keyName = "";
      var isGenerator = false;
      var isAsync = false;
      var kind = "method";
      var isStatic = false;
      if (this.eatContextual("static")) {
        if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {
          this.parseClassStaticBlock(node);
          return node;
        }
        if (this.isClassElementNameStart() || this.type === types$1.star) {
          isStatic = true;
        } else {
          keyName = "static";
        }
      }
      node.static = isStatic;
      if (!keyName && ecmaVersion >= 8 && this.eatContextual("async")) {
        if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {
          isAsync = true;
        } else {
          keyName = "async";
        }
      }
      if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {
        isGenerator = true;
      }
      if (!keyName && !isAsync && !isGenerator) {
        var lastValue = this.value;
        if (this.eatContextual("get") || this.eatContextual("set")) {
          if (this.isClassElementNameStart()) {
            kind = lastValue;
          } else {
            keyName = lastValue;
          }
        }
      }
      if (keyName) {
        node.computed = false;
        node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);
        node.key.name = keyName;
        this.finishNode(node.key, "Identifier");
      } else {
        this.parseClassElementName(node);
      }
      if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== "method" || isGenerator || isAsync) {
        var isConstructor = !node.static && checkKeyName(node, "constructor");
        var allowsDirectSuper = isConstructor && constructorAllowsSuper;
        if (isConstructor && kind !== "method") {
          this.raise(node.key.start, "Constructor can't have get/set modifier");
        }
        node.kind = isConstructor ? "constructor" : kind;
        this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);
      } else {
        this.parseClassField(node);
      }
      return node;
    };
    pp$8.isClassElementNameStart = function() {
      return this.type === types$1.name || this.type === types$1.privateId || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword;
    };
    pp$8.parseClassElementName = function(element6) {
      if (this.type === types$1.privateId) {
        if (this.value === "constructor") {
          this.raise(this.start, "Classes can't have an element named '#constructor'");
        }
        element6.computed = false;
        element6.key = this.parsePrivateIdent();
      } else {
        this.parsePropertyName(element6);
      }
    };
    pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {
      var key2 = method.key;
      if (method.kind === "constructor") {
        if (isGenerator) {
          this.raise(key2.start, "Constructor can't be a generator");
        }
        if (isAsync) {
          this.raise(key2.start, "Constructor can't be an async method");
        }
      } else if (method.static && checkKeyName(method, "prototype")) {
        this.raise(key2.start, "Classes may not have a static property named prototype");
      }
      var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);
      if (method.kind === "get" && value.params.length !== 0) {
        this.raiseRecoverable(value.start, "getter should have no params");
      }
      if (method.kind === "set" && value.params.length !== 1) {
        this.raiseRecoverable(value.start, "setter should have exactly one param");
      }
      if (method.kind === "set" && value.params[0].type === "RestElement") {
        this.raiseRecoverable(value.params[0].start, "Setter cannot use rest params");
      }
      return this.finishNode(method, "MethodDefinition");
    };
    pp$8.parseClassField = function(field) {
      if (checkKeyName(field, "constructor")) {
        this.raise(field.key.start, "Classes can't have a field named 'constructor'");
      } else if (field.static && checkKeyName(field, "prototype")) {
        this.raise(field.key.start, "Classes can't have a static field named 'prototype'");
      }
      if (this.eat(types$1.eq)) {
        var scope = this.currentThisScope();
        var inClassFieldInit = scope.inClassFieldInit;
        scope.inClassFieldInit = true;
        field.value = this.parseMaybeAssign();
        scope.inClassFieldInit = inClassFieldInit;
      } else {
        field.value = null;
      }
      this.semicolon();
      return this.finishNode(field, "PropertyDefinition");
    };
    pp$8.parseClassStaticBlock = function(node) {
      node.body = [];
      var oldLabels = this.labels;
      this.labels = [];
      this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);
      while (this.type !== types$1.braceR) {
        var stmt = this.parseStatement(null);
        node.body.push(stmt);
      }
      this.next();
      this.exitScope();
      this.labels = oldLabels;
      return this.finishNode(node, "StaticBlock");
    };
    pp$8.parseClassId = function(node, isStatement) {
      if (this.type === types$1.name) {
        node.id = this.parseIdent();
        if (isStatement) {
          this.checkLValSimple(node.id, BIND_LEXICAL, false);
        }
      } else {
        if (isStatement === true) {
          this.unexpected();
        }
        node.id = null;
      }
    };
    pp$8.parseClassSuper = function(node) {
      node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(false) : null;
    };
    pp$8.enterClassBody = function() {
      var element6 = { declared: /* @__PURE__ */ Object.create(null), used: [] };
      this.privateNameStack.push(element6);
      return element6.declared;
    };
    pp$8.exitClassBody = function() {
      var ref2 = this.privateNameStack.pop();
      var declared = ref2.declared;
      var used = ref2.used;
      var len = this.privateNameStack.length;
      var parent = len === 0 ? null : this.privateNameStack[len - 1];
      for (var i3 = 0; i3 < used.length; ++i3) {
        var id = used[i3];
        if (!hasOwn2(declared, id.name)) {
          if (parent) {
            parent.used.push(id);
          } else {
            this.raiseRecoverable(id.start, "Private field '#" + id.name + "' must be declared in an enclosing class");
          }
        }
      }
    };
    pp$8.parseExport = function(node, exports) {
      this.next();
      if (this.eat(types$1.star)) {
        if (this.options.ecmaVersion >= 11) {
          if (this.eatContextual("as")) {
            node.exported = this.parseModuleExportName();
            this.checkExport(exports, node.exported, this.lastTokStart);
          } else {
            node.exported = null;
          }
        }
        this.expectContextual("from");
        if (this.type !== types$1.string) {
          this.unexpected();
        }
        node.source = this.parseExprAtom();
        this.semicolon();
        return this.finishNode(node, "ExportAllDeclaration");
      }
      if (this.eat(types$1._default)) {
        this.checkExport(exports, "default", this.lastTokStart);
        var isAsync;
        if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {
          var fNode = this.startNode();
          this.next();
          if (isAsync) {
            this.next();
          }
          node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);
        } else if (this.type === types$1._class) {
          var cNode = this.startNode();
          node.declaration = this.parseClass(cNode, "nullableID");
        } else {
          node.declaration = this.parseMaybeAssign();
          this.semicolon();
        }
        return this.finishNode(node, "ExportDefaultDeclaration");
      }
      if (this.shouldParseExportStatement()) {
        node.declaration = this.parseStatement(null);
        if (node.declaration.type === "VariableDeclaration") {
          this.checkVariableExport(exports, node.declaration.declarations);
        } else {
          this.checkExport(exports, node.declaration.id, node.declaration.id.start);
        }
        node.specifiers = [];
        node.source = null;
      } else {
        node.declaration = null;
        node.specifiers = this.parseExportSpecifiers(exports);
        if (this.eatContextual("from")) {
          if (this.type !== types$1.string) {
            this.unexpected();
          }
          node.source = this.parseExprAtom();
        } else {
          for (var i3 = 0, list3 = node.specifiers; i3 < list3.length; i3 += 1) {
            var spec = list3[i3];
            this.checkUnreserved(spec.local);
            this.checkLocalExport(spec.local);
            if (spec.local.type === "Literal") {
              this.raise(spec.local.start, "A string literal cannot be used as an exported binding without `from`.");
            }
          }
          node.source = null;
        }
        this.semicolon();
      }
      return this.finishNode(node, "ExportNamedDeclaration");
    };
    pp$8.checkExport = function(exports, name, pos) {
      if (!exports) {
        return;
      }
      if (typeof name !== "string") {
        name = name.type === "Identifier" ? name.name : name.value;
      }
      if (hasOwn2(exports, name)) {
        this.raiseRecoverable(pos, "Duplicate export '" + name + "'");
      }
      exports[name] = true;
    };
    pp$8.checkPatternExport = function(exports, pat) {
      var type = pat.type;
      if (type === "Identifier") {
        this.checkExport(exports, pat, pat.start);
      } else if (type === "ObjectPattern") {
        for (var i3 = 0, list3 = pat.properties; i3 < list3.length; i3 += 1) {
          var prop = list3[i3];
          this.checkPatternExport(exports, prop);
        }
      } else if (type === "ArrayPattern") {
        for (var i$12 = 0, list$1 = pat.elements; i$12 < list$1.length; i$12 += 1) {
          var elt = list$1[i$12];
          if (elt) {
            this.checkPatternExport(exports, elt);
          }
        }
      } else if (type === "Property") {
        this.checkPatternExport(exports, pat.value);
      } else if (type === "AssignmentPattern") {
        this.checkPatternExport(exports, pat.left);
      } else if (type === "RestElement") {
        this.checkPatternExport(exports, pat.argument);
      } else if (type === "ParenthesizedExpression") {
        this.checkPatternExport(exports, pat.expression);
      }
    };
    pp$8.checkVariableExport = function(exports, decls) {
      if (!exports) {
        return;
      }
      for (var i3 = 0, list3 = decls; i3 < list3.length; i3 += 1) {
        var decl = list3[i3];
        this.checkPatternExport(exports, decl.id);
      }
    };
    pp$8.shouldParseExportStatement = function() {
      return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();
    };
    pp$8.parseExportSpecifiers = function(exports) {
      var nodes2 = [], first = true;
      this.expect(types$1.braceL);
      while (!this.eat(types$1.braceR)) {
        if (!first) {
          this.expect(types$1.comma);
          if (this.afterTrailingComma(types$1.braceR)) {
            break;
          }
        } else {
          first = false;
        }
        var node = this.startNode();
        node.local = this.parseModuleExportName();
        node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local;
        this.checkExport(exports, node.exported, node.exported.start);
        nodes2.push(this.finishNode(node, "ExportSpecifier"));
      }
      return nodes2;
    };
    pp$8.parseImport = function(node) {
      this.next();
      if (this.type === types$1.string) {
        node.specifiers = empty$1;
        node.source = this.parseExprAtom();
      } else {
        node.specifiers = this.parseImportSpecifiers();
        this.expectContextual("from");
        node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();
      }
      this.semicolon();
      return this.finishNode(node, "ImportDeclaration");
    };
    pp$8.parseImportSpecifiers = function() {
      var nodes2 = [], first = true;
      if (this.type === types$1.name) {
        var node = this.startNode();
        node.local = this.parseIdent();
        this.checkLValSimple(node.local, BIND_LEXICAL);
        nodes2.push(this.finishNode(node, "ImportDefaultSpecifier"));
        if (!this.eat(types$1.comma)) {
          return nodes2;
        }
      }
      if (this.type === types$1.star) {
        var node$1 = this.startNode();
        this.next();
        this.expectContextual("as");
        node$1.local = this.parseIdent();
        this.checkLValSimple(node$1.local, BIND_LEXICAL);
        nodes2.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));
        return nodes2;
      }
      this.expect(types$1.braceL);
      while (!this.eat(types$1.braceR)) {
        if (!first) {
          this.expect(types$1.comma);
          if (this.afterTrailingComma(types$1.braceR)) {
            break;
          }
        } else {
          first = false;
        }
        var node$2 = this.startNode();
        node$2.imported = this.parseModuleExportName();
        if (this.eatContextual("as")) {
          node$2.local = this.parseIdent();
        } else {
          this.checkUnreserved(node$2.imported);
          node$2.local = node$2.imported;
        }
        this.checkLValSimple(node$2.local, BIND_LEXICAL);
        nodes2.push(this.finishNode(node$2, "ImportSpecifier"));
      }
      return nodes2;
    };
    pp$8.parseModuleExportName = function() {
      if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {
        var stringLiteral = this.parseLiteral(this.value);
        if (loneSurrogate.test(stringLiteral.value)) {
          this.raise(stringLiteral.start, "An export name cannot include a lone surrogate.");
        }
        return stringLiteral;
      }
      return this.parseIdent(true);
    };
    pp$8.adaptDirectivePrologue = function(statements) {
      for (var i3 = 0; i3 < statements.length && this.isDirectiveCandidate(statements[i3]); ++i3) {
        statements[i3].directive = statements[i3].expression.raw.slice(1, -1);
      }
    };
    pp$8.isDirectiveCandidate = function(statement) {
      return statement.type === "ExpressionStatement" && statement.expression.type === "Literal" && typeof statement.expression.value === "string" && (this.input[statement.start] === '"' || this.input[statement.start] === "'");
    };
    pp$7 = Parser.prototype;
    pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {
      if (this.options.ecmaVersion >= 6 && node) {
        switch (node.type) {
          case "Identifier":
            if (this.inAsync && node.name === "await") {
              this.raise(node.start, "Cannot use 'await' as identifier inside an async function");
            }
            break;
          case "ObjectPattern":
          case "ArrayPattern":
          case "AssignmentPattern":
          case "RestElement":
            break;
          case "ObjectExpression":
            node.type = "ObjectPattern";
            if (refDestructuringErrors) {
              this.checkPatternErrors(refDestructuringErrors, true);
            }
            for (var i3 = 0, list3 = node.properties; i3 < list3.length; i3 += 1) {
              var prop = list3[i3];
              this.toAssignable(prop, isBinding);
              if (prop.type === "RestElement" && (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")) {
                this.raise(prop.argument.start, "Unexpected token");
              }
            }
            break;
          case "Property":
            if (node.kind !== "init") {
              this.raise(node.key.start, "Object pattern can't contain getter or setter");
            }
            this.toAssignable(node.value, isBinding);
            break;
          case "ArrayExpression":
            node.type = "ArrayPattern";
            if (refDestructuringErrors) {
              this.checkPatternErrors(refDestructuringErrors, true);
            }
            this.toAssignableList(node.elements, isBinding);
            break;
          case "SpreadElement":
            node.type = "RestElement";
            this.toAssignable(node.argument, isBinding);
            if (node.argument.type === "AssignmentPattern") {
              this.raise(node.argument.start, "Rest elements cannot have a default value");
            }
            break;
          case "AssignmentExpression":
            if (node.operator !== "=") {
              this.raise(node.left.end, "Only '=' operator can be used for specifying default value.");
            }
            node.type = "AssignmentPattern";
            delete node.operator;
            this.toAssignable(node.left, isBinding);
            break;
          case "ParenthesizedExpression":
            this.toAssignable(node.expression, isBinding, refDestructuringErrors);
            break;
          case "ChainExpression":
            this.raiseRecoverable(node.start, "Optional chaining cannot appear in left-hand side");
            break;
          case "MemberExpression":
            if (!isBinding) {
              break;
            }
          default:
            this.raise(node.start, "Assigning to rvalue");
        }
      } else if (refDestructuringErrors) {
        this.checkPatternErrors(refDestructuringErrors, true);
      }
      return node;
    };
    pp$7.toAssignableList = function(exprList, isBinding) {
      var end = exprList.length;
      for (var i3 = 0; i3 < end; i3++) {
        var elt = exprList[i3];
        if (elt) {
          this.toAssignable(elt, isBinding);
        }
      }
      if (end) {
        var last = exprList[end - 1];
        if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier") {
          this.unexpected(last.argument.start);
        }
      }
      return exprList;
    };
    pp$7.parseSpread = function(refDestructuringErrors) {
      var node = this.startNode();
      this.next();
      node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
      return this.finishNode(node, "SpreadElement");
    };
    pp$7.parseRestBinding = function() {
      var node = this.startNode();
      this.next();
      if (this.options.ecmaVersion === 6 && this.type !== types$1.name) {
        this.unexpected();
      }
      node.argument = this.parseBindingAtom();
      return this.finishNode(node, "RestElement");
    };
    pp$7.parseBindingAtom = function() {
      if (this.options.ecmaVersion >= 6) {
        switch (this.type) {
          case types$1.bracketL:
            var node = this.startNode();
            this.next();
            node.elements = this.parseBindingList(types$1.bracketR, true, true);
            return this.finishNode(node, "ArrayPattern");
          case types$1.braceL:
            return this.parseObj(true);
        }
      }
      return this.parseIdent();
    };
    pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {
      var elts = [], first = true;
      while (!this.eat(close)) {
        if (first) {
          first = false;
        } else {
          this.expect(types$1.comma);
        }
        if (allowEmpty && this.type === types$1.comma) {
          elts.push(null);
        } else if (allowTrailingComma && this.afterTrailingComma(close)) {
          break;
        } else if (this.type === types$1.ellipsis) {
          var rest = this.parseRestBinding();
          this.parseBindingListItem(rest);
          elts.push(rest);
          if (this.type === types$1.comma) {
            this.raise(this.start, "Comma is not permitted after the rest element");
          }
          this.expect(close);
          break;
        } else {
          var elem = this.parseMaybeDefault(this.start, this.startLoc);
          this.parseBindingListItem(elem);
          elts.push(elem);
        }
      }
      return elts;
    };
    pp$7.parseBindingListItem = function(param) {
      return param;
    };
    pp$7.parseMaybeDefault = function(startPos, startLoc, left) {
      left = left || this.parseBindingAtom();
      if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) {
        return left;
      }
      var node = this.startNodeAt(startPos, startLoc);
      node.left = left;
      node.right = this.parseMaybeAssign();
      return this.finishNode(node, "AssignmentPattern");
    };
    pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {
      if (bindingType === void 0)
        bindingType = BIND_NONE;
      var isBind = bindingType !== BIND_NONE;
      switch (expr.type) {
        case "Identifier":
          if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {
            this.raiseRecoverable(expr.start, (isBind ? "Binding " : "Assigning to ") + expr.name + " in strict mode");
          }
          if (isBind) {
            if (bindingType === BIND_LEXICAL && expr.name === "let") {
              this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name");
            }
            if (checkClashes) {
              if (hasOwn2(checkClashes, expr.name)) {
                this.raiseRecoverable(expr.start, "Argument name clash");
              }
              checkClashes[expr.name] = true;
            }
            if (bindingType !== BIND_OUTSIDE) {
              this.declareName(expr.name, bindingType, expr.start);
            }
          }
          break;
        case "ChainExpression":
          this.raiseRecoverable(expr.start, "Optional chaining cannot appear in left-hand side");
          break;
        case "MemberExpression":
          if (isBind) {
            this.raiseRecoverable(expr.start, "Binding member expression");
          }
          break;
        case "ParenthesizedExpression":
          if (isBind) {
            this.raiseRecoverable(expr.start, "Binding parenthesized expression");
          }
          return this.checkLValSimple(expr.expression, bindingType, checkClashes);
        default:
          this.raise(expr.start, (isBind ? "Binding" : "Assigning to") + " rvalue");
      }
    };
    pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {
      if (bindingType === void 0)
        bindingType = BIND_NONE;
      switch (expr.type) {
        case "ObjectPattern":
          for (var i3 = 0, list3 = expr.properties; i3 < list3.length; i3 += 1) {
            var prop = list3[i3];
            this.checkLValInnerPattern(prop, bindingType, checkClashes);
          }
          break;
        case "ArrayPattern":
          for (var i$12 = 0, list$1 = expr.elements; i$12 < list$1.length; i$12 += 1) {
            var elem = list$1[i$12];
            if (elem) {
              this.checkLValInnerPattern(elem, bindingType, checkClashes);
            }
          }
          break;
        default:
          this.checkLValSimple(expr, bindingType, checkClashes);
      }
    };
    pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {
      if (bindingType === void 0)
        bindingType = BIND_NONE;
      switch (expr.type) {
        case "Property":
          this.checkLValInnerPattern(expr.value, bindingType, checkClashes);
          break;
        case "AssignmentPattern":
          this.checkLValPattern(expr.left, bindingType, checkClashes);
          break;
        case "RestElement":
          this.checkLValPattern(expr.argument, bindingType, checkClashes);
          break;
        default:
          this.checkLValPattern(expr, bindingType, checkClashes);
      }
    };
    TokContext = function TokContext2(token, isExpr, preserveSpace, override, generator) {
      this.token = token;
      this.isExpr = !!isExpr;
      this.preserveSpace = !!preserveSpace;
      this.override = override;
      this.generator = !!generator;
    };
    types3 = {
      b_stat: new TokContext("{", false),
      b_expr: new TokContext("{", true),
      b_tmpl: new TokContext("${", false),
      p_stat: new TokContext("(", false),
      p_expr: new TokContext("(", true),
      q_tmpl: new TokContext("`", true, true, function(p3) {
        return p3.tryReadTemplateToken();
      }),
      f_stat: new TokContext("function", false),
      f_expr: new TokContext("function", true),
      f_expr_gen: new TokContext("function", true, false, null, true),
      f_gen: new TokContext("function", false, false, null, true)
    };
    pp$6 = Parser.prototype;
    pp$6.initialContext = function() {
      return [types3.b_stat];
    };
    pp$6.curContext = function() {
      return this.context[this.context.length - 1];
    };
    pp$6.braceIsBlock = function(prevType) {
      var parent = this.curContext();
      if (parent === types3.f_expr || parent === types3.f_stat) {
        return true;
      }
      if (prevType === types$1.colon && (parent === types3.b_stat || parent === types3.b_expr)) {
        return !parent.isExpr;
      }
      if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed) {
        return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
      }
      if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {
        return true;
      }
      if (prevType === types$1.braceL) {
        return parent === types3.b_stat;
      }
      if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {
        return false;
      }
      return !this.exprAllowed;
    };
    pp$6.inGeneratorContext = function() {
      for (var i3 = this.context.length - 1; i3 >= 1; i3--) {
        var context = this.context[i3];
        if (context.token === "function") {
          return context.generator;
        }
      }
      return false;
    };
    pp$6.updateContext = function(prevType) {
      var update, type = this.type;
      if (type.keyword && prevType === types$1.dot) {
        this.exprAllowed = false;
      } else if (update = type.updateContext) {
        update.call(this, prevType);
      } else {
        this.exprAllowed = type.beforeExpr;
      }
    };
    pp$6.overrideContext = function(tokenCtx) {
      if (this.curContext() !== tokenCtx) {
        this.context[this.context.length - 1] = tokenCtx;
      }
    };
    types$1.parenR.updateContext = types$1.braceR.updateContext = function() {
      if (this.context.length === 1) {
        this.exprAllowed = true;
        return;
      }
      var out = this.context.pop();
      if (out === types3.b_stat && this.curContext().token === "function") {
        out = this.context.pop();
      }
      this.exprAllowed = !out.isExpr;
    };
    types$1.braceL.updateContext = function(prevType) {
      this.context.push(this.braceIsBlock(prevType) ? types3.b_stat : types3.b_expr);
      this.exprAllowed = true;
    };
    types$1.dollarBraceL.updateContext = function() {
      this.context.push(types3.b_tmpl);
      this.exprAllowed = true;
    };
    types$1.parenL.updateContext = function(prevType) {
      var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;
      this.context.push(statementParens ? types3.p_stat : types3.p_expr);
      this.exprAllowed = true;
    };
    types$1.incDec.updateContext = function() {
    };
    types$1._function.updateContext = types$1._class.updateContext = function(prevType) {
      if (prevType.beforeExpr && prevType !== types$1._else && !(prevType === types$1.semi && this.curContext() !== types3.p_stat) && !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types3.b_stat)) {
        this.context.push(types3.f_expr);
      } else {
        this.context.push(types3.f_stat);
      }
      this.exprAllowed = false;
    };
    types$1.backQuote.updateContext = function() {
      if (this.curContext() === types3.q_tmpl) {
        this.context.pop();
      } else {
        this.context.push(types3.q_tmpl);
      }
      this.exprAllowed = false;
    };
    types$1.star.updateContext = function(prevType) {
      if (prevType === types$1._function) {
        var index2 = this.context.length - 1;
        if (this.context[index2] === types3.f_expr) {
          this.context[index2] = types3.f_expr_gen;
        } else {
          this.context[index2] = types3.f_gen;
        }
      }
      this.exprAllowed = true;
    };
    types$1.name.updateContext = function(prevType) {
      var allowed = false;
      if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {
        if (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) {
          allowed = true;
        }
      }
      this.exprAllowed = allowed;
    };
    pp$5 = Parser.prototype;
    pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {
      if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement") {
        return;
      }
      if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {
        return;
      }
      var key2 = prop.key;
      var name;
      switch (key2.type) {
        case "Identifier":
          name = key2.name;
          break;
        case "Literal":
          name = String(key2.value);
          break;
        default:
          return;
      }
      var kind = prop.kind;
      if (this.options.ecmaVersion >= 6) {
        if (name === "__proto__" && kind === "init") {
          if (propHash.proto) {
            if (refDestructuringErrors) {
              if (refDestructuringErrors.doubleProto < 0) {
                refDestructuringErrors.doubleProto = key2.start;
              }
            } else {
              this.raiseRecoverable(key2.start, "Redefinition of __proto__ property");
            }
          }
          propHash.proto = true;
        }
        return;
      }
      name = "$" + name;
      var other2 = propHash[name];
      if (other2) {
        var redefinition;
        if (kind === "init") {
          redefinition = this.strict && other2.init || other2.get || other2.set;
        } else {
          redefinition = other2.init || other2[kind];
        }
        if (redefinition) {
          this.raiseRecoverable(key2.start, "Redefinition of property");
        }
      } else {
        other2 = propHash[name] = {
          init: false,
          get: false,
          set: false
        };
      }
      other2[kind] = true;
    };
    pp$5.parseExpression = function(forInit, refDestructuringErrors) {
      var startPos = this.start, startLoc = this.startLoc;
      var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);
      if (this.type === types$1.comma) {
        var node = this.startNodeAt(startPos, startLoc);
        node.expressions = [expr];
        while (this.eat(types$1.comma)) {
          node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors));
        }
        return this.finishNode(node, "SequenceExpression");
      }
      return expr;
    };
    pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {
      if (this.isContextual("yield")) {
        if (this.inGenerator) {
          return this.parseYield(forInit);
        } else {
          this.exprAllowed = false;
        }
      }
      var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;
      if (refDestructuringErrors) {
        oldParenAssign = refDestructuringErrors.parenthesizedAssign;
        oldTrailingComma = refDestructuringErrors.trailingComma;
        oldDoubleProto = refDestructuringErrors.doubleProto;
        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
      } else {
        refDestructuringErrors = new DestructuringErrors();
        ownDestructuringErrors = true;
      }
      var startPos = this.start, startLoc = this.startLoc;
      if (this.type === types$1.parenL || this.type === types$1.name) {
        this.potentialArrowAt = this.start;
        this.potentialArrowInForAwait = forInit === "await";
      }
      var left = this.parseMaybeConditional(forInit, refDestructuringErrors);
      if (afterLeftParse) {
        left = afterLeftParse.call(this, left, startPos, startLoc);
      }
      if (this.type.isAssign) {
        var node = this.startNodeAt(startPos, startLoc);
        node.operator = this.value;
        if (this.type === types$1.eq) {
          left = this.toAssignable(left, false, refDestructuringErrors);
        }
        if (!ownDestructuringErrors) {
          refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;
        }
        if (refDestructuringErrors.shorthandAssign >= left.start) {
          refDestructuringErrors.shorthandAssign = -1;
        }
        if (this.type === types$1.eq) {
          this.checkLValPattern(left);
        } else {
          this.checkLValSimple(left);
        }
        node.left = left;
        this.next();
        node.right = this.parseMaybeAssign(forInit);
        if (oldDoubleProto > -1) {
          refDestructuringErrors.doubleProto = oldDoubleProto;
        }
        return this.finishNode(node, "AssignmentExpression");
      } else {
        if (ownDestructuringErrors) {
          this.checkExpressionErrors(refDestructuringErrors, true);
        }
      }
      if (oldParenAssign > -1) {
        refDestructuringErrors.parenthesizedAssign = oldParenAssign;
      }
      if (oldTrailingComma > -1) {
        refDestructuringErrors.trailingComma = oldTrailingComma;
      }
      return left;
    };
    pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {
      var startPos = this.start, startLoc = this.startLoc;
      var expr = this.parseExprOps(forInit, refDestructuringErrors);
      if (this.checkExpressionErrors(refDestructuringErrors)) {
        return expr;
      }
      if (this.eat(types$1.question)) {
        var node = this.startNodeAt(startPos, startLoc);
        node.test = expr;
        node.consequent = this.parseMaybeAssign();
        this.expect(types$1.colon);
        node.alternate = this.parseMaybeAssign(forInit);
        return this.finishNode(node, "ConditionalExpression");
      }
      return expr;
    };
    pp$5.parseExprOps = function(forInit, refDestructuringErrors) {
      var startPos = this.start, startLoc = this.startLoc;
      var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);
      if (this.checkExpressionErrors(refDestructuringErrors)) {
        return expr;
      }
      return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit);
    };
    pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {
      var prec = this.type.binop;
      if (prec != null && (!forInit || this.type !== types$1._in)) {
        if (prec > minPrec) {
          var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;
          var coalesce = this.type === types$1.coalesce;
          if (coalesce) {
            prec = types$1.logicalAND.binop;
          }
          var op = this.value;
          this.next();
          var startPos = this.start, startLoc = this.startLoc;
          var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);
          var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);
          if (logical && this.type === types$1.coalesce || coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND)) {
            this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");
          }
          return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit);
        }
      }
      return left;
    };
    pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {
      if (right.type === "PrivateIdentifier") {
        this.raise(right.start, "Private identifier can only be left side of binary expression");
      }
      var node = this.startNodeAt(startPos, startLoc);
      node.left = left;
      node.operator = op;
      node.right = right;
      return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression");
    };
    pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {
      var startPos = this.start, startLoc = this.startLoc, expr;
      if (this.isContextual("await") && this.canAwait) {
        expr = this.parseAwait(forInit);
        sawUnary = true;
      } else if (this.type.prefix) {
        var node = this.startNode(), update = this.type === types$1.incDec;
        node.operator = this.value;
        node.prefix = true;
        this.next();
        node.argument = this.parseMaybeUnary(null, true, update, forInit);
        this.checkExpressionErrors(refDestructuringErrors, true);
        if (update) {
          this.checkLValSimple(node.argument);
        } else if (this.strict && node.operator === "delete" && node.argument.type === "Identifier") {
          this.raiseRecoverable(node.start, "Deleting local variable in strict mode");
        } else if (node.operator === "delete" && isPrivateFieldAccess(node.argument)) {
          this.raiseRecoverable(node.start, "Private fields can not be deleted");
        } else {
          sawUnary = true;
        }
        expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
      } else if (!sawUnary && this.type === types$1.privateId) {
        if (forInit || this.privateNameStack.length === 0) {
          this.unexpected();
        }
        expr = this.parsePrivateIdent();
        if (this.type !== types$1._in) {
          this.unexpected();
        }
      } else {
        expr = this.parseExprSubscripts(refDestructuringErrors, forInit);
        if (this.checkExpressionErrors(refDestructuringErrors)) {
          return expr;
        }
        while (this.type.postfix && !this.canInsertSemicolon()) {
          var node$1 = this.startNodeAt(startPos, startLoc);
          node$1.operator = this.value;
          node$1.prefix = false;
          node$1.argument = expr;
          this.checkLValSimple(expr);
          this.next();
          expr = this.finishNode(node$1, "UpdateExpression");
        }
      }
      if (!incDec && this.eat(types$1.starstar)) {
        if (sawUnary) {
          this.unexpected(this.lastTokStart);
        } else {
          return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), "**", false);
        }
      } else {
        return expr;
      }
    };
    pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {
      var startPos = this.start, startLoc = this.startLoc;
      var expr = this.parseExprAtom(refDestructuringErrors, forInit);
      if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")") {
        return expr;
      }
      var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);
      if (refDestructuringErrors && result.type === "MemberExpression") {
        if (refDestructuringErrors.parenthesizedAssign >= result.start) {
          refDestructuringErrors.parenthesizedAssign = -1;
        }
        if (refDestructuringErrors.parenthesizedBind >= result.start) {
          refDestructuringErrors.parenthesizedBind = -1;
        }
        if (refDestructuringErrors.trailingComma >= result.start) {
          refDestructuringErrors.trailingComma = -1;
        }
      }
      return result;
    };
    pp$5.parseSubscripts = function(base2, startPos, startLoc, noCalls, forInit) {
      var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base2.type === "Identifier" && base2.name === "async" && this.lastTokEnd === base2.end && !this.canInsertSemicolon() && base2.end - base2.start === 5 && this.potentialArrowAt === base2.start;
      var optionalChained = false;
      while (true) {
        var element6 = this.parseSubscript(base2, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);
        if (element6.optional) {
          optionalChained = true;
        }
        if (element6 === base2 || element6.type === "ArrowFunctionExpression") {
          if (optionalChained) {
            var chainNode = this.startNodeAt(startPos, startLoc);
            chainNode.expression = element6;
            element6 = this.finishNode(chainNode, "ChainExpression");
          }
          return element6;
        }
        base2 = element6;
      }
    };
    pp$5.parseSubscript = function(base2, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {
      var optionalSupported = this.options.ecmaVersion >= 11;
      var optional = optionalSupported && this.eat(types$1.questionDot);
      if (noCalls && optional) {
        this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
      }
      var computed = this.eat(types$1.bracketL);
      if (computed || optional && this.type !== types$1.parenL && this.type !== types$1.backQuote || this.eat(types$1.dot)) {
        var node = this.startNodeAt(startPos, startLoc);
        node.object = base2;
        if (computed) {
          node.property = this.parseExpression();
          this.expect(types$1.bracketR);
        } else if (this.type === types$1.privateId && base2.type !== "Super") {
          node.property = this.parsePrivateIdent();
        } else {
          node.property = this.parseIdent(this.options.allowReserved !== "never");
        }
        node.computed = !!computed;
        if (optionalSupported) {
          node.optional = optional;
        }
        base2 = this.finishNode(node, "MemberExpression");
      } else if (!noCalls && this.eat(types$1.parenL)) {
        var refDestructuringErrors = new DestructuringErrors(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
        this.yieldPos = 0;
        this.awaitPos = 0;
        this.awaitIdentPos = 0;
        var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);
        if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {
          this.checkPatternErrors(refDestructuringErrors, false);
          this.checkYieldAwaitInDefaultParams();
          if (this.awaitIdentPos > 0) {
            this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function");
          }
          this.yieldPos = oldYieldPos;
          this.awaitPos = oldAwaitPos;
          this.awaitIdentPos = oldAwaitIdentPos;
          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit);
        }
        this.checkExpressionErrors(refDestructuringErrors, true);
        this.yieldPos = oldYieldPos || this.yieldPos;
        this.awaitPos = oldAwaitPos || this.awaitPos;
        this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;
        var node$1 = this.startNodeAt(startPos, startLoc);
        node$1.callee = base2;
        node$1.arguments = exprList;
        if (optionalSupported) {
          node$1.optional = optional;
        }
        base2 = this.finishNode(node$1, "CallExpression");
      } else if (this.type === types$1.backQuote) {
        if (optional || optionalChained) {
          this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
        }
        var node$2 = this.startNodeAt(startPos, startLoc);
        node$2.tag = base2;
        node$2.quasi = this.parseTemplate({ isTagged: true });
        base2 = this.finishNode(node$2, "TaggedTemplateExpression");
      }
      return base2;
    };
    pp$5.parseExprAtom = function(refDestructuringErrors, forInit) {
      if (this.type === types$1.slash) {
        this.readRegexp();
      }
      var node, canBeArrow = this.potentialArrowAt === this.start;
      switch (this.type) {
        case types$1._super:
          if (!this.allowSuper) {
            this.raise(this.start, "'super' keyword outside a method");
          }
          node = this.startNode();
          this.next();
          if (this.type === types$1.parenL && !this.allowDirectSuper) {
            this.raise(node.start, "super() call outside constructor of a subclass");
          }
          if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL) {
            this.unexpected();
          }
          return this.finishNode(node, "Super");
        case types$1._this:
          node = this.startNode();
          this.next();
          return this.finishNode(node, "ThisExpression");
        case types$1.name:
          var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
          var id = this.parseIdent(false);
          if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types$1._function)) {
            this.overrideContext(types3.f_expr);
            return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit);
          }
          if (canBeArrow && !this.canInsertSemicolon()) {
            if (this.eat(types$1.arrow)) {
              return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit);
            }
            if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types$1.name && !containsEsc && (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) {
              id = this.parseIdent(false);
              if (this.canInsertSemicolon() || !this.eat(types$1.arrow)) {
                this.unexpected();
              }
              return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit);
            }
          }
          return id;
        case types$1.regexp:
          var value = this.value;
          node = this.parseLiteral(value.value);
          node.regex = { pattern: value.pattern, flags: value.flags };
          return node;
        case types$1.num:
        case types$1.string:
          return this.parseLiteral(this.value);
        case types$1._null:
        case types$1._true:
        case types$1._false:
          node = this.startNode();
          node.value = this.type === types$1._null ? null : this.type === types$1._true;
          node.raw = this.type.keyword;
          this.next();
          return this.finishNode(node, "Literal");
        case types$1.parenL:
          var start3 = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);
          if (refDestructuringErrors) {
            if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {
              refDestructuringErrors.parenthesizedAssign = start3;
            }
            if (refDestructuringErrors.parenthesizedBind < 0) {
              refDestructuringErrors.parenthesizedBind = start3;
            }
          }
          return expr;
        case types$1.bracketL:
          node = this.startNode();
          this.next();
          node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);
          return this.finishNode(node, "ArrayExpression");
        case types$1.braceL:
          this.overrideContext(types3.b_expr);
          return this.parseObj(false, refDestructuringErrors);
        case types$1._function:
          node = this.startNode();
          this.next();
          return this.parseFunction(node, 0);
        case types$1._class:
          return this.parseClass(this.startNode(), false);
        case types$1._new:
          return this.parseNew();
        case types$1.backQuote:
          return this.parseTemplate();
        case types$1._import:
          if (this.options.ecmaVersion >= 11) {
            return this.parseExprImport();
          } else {
            return this.unexpected();
          }
        default:
          this.unexpected();
      }
    };
    pp$5.parseExprImport = function() {
      var node = this.startNode();
      if (this.containsEsc) {
        this.raiseRecoverable(this.start, "Escape sequence in keyword import");
      }
      var meta = this.parseIdent(true);
      switch (this.type) {
        case types$1.parenL:
          return this.parseDynamicImport(node);
        case types$1.dot:
          node.meta = meta;
          return this.parseImportMeta(node);
        default:
          this.unexpected();
      }
    };
    pp$5.parseDynamicImport = function(node) {
      this.next();
      node.source = this.parseMaybeAssign();
      if (!this.eat(types$1.parenR)) {
        var errorPos = this.start;
        if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {
          this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");
        } else {
          this.unexpected(errorPos);
        }
      }
      return this.finishNode(node, "ImportExpression");
    };
    pp$5.parseImportMeta = function(node) {
      this.next();
      var containsEsc = this.containsEsc;
      node.property = this.parseIdent(true);
      if (node.property.name !== "meta") {
        this.raiseRecoverable(node.property.start, "The only valid meta property for import is 'import.meta'");
      }
      if (containsEsc) {
        this.raiseRecoverable(node.start, "'import.meta' must not contain escaped characters");
      }
      if (this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere) {
        this.raiseRecoverable(node.start, "Cannot use 'import.meta' outside a module");
      }
      return this.finishNode(node, "MetaProperty");
    };
    pp$5.parseLiteral = function(value) {
      var node = this.startNode();
      node.value = value;
      node.raw = this.input.slice(this.start, this.end);
      if (node.raw.charCodeAt(node.raw.length - 1) === 110) {
        node.bigint = node.raw.slice(0, -1).replace(/_/g, "");
      }
      this.next();
      return this.finishNode(node, "Literal");
    };
    pp$5.parseParenExpression = function() {
      this.expect(types$1.parenL);
      var val = this.parseExpression();
      this.expect(types$1.parenR);
      return val;
    };
    pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {
      var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
      if (this.options.ecmaVersion >= 6) {
        this.next();
        var innerStartPos = this.start, innerStartLoc = this.startLoc;
        var exprList = [], first = true, lastIsComma = false;
        var refDestructuringErrors = new DestructuringErrors(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
        this.yieldPos = 0;
        this.awaitPos = 0;
        while (this.type !== types$1.parenR) {
          first ? first = false : this.expect(types$1.comma);
          if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {
            lastIsComma = true;
            break;
          } else if (this.type === types$1.ellipsis) {
            spreadStart = this.start;
            exprList.push(this.parseParenItem(this.parseRestBinding()));
            if (this.type === types$1.comma) {
              this.raise(this.start, "Comma is not permitted after the rest element");
            }
            break;
          } else {
            exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));
          }
        }
        var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;
        this.expect(types$1.parenR);
        if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {
          this.checkPatternErrors(refDestructuringErrors, false);
          this.checkYieldAwaitInDefaultParams();
          this.yieldPos = oldYieldPos;
          this.awaitPos = oldAwaitPos;
          return this.parseParenArrowList(startPos, startLoc, exprList, forInit);
        }
        if (!exprList.length || lastIsComma) {
          this.unexpected(this.lastTokStart);
        }
        if (spreadStart) {
          this.unexpected(spreadStart);
        }
        this.checkExpressionErrors(refDestructuringErrors, true);
        this.yieldPos = oldYieldPos || this.yieldPos;
        this.awaitPos = oldAwaitPos || this.awaitPos;
        if (exprList.length > 1) {
          val = this.startNodeAt(innerStartPos, innerStartLoc);
          val.expressions = exprList;
          this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
        } else {
          val = exprList[0];
        }
      } else {
        val = this.parseParenExpression();
      }
      if (this.options.preserveParens) {
        var par = this.startNodeAt(startPos, startLoc);
        par.expression = val;
        return this.finishNode(par, "ParenthesizedExpression");
      } else {
        return val;
      }
    };
    pp$5.parseParenItem = function(item) {
      return item;
    };
    pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {
      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit);
    };
    empty2 = [];
    pp$5.parseNew = function() {
      if (this.containsEsc) {
        this.raiseRecoverable(this.start, "Escape sequence in keyword new");
      }
      var node = this.startNode();
      var meta = this.parseIdent(true);
      if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {
        node.meta = meta;
        var containsEsc = this.containsEsc;
        node.property = this.parseIdent(true);
        if (node.property.name !== "target") {
          this.raiseRecoverable(node.property.start, "The only valid meta property for new is 'new.target'");
        }
        if (containsEsc) {
          this.raiseRecoverable(node.start, "'new.target' must not contain escaped characters");
        }
        if (!this.allowNewDotTarget) {
          this.raiseRecoverable(node.start, "'new.target' can only be used in functions and class static block");
        }
        return this.finishNode(node, "MetaProperty");
      }
      var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;
      node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);
      if (isImport && node.callee.type === "ImportExpression") {
        this.raise(startPos, "Cannot use new with import()");
      }
      if (this.eat(types$1.parenL)) {
        node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false);
      } else {
        node.arguments = empty2;
      }
      return this.finishNode(node, "NewExpression");
    };
    pp$5.parseTemplateElement = function(ref2) {
      var isTagged = ref2.isTagged;
      var elem = this.startNode();
      if (this.type === types$1.invalidTemplate) {
        if (!isTagged) {
          this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
        }
        elem.value = {
          raw: this.value,
          cooked: null
        };
      } else {
        elem.value = {
          raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
          cooked: this.value
        };
      }
      this.next();
      elem.tail = this.type === types$1.backQuote;
      return this.finishNode(elem, "TemplateElement");
    };
    pp$5.parseTemplate = function(ref2) {
      if (ref2 === void 0)
        ref2 = {};
      var isTagged = ref2.isTagged;
      if (isTagged === void 0)
        isTagged = false;
      var node = this.startNode();
      this.next();
      node.expressions = [];
      var curElt = this.parseTemplateElement({ isTagged });
      node.quasis = [curElt];
      while (!curElt.tail) {
        if (this.type === types$1.eof) {
          this.raise(this.pos, "Unterminated template literal");
        }
        this.expect(types$1.dollarBraceL);
        node.expressions.push(this.parseExpression());
        this.expect(types$1.braceR);
        node.quasis.push(curElt = this.parseTemplateElement({ isTagged }));
      }
      this.next();
      return this.finishNode(node, "TemplateLiteral");
    };
    pp$5.isAsyncProp = function(prop) {
      return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" && (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types$1.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
    };
    pp$5.parseObj = function(isPattern, refDestructuringErrors) {
      var node = this.startNode(), first = true, propHash = {};
      node.properties = [];
      this.next();
      while (!this.eat(types$1.braceR)) {
        if (!first) {
          this.expect(types$1.comma);
          if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) {
            break;
          }
        } else {
          first = false;
        }
        var prop = this.parseProperty(isPattern, refDestructuringErrors);
        if (!isPattern) {
          this.checkPropClash(prop, propHash, refDestructuringErrors);
        }
        node.properties.push(prop);
      }
      return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");
    };
    pp$5.parseProperty = function(isPattern, refDestructuringErrors) {
      var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
      if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {
        if (isPattern) {
          prop.argument = this.parseIdent(false);
          if (this.type === types$1.comma) {
            this.raise(this.start, "Comma is not permitted after the rest element");
          }
          return this.finishNode(prop, "RestElement");
        }
        if (this.type === types$1.parenL && refDestructuringErrors) {
          if (refDestructuringErrors.parenthesizedAssign < 0) {
            refDestructuringErrors.parenthesizedAssign = this.start;
          }
          if (refDestructuringErrors.parenthesizedBind < 0) {
            refDestructuringErrors.parenthesizedBind = this.start;
          }
        }
        prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
        if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
          refDestructuringErrors.trailingComma = this.start;
        }
        return this.finishNode(prop, "SpreadElement");
      }
      if (this.options.ecmaVersion >= 6) {
        prop.method = false;
        prop.shorthand = false;
        if (isPattern || refDestructuringErrors) {
          startPos = this.start;
          startLoc = this.startLoc;
        }
        if (!isPattern) {
          isGenerator = this.eat(types$1.star);
        }
      }
      var containsEsc = this.containsEsc;
      this.parsePropertyName(prop);
      if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
        isAsync = true;
        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);
        this.parsePropertyName(prop, refDestructuringErrors);
      } else {
        isAsync = false;
      }
      this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
      return this.finishNode(prop, "Property");
    };
    pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
      if ((isGenerator || isAsync) && this.type === types$1.colon) {
        this.unexpected();
      }
      if (this.eat(types$1.colon)) {
        prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
        prop.kind = "init";
      } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {
        if (isPattern) {
          this.unexpected();
        }
        prop.kind = "init";
        prop.method = true;
        prop.value = this.parseMethod(isGenerator, isAsync);
      } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {
        if (isGenerator || isAsync) {
          this.unexpected();
        }
        prop.kind = prop.key.name;
        this.parsePropertyName(prop);
        prop.value = this.parseMethod(false);
        var paramCount = prop.kind === "get" ? 0 : 1;
        if (prop.value.params.length !== paramCount) {
          var start3 = prop.value.start;
          if (prop.kind === "get") {
            this.raiseRecoverable(start3, "getter should have no params");
          } else {
            this.raiseRecoverable(start3, "setter should have exactly one param");
          }
        } else {
          if (prop.kind === "set" && prop.value.params[0].type === "RestElement") {
            this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params");
          }
        }
      } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
        if (isGenerator || isAsync) {
          this.unexpected();
        }
        this.checkUnreserved(prop.key);
        if (prop.key.name === "await" && !this.awaitIdentPos) {
          this.awaitIdentPos = startPos;
        }
        prop.kind = "init";
        if (isPattern) {
          prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
        } else if (this.type === types$1.eq && refDestructuringErrors) {
          if (refDestructuringErrors.shorthandAssign < 0) {
            refDestructuringErrors.shorthandAssign = this.start;
          }
          prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
        } else {
          prop.value = this.copyNode(prop.key);
        }
        prop.shorthand = true;
      } else {
        this.unexpected();
      }
    };
    pp$5.parsePropertyName = function(prop) {
      if (this.options.ecmaVersion >= 6) {
        if (this.eat(types$1.bracketL)) {
          prop.computed = true;
          prop.key = this.parseMaybeAssign();
          this.expect(types$1.bracketR);
          return prop.key;
        } else {
          prop.computed = false;
        }
      }
      return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
    };
    pp$5.initFunction = function(node) {
      node.id = null;
      if (this.options.ecmaVersion >= 6) {
        node.generator = node.expression = false;
      }
      if (this.options.ecmaVersion >= 8) {
        node.async = false;
      }
    };
    pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {
      var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
      this.initFunction(node);
      if (this.options.ecmaVersion >= 6) {
        node.generator = isGenerator;
      }
      if (this.options.ecmaVersion >= 8) {
        node.async = !!isAsync;
      }
      this.yieldPos = 0;
      this.awaitPos = 0;
      this.awaitIdentPos = 0;
      this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));
      this.expect(types$1.parenL);
      node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
      this.checkYieldAwaitInDefaultParams();
      this.parseFunctionBody(node, false, true, false);
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      this.awaitIdentPos = oldAwaitIdentPos;
      return this.finishNode(node, "FunctionExpression");
    };
    pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {
      var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
      this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);
      this.initFunction(node);
      if (this.options.ecmaVersion >= 8) {
        node.async = !!isAsync;
      }
      this.yieldPos = 0;
      this.awaitPos = 0;
      this.awaitIdentPos = 0;
      node.params = this.toAssignableList(params, true);
      this.parseFunctionBody(node, true, false, forInit);
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      this.awaitIdentPos = oldAwaitIdentPos;
      return this.finishNode(node, "ArrowFunctionExpression");
    };
    pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {
      var isExpression = isArrowFunction && this.type !== types$1.braceL;
      var oldStrict = this.strict, useStrict = false;
      if (isExpression) {
        node.body = this.parseMaybeAssign(forInit);
        node.expression = true;
        this.checkParams(node, false);
      } else {
        var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
        if (!oldStrict || nonSimple) {
          useStrict = this.strictDirective(this.end);
          if (useStrict && nonSimple) {
            this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list");
          }
        }
        var oldLabels = this.labels;
        this.labels = [];
        if (useStrict) {
          this.strict = true;
        }
        this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));
        if (this.strict && node.id) {
          this.checkLValSimple(node.id, BIND_OUTSIDE);
        }
        node.body = this.parseBlock(false, void 0, useStrict && !oldStrict);
        node.expression = false;
        this.adaptDirectivePrologue(node.body.body);
        this.labels = oldLabels;
      }
      this.exitScope();
    };
    pp$5.isSimpleParamList = function(params) {
      for (var i3 = 0, list3 = params; i3 < list3.length; i3 += 1) {
        var param = list3[i3];
        if (param.type !== "Identifier") {
          return false;
        }
      }
      return true;
    };
    pp$5.checkParams = function(node, allowDuplicates) {
      var nameHash = /* @__PURE__ */ Object.create(null);
      for (var i3 = 0, list3 = node.params; i3 < list3.length; i3 += 1) {
        var param = list3[i3];
        this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);
      }
    };
    pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
      var elts = [], first = true;
      while (!this.eat(close)) {
        if (!first) {
          this.expect(types$1.comma);
          if (allowTrailingComma && this.afterTrailingComma(close)) {
            break;
          }
        } else {
          first = false;
        }
        var elt = void 0;
        if (allowEmpty && this.type === types$1.comma) {
          elt = null;
        } else if (this.type === types$1.ellipsis) {
          elt = this.parseSpread(refDestructuringErrors);
          if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0) {
            refDestructuringErrors.trailingComma = this.start;
          }
        } else {
          elt = this.parseMaybeAssign(false, refDestructuringErrors);
        }
        elts.push(elt);
      }
      return elts;
    };
    pp$5.checkUnreserved = function(ref2) {
      var start3 = ref2.start;
      var end = ref2.end;
      var name = ref2.name;
      if (this.inGenerator && name === "yield") {
        this.raiseRecoverable(start3, "Cannot use 'yield' as identifier inside a generator");
      }
      if (this.inAsync && name === "await") {
        this.raiseRecoverable(start3, "Cannot use 'await' as identifier inside an async function");
      }
      if (this.currentThisScope().inClassFieldInit && name === "arguments") {
        this.raiseRecoverable(start3, "Cannot use 'arguments' in class field initializer");
      }
      if (this.inClassStaticBlock && (name === "arguments" || name === "await")) {
        this.raise(start3, "Cannot use " + name + " in class static initialization block");
      }
      if (this.keywords.test(name)) {
        this.raise(start3, "Unexpected keyword '" + name + "'");
      }
      if (this.options.ecmaVersion < 6 && this.input.slice(start3, end).indexOf("\\") !== -1) {
        return;
      }
      var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
      if (re.test(name)) {
        if (!this.inAsync && name === "await") {
          this.raiseRecoverable(start3, "Cannot use keyword 'await' outside an async function");
        }
        this.raiseRecoverable(start3, "The keyword '" + name + "' is reserved");
      }
    };
    pp$5.parseIdent = function(liberal, isBinding) {
      var node = this.startNode();
      if (this.type === types$1.name) {
        node.name = this.value;
      } else if (this.type.keyword) {
        node.name = this.type.keyword;
        if ((node.name === "class" || node.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
          this.context.pop();
        }
      } else {
        this.unexpected();
      }
      this.next(!!liberal);
      this.finishNode(node, "Identifier");
      if (!liberal) {
        this.checkUnreserved(node);
        if (node.name === "await" && !this.awaitIdentPos) {
          this.awaitIdentPos = node.start;
        }
      }
      return node;
    };
    pp$5.parsePrivateIdent = function() {
      var node = this.startNode();
      if (this.type === types$1.privateId) {
        node.name = this.value;
      } else {
        this.unexpected();
      }
      this.next();
      this.finishNode(node, "PrivateIdentifier");
      if (this.privateNameStack.length === 0) {
        this.raise(node.start, "Private field '#" + node.name + "' must be declared in an enclosing class");
      } else {
        this.privateNameStack[this.privateNameStack.length - 1].used.push(node);
      }
      return node;
    };
    pp$5.parseYield = function(forInit) {
      if (!this.yieldPos) {
        this.yieldPos = this.start;
      }
      var node = this.startNode();
      this.next();
      if (this.type === types$1.semi || this.canInsertSemicolon() || this.type !== types$1.star && !this.type.startsExpr) {
        node.delegate = false;
        node.argument = null;
      } else {
        node.delegate = this.eat(types$1.star);
        node.argument = this.parseMaybeAssign(forInit);
      }
      return this.finishNode(node, "YieldExpression");
    };
    pp$5.parseAwait = function(forInit) {
      if (!this.awaitPos) {
        this.awaitPos = this.start;
      }
      var node = this.startNode();
      this.next();
      node.argument = this.parseMaybeUnary(null, true, false, forInit);
      return this.finishNode(node, "AwaitExpression");
    };
    pp$4 = Parser.prototype;
    pp$4.raise = function(pos, message) {
      var loc = getLineInfo(this.input, pos);
      message += " (" + loc.line + ":" + loc.column + ")";
      var err = new SyntaxError(message);
      err.pos = pos;
      err.loc = loc;
      err.raisedAt = this.pos;
      throw err;
    };
    pp$4.raiseRecoverable = pp$4.raise;
    pp$4.curPosition = function() {
      if (this.options.locations) {
        return new Position(this.curLine, this.pos - this.lineStart);
      }
    };
    pp$3 = Parser.prototype;
    Scope = function Scope2(flags2) {
      this.flags = flags2;
      this.var = [];
      this.lexical = [];
      this.functions = [];
      this.inClassFieldInit = false;
    };
    pp$3.enterScope = function(flags2) {
      this.scopeStack.push(new Scope(flags2));
    };
    pp$3.exitScope = function() {
      this.scopeStack.pop();
    };
    pp$3.treatFunctionsAsVarInScope = function(scope) {
      return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;
    };
    pp$3.declareName = function(name, bindingType, pos) {
      var redeclared = false;
      if (bindingType === BIND_LEXICAL) {
        var scope = this.currentScope();
        redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
        scope.lexical.push(name);
        if (this.inModule && scope.flags & SCOPE_TOP) {
          delete this.undefinedExports[name];
        }
      } else if (bindingType === BIND_SIMPLE_CATCH) {
        var scope$1 = this.currentScope();
        scope$1.lexical.push(name);
      } else if (bindingType === BIND_FUNCTION) {
        var scope$2 = this.currentScope();
        if (this.treatFunctionsAsVar) {
          redeclared = scope$2.lexical.indexOf(name) > -1;
        } else {
          redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;
        }
        scope$2.functions.push(name);
      } else {
        for (var i3 = this.scopeStack.length - 1; i3 >= 0; --i3) {
          var scope$3 = this.scopeStack[i3];
          if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {
            redeclared = true;
            break;
          }
          scope$3.var.push(name);
          if (this.inModule && scope$3.flags & SCOPE_TOP) {
            delete this.undefinedExports[name];
          }
          if (scope$3.flags & SCOPE_VAR) {
            break;
          }
        }
      }
      if (redeclared) {
        this.raiseRecoverable(pos, "Identifier '" + name + "' has already been declared");
      }
    };
    pp$3.checkLocalExport = function(id) {
      if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1) {
        this.undefinedExports[id.name] = id;
      }
    };
    pp$3.currentScope = function() {
      return this.scopeStack[this.scopeStack.length - 1];
    };
    pp$3.currentVarScope = function() {
      for (var i3 = this.scopeStack.length - 1; ; i3--) {
        var scope = this.scopeStack[i3];
        if (scope.flags & SCOPE_VAR) {
          return scope;
        }
      }
    };
    pp$3.currentThisScope = function() {
      for (var i3 = this.scopeStack.length - 1; ; i3--) {
        var scope = this.scopeStack[i3];
        if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) {
          return scope;
        }
      }
    };
    Node2 = function Node3(parser, pos, loc) {
      this.type = "";
      this.start = pos;
      this.end = 0;
      if (parser.options.locations) {
        this.loc = new SourceLocation(parser, loc);
      }
      if (parser.options.directSourceFile) {
        this.sourceFile = parser.options.directSourceFile;
      }
      if (parser.options.ranges) {
        this.range = [pos, 0];
      }
    };
    pp$2 = Parser.prototype;
    pp$2.startNode = function() {
      return new Node2(this, this.start, this.startLoc);
    };
    pp$2.startNodeAt = function(pos, loc) {
      return new Node2(this, pos, loc);
    };
    pp$2.finishNode = function(node, type) {
      return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);
    };
    pp$2.finishNodeAt = function(node, type, pos, loc) {
      return finishNodeAt.call(this, node, type, pos, loc);
    };
    pp$2.copyNode = function(node) {
      var newNode = new Node2(this, node.start, this.startLoc);
      for (var prop in node) {
        newNode[prop] = node[prop];
      }
      return newNode;
    };
    ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";
    ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";
    ecma11BinaryProperties = ecma10BinaryProperties;
    ecma12BinaryProperties = ecma11BinaryProperties + " EBase EComp EMod EPres ExtPict";
    ecma13BinaryProperties = ecma12BinaryProperties;
    unicodeBinaryProperties = {
      9: ecma9BinaryProperties,
      10: ecma10BinaryProperties,
      11: ecma11BinaryProperties,
      12: ecma12BinaryProperties,
      13: ecma13BinaryProperties
    };
    unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";
    ecma9ScriptValues = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";
    ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";
    ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";
    ecma12ScriptValues = ecma11ScriptValues + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi";
    ecma13ScriptValues = ecma12ScriptValues + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith";
    unicodeScriptValues = {
      9: ecma9ScriptValues,
      10: ecma10ScriptValues,
      11: ecma11ScriptValues,
      12: ecma12ScriptValues,
      13: ecma13ScriptValues
    };
    data2 = {};
    for (i3 = 0, list3 = [9, 10, 11, 12, 13]; i3 < list3.length; i3 += 1) {
      ecmaVersion = list3[i3];
      buildUnicodeData(ecmaVersion);
    }
    pp$1 = Parser.prototype;
    RegExpValidationState = function RegExpValidationState2(parser) {
      this.parser = parser;
      this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "") + (parser.options.ecmaVersion >= 13 ? "d" : "");
      this.unicodeProperties = data2[parser.options.ecmaVersion >= 13 ? 13 : parser.options.ecmaVersion];
      this.source = "";
      this.flags = "";
      this.start = 0;
      this.switchU = false;
      this.switchN = false;
      this.pos = 0;
      this.lastIntValue = 0;
      this.lastStringValue = "";
      this.lastAssertionIsQuantifiable = false;
      this.numCapturingParens = 0;
      this.maxBackReference = 0;
      this.groupNames = [];
      this.backReferenceNames = [];
    };
    RegExpValidationState.prototype.reset = function reset2(start3, pattern, flags2) {
      var unicode = flags2.indexOf("u") !== -1;
      this.start = start3 | 0;
      this.source = pattern + "";
      this.flags = flags2;
      this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
      this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
    };
    RegExpValidationState.prototype.raise = function raise(message) {
      this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + message);
    };
    RegExpValidationState.prototype.at = function at2(i3, forceU) {
      if (forceU === void 0)
        forceU = false;
      var s4 = this.source;
      var l2 = s4.length;
      if (i3 >= l2) {
        return -1;
      }
      var c2 = s4.charCodeAt(i3);
      if (!(forceU || this.switchU) || c2 <= 55295 || c2 >= 57344 || i3 + 1 >= l2) {
        return c2;
      }
      var next = s4.charCodeAt(i3 + 1);
      return next >= 56320 && next <= 57343 ? (c2 << 10) + next - 56613888 : c2;
    };
    RegExpValidationState.prototype.nextIndex = function nextIndex(i3, forceU) {
      if (forceU === void 0)
        forceU = false;
      var s4 = this.source;
      var l2 = s4.length;
      if (i3 >= l2) {
        return l2;
      }
      var c2 = s4.charCodeAt(i3), next;
      if (!(forceU || this.switchU) || c2 <= 55295 || c2 >= 57344 || i3 + 1 >= l2 || (next = s4.charCodeAt(i3 + 1)) < 56320 || next > 57343) {
        return i3 + 1;
      }
      return i3 + 2;
    };
    RegExpValidationState.prototype.current = function current(forceU) {
      if (forceU === void 0)
        forceU = false;
      return this.at(this.pos, forceU);
    };
    RegExpValidationState.prototype.lookahead = function lookahead(forceU) {
      if (forceU === void 0)
        forceU = false;
      return this.at(this.nextIndex(this.pos, forceU), forceU);
    };
    RegExpValidationState.prototype.advance = function advance(forceU) {
      if (forceU === void 0)
        forceU = false;
      this.pos = this.nextIndex(this.pos, forceU);
    };
    RegExpValidationState.prototype.eat = function eat(ch, forceU) {
      if (forceU === void 0)
        forceU = false;
      if (this.current(forceU) === ch) {
        this.advance(forceU);
        return true;
      }
      return false;
    };
    pp$1.validateRegExpFlags = function(state) {
      var validFlags = state.validFlags;
      var flags2 = state.flags;
      for (var i3 = 0; i3 < flags2.length; i3++) {
        var flag = flags2.charAt(i3);
        if (validFlags.indexOf(flag) === -1) {
          this.raise(state.start, "Invalid regular expression flag");
        }
        if (flags2.indexOf(flag, i3 + 1) > -1) {
          this.raise(state.start, "Duplicate regular expression flag");
        }
      }
    };
    pp$1.validateRegExpPattern = function(state) {
      this.regexp_pattern(state);
      if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {
        state.switchN = true;
        this.regexp_pattern(state);
      }
    };
    pp$1.regexp_pattern = function(state) {
      state.pos = 0;
      state.lastIntValue = 0;
      state.lastStringValue = "";
      state.lastAssertionIsQuantifiable = false;
      state.numCapturingParens = 0;
      state.maxBackReference = 0;
      state.groupNames.length = 0;
      state.backReferenceNames.length = 0;
      this.regexp_disjunction(state);
      if (state.pos !== state.source.length) {
        if (state.eat(41)) {
          state.raise("Unmatched ')'");
        }
        if (state.eat(93) || state.eat(125)) {
          state.raise("Lone quantifier brackets");
        }
      }
      if (state.maxBackReference > state.numCapturingParens) {
        state.raise("Invalid escape");
      }
      for (var i3 = 0, list3 = state.backReferenceNames; i3 < list3.length; i3 += 1) {
        var name = list3[i3];
        if (state.groupNames.indexOf(name) === -1) {
          state.raise("Invalid named capture referenced");
        }
      }
    };
    pp$1.regexp_disjunction = function(state) {
      this.regexp_alternative(state);
      while (state.eat(124)) {
        this.regexp_alternative(state);
      }
      if (this.regexp_eatQuantifier(state, true)) {
        state.raise("Nothing to repeat");
      }
      if (state.eat(123)) {
        state.raise("Lone quantifier brackets");
      }
    };
    pp$1.regexp_alternative = function(state) {
      while (state.pos < state.source.length && this.regexp_eatTerm(state)) {
      }
    };
    pp$1.regexp_eatTerm = function(state) {
      if (this.regexp_eatAssertion(state)) {
        if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
          if (state.switchU) {
            state.raise("Invalid quantifier");
          }
        }
        return true;
      }
      if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
        this.regexp_eatQuantifier(state);
        return true;
      }
      return false;
    };
    pp$1.regexp_eatAssertion = function(state) {
      var start3 = state.pos;
      state.lastAssertionIsQuantifiable = false;
      if (state.eat(94) || state.eat(36)) {
        return true;
      }
      if (state.eat(92)) {
        if (state.eat(66) || state.eat(98)) {
          return true;
        }
        state.pos = start3;
      }
      if (state.eat(40) && state.eat(63)) {
        var lookbehind = false;
        if (this.options.ecmaVersion >= 9) {
          lookbehind = state.eat(60);
        }
        if (state.eat(61) || state.eat(33)) {
          this.regexp_disjunction(state);
          if (!state.eat(41)) {
            state.raise("Unterminated group");
          }
          state.lastAssertionIsQuantifiable = !lookbehind;
          return true;
        }
      }
      state.pos = start3;
      return false;
    };
    pp$1.regexp_eatQuantifier = function(state, noError) {
      if (noError === void 0)
        noError = false;
      if (this.regexp_eatQuantifierPrefix(state, noError)) {
        state.eat(63);
        return true;
      }
      return false;
    };
    pp$1.regexp_eatQuantifierPrefix = function(state, noError) {
      return state.eat(42) || state.eat(43) || state.eat(63) || this.regexp_eatBracedQuantifier(state, noError);
    };
    pp$1.regexp_eatBracedQuantifier = function(state, noError) {
      var start3 = state.pos;
      if (state.eat(123)) {
        var min = 0, max = -1;
        if (this.regexp_eatDecimalDigits(state)) {
          min = state.lastIntValue;
          if (state.eat(44) && this.regexp_eatDecimalDigits(state)) {
            max = state.lastIntValue;
          }
          if (state.eat(125)) {
            if (max !== -1 && max < min && !noError) {
              state.raise("numbers out of order in {} quantifier");
            }
            return true;
          }
        }
        if (state.switchU && !noError) {
          state.raise("Incomplete quantifier");
        }
        state.pos = start3;
      }
      return false;
    };
    pp$1.regexp_eatAtom = function(state) {
      return this.regexp_eatPatternCharacters(state) || state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);
    };
    pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {
      var start3 = state.pos;
      if (state.eat(92)) {
        if (this.regexp_eatAtomEscape(state)) {
          return true;
        }
        state.pos = start3;
      }
      return false;
    };
    pp$1.regexp_eatUncapturingGroup = function(state) {
      var start3 = state.pos;
      if (state.eat(40)) {
        if (state.eat(63) && state.eat(58)) {
          this.regexp_disjunction(state);
          if (state.eat(41)) {
            return true;
          }
          state.raise("Unterminated group");
        }
        state.pos = start3;
      }
      return false;
    };
    pp$1.regexp_eatCapturingGroup = function(state) {
      if (state.eat(40)) {
        if (this.options.ecmaVersion >= 9) {
          this.regexp_groupSpecifier(state);
        } else if (state.current() === 63) {
          state.raise("Invalid group");
        }
        this.regexp_disjunction(state);
        if (state.eat(41)) {
          state.numCapturingParens += 1;
          return true;
        }
        state.raise("Unterminated group");
      }
      return false;
    };
    pp$1.regexp_eatExtendedAtom = function(state) {
      return state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);
    };
    pp$1.regexp_eatInvalidBracedQuantifier = function(state) {
      if (this.regexp_eatBracedQuantifier(state, true)) {
        state.raise("Nothing to repeat");
      }
      return false;
    };
    pp$1.regexp_eatSyntaxCharacter = function(state) {
      var ch = state.current();
      if (isSyntaxCharacter(ch)) {
        state.lastIntValue = ch;
        state.advance();
        return true;
      }
      return false;
    };
    pp$1.regexp_eatPatternCharacters = function(state) {
      var start3 = state.pos;
      var ch = 0;
      while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
        state.advance();
      }
      return state.pos !== start3;
    };
    pp$1.regexp_eatExtendedPatternCharacter = function(state) {
      var ch = state.current();
      if (ch !== -1 && ch !== 36 && !(ch >= 40 && ch <= 43) && ch !== 46 && ch !== 63 && ch !== 91 && ch !== 94 && ch !== 124) {
        state.advance();
        return true;
      }
      return false;
    };
    pp$1.regexp_groupSpecifier = function(state) {
      if (state.eat(63)) {
        if (this.regexp_eatGroupName(state)) {
          if (state.groupNames.indexOf(state.lastStringValue) !== -1) {
            state.raise("Duplicate capture group name");
          }
          state.groupNames.push(state.lastStringValue);
          return;
        }
        state.raise("Invalid group");
      }
    };
    pp$1.regexp_eatGroupName = function(state) {
      state.lastStringValue = "";
      if (state.eat(60)) {
        if (this.regexp_eatRegExpIdentifierName(state) && state.eat(62)) {
          return true;
        }
        state.raise("Invalid capture group name");
      }
      return false;
    };
    pp$1.regexp_eatRegExpIdentifierName = function(state) {
      state.lastStringValue = "";
      if (this.regexp_eatRegExpIdentifierStart(state)) {
        state.lastStringValue += codePointToString(state.lastIntValue);
        while (this.regexp_eatRegExpIdentifierPart(state)) {
          state.lastStringValue += codePointToString(state.lastIntValue);
        }
        return true;
      }
      return false;
    };
    pp$1.regexp_eatRegExpIdentifierStart = function(state) {
      var start3 = state.pos;
      var forceU = this.options.ecmaVersion >= 11;
      var ch = state.current(forceU);
      state.advance(forceU);
      if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
        ch = state.lastIntValue;
      }
      if (isRegExpIdentifierStart(ch)) {
        state.lastIntValue = ch;
        return true;
      }
      state.pos = start3;
      return false;
    };
    pp$1.regexp_eatRegExpIdentifierPart = function(state) {
      var start3 = state.pos;
      var forceU = this.options.ecmaVersion >= 11;
      var ch = state.current(forceU);
      state.advance(forceU);
      if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
        ch = state.lastIntValue;
      }
      if (isRegExpIdentifierPart(ch)) {
        state.lastIntValue = ch;
        return true;
      }
      state.pos = start3;
      return false;
    };
    pp$1.regexp_eatAtomEscape = function(state) {
      if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {
        return true;
      }
      if (state.switchU) {
        if (state.current() === 99) {
          state.raise("Invalid unicode escape");
        }
        state.raise("Invalid escape");
      }
      return false;
    };
    pp$1.regexp_eatBackReference = function(state) {
      var start3 = state.pos;
      if (this.regexp_eatDecimalEscape(state)) {
        var n2 = state.lastIntValue;
        if (state.switchU) {
          if (n2 > state.maxBackReference) {
            state.maxBackReference = n2;
          }
          return true;
        }
        if (n2 <= state.numCapturingParens) {
          return true;
        }
        state.pos = start3;
      }
      return false;
    };
    pp$1.regexp_eatKGroupName = function(state) {
      if (state.eat(107)) {
        if (this.regexp_eatGroupName(state)) {
          state.backReferenceNames.push(state.lastStringValue);
          return true;
        }
        state.raise("Invalid named reference");
      }
      return false;
    };
    pp$1.regexp_eatCharacterEscape = function(state) {
      return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state, false) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);
    };
    pp$1.regexp_eatCControlLetter = function(state) {
      var start3 = state.pos;
      if (state.eat(99)) {
        if (this.regexp_eatControlLetter(state)) {
          return true;
        }
        state.pos = start3;
      }
      return false;
    };
    pp$1.regexp_eatZero = function(state) {
      if (state.current() === 48 && !isDecimalDigit(state.lookahead())) {
        state.lastIntValue = 0;
        state.advance();
        return true;
      }
      return false;
    };
    pp$1.regexp_eatControlEscape = function(state) {
      var ch = state.current();
      if (ch === 116) {
        state.lastIntValue = 9;
        state.advance();
        return true;
      }
      if (ch === 110) {
        state.lastIntValue = 10;
        state.advance();
        return true;
      }
      if (ch === 118) {
        state.lastIntValue = 11;
        state.advance();
        return true;
      }
      if (ch === 102) {
        state.lastIntValue = 12;
        state.advance();
        return true;
      }
      if (ch === 114) {
        state.lastIntValue = 13;
        state.advance();
        return true;
      }
      return false;
    };
    pp$1.regexp_eatControlLetter = function(state) {
      var ch = state.current();
      if (isControlLetter(ch)) {
        state.lastIntValue = ch % 32;
        state.advance();
        return true;
      }
      return false;
    };
    pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {
      if (forceU === void 0)
        forceU = false;
      var start3 = state.pos;
      var switchU = forceU || state.switchU;
      if (state.eat(117)) {
        if (this.regexp_eatFixedHexDigits(state, 4)) {
          var lead = state.lastIntValue;
          if (switchU && lead >= 55296 && lead <= 56319) {
            var leadSurrogateEnd = state.pos;
            if (state.eat(92) && state.eat(117) && this.regexp_eatFixedHexDigits(state, 4)) {
              var trail = state.lastIntValue;
              if (trail >= 56320 && trail <= 57343) {
                state.lastIntValue = (lead - 55296) * 1024 + (trail - 56320) + 65536;
                return true;
              }
            }
            state.pos = leadSurrogateEnd;
            state.lastIntValue = lead;
          }
          return true;
        }
        if (switchU && state.eat(123) && this.regexp_eatHexDigits(state) && state.eat(125) && isValidUnicode(state.lastIntValue)) {
          return true;
        }
        if (switchU) {
          state.raise("Invalid unicode escape");
        }
        state.pos = start3;
      }
      return false;
    };
    pp$1.regexp_eatIdentityEscape = function(state) {
      if (state.switchU) {
        if (this.regexp_eatSyntaxCharacter(state)) {
          return true;
        }
        if (state.eat(47)) {
          state.lastIntValue = 47;
          return true;
        }
        return false;
      }
      var ch = state.current();
      if (ch !== 99 && (!state.switchN || ch !== 107)) {
        state.lastIntValue = ch;
        state.advance();
        return true;
      }
      return false;
    };
    pp$1.regexp_eatDecimalEscape = function(state) {
      state.lastIntValue = 0;
      var ch = state.current();
      if (ch >= 49 && ch <= 57) {
        do {
          state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
          state.advance();
        } while ((ch = state.current()) >= 48 && ch <= 57);
        return true;
      }
      return false;
    };
    pp$1.regexp_eatCharacterClassEscape = function(state) {
      var ch = state.current();
      if (isCharacterClassEscape(ch)) {
        state.lastIntValue = -1;
        state.advance();
        return true;
      }
      if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 80 || ch === 112)) {
        state.lastIntValue = -1;
        state.advance();
        if (state.eat(123) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(125)) {
          return true;
        }
        state.raise("Invalid property name");
      }
      return false;
    };
    pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {
      var start3 = state.pos;
      if (this.regexp_eatUnicodePropertyName(state) && state.eat(61)) {
        var name = state.lastStringValue;
        if (this.regexp_eatUnicodePropertyValue(state)) {
          var value = state.lastStringValue;
          this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
          return true;
        }
      }
      state.pos = start3;
      if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
        var nameOrValue = state.lastStringValue;
        this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);
        return true;
      }
      return false;
    };
    pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
      if (!hasOwn2(state.unicodeProperties.nonBinary, name)) {
        state.raise("Invalid property name");
      }
      if (!state.unicodeProperties.nonBinary[name].test(value)) {
        state.raise("Invalid property value");
      }
    };
    pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
      if (!state.unicodeProperties.binary.test(nameOrValue)) {
        state.raise("Invalid property name");
      }
    };
    pp$1.regexp_eatUnicodePropertyName = function(state) {
      var ch = 0;
      state.lastStringValue = "";
      while (isUnicodePropertyNameCharacter(ch = state.current())) {
        state.lastStringValue += codePointToString(ch);
        state.advance();
      }
      return state.lastStringValue !== "";
    };
    pp$1.regexp_eatUnicodePropertyValue = function(state) {
      var ch = 0;
      state.lastStringValue = "";
      while (isUnicodePropertyValueCharacter(ch = state.current())) {
        state.lastStringValue += codePointToString(ch);
        state.advance();
      }
      return state.lastStringValue !== "";
    };
    pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
      return this.regexp_eatUnicodePropertyValue(state);
    };
    pp$1.regexp_eatCharacterClass = function(state) {
      if (state.eat(91)) {
        state.eat(94);
        this.regexp_classRanges(state);
        if (state.eat(93)) {
          return true;
        }
        state.raise("Unterminated character class");
      }
      return false;
    };
    pp$1.regexp_classRanges = function(state) {
      while (this.regexp_eatClassAtom(state)) {
        var left = state.lastIntValue;
        if (state.eat(45) && this.regexp_eatClassAtom(state)) {
          var right = state.lastIntValue;
          if (state.switchU && (left === -1 || right === -1)) {
            state.raise("Invalid character class");
          }
          if (left !== -1 && right !== -1 && left > right) {
            state.raise("Range out of order in character class");
          }
        }
      }
    };
    pp$1.regexp_eatClassAtom = function(state) {
      var start3 = state.pos;
      if (state.eat(92)) {
        if (this.regexp_eatClassEscape(state)) {
          return true;
        }
        if (state.switchU) {
          var ch$1 = state.current();
          if (ch$1 === 99 || isOctalDigit(ch$1)) {
            state.raise("Invalid class escape");
          }
          state.raise("Invalid escape");
        }
        state.pos = start3;
      }
      var ch = state.current();
      if (ch !== 93) {
        state.lastIntValue = ch;
        state.advance();
        return true;
      }
      return false;
    };
    pp$1.regexp_eatClassEscape = function(state) {
      var start3 = state.pos;
      if (state.eat(98)) {
        state.lastIntValue = 8;
        return true;
      }
      if (state.switchU && state.eat(45)) {
        state.lastIntValue = 45;
        return true;
      }
      if (!state.switchU && state.eat(99)) {
        if (this.regexp_eatClassControlLetter(state)) {
          return true;
        }
        state.pos = start3;
      }
      return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);
    };
    pp$1.regexp_eatClassControlLetter = function(state) {
      var ch = state.current();
      if (isDecimalDigit(ch) || ch === 95) {
        state.lastIntValue = ch % 32;
        state.advance();
        return true;
      }
      return false;
    };
    pp$1.regexp_eatHexEscapeSequence = function(state) {
      var start3 = state.pos;
      if (state.eat(120)) {
        if (this.regexp_eatFixedHexDigits(state, 2)) {
          return true;
        }
        if (state.switchU) {
          state.raise("Invalid escape");
        }
        state.pos = start3;
      }
      return false;
    };
    pp$1.regexp_eatDecimalDigits = function(state) {
      var start3 = state.pos;
      var ch = 0;
      state.lastIntValue = 0;
      while (isDecimalDigit(ch = state.current())) {
        state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
        state.advance();
      }
      return state.pos !== start3;
    };
    pp$1.regexp_eatHexDigits = function(state) {
      var start3 = state.pos;
      var ch = 0;
      state.lastIntValue = 0;
      while (isHexDigit(ch = state.current())) {
        state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
        state.advance();
      }
      return state.pos !== start3;
    };
    pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {
      if (this.regexp_eatOctalDigit(state)) {
        var n1 = state.lastIntValue;
        if (this.regexp_eatOctalDigit(state)) {
          var n2 = state.lastIntValue;
          if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
            state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
          } else {
            state.lastIntValue = n1 * 8 + n2;
          }
        } else {
          state.lastIntValue = n1;
        }
        return true;
      }
      return false;
    };
    pp$1.regexp_eatOctalDigit = function(state) {
      var ch = state.current();
      if (isOctalDigit(ch)) {
        state.lastIntValue = ch - 48;
        state.advance();
        return true;
      }
      state.lastIntValue = 0;
      return false;
    };
    pp$1.regexp_eatFixedHexDigits = function(state, length) {
      var start3 = state.pos;
      state.lastIntValue = 0;
      for (var i3 = 0; i3 < length; ++i3) {
        var ch = state.current();
        if (!isHexDigit(ch)) {
          state.pos = start3;
          return false;
        }
        state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
        state.advance();
      }
      return true;
    };
    Token = function Token2(p3) {
      this.type = p3.type;
      this.value = p3.value;
      this.start = p3.start;
      this.end = p3.end;
      if (p3.options.locations) {
        this.loc = new SourceLocation(p3, p3.startLoc, p3.endLoc);
      }
      if (p3.options.ranges) {
        this.range = [p3.start, p3.end];
      }
    };
    pp = Parser.prototype;
    pp.next = function(ignoreEscapeSequenceInKeyword) {
      if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc) {
        this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword);
      }
      if (this.options.onToken) {
        this.options.onToken(new Token(this));
      }
      this.lastTokEnd = this.end;
      this.lastTokStart = this.start;
      this.lastTokEndLoc = this.endLoc;
      this.lastTokStartLoc = this.startLoc;
      this.nextToken();
    };
    pp.getToken = function() {
      this.next();
      return new Token(this);
    };
    if (typeof Symbol !== "undefined") {
      pp[Symbol.iterator] = function() {
        var this$1$1 = this;
        return {
          next: function() {
            var token = this$1$1.getToken();
            return {
              done: token.type === types$1.eof,
              value: token
            };
          }
        };
      };
    }
    pp.nextToken = function() {
      var curContext = this.curContext();
      if (!curContext || !curContext.preserveSpace) {
        this.skipSpace();
      }
      this.start = this.pos;
      if (this.options.locations) {
        this.startLoc = this.curPosition();
      }
      if (this.pos >= this.input.length) {
        return this.finishToken(types$1.eof);
      }
      if (curContext.override) {
        return curContext.override(this);
      } else {
        this.readToken(this.fullCharCodeAtPos());
      }
    };
    pp.readToken = function(code2) {
      if (isIdentifierStart(code2, this.options.ecmaVersion >= 6) || code2 === 92) {
        return this.readWord();
      }
      return this.getTokenFromCode(code2);
    };
    pp.fullCharCodeAtPos = function() {
      var code2 = this.input.charCodeAt(this.pos);
      if (code2 <= 55295 || code2 >= 56320) {
        return code2;
      }
      var next = this.input.charCodeAt(this.pos + 1);
      return next <= 56319 || next >= 57344 ? code2 : (code2 << 10) + next - 56613888;
    };
    pp.skipBlockComment = function() {
      var startLoc = this.options.onComment && this.curPosition();
      var start3 = this.pos, end = this.input.indexOf("*/", this.pos += 2);
      if (end === -1) {
        this.raise(this.pos - 2, "Unterminated comment");
      }
      this.pos = end + 2;
      if (this.options.locations) {
        for (var nextBreak = void 0, pos = start3; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1; ) {
          ++this.curLine;
          pos = this.lineStart = nextBreak;
        }
      }
      if (this.options.onComment) {
        this.options.onComment(true, this.input.slice(start3 + 2, end), start3, this.pos, startLoc, this.curPosition());
      }
    };
    pp.skipLineComment = function(startSkip) {
      var start3 = this.pos;
      var startLoc = this.options.onComment && this.curPosition();
      var ch = this.input.charCodeAt(this.pos += startSkip);
      while (this.pos < this.input.length && !isNewLine(ch)) {
        ch = this.input.charCodeAt(++this.pos);
      }
      if (this.options.onComment) {
        this.options.onComment(false, this.input.slice(start3 + startSkip, this.pos), start3, this.pos, startLoc, this.curPosition());
      }
    };
    pp.skipSpace = function() {
      loop:
        while (this.pos < this.input.length) {
          var ch = this.input.charCodeAt(this.pos);
          switch (ch) {
            case 32:
            case 160:
              ++this.pos;
              break;
            case 13:
              if (this.input.charCodeAt(this.pos + 1) === 10) {
                ++this.pos;
              }
            case 10:
            case 8232:
            case 8233:
              ++this.pos;
              if (this.options.locations) {
                ++this.curLine;
                this.lineStart = this.pos;
              }
              break;
            case 47:
              switch (this.input.charCodeAt(this.pos + 1)) {
                case 42:
                  this.skipBlockComment();
                  break;
                case 47:
                  this.skipLineComment(2);
                  break;
                default:
                  break loop;
              }
              break;
            default:
              if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
                ++this.pos;
              } else {
                break loop;
              }
          }
        }
    };
    pp.finishToken = function(type, val) {
      this.end = this.pos;
      if (this.options.locations) {
        this.endLoc = this.curPosition();
      }
      var prevType = this.type;
      this.type = type;
      this.value = val;
      this.updateContext(prevType);
    };
    pp.readToken_dot = function() {
      var next = this.input.charCodeAt(this.pos + 1);
      if (next >= 48 && next <= 57) {
        return this.readNumber(true);
      }
      var next2 = this.input.charCodeAt(this.pos + 2);
      if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {
        this.pos += 3;
        return this.finishToken(types$1.ellipsis);
      } else {
        ++this.pos;
        return this.finishToken(types$1.dot);
      }
    };
    pp.readToken_slash = function() {
      var next = this.input.charCodeAt(this.pos + 1);
      if (this.exprAllowed) {
        ++this.pos;
        return this.readRegexp();
      }
      if (next === 61) {
        return this.finishOp(types$1.assign, 2);
      }
      return this.finishOp(types$1.slash, 1);
    };
    pp.readToken_mult_modulo_exp = function(code2) {
      var next = this.input.charCodeAt(this.pos + 1);
      var size = 1;
      var tokentype = code2 === 42 ? types$1.star : types$1.modulo;
      if (this.options.ecmaVersion >= 7 && code2 === 42 && next === 42) {
        ++size;
        tokentype = types$1.starstar;
        next = this.input.charCodeAt(this.pos + 2);
      }
      if (next === 61) {
        return this.finishOp(types$1.assign, size + 1);
      }
      return this.finishOp(tokentype, size);
    };
    pp.readToken_pipe_amp = function(code2) {
      var next = this.input.charCodeAt(this.pos + 1);
      if (next === code2) {
        if (this.options.ecmaVersion >= 12) {
          var next2 = this.input.charCodeAt(this.pos + 2);
          if (next2 === 61) {
            return this.finishOp(types$1.assign, 3);
          }
        }
        return this.finishOp(code2 === 124 ? types$1.logicalOR : types$1.logicalAND, 2);
      }
      if (next === 61) {
        return this.finishOp(types$1.assign, 2);
      }
      return this.finishOp(code2 === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);
    };
    pp.readToken_caret = function() {
      var next = this.input.charCodeAt(this.pos + 1);
      if (next === 61) {
        return this.finishOp(types$1.assign, 2);
      }
      return this.finishOp(types$1.bitwiseXOR, 1);
    };
    pp.readToken_plus_min = function(code2) {
      var next = this.input.charCodeAt(this.pos + 1);
      if (next === code2) {
        if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
          this.skipLineComment(3);
          this.skipSpace();
          return this.nextToken();
        }
        return this.finishOp(types$1.incDec, 2);
      }
      if (next === 61) {
        return this.finishOp(types$1.assign, 2);
      }
      return this.finishOp(types$1.plusMin, 1);
    };
    pp.readToken_lt_gt = function(code2) {
      var next = this.input.charCodeAt(this.pos + 1);
      var size = 1;
      if (next === code2) {
        size = code2 === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
        if (this.input.charCodeAt(this.pos + size) === 61) {
          return this.finishOp(types$1.assign, size + 1);
        }
        return this.finishOp(types$1.bitShift, size);
      }
      if (next === 33 && code2 === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {
        this.skipLineComment(4);
        this.skipSpace();
        return this.nextToken();
      }
      if (next === 61) {
        size = 2;
      }
      return this.finishOp(types$1.relational, size);
    };
    pp.readToken_eq_excl = function(code2) {
      var next = this.input.charCodeAt(this.pos + 1);
      if (next === 61) {
        return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);
      }
      if (code2 === 61 && next === 62 && this.options.ecmaVersion >= 6) {
        this.pos += 2;
        return this.finishToken(types$1.arrow);
      }
      return this.finishOp(code2 === 61 ? types$1.eq : types$1.prefix, 1);
    };
    pp.readToken_question = function() {
      var ecmaVersion = this.options.ecmaVersion;
      if (ecmaVersion >= 11) {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next === 46) {
          var next2 = this.input.charCodeAt(this.pos + 2);
          if (next2 < 48 || next2 > 57) {
            return this.finishOp(types$1.questionDot, 2);
          }
        }
        if (next === 63) {
          if (ecmaVersion >= 12) {
            var next2$1 = this.input.charCodeAt(this.pos + 2);
            if (next2$1 === 61) {
              return this.finishOp(types$1.assign, 3);
            }
          }
          return this.finishOp(types$1.coalesce, 2);
        }
      }
      return this.finishOp(types$1.question, 1);
    };
    pp.readToken_numberSign = function() {
      var ecmaVersion = this.options.ecmaVersion;
      var code2 = 35;
      if (ecmaVersion >= 13) {
        ++this.pos;
        code2 = this.fullCharCodeAtPos();
        if (isIdentifierStart(code2, true) || code2 === 92) {
          return this.finishToken(types$1.privateId, this.readWord1());
        }
      }
      this.raise(this.pos, "Unexpected character '" + codePointToString(code2) + "'");
    };
    pp.getTokenFromCode = function(code2) {
      switch (code2) {
        case 46:
          return this.readToken_dot();
        case 40:
          ++this.pos;
          return this.finishToken(types$1.parenL);
        case 41:
          ++this.pos;
          return this.finishToken(types$1.parenR);
        case 59:
          ++this.pos;
          return this.finishToken(types$1.semi);
        case 44:
          ++this.pos;
          return this.finishToken(types$1.comma);
        case 91:
          ++this.pos;
          return this.finishToken(types$1.bracketL);
        case 93:
          ++this.pos;
          return this.finishToken(types$1.bracketR);
        case 123:
          ++this.pos;
          return this.finishToken(types$1.braceL);
        case 125:
          ++this.pos;
          return this.finishToken(types$1.braceR);
        case 58:
          ++this.pos;
          return this.finishToken(types$1.colon);
        case 96:
          if (this.options.ecmaVersion < 6) {
            break;
          }
          ++this.pos;
          return this.finishToken(types$1.backQuote);
        case 48:
          var next = this.input.charCodeAt(this.pos + 1);
          if (next === 120 || next === 88) {
            return this.readRadixNumber(16);
          }
          if (this.options.ecmaVersion >= 6) {
            if (next === 111 || next === 79) {
              return this.readRadixNumber(8);
            }
            if (next === 98 || next === 66) {
              return this.readRadixNumber(2);
            }
          }
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
          return this.readNumber(false);
        case 34:
        case 39:
          return this.readString(code2);
        case 47:
          return this.readToken_slash();
        case 37:
        case 42:
          return this.readToken_mult_modulo_exp(code2);
        case 124:
        case 38:
          return this.readToken_pipe_amp(code2);
        case 94:
          return this.readToken_caret();
        case 43:
        case 45:
          return this.readToken_plus_min(code2);
        case 60:
        case 62:
          return this.readToken_lt_gt(code2);
        case 61:
        case 33:
          return this.readToken_eq_excl(code2);
        case 63:
          return this.readToken_question();
        case 126:
          return this.finishOp(types$1.prefix, 1);
        case 35:
          return this.readToken_numberSign();
      }
      this.raise(this.pos, "Unexpected character '" + codePointToString(code2) + "'");
    };
    pp.finishOp = function(type, size) {
      var str = this.input.slice(this.pos, this.pos + size);
      this.pos += size;
      return this.finishToken(type, str);
    };
    pp.readRegexp = function() {
      var escaped2, inClass, start3 = this.pos;
      for (; ; ) {
        if (this.pos >= this.input.length) {
          this.raise(start3, "Unterminated regular expression");
        }
        var ch = this.input.charAt(this.pos);
        if (lineBreak.test(ch)) {
          this.raise(start3, "Unterminated regular expression");
        }
        if (!escaped2) {
          if (ch === "[") {
            inClass = true;
          } else if (ch === "]" && inClass) {
            inClass = false;
          } else if (ch === "/" && !inClass) {
            break;
          }
          escaped2 = ch === "\\";
        } else {
          escaped2 = false;
        }
        ++this.pos;
      }
      var pattern = this.input.slice(start3, this.pos);
      ++this.pos;
      var flagsStart = this.pos;
      var flags2 = this.readWord1();
      if (this.containsEsc) {
        this.unexpected(flagsStart);
      }
      var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
      state.reset(start3, pattern, flags2);
      this.validateRegExpFlags(state);
      this.validateRegExpPattern(state);
      var value = null;
      try {
        value = new RegExp(pattern, flags2);
      } catch (e3) {
      }
      return this.finishToken(types$1.regexp, { pattern, flags: flags2, value });
    };
    pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {
      var allowSeparators = this.options.ecmaVersion >= 12 && len === void 0;
      var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;
      var start3 = this.pos, total = 0, lastCode = 0;
      for (var i3 = 0, e3 = len == null ? Infinity : len; i3 < e3; ++i3, ++this.pos) {
        var code2 = this.input.charCodeAt(this.pos), val = void 0;
        if (allowSeparators && code2 === 95) {
          if (isLegacyOctalNumericLiteral) {
            this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals");
          }
          if (lastCode === 95) {
            this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore");
          }
          if (i3 === 0) {
            this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits");
          }
          lastCode = code2;
          continue;
        }
        if (code2 >= 97) {
          val = code2 - 97 + 10;
        } else if (code2 >= 65) {
          val = code2 - 65 + 10;
        } else if (code2 >= 48 && code2 <= 57) {
          val = code2 - 48;
        } else {
          val = Infinity;
        }
        if (val >= radix) {
          break;
        }
        lastCode = code2;
        total = total * radix + val;
      }
      if (allowSeparators && lastCode === 95) {
        this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits");
      }
      if (this.pos === start3 || len != null && this.pos - start3 !== len) {
        return null;
      }
      return total;
    };
    pp.readRadixNumber = function(radix) {
      var start3 = this.pos;
      this.pos += 2;
      var val = this.readInt(radix);
      if (val == null) {
        this.raise(this.start + 2, "Expected number in radix " + radix);
      }
      if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {
        val = stringToBigInt(this.input.slice(start3, this.pos));
        ++this.pos;
      } else if (isIdentifierStart(this.fullCharCodeAtPos())) {
        this.raise(this.pos, "Identifier directly after number");
      }
      return this.finishToken(types$1.num, val);
    };
    pp.readNumber = function(startsWithDot) {
      var start3 = this.pos;
      if (!startsWithDot && this.readInt(10, void 0, true) === null) {
        this.raise(start3, "Invalid number");
      }
      var octal = this.pos - start3 >= 2 && this.input.charCodeAt(start3) === 48;
      if (octal && this.strict) {
        this.raise(start3, "Invalid number");
      }
      var next = this.input.charCodeAt(this.pos);
      if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {
        var val$1 = stringToBigInt(this.input.slice(start3, this.pos));
        ++this.pos;
        if (isIdentifierStart(this.fullCharCodeAtPos())) {
          this.raise(this.pos, "Identifier directly after number");
        }
        return this.finishToken(types$1.num, val$1);
      }
      if (octal && /[89]/.test(this.input.slice(start3, this.pos))) {
        octal = false;
      }
      if (next === 46 && !octal) {
        ++this.pos;
        this.readInt(10);
        next = this.input.charCodeAt(this.pos);
      }
      if ((next === 69 || next === 101) && !octal) {
        next = this.input.charCodeAt(++this.pos);
        if (next === 43 || next === 45) {
          ++this.pos;
        }
        if (this.readInt(10) === null) {
          this.raise(start3, "Invalid number");
        }
      }
      if (isIdentifierStart(this.fullCharCodeAtPos())) {
        this.raise(this.pos, "Identifier directly after number");
      }
      var val = stringToNumber(this.input.slice(start3, this.pos), octal);
      return this.finishToken(types$1.num, val);
    };
    pp.readCodePoint = function() {
      var ch = this.input.charCodeAt(this.pos), code2;
      if (ch === 123) {
        if (this.options.ecmaVersion < 6) {
          this.unexpected();
        }
        var codePos = ++this.pos;
        code2 = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
        ++this.pos;
        if (code2 > 1114111) {
          this.invalidStringToken(codePos, "Code point out of bounds");
        }
      } else {
        code2 = this.readHexChar(4);
      }
      return code2;
    };
    pp.readString = function(quote) {
      var out = "", chunkStart = ++this.pos;
      for (; ; ) {
        if (this.pos >= this.input.length) {
          this.raise(this.start, "Unterminated string constant");
        }
        var ch = this.input.charCodeAt(this.pos);
        if (ch === quote) {
          break;
        }
        if (ch === 92) {
          out += this.input.slice(chunkStart, this.pos);
          out += this.readEscapedChar(false);
          chunkStart = this.pos;
        } else if (ch === 8232 || ch === 8233) {
          if (this.options.ecmaVersion < 10) {
            this.raise(this.start, "Unterminated string constant");
          }
          ++this.pos;
          if (this.options.locations) {
            this.curLine++;
            this.lineStart = this.pos;
          }
        } else {
          if (isNewLine(ch)) {
            this.raise(this.start, "Unterminated string constant");
          }
          ++this.pos;
        }
      }
      out += this.input.slice(chunkStart, this.pos++);
      return this.finishToken(types$1.string, out);
    };
    INVALID_TEMPLATE_ESCAPE_ERROR = {};
    pp.tryReadTemplateToken = function() {
      this.inTemplateElement = true;
      try {
        this.readTmplToken();
      } catch (err) {
        if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
          this.readInvalidTemplateToken();
        } else {
          throw err;
        }
      }
      this.inTemplateElement = false;
    };
    pp.invalidStringToken = function(position3, message) {
      if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
        throw INVALID_TEMPLATE_ESCAPE_ERROR;
      } else {
        this.raise(position3, message);
      }
    };
    pp.readTmplToken = function() {
      var out = "", chunkStart = this.pos;
      for (; ; ) {
        if (this.pos >= this.input.length) {
          this.raise(this.start, "Unterminated template");
        }
        var ch = this.input.charCodeAt(this.pos);
        if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {
          if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {
            if (ch === 36) {
              this.pos += 2;
              return this.finishToken(types$1.dollarBraceL);
            } else {
              ++this.pos;
              return this.finishToken(types$1.backQuote);
            }
          }
          out += this.input.slice(chunkStart, this.pos);
          return this.finishToken(types$1.template, out);
        }
        if (ch === 92) {
          out += this.input.slice(chunkStart, this.pos);
          out += this.readEscapedChar(true);
          chunkStart = this.pos;
        } else if (isNewLine(ch)) {
          out += this.input.slice(chunkStart, this.pos);
          ++this.pos;
          switch (ch) {
            case 13:
              if (this.input.charCodeAt(this.pos) === 10) {
                ++this.pos;
              }
            case 10:
              out += "\n";
              break;
            default:
              out += String.fromCharCode(ch);
              break;
          }
          if (this.options.locations) {
            ++this.curLine;
            this.lineStart = this.pos;
          }
          chunkStart = this.pos;
        } else {
          ++this.pos;
        }
      }
    };
    pp.readInvalidTemplateToken = function() {
      for (; this.pos < this.input.length; this.pos++) {
        switch (this.input[this.pos]) {
          case "\\":
            ++this.pos;
            break;
          case "$":
            if (this.input[this.pos + 1] !== "{") {
              break;
            }
          case "`":
            return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos));
        }
      }
      this.raise(this.start, "Unterminated template");
    };
    pp.readEscapedChar = function(inTemplate) {
      var ch = this.input.charCodeAt(++this.pos);
      ++this.pos;
      switch (ch) {
        case 110:
          return "\n";
        case 114:
          return "\r";
        case 120:
          return String.fromCharCode(this.readHexChar(2));
        case 117:
          return codePointToString(this.readCodePoint());
        case 116:
          return "	";
        case 98:
          return "\b";
        case 118:
          return "\v";
        case 102:
          return "\f";
        case 13:
          if (this.input.charCodeAt(this.pos) === 10) {
            ++this.pos;
          }
        case 10:
          if (this.options.locations) {
            this.lineStart = this.pos;
            ++this.curLine;
          }
          return "";
        case 56:
        case 57:
          if (this.strict) {
            this.invalidStringToken(this.pos - 1, "Invalid escape sequence");
          }
          if (inTemplate) {
            var codePos = this.pos - 1;
            this.invalidStringToken(codePos, "Invalid escape sequence in template string");
            return null;
          }
        default:
          if (ch >= 48 && ch <= 55) {
            var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
            var octal = parseInt(octalStr, 8);
            if (octal > 255) {
              octalStr = octalStr.slice(0, -1);
              octal = parseInt(octalStr, 8);
            }
            this.pos += octalStr.length - 1;
            ch = this.input.charCodeAt(this.pos);
            if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
              this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? "Octal literal in template string" : "Octal literal in strict mode");
            }
            return String.fromCharCode(octal);
          }
          if (isNewLine(ch)) {
            return "";
          }
          return String.fromCharCode(ch);
      }
    };
    pp.readHexChar = function(len) {
      var codePos = this.pos;
      var n2 = this.readInt(16, len);
      if (n2 === null) {
        this.invalidStringToken(codePos, "Bad character escape sequence");
      }
      return n2;
    };
    pp.readWord1 = function() {
      this.containsEsc = false;
      var word = "", first = true, chunkStart = this.pos;
      var astral = this.options.ecmaVersion >= 6;
      while (this.pos < this.input.length) {
        var ch = this.fullCharCodeAtPos();
        if (isIdentifierChar(ch, astral)) {
          this.pos += ch <= 65535 ? 1 : 2;
        } else if (ch === 92) {
          this.containsEsc = true;
          word += this.input.slice(chunkStart, this.pos);
          var escStart = this.pos;
          if (this.input.charCodeAt(++this.pos) !== 117) {
            this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX");
          }
          ++this.pos;
          var esc = this.readCodePoint();
          if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {
            this.invalidStringToken(escStart, "Invalid Unicode escape");
          }
          word += codePointToString(esc);
          chunkStart = this.pos;
        } else {
          break;
        }
        first = false;
      }
      return word + this.input.slice(chunkStart, this.pos);
    };
    pp.readWord = function() {
      var word = this.readWord1();
      var type = types$1.name;
      if (this.keywords.test(word)) {
        type = keywords[word];
      }
      return this.finishToken(type, word);
    };
    version = "8.7.1";
    Parser.acorn = {
      Parser,
      version,
      defaultOptions,
      Position,
      SourceLocation,
      getLineInfo,
      Node: Node2,
      TokenType,
      tokTypes: types$1,
      keywordTypes: keywords,
      TokContext,
      tokContexts: types3,
      isIdentifierChar,
      isIdentifierStart,
      Token,
      isNewLine,
      lineBreak,
      lineBreakG,
      nonASCIIwhitespace
    };
  }
});

// node_modules/acorn-jsx/xhtml.js
var require_xhtml = __commonJS({
  "node_modules/acorn-jsx/xhtml.js"(exports, module2) {
    module2.exports = {
      quot: '"',
      amp: "&",
      apos: "'",
      lt: "<",
      gt: ">",
      nbsp: "\xA0",
      iexcl: "\xA1",
      cent: "\xA2",
      pound: "\xA3",
      curren: "\xA4",
      yen: "\xA5",
      brvbar: "\xA6",
      sect: "\xA7",
      uml: "\xA8",
      copy: "\xA9",
      ordf: "\xAA",
      laquo: "\xAB",
      not: "\xAC",
      shy: "\xAD",
      reg: "\xAE",
      macr: "\xAF",
      deg: "\xB0",
      plusmn: "\xB1",
      sup2: "\xB2",
      sup3: "\xB3",
      acute: "\xB4",
      micro: "\xB5",
      para: "\xB6",
      middot: "\xB7",
      cedil: "\xB8",
      sup1: "\xB9",
      ordm: "\xBA",
      raquo: "\xBB",
      frac14: "\xBC",
      frac12: "\xBD",
      frac34: "\xBE",
      iquest: "\xBF",
      Agrave: "\xC0",
      Aacute: "\xC1",
      Acirc: "\xC2",
      Atilde: "\xC3",
      Auml: "\xC4",
      Aring: "\xC5",
      AElig: "\xC6",
      Ccedil: "\xC7",
      Egrave: "\xC8",
      Eacute: "\xC9",
      Ecirc: "\xCA",
      Euml: "\xCB",
      Igrave: "\xCC",
      Iacute: "\xCD",
      Icirc: "\xCE",
      Iuml: "\xCF",
      ETH: "\xD0",
      Ntilde: "\xD1",
      Ograve: "\xD2",
      Oacute: "\xD3",
      Ocirc: "\xD4",
      Otilde: "\xD5",
      Ouml: "\xD6",
      times: "\xD7",
      Oslash: "\xD8",
      Ugrave: "\xD9",
      Uacute: "\xDA",
      Ucirc: "\xDB",
      Uuml: "\xDC",
      Yacute: "\xDD",
      THORN: "\xDE",
      szlig: "\xDF",
      agrave: "\xE0",
      aacute: "\xE1",
      acirc: "\xE2",
      atilde: "\xE3",
      auml: "\xE4",
      aring: "\xE5",
      aelig: "\xE6",
      ccedil: "\xE7",
      egrave: "\xE8",
      eacute: "\xE9",
      ecirc: "\xEA",
      euml: "\xEB",
      igrave: "\xEC",
      iacute: "\xED",
      icirc: "\xEE",
      iuml: "\xEF",
      eth: "\xF0",
      ntilde: "\xF1",
      ograve: "\xF2",
      oacute: "\xF3",
      ocirc: "\xF4",
      otilde: "\xF5",
      ouml: "\xF6",
      divide: "\xF7",
      oslash: "\xF8",
      ugrave: "\xF9",
      uacute: "\xFA",
      ucirc: "\xFB",
      uuml: "\xFC",
      yacute: "\xFD",
      thorn: "\xFE",
      yuml: "\xFF",
      OElig: "\u0152",
      oelig: "\u0153",
      Scaron: "\u0160",
      scaron: "\u0161",
      Yuml: "\u0178",
      fnof: "\u0192",
      circ: "\u02C6",
      tilde: "\u02DC",
      Alpha: "\u0391",
      Beta: "\u0392",
      Gamma: "\u0393",
      Delta: "\u0394",
      Epsilon: "\u0395",
      Zeta: "\u0396",
      Eta: "\u0397",
      Theta: "\u0398",
      Iota: "\u0399",
      Kappa: "\u039A",
      Lambda: "\u039B",
      Mu: "\u039C",
      Nu: "\u039D",
      Xi: "\u039E",
      Omicron: "\u039F",
      Pi: "\u03A0",
      Rho: "\u03A1",
      Sigma: "\u03A3",
      Tau: "\u03A4",
      Upsilon: "\u03A5",
      Phi: "\u03A6",
      Chi: "\u03A7",
      Psi: "\u03A8",
      Omega: "\u03A9",
      alpha: "\u03B1",
      beta: "\u03B2",
      gamma: "\u03B3",
      delta: "\u03B4",
      epsilon: "\u03B5",
      zeta: "\u03B6",
      eta: "\u03B7",
      theta: "\u03B8",
      iota: "\u03B9",
      kappa: "\u03BA",
      lambda: "\u03BB",
      mu: "\u03BC",
      nu: "\u03BD",
      xi: "\u03BE",
      omicron: "\u03BF",
      pi: "\u03C0",
      rho: "\u03C1",
      sigmaf: "\u03C2",
      sigma: "\u03C3",
      tau: "\u03C4",
      upsilon: "\u03C5",
      phi: "\u03C6",
      chi: "\u03C7",
      psi: "\u03C8",
      omega: "\u03C9",
      thetasym: "\u03D1",
      upsih: "\u03D2",
      piv: "\u03D6",
      ensp: "\u2002",
      emsp: "\u2003",
      thinsp: "\u2009",
      zwnj: "\u200C",
      zwj: "\u200D",
      lrm: "\u200E",
      rlm: "\u200F",
      ndash: "\u2013",
      mdash: "\u2014",
      lsquo: "\u2018",
      rsquo: "\u2019",
      sbquo: "\u201A",
      ldquo: "\u201C",
      rdquo: "\u201D",
      bdquo: "\u201E",
      dagger: "\u2020",
      Dagger: "\u2021",
      bull: "\u2022",
      hellip: "\u2026",
      permil: "\u2030",
      prime: "\u2032",
      Prime: "\u2033",
      lsaquo: "\u2039",
      rsaquo: "\u203A",
      oline: "\u203E",
      frasl: "\u2044",
      euro: "\u20AC",
      image: "\u2111",
      weierp: "\u2118",
      real: "\u211C",
      trade: "\u2122",
      alefsym: "\u2135",
      larr: "\u2190",
      uarr: "\u2191",
      rarr: "\u2192",
      darr: "\u2193",
      harr: "\u2194",
      crarr: "\u21B5",
      lArr: "\u21D0",
      uArr: "\u21D1",
      rArr: "\u21D2",
      dArr: "\u21D3",
      hArr: "\u21D4",
      forall: "\u2200",
      part: "\u2202",
      exist: "\u2203",
      empty: "\u2205",
      nabla: "\u2207",
      isin: "\u2208",
      notin: "\u2209",
      ni: "\u220B",
      prod: "\u220F",
      sum: "\u2211",
      minus: "\u2212",
      lowast: "\u2217",
      radic: "\u221A",
      prop: "\u221D",
      infin: "\u221E",
      ang: "\u2220",
      and: "\u2227",
      or: "\u2228",
      cap: "\u2229",
      cup: "\u222A",
      "int": "\u222B",
      there4: "\u2234",
      sim: "\u223C",
      cong: "\u2245",
      asymp: "\u2248",
      ne: "\u2260",
      equiv: "\u2261",
      le: "\u2264",
      ge: "\u2265",
      sub: "\u2282",
      sup: "\u2283",
      nsub: "\u2284",
      sube: "\u2286",
      supe: "\u2287",
      oplus: "\u2295",
      otimes: "\u2297",
      perp: "\u22A5",
      sdot: "\u22C5",
      lceil: "\u2308",
      rceil: "\u2309",
      lfloor: "\u230A",
      rfloor: "\u230B",
      lang: "\u2329",
      rang: "\u232A",
      loz: "\u25CA",
      spades: "\u2660",
      clubs: "\u2663",
      hearts: "\u2665",
      diams: "\u2666"
    };
  }
});

// node_modules/acorn/dist/acorn.js
var require_acorn = __commonJS({
  "node_modules/acorn/dist/acorn.js"(exports, module2) {
    (function(global2, factory2) {
      typeof exports === "object" && typeof module2 !== "undefined" ? factory2(exports) : typeof define === "function" && define.amd ? define(["exports"], factory2) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory2(global2.acorn = {}));
    })(exports, function(exports2) {
      "use strict";
      var astralIdentifierCodes2 = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
      var astralIdentifierStartCodes2 = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];
      var nonASCIIidentifierChars2 = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";
      var nonASCIIidentifierStartChars2 = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
      var reservedWords2 = {
        3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
        5: "class enum extends super const export import",
        6: "enum",
        strict: "implements interface let package private protected public static yield",
        strictBind: "eval arguments"
      };
      var ecma5AndLessKeywords2 = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";
      var keywords$12 = {
        5: ecma5AndLessKeywords2,
        "5module": ecma5AndLessKeywords2 + " export import",
        6: ecma5AndLessKeywords2 + " const class extends export import super"
      };
      var keywordRelationalOperator2 = /^in(stanceof)?$/;
      var nonASCIIidentifierStart2 = new RegExp("[" + nonASCIIidentifierStartChars2 + "]");
      var nonASCIIidentifier2 = new RegExp("[" + nonASCIIidentifierStartChars2 + nonASCIIidentifierChars2 + "]");
      function isInAstralSet2(code2, set) {
        var pos = 65536;
        for (var i4 = 0; i4 < set.length; i4 += 2) {
          pos += set[i4];
          if (pos > code2) {
            return false;
          }
          pos += set[i4 + 1];
          if (pos >= code2) {
            return true;
          }
        }
      }
      function isIdentifierStart2(code2, astral) {
        if (code2 < 65) {
          return code2 === 36;
        }
        if (code2 < 91) {
          return true;
        }
        if (code2 < 97) {
          return code2 === 95;
        }
        if (code2 < 123) {
          return true;
        }
        if (code2 <= 65535) {
          return code2 >= 170 && nonASCIIidentifierStart2.test(String.fromCharCode(code2));
        }
        if (astral === false) {
          return false;
        }
        return isInAstralSet2(code2, astralIdentifierStartCodes2);
      }
      function isIdentifierChar2(code2, astral) {
        if (code2 < 48) {
          return code2 === 36;
        }
        if (code2 < 58) {
          return true;
        }
        if (code2 < 65) {
          return false;
        }
        if (code2 < 91) {
          return true;
        }
        if (code2 < 97) {
          return code2 === 95;
        }
        if (code2 < 123) {
          return true;
        }
        if (code2 <= 65535) {
          return code2 >= 170 && nonASCIIidentifier2.test(String.fromCharCode(code2));
        }
        if (astral === false) {
          return false;
        }
        return isInAstralSet2(code2, astralIdentifierStartCodes2) || isInAstralSet2(code2, astralIdentifierCodes2);
      }
      var TokenType3 = function TokenType4(label2, conf) {
        if (conf === void 0)
          conf = {};
        this.label = label2;
        this.keyword = conf.keyword;
        this.beforeExpr = !!conf.beforeExpr;
        this.startsExpr = !!conf.startsExpr;
        this.isLoop = !!conf.isLoop;
        this.isAssign = !!conf.isAssign;
        this.prefix = !!conf.prefix;
        this.postfix = !!conf.postfix;
        this.binop = conf.binop || null;
        this.updateContext = null;
      };
      function binop2(name, prec) {
        return new TokenType3(name, { beforeExpr: true, binop: prec });
      }
      var beforeExpr2 = { beforeExpr: true }, startsExpr2 = { startsExpr: true };
      var keywords2 = {};
      function kw2(name, options) {
        if (options === void 0)
          options = {};
        options.keyword = name;
        return keywords2[name] = new TokenType3(name, options);
      }
      var types$12 = {
        num: new TokenType3("num", startsExpr2),
        regexp: new TokenType3("regexp", startsExpr2),
        string: new TokenType3("string", startsExpr2),
        name: new TokenType3("name", startsExpr2),
        privateId: new TokenType3("privateId", startsExpr2),
        eof: new TokenType3("eof"),
        bracketL: new TokenType3("[", { beforeExpr: true, startsExpr: true }),
        bracketR: new TokenType3("]"),
        braceL: new TokenType3("{", { beforeExpr: true, startsExpr: true }),
        braceR: new TokenType3("}"),
        parenL: new TokenType3("(", { beforeExpr: true, startsExpr: true }),
        parenR: new TokenType3(")"),
        comma: new TokenType3(",", beforeExpr2),
        semi: new TokenType3(";", beforeExpr2),
        colon: new TokenType3(":", beforeExpr2),
        dot: new TokenType3("."),
        question: new TokenType3("?", beforeExpr2),
        questionDot: new TokenType3("?."),
        arrow: new TokenType3("=>", beforeExpr2),
        template: new TokenType3("template"),
        invalidTemplate: new TokenType3("invalidTemplate"),
        ellipsis: new TokenType3("...", beforeExpr2),
        backQuote: new TokenType3("`", startsExpr2),
        dollarBraceL: new TokenType3("${", { beforeExpr: true, startsExpr: true }),
        eq: new TokenType3("=", { beforeExpr: true, isAssign: true }),
        assign: new TokenType3("_=", { beforeExpr: true, isAssign: true }),
        incDec: new TokenType3("++/--", { prefix: true, postfix: true, startsExpr: true }),
        prefix: new TokenType3("!/~", { beforeExpr: true, prefix: true, startsExpr: true }),
        logicalOR: binop2("||", 1),
        logicalAND: binop2("&&", 2),
        bitwiseOR: binop2("|", 3),
        bitwiseXOR: binop2("^", 4),
        bitwiseAND: binop2("&", 5),
        equality: binop2("==/!=/===/!==", 6),
        relational: binop2("</>/<=/>=", 7),
        bitShift: binop2("<</>>/>>>", 8),
        plusMin: new TokenType3("+/-", { beforeExpr: true, binop: 9, prefix: true, startsExpr: true }),
        modulo: binop2("%", 10),
        star: binop2("*", 10),
        slash: binop2("/", 10),
        starstar: new TokenType3("**", { beforeExpr: true }),
        coalesce: binop2("??", 1),
        _break: kw2("break"),
        _case: kw2("case", beforeExpr2),
        _catch: kw2("catch"),
        _continue: kw2("continue"),
        _debugger: kw2("debugger"),
        _default: kw2("default", beforeExpr2),
        _do: kw2("do", { isLoop: true, beforeExpr: true }),
        _else: kw2("else", beforeExpr2),
        _finally: kw2("finally"),
        _for: kw2("for", { isLoop: true }),
        _function: kw2("function", startsExpr2),
        _if: kw2("if"),
        _return: kw2("return", beforeExpr2),
        _switch: kw2("switch"),
        _throw: kw2("throw", beforeExpr2),
        _try: kw2("try"),
        _var: kw2("var"),
        _const: kw2("const"),
        _while: kw2("while", { isLoop: true }),
        _with: kw2("with"),
        _new: kw2("new", { beforeExpr: true, startsExpr: true }),
        _this: kw2("this", startsExpr2),
        _super: kw2("super", startsExpr2),
        _class: kw2("class", startsExpr2),
        _extends: kw2("extends", beforeExpr2),
        _export: kw2("export"),
        _import: kw2("import", startsExpr2),
        _null: kw2("null", startsExpr2),
        _true: kw2("true", startsExpr2),
        _false: kw2("false", startsExpr2),
        _in: kw2("in", { beforeExpr: true, binop: 7 }),
        _instanceof: kw2("instanceof", { beforeExpr: true, binop: 7 }),
        _typeof: kw2("typeof", { beforeExpr: true, prefix: true, startsExpr: true }),
        _void: kw2("void", { beforeExpr: true, prefix: true, startsExpr: true }),
        _delete: kw2("delete", { beforeExpr: true, prefix: true, startsExpr: true })
      };
      var lineBreak2 = /\r\n?|\n|\u2028|\u2029/;
      var lineBreakG2 = new RegExp(lineBreak2.source, "g");
      function isNewLine2(code2) {
        return code2 === 10 || code2 === 13 || code2 === 8232 || code2 === 8233;
      }
      function nextLineBreak2(code2, from, end) {
        if (end === void 0)
          end = code2.length;
        for (var i4 = from; i4 < end; i4++) {
          var next = code2.charCodeAt(i4);
          if (isNewLine2(next)) {
            return i4 < end - 1 && next === 13 && code2.charCodeAt(i4 + 1) === 10 ? i4 + 2 : i4 + 1;
          }
        }
        return -1;
      }
      var nonASCIIwhitespace2 = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
      var skipWhiteSpace2 = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
      var ref2 = Object.prototype;
      var hasOwnProperty4 = ref2.hasOwnProperty;
      var toString4 = ref2.toString;
      var hasOwn4 = Object.hasOwn || function(obj, propName) {
        return hasOwnProperty4.call(obj, propName);
      };
      var isArray2 = Array.isArray || function(obj) {
        return toString4.call(obj) === "[object Array]";
      };
      function wordsRegexp2(words) {
        return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$");
      }
      function codePointToString2(code2) {
        if (code2 <= 65535) {
          return String.fromCharCode(code2);
        }
        code2 -= 65536;
        return String.fromCharCode((code2 >> 10) + 55296, (code2 & 1023) + 56320);
      }
      var loneSurrogate2 = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/;
      var Position3 = function Position4(line, col) {
        this.line = line;
        this.column = col;
      };
      Position3.prototype.offset = function offset2(n2) {
        return new Position3(this.line, this.column + n2);
      };
      var SourceLocation3 = function SourceLocation4(p3, start3, end) {
        this.start = start3;
        this.end = end;
        if (p3.sourceFile !== null) {
          this.source = p3.sourceFile;
        }
      };
      function getLineInfo2(input2, offset2) {
        for (var line = 1, cur = 0; ; ) {
          var nextBreak = nextLineBreak2(input2, cur, offset2);
          if (nextBreak < 0) {
            return new Position3(line, offset2 - cur);
          }
          ++line;
          cur = nextBreak;
        }
      }
      var defaultOptions2 = {
        ecmaVersion: null,
        sourceType: "script",
        onInsertedSemicolon: null,
        onTrailingComma: null,
        allowReserved: null,
        allowReturnOutsideFunction: false,
        allowImportExportEverywhere: false,
        allowAwaitOutsideFunction: null,
        allowSuperOutsideMethod: null,
        allowHashBang: false,
        locations: false,
        onToken: null,
        onComment: null,
        ranges: false,
        program: null,
        sourceFile: null,
        directSourceFile: null,
        preserveParens: false
      };
      var warnedAboutEcmaVersion2 = false;
      function getOptions2(opts) {
        var options = {};
        for (var opt in defaultOptions2) {
          options[opt] = opts && hasOwn4(opts, opt) ? opts[opt] : defaultOptions2[opt];
        }
        if (options.ecmaVersion === "latest") {
          options.ecmaVersion = 1e8;
        } else if (options.ecmaVersion == null) {
          if (!warnedAboutEcmaVersion2 && typeof console === "object" && console.warn) {
            warnedAboutEcmaVersion2 = true;
            console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.");
          }
          options.ecmaVersion = 11;
        } else if (options.ecmaVersion >= 2015) {
          options.ecmaVersion -= 2009;
        }
        if (options.allowReserved == null) {
          options.allowReserved = options.ecmaVersion < 5;
        }
        if (isArray2(options.onToken)) {
          var tokens = options.onToken;
          options.onToken = function(token) {
            return tokens.push(token);
          };
        }
        if (isArray2(options.onComment)) {
          options.onComment = pushComment2(options, options.onComment);
        }
        return options;
      }
      function pushComment2(options, array) {
        return function(block, text8, start3, end, startLoc, endLoc) {
          var comment5 = {
            type: block ? "Block" : "Line",
            value: text8,
            start: start3,
            end
          };
          if (options.locations) {
            comment5.loc = new SourceLocation3(this, startLoc, endLoc);
          }
          if (options.ranges) {
            comment5.range = [start3, end];
          }
          array.push(comment5);
        };
      }
      var SCOPE_TOP2 = 1, SCOPE_FUNCTION2 = 2, SCOPE_ASYNC2 = 4, SCOPE_GENERATOR2 = 8, SCOPE_ARROW2 = 16, SCOPE_SIMPLE_CATCH2 = 32, SCOPE_SUPER2 = 64, SCOPE_DIRECT_SUPER2 = 128, SCOPE_CLASS_STATIC_BLOCK2 = 256, SCOPE_VAR2 = SCOPE_TOP2 | SCOPE_FUNCTION2 | SCOPE_CLASS_STATIC_BLOCK2;
      function functionFlags2(async, generator) {
        return SCOPE_FUNCTION2 | (async ? SCOPE_ASYNC2 : 0) | (generator ? SCOPE_GENERATOR2 : 0);
      }
      var BIND_NONE2 = 0, BIND_VAR2 = 1, BIND_LEXICAL2 = 2, BIND_FUNCTION2 = 3, BIND_SIMPLE_CATCH2 = 4, BIND_OUTSIDE2 = 5;
      var Parser4 = function Parser5(options, input2, startPos) {
        this.options = options = getOptions2(options);
        this.sourceFile = options.sourceFile;
        this.keywords = wordsRegexp2(keywords$12[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);
        var reserved2 = "";
        if (options.allowReserved !== true) {
          reserved2 = reservedWords2[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];
          if (options.sourceType === "module") {
            reserved2 += " await";
          }
        }
        this.reservedWords = wordsRegexp2(reserved2);
        var reservedStrict = (reserved2 ? reserved2 + " " : "") + reservedWords2.strict;
        this.reservedWordsStrict = wordsRegexp2(reservedStrict);
        this.reservedWordsStrictBind = wordsRegexp2(reservedStrict + " " + reservedWords2.strictBind);
        this.input = String(input2);
        this.containsEsc = false;
        if (startPos) {
          this.pos = startPos;
          this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
          this.curLine = this.input.slice(0, this.lineStart).split(lineBreak2).length;
        } else {
          this.pos = this.lineStart = 0;
          this.curLine = 1;
        }
        this.type = types$12.eof;
        this.value = null;
        this.start = this.end = this.pos;
        this.startLoc = this.endLoc = this.curPosition();
        this.lastTokEndLoc = this.lastTokStartLoc = null;
        this.lastTokStart = this.lastTokEnd = this.pos;
        this.context = this.initialContext();
        this.exprAllowed = true;
        this.inModule = options.sourceType === "module";
        this.strict = this.inModule || this.strictDirective(this.pos);
        this.potentialArrowAt = -1;
        this.potentialArrowInForAwait = false;
        this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;
        this.labels = [];
        this.undefinedExports = /* @__PURE__ */ Object.create(null);
        if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!") {
          this.skipLineComment(2);
        }
        this.scopeStack = [];
        this.enterScope(SCOPE_TOP2);
        this.regexpState = null;
        this.privateNameStack = [];
      };
      var prototypeAccessors2 = { inFunction: { configurable: true }, inGenerator: { configurable: true }, inAsync: { configurable: true }, canAwait: { configurable: true }, allowSuper: { configurable: true }, allowDirectSuper: { configurable: true }, treatFunctionsAsVar: { configurable: true }, allowNewDotTarget: { configurable: true }, inClassStaticBlock: { configurable: true } };
      Parser4.prototype.parse = function parse9() {
        var node = this.options.program || this.startNode();
        this.nextToken();
        return this.parseTopLevel(node);
      };
      prototypeAccessors2.inFunction.get = function() {
        return (this.currentVarScope().flags & SCOPE_FUNCTION2) > 0;
      };
      prototypeAccessors2.inGenerator.get = function() {
        return (this.currentVarScope().flags & SCOPE_GENERATOR2) > 0 && !this.currentVarScope().inClassFieldInit;
      };
      prototypeAccessors2.inAsync.get = function() {
        return (this.currentVarScope().flags & SCOPE_ASYNC2) > 0 && !this.currentVarScope().inClassFieldInit;
      };
      prototypeAccessors2.canAwait.get = function() {
        for (var i4 = this.scopeStack.length - 1; i4 >= 0; i4--) {
          var scope = this.scopeStack[i4];
          if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK2) {
            return false;
          }
          if (scope.flags & SCOPE_FUNCTION2) {
            return (scope.flags & SCOPE_ASYNC2) > 0;
          }
        }
        return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
      };
      prototypeAccessors2.allowSuper.get = function() {
        var ref3 = this.currentThisScope();
        var flags2 = ref3.flags;
        var inClassFieldInit = ref3.inClassFieldInit;
        return (flags2 & SCOPE_SUPER2) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod;
      };
      prototypeAccessors2.allowDirectSuper.get = function() {
        return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER2) > 0;
      };
      prototypeAccessors2.treatFunctionsAsVar.get = function() {
        return this.treatFunctionsAsVarInScope(this.currentScope());
      };
      prototypeAccessors2.allowNewDotTarget.get = function() {
        var ref3 = this.currentThisScope();
        var flags2 = ref3.flags;
        var inClassFieldInit = ref3.inClassFieldInit;
        return (flags2 & (SCOPE_FUNCTION2 | SCOPE_CLASS_STATIC_BLOCK2)) > 0 || inClassFieldInit;
      };
      prototypeAccessors2.inClassStaticBlock.get = function() {
        return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK2) > 0;
      };
      Parser4.extend = function extend3() {
        var plugins = [], len = arguments.length;
        while (len--)
          plugins[len] = arguments[len];
        var cls = this;
        for (var i4 = 0; i4 < plugins.length; i4++) {
          cls = plugins[i4](cls);
        }
        return cls;
      };
      Parser4.parse = function parse9(input2, options) {
        return new this(options, input2).parse();
      };
      Parser4.parseExpressionAt = function parseExpressionAt3(input2, pos, options) {
        var parser = new this(options, input2, pos);
        parser.nextToken();
        return parser.parseExpression();
      };
      Parser4.tokenizer = function tokenizer3(input2, options) {
        return new this(options, input2);
      };
      Object.defineProperties(Parser4.prototype, prototypeAccessors2);
      var pp$92 = Parser4.prototype;
      var literal2 = /^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;
      pp$92.strictDirective = function(start3) {
        if (this.options.ecmaVersion < 5) {
          return false;
        }
        for (; ; ) {
          skipWhiteSpace2.lastIndex = start3;
          start3 += skipWhiteSpace2.exec(this.input)[0].length;
          var match = literal2.exec(this.input.slice(start3));
          if (!match) {
            return false;
          }
          if ((match[1] || match[2]) === "use strict") {
            skipWhiteSpace2.lastIndex = start3 + match[0].length;
            var spaceAfter = skipWhiteSpace2.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;
            var next = this.input.charAt(end);
            return next === ";" || next === "}" || lineBreak2.test(spaceAfter[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "=");
          }
          start3 += match[0].length;
          skipWhiteSpace2.lastIndex = start3;
          start3 += skipWhiteSpace2.exec(this.input)[0].length;
          if (this.input[start3] === ";") {
            start3++;
          }
        }
      };
      pp$92.eat = function(type) {
        if (this.type === type) {
          this.next();
          return true;
        } else {
          return false;
        }
      };
      pp$92.isContextual = function(name) {
        return this.type === types$12.name && this.value === name && !this.containsEsc;
      };
      pp$92.eatContextual = function(name) {
        if (!this.isContextual(name)) {
          return false;
        }
        this.next();
        return true;
      };
      pp$92.expectContextual = function(name) {
        if (!this.eatContextual(name)) {
          this.unexpected();
        }
      };
      pp$92.canInsertSemicolon = function() {
        return this.type === types$12.eof || this.type === types$12.braceR || lineBreak2.test(this.input.slice(this.lastTokEnd, this.start));
      };
      pp$92.insertSemicolon = function() {
        if (this.canInsertSemicolon()) {
          if (this.options.onInsertedSemicolon) {
            this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);
          }
          return true;
        }
      };
      pp$92.semicolon = function() {
        if (!this.eat(types$12.semi) && !this.insertSemicolon()) {
          this.unexpected();
        }
      };
      pp$92.afterTrailingComma = function(tokType, notNext) {
        if (this.type === tokType) {
          if (this.options.onTrailingComma) {
            this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);
          }
          if (!notNext) {
            this.next();
          }
          return true;
        }
      };
      pp$92.expect = function(type) {
        this.eat(type) || this.unexpected();
      };
      pp$92.unexpected = function(pos) {
        this.raise(pos != null ? pos : this.start, "Unexpected token");
      };
      var DestructuringErrors3 = function DestructuringErrors4() {
        this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
      };
      pp$92.checkPatternErrors = function(refDestructuringErrors, isAssign) {
        if (!refDestructuringErrors) {
          return;
        }
        if (refDestructuringErrors.trailingComma > -1) {
          this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element");
        }
        var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
        if (parens > -1) {
          this.raiseRecoverable(parens, "Parenthesized pattern");
        }
      };
      pp$92.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
        if (!refDestructuringErrors) {
          return false;
        }
        var shorthandAssign = refDestructuringErrors.shorthandAssign;
        var doubleProto = refDestructuringErrors.doubleProto;
        if (!andThrow) {
          return shorthandAssign >= 0 || doubleProto >= 0;
        }
        if (shorthandAssign >= 0) {
          this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns");
        }
        if (doubleProto >= 0) {
          this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property");
        }
      };
      pp$92.checkYieldAwaitInDefaultParams = function() {
        if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {
          this.raise(this.yieldPos, "Yield expression cannot be a default value");
        }
        if (this.awaitPos) {
          this.raise(this.awaitPos, "Await expression cannot be a default value");
        }
      };
      pp$92.isSimpleAssignTarget = function(expr) {
        if (expr.type === "ParenthesizedExpression") {
          return this.isSimpleAssignTarget(expr.expression);
        }
        return expr.type === "Identifier" || expr.type === "MemberExpression";
      };
      var pp$82 = Parser4.prototype;
      pp$82.parseTopLevel = function(node) {
        var exports3 = /* @__PURE__ */ Object.create(null);
        if (!node.body) {
          node.body = [];
        }
        while (this.type !== types$12.eof) {
          var stmt = this.parseStatement(null, true, exports3);
          node.body.push(stmt);
        }
        if (this.inModule) {
          for (var i4 = 0, list4 = Object.keys(this.undefinedExports); i4 < list4.length; i4 += 1) {
            var name = list4[i4];
            this.raiseRecoverable(this.undefinedExports[name].start, "Export '" + name + "' is not defined");
          }
        }
        this.adaptDirectivePrologue(node.body);
        this.next();
        node.sourceType = this.options.sourceType;
        return this.finishNode(node, "Program");
      };
      var loopLabel2 = { kind: "loop" }, switchLabel2 = { kind: "switch" };
      pp$82.isLet = function(context) {
        if (this.options.ecmaVersion < 6 || !this.isContextual("let")) {
          return false;
        }
        skipWhiteSpace2.lastIndex = this.pos;
        var skip = skipWhiteSpace2.exec(this.input);
        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
        if (nextCh === 91 || nextCh === 92 || nextCh > 55295 && nextCh < 56320) {
          return true;
        }
        if (context) {
          return false;
        }
        if (nextCh === 123) {
          return true;
        }
        if (isIdentifierStart2(nextCh, true)) {
          var pos = next + 1;
          while (isIdentifierChar2(nextCh = this.input.charCodeAt(pos), true)) {
            ++pos;
          }
          if (nextCh === 92 || nextCh > 55295 && nextCh < 56320) {
            return true;
          }
          var ident = this.input.slice(next, pos);
          if (!keywordRelationalOperator2.test(ident)) {
            return true;
          }
        }
        return false;
      };
      pp$82.isAsyncFunction = function() {
        if (this.options.ecmaVersion < 8 || !this.isContextual("async")) {
          return false;
        }
        skipWhiteSpace2.lastIndex = this.pos;
        var skip = skipWhiteSpace2.exec(this.input);
        var next = this.pos + skip[0].length, after;
        return !lineBreak2.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === "function" && (next + 8 === this.input.length || !(isIdentifierChar2(after = this.input.charCodeAt(next + 8)) || after > 55295 && after < 56320));
      };
      pp$82.parseStatement = function(context, topLevel, exports3) {
        var starttype = this.type, node = this.startNode(), kind;
        if (this.isLet(context)) {
          starttype = types$12._var;
          kind = "let";
        }
        switch (starttype) {
          case types$12._break:
          case types$12._continue:
            return this.parseBreakContinueStatement(node, starttype.keyword);
          case types$12._debugger:
            return this.parseDebuggerStatement(node);
          case types$12._do:
            return this.parseDoStatement(node);
          case types$12._for:
            return this.parseForStatement(node);
          case types$12._function:
            if (context && (this.strict || context !== "if" && context !== "label") && this.options.ecmaVersion >= 6) {
              this.unexpected();
            }
            return this.parseFunctionStatement(node, false, !context);
          case types$12._class:
            if (context) {
              this.unexpected();
            }
            return this.parseClass(node, true);
          case types$12._if:
            return this.parseIfStatement(node);
          case types$12._return:
            return this.parseReturnStatement(node);
          case types$12._switch:
            return this.parseSwitchStatement(node);
          case types$12._throw:
            return this.parseThrowStatement(node);
          case types$12._try:
            return this.parseTryStatement(node);
          case types$12._const:
          case types$12._var:
            kind = kind || this.value;
            if (context && kind !== "var") {
              this.unexpected();
            }
            return this.parseVarStatement(node, kind);
          case types$12._while:
            return this.parseWhileStatement(node);
          case types$12._with:
            return this.parseWithStatement(node);
          case types$12.braceL:
            return this.parseBlock(true, node);
          case types$12.semi:
            return this.parseEmptyStatement(node);
          case types$12._export:
          case types$12._import:
            if (this.options.ecmaVersion > 10 && starttype === types$12._import) {
              skipWhiteSpace2.lastIndex = this.pos;
              var skip = skipWhiteSpace2.exec(this.input);
              var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
              if (nextCh === 40 || nextCh === 46) {
                return this.parseExpressionStatement(node, this.parseExpression());
              }
            }
            if (!this.options.allowImportExportEverywhere) {
              if (!topLevel) {
                this.raise(this.start, "'import' and 'export' may only appear at the top level");
              }
              if (!this.inModule) {
                this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'");
              }
            }
            return starttype === types$12._import ? this.parseImport(node) : this.parseExport(node, exports3);
          default:
            if (this.isAsyncFunction()) {
              if (context) {
                this.unexpected();
              }
              this.next();
              return this.parseFunctionStatement(node, true, !context);
            }
            var maybeName = this.value, expr = this.parseExpression();
            if (starttype === types$12.name && expr.type === "Identifier" && this.eat(types$12.colon)) {
              return this.parseLabeledStatement(node, maybeName, expr, context);
            } else {
              return this.parseExpressionStatement(node, expr);
            }
        }
      };
      pp$82.parseBreakContinueStatement = function(node, keyword) {
        var isBreak = keyword === "break";
        this.next();
        if (this.eat(types$12.semi) || this.insertSemicolon()) {
          node.label = null;
        } else if (this.type !== types$12.name) {
          this.unexpected();
        } else {
          node.label = this.parseIdent();
          this.semicolon();
        }
        var i4 = 0;
        for (; i4 < this.labels.length; ++i4) {
          var lab = this.labels[i4];
          if (node.label == null || lab.name === node.label.name) {
            if (lab.kind != null && (isBreak || lab.kind === "loop")) {
              break;
            }
            if (node.label && isBreak) {
              break;
            }
          }
        }
        if (i4 === this.labels.length) {
          this.raise(node.start, "Unsyntactic " + keyword);
        }
        return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
      };
      pp$82.parseDebuggerStatement = function(node) {
        this.next();
        this.semicolon();
        return this.finishNode(node, "DebuggerStatement");
      };
      pp$82.parseDoStatement = function(node) {
        this.next();
        this.labels.push(loopLabel2);
        node.body = this.parseStatement("do");
        this.labels.pop();
        this.expect(types$12._while);
        node.test = this.parseParenExpression();
        if (this.options.ecmaVersion >= 6) {
          this.eat(types$12.semi);
        } else {
          this.semicolon();
        }
        return this.finishNode(node, "DoWhileStatement");
      };
      pp$82.parseForStatement = function(node) {
        this.next();
        var awaitAt = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
        this.labels.push(loopLabel2);
        this.enterScope(0);
        this.expect(types$12.parenL);
        if (this.type === types$12.semi) {
          if (awaitAt > -1) {
            this.unexpected(awaitAt);
          }
          return this.parseFor(node, null);
        }
        var isLet = this.isLet();
        if (this.type === types$12._var || this.type === types$12._const || isLet) {
          var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
          this.next();
          this.parseVar(init$1, true, kind);
          this.finishNode(init$1, "VariableDeclaration");
          if ((this.type === types$12._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && init$1.declarations.length === 1) {
            if (this.options.ecmaVersion >= 9) {
              if (this.type === types$12._in) {
                if (awaitAt > -1) {
                  this.unexpected(awaitAt);
                }
              } else {
                node.await = awaitAt > -1;
              }
            }
            return this.parseForIn(node, init$1);
          }
          if (awaitAt > -1) {
            this.unexpected(awaitAt);
          }
          return this.parseFor(node, init$1);
        }
        var startsWithLet = this.isContextual("let"), isForOf = false;
        var refDestructuringErrors = new DestructuringErrors3();
        var init2 = this.parseExpression(awaitAt > -1 ? "await" : true, refDestructuringErrors);
        if (this.type === types$12._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
          if (this.options.ecmaVersion >= 9) {
            if (this.type === types$12._in) {
              if (awaitAt > -1) {
                this.unexpected(awaitAt);
              }
            } else {
              node.await = awaitAt > -1;
            }
          }
          if (startsWithLet && isForOf) {
            this.raise(init2.start, "The left-hand side of a for-of loop may not start with 'let'.");
          }
          this.toAssignable(init2, false, refDestructuringErrors);
          this.checkLValPattern(init2);
          return this.parseForIn(node, init2);
        } else {
          this.checkExpressionErrors(refDestructuringErrors, true);
        }
        if (awaitAt > -1) {
          this.unexpected(awaitAt);
        }
        return this.parseFor(node, init2);
      };
      pp$82.parseFunctionStatement = function(node, isAsync, declarationPosition) {
        this.next();
        return this.parseFunction(node, FUNC_STATEMENT2 | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT2), false, isAsync);
      };
      pp$82.parseIfStatement = function(node) {
        this.next();
        node.test = this.parseParenExpression();
        node.consequent = this.parseStatement("if");
        node.alternate = this.eat(types$12._else) ? this.parseStatement("if") : null;
        return this.finishNode(node, "IfStatement");
      };
      pp$82.parseReturnStatement = function(node) {
        if (!this.inFunction && !this.options.allowReturnOutsideFunction) {
          this.raise(this.start, "'return' outside of function");
        }
        this.next();
        if (this.eat(types$12.semi) || this.insertSemicolon()) {
          node.argument = null;
        } else {
          node.argument = this.parseExpression();
          this.semicolon();
        }
        return this.finishNode(node, "ReturnStatement");
      };
      pp$82.parseSwitchStatement = function(node) {
        this.next();
        node.discriminant = this.parseParenExpression();
        node.cases = [];
        this.expect(types$12.braceL);
        this.labels.push(switchLabel2);
        this.enterScope(0);
        var cur;
        for (var sawDefault = false; this.type !== types$12.braceR; ) {
          if (this.type === types$12._case || this.type === types$12._default) {
            var isCase = this.type === types$12._case;
            if (cur) {
              this.finishNode(cur, "SwitchCase");
            }
            node.cases.push(cur = this.startNode());
            cur.consequent = [];
            this.next();
            if (isCase) {
              cur.test = this.parseExpression();
            } else {
              if (sawDefault) {
                this.raiseRecoverable(this.lastTokStart, "Multiple default clauses");
              }
              sawDefault = true;
              cur.test = null;
            }
            this.expect(types$12.colon);
          } else {
            if (!cur) {
              this.unexpected();
            }
            cur.consequent.push(this.parseStatement(null));
          }
        }
        this.exitScope();
        if (cur) {
          this.finishNode(cur, "SwitchCase");
        }
        this.next();
        this.labels.pop();
        return this.finishNode(node, "SwitchStatement");
      };
      pp$82.parseThrowStatement = function(node) {
        this.next();
        if (lineBreak2.test(this.input.slice(this.lastTokEnd, this.start))) {
          this.raise(this.lastTokEnd, "Illegal newline after throw");
        }
        node.argument = this.parseExpression();
        this.semicolon();
        return this.finishNode(node, "ThrowStatement");
      };
      var empty$12 = [];
      pp$82.parseTryStatement = function(node) {
        this.next();
        node.block = this.parseBlock();
        node.handler = null;
        if (this.type === types$12._catch) {
          var clause = this.startNode();
          this.next();
          if (this.eat(types$12.parenL)) {
            clause.param = this.parseBindingAtom();
            var simple = clause.param.type === "Identifier";
            this.enterScope(simple ? SCOPE_SIMPLE_CATCH2 : 0);
            this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH2 : BIND_LEXICAL2);
            this.expect(types$12.parenR);
          } else {
            if (this.options.ecmaVersion < 10) {
              this.unexpected();
            }
            clause.param = null;
            this.enterScope(0);
          }
          clause.body = this.parseBlock(false);
          this.exitScope();
          node.handler = this.finishNode(clause, "CatchClause");
        }
        node.finalizer = this.eat(types$12._finally) ? this.parseBlock() : null;
        if (!node.handler && !node.finalizer) {
          this.raise(node.start, "Missing catch or finally clause");
        }
        return this.finishNode(node, "TryStatement");
      };
      pp$82.parseVarStatement = function(node, kind) {
        this.next();
        this.parseVar(node, false, kind);
        this.semicolon();
        return this.finishNode(node, "VariableDeclaration");
      };
      pp$82.parseWhileStatement = function(node) {
        this.next();
        node.test = this.parseParenExpression();
        this.labels.push(loopLabel2);
        node.body = this.parseStatement("while");
        this.labels.pop();
        return this.finishNode(node, "WhileStatement");
      };
      pp$82.parseWithStatement = function(node) {
        if (this.strict) {
          this.raise(this.start, "'with' in strict mode");
        }
        this.next();
        node.object = this.parseParenExpression();
        node.body = this.parseStatement("with");
        return this.finishNode(node, "WithStatement");
      };
      pp$82.parseEmptyStatement = function(node) {
        this.next();
        return this.finishNode(node, "EmptyStatement");
      };
      pp$82.parseLabeledStatement = function(node, maybeName, expr, context) {
        for (var i$12 = 0, list4 = this.labels; i$12 < list4.length; i$12 += 1) {
          var label2 = list4[i$12];
          if (label2.name === maybeName) {
            this.raise(expr.start, "Label '" + maybeName + "' is already declared");
          }
        }
        var kind = this.type.isLoop ? "loop" : this.type === types$12._switch ? "switch" : null;
        for (var i4 = this.labels.length - 1; i4 >= 0; i4--) {
          var label$12 = this.labels[i4];
          if (label$12.statementStart === node.start) {
            label$12.statementStart = this.start;
            label$12.kind = kind;
          } else {
            break;
          }
        }
        this.labels.push({ name: maybeName, kind, statementStart: this.start });
        node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
        this.labels.pop();
        node.label = expr;
        return this.finishNode(node, "LabeledStatement");
      };
      pp$82.parseExpressionStatement = function(node, expr) {
        node.expression = expr;
        this.semicolon();
        return this.finishNode(node, "ExpressionStatement");
      };
      pp$82.parseBlock = function(createNewLexicalScope, node, exitStrict) {
        if (createNewLexicalScope === void 0)
          createNewLexicalScope = true;
        if (node === void 0)
          node = this.startNode();
        node.body = [];
        this.expect(types$12.braceL);
        if (createNewLexicalScope) {
          this.enterScope(0);
        }
        while (this.type !== types$12.braceR) {
          var stmt = this.parseStatement(null);
          node.body.push(stmt);
        }
        if (exitStrict) {
          this.strict = false;
        }
        this.next();
        if (createNewLexicalScope) {
          this.exitScope();
        }
        return this.finishNode(node, "BlockStatement");
      };
      pp$82.parseFor = function(node, init2) {
        node.init = init2;
        this.expect(types$12.semi);
        node.test = this.type === types$12.semi ? null : this.parseExpression();
        this.expect(types$12.semi);
        node.update = this.type === types$12.parenR ? null : this.parseExpression();
        this.expect(types$12.parenR);
        node.body = this.parseStatement("for");
        this.exitScope();
        this.labels.pop();
        return this.finishNode(node, "ForStatement");
      };
      pp$82.parseForIn = function(node, init2) {
        var isForIn = this.type === types$12._in;
        this.next();
        if (init2.type === "VariableDeclaration" && init2.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init2.kind !== "var" || init2.declarations[0].id.type !== "Identifier")) {
          this.raise(init2.start, (isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer");
        }
        node.left = init2;
        node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();
        this.expect(types$12.parenR);
        node.body = this.parseStatement("for");
        this.exitScope();
        this.labels.pop();
        return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement");
      };
      pp$82.parseVar = function(node, isFor, kind) {
        node.declarations = [];
        node.kind = kind;
        for (; ; ) {
          var decl = this.startNode();
          this.parseVarId(decl, kind);
          if (this.eat(types$12.eq)) {
            decl.init = this.parseMaybeAssign(isFor);
          } else if (kind === "const" && !(this.type === types$12._in || this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
            this.unexpected();
          } else if (decl.id.type !== "Identifier" && !(isFor && (this.type === types$12._in || this.isContextual("of")))) {
            this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");
          } else {
            decl.init = null;
          }
          node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
          if (!this.eat(types$12.comma)) {
            break;
          }
        }
        return node;
      };
      pp$82.parseVarId = function(decl, kind) {
        decl.id = this.parseBindingAtom();
        this.checkLValPattern(decl.id, kind === "var" ? BIND_VAR2 : BIND_LEXICAL2, false);
      };
      var FUNC_STATEMENT2 = 1, FUNC_HANGING_STATEMENT2 = 2, FUNC_NULLABLE_ID2 = 4;
      pp$82.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {
        this.initFunction(node);
        if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {
          if (this.type === types$12.star && statement & FUNC_HANGING_STATEMENT2) {
            this.unexpected();
          }
          node.generator = this.eat(types$12.star);
        }
        if (this.options.ecmaVersion >= 8) {
          node.async = !!isAsync;
        }
        if (statement & FUNC_STATEMENT2) {
          node.id = statement & FUNC_NULLABLE_ID2 && this.type !== types$12.name ? null : this.parseIdent();
          if (node.id && !(statement & FUNC_HANGING_STATEMENT2)) {
            this.checkLValSimple(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR2 : BIND_LEXICAL2 : BIND_FUNCTION2);
          }
        }
        var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
        this.yieldPos = 0;
        this.awaitPos = 0;
        this.awaitIdentPos = 0;
        this.enterScope(functionFlags2(node.async, node.generator));
        if (!(statement & FUNC_STATEMENT2)) {
          node.id = this.type === types$12.name ? this.parseIdent() : null;
        }
        this.parseFunctionParams(node);
        this.parseFunctionBody(node, allowExpressionBody, false, forInit);
        this.yieldPos = oldYieldPos;
        this.awaitPos = oldAwaitPos;
        this.awaitIdentPos = oldAwaitIdentPos;
        return this.finishNode(node, statement & FUNC_STATEMENT2 ? "FunctionDeclaration" : "FunctionExpression");
      };
      pp$82.parseFunctionParams = function(node) {
        this.expect(types$12.parenL);
        node.params = this.parseBindingList(types$12.parenR, false, this.options.ecmaVersion >= 8);
        this.checkYieldAwaitInDefaultParams();
      };
      pp$82.parseClass = function(node, isStatement) {
        this.next();
        var oldStrict = this.strict;
        this.strict = true;
        this.parseClassId(node, isStatement);
        this.parseClassSuper(node);
        var privateNameMap = this.enterClassBody();
        var classBody = this.startNode();
        var hadConstructor = false;
        classBody.body = [];
        this.expect(types$12.braceL);
        while (this.type !== types$12.braceR) {
          var element6 = this.parseClassElement(node.superClass !== null);
          if (element6) {
            classBody.body.push(element6);
            if (element6.type === "MethodDefinition" && element6.kind === "constructor") {
              if (hadConstructor) {
                this.raise(element6.start, "Duplicate constructor in the same class");
              }
              hadConstructor = true;
            } else if (element6.key && element6.key.type === "PrivateIdentifier" && isPrivateNameConflicted2(privateNameMap, element6)) {
              this.raiseRecoverable(element6.key.start, "Identifier '#" + element6.key.name + "' has already been declared");
            }
          }
        }
        this.strict = oldStrict;
        this.next();
        node.body = this.finishNode(classBody, "ClassBody");
        this.exitClassBody();
        return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
      };
      pp$82.parseClassElement = function(constructorAllowsSuper) {
        if (this.eat(types$12.semi)) {
          return null;
        }
        var ecmaVersion2 = this.options.ecmaVersion;
        var node = this.startNode();
        var keyName = "";
        var isGenerator = false;
        var isAsync = false;
        var kind = "method";
        var isStatic = false;
        if (this.eatContextual("static")) {
          if (ecmaVersion2 >= 13 && this.eat(types$12.braceL)) {
            this.parseClassStaticBlock(node);
            return node;
          }
          if (this.isClassElementNameStart() || this.type === types$12.star) {
            isStatic = true;
          } else {
            keyName = "static";
          }
        }
        node.static = isStatic;
        if (!keyName && ecmaVersion2 >= 8 && this.eatContextual("async")) {
          if ((this.isClassElementNameStart() || this.type === types$12.star) && !this.canInsertSemicolon()) {
            isAsync = true;
          } else {
            keyName = "async";
          }
        }
        if (!keyName && (ecmaVersion2 >= 9 || !isAsync) && this.eat(types$12.star)) {
          isGenerator = true;
        }
        if (!keyName && !isAsync && !isGenerator) {
          var lastValue = this.value;
          if (this.eatContextual("get") || this.eatContextual("set")) {
            if (this.isClassElementNameStart()) {
              kind = lastValue;
            } else {
              keyName = lastValue;
            }
          }
        }
        if (keyName) {
          node.computed = false;
          node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);
          node.key.name = keyName;
          this.finishNode(node.key, "Identifier");
        } else {
          this.parseClassElementName(node);
        }
        if (ecmaVersion2 < 13 || this.type === types$12.parenL || kind !== "method" || isGenerator || isAsync) {
          var isConstructor = !node.static && checkKeyName2(node, "constructor");
          var allowsDirectSuper = isConstructor && constructorAllowsSuper;
          if (isConstructor && kind !== "method") {
            this.raise(node.key.start, "Constructor can't have get/set modifier");
          }
          node.kind = isConstructor ? "constructor" : kind;
          this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);
        } else {
          this.parseClassField(node);
        }
        return node;
      };
      pp$82.isClassElementNameStart = function() {
        return this.type === types$12.name || this.type === types$12.privateId || this.type === types$12.num || this.type === types$12.string || this.type === types$12.bracketL || this.type.keyword;
      };
      pp$82.parseClassElementName = function(element6) {
        if (this.type === types$12.privateId) {
          if (this.value === "constructor") {
            this.raise(this.start, "Classes can't have an element named '#constructor'");
          }
          element6.computed = false;
          element6.key = this.parsePrivateIdent();
        } else {
          this.parsePropertyName(element6);
        }
      };
      pp$82.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {
        var key2 = method.key;
        if (method.kind === "constructor") {
          if (isGenerator) {
            this.raise(key2.start, "Constructor can't be a generator");
          }
          if (isAsync) {
            this.raise(key2.start, "Constructor can't be an async method");
          }
        } else if (method.static && checkKeyName2(method, "prototype")) {
          this.raise(key2.start, "Classes may not have a static property named prototype");
        }
        var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);
        if (method.kind === "get" && value.params.length !== 0) {
          this.raiseRecoverable(value.start, "getter should have no params");
        }
        if (method.kind === "set" && value.params.length !== 1) {
          this.raiseRecoverable(value.start, "setter should have exactly one param");
        }
        if (method.kind === "set" && value.params[0].type === "RestElement") {
          this.raiseRecoverable(value.params[0].start, "Setter cannot use rest params");
        }
        return this.finishNode(method, "MethodDefinition");
      };
      pp$82.parseClassField = function(field) {
        if (checkKeyName2(field, "constructor")) {
          this.raise(field.key.start, "Classes can't have a field named 'constructor'");
        } else if (field.static && checkKeyName2(field, "prototype")) {
          this.raise(field.key.start, "Classes can't have a static field named 'prototype'");
        }
        if (this.eat(types$12.eq)) {
          var scope = this.currentThisScope();
          var inClassFieldInit = scope.inClassFieldInit;
          scope.inClassFieldInit = true;
          field.value = this.parseMaybeAssign();
          scope.inClassFieldInit = inClassFieldInit;
        } else {
          field.value = null;
        }
        this.semicolon();
        return this.finishNode(field, "PropertyDefinition");
      };
      pp$82.parseClassStaticBlock = function(node) {
        node.body = [];
        var oldLabels = this.labels;
        this.labels = [];
        this.enterScope(SCOPE_CLASS_STATIC_BLOCK2 | SCOPE_SUPER2);
        while (this.type !== types$12.braceR) {
          var stmt = this.parseStatement(null);
          node.body.push(stmt);
        }
        this.next();
        this.exitScope();
        this.labels = oldLabels;
        return this.finishNode(node, "StaticBlock");
      };
      pp$82.parseClassId = function(node, isStatement) {
        if (this.type === types$12.name) {
          node.id = this.parseIdent();
          if (isStatement) {
            this.checkLValSimple(node.id, BIND_LEXICAL2, false);
          }
        } else {
          if (isStatement === true) {
            this.unexpected();
          }
          node.id = null;
        }
      };
      pp$82.parseClassSuper = function(node) {
        node.superClass = this.eat(types$12._extends) ? this.parseExprSubscripts(false) : null;
      };
      pp$82.enterClassBody = function() {
        var element6 = { declared: /* @__PURE__ */ Object.create(null), used: [] };
        this.privateNameStack.push(element6);
        return element6.declared;
      };
      pp$82.exitClassBody = function() {
        var ref3 = this.privateNameStack.pop();
        var declared = ref3.declared;
        var used = ref3.used;
        var len = this.privateNameStack.length;
        var parent = len === 0 ? null : this.privateNameStack[len - 1];
        for (var i4 = 0; i4 < used.length; ++i4) {
          var id = used[i4];
          if (!hasOwn4(declared, id.name)) {
            if (parent) {
              parent.used.push(id);
            } else {
              this.raiseRecoverable(id.start, "Private field '#" + id.name + "' must be declared in an enclosing class");
            }
          }
        }
      };
      function isPrivateNameConflicted2(privateNameMap, element6) {
        var name = element6.key.name;
        var curr = privateNameMap[name];
        var next = "true";
        if (element6.type === "MethodDefinition" && (element6.kind === "get" || element6.kind === "set")) {
          next = (element6.static ? "s" : "i") + element6.kind;
        }
        if (curr === "iget" && next === "iset" || curr === "iset" && next === "iget" || curr === "sget" && next === "sset" || curr === "sset" && next === "sget") {
          privateNameMap[name] = "true";
          return false;
        } else if (!curr) {
          privateNameMap[name] = next;
          return false;
        } else {
          return true;
        }
      }
      function checkKeyName2(node, name) {
        var computed = node.computed;
        var key2 = node.key;
        return !computed && (key2.type === "Identifier" && key2.name === name || key2.type === "Literal" && key2.value === name);
      }
      pp$82.parseExport = function(node, exports3) {
        this.next();
        if (this.eat(types$12.star)) {
          if (this.options.ecmaVersion >= 11) {
            if (this.eatContextual("as")) {
              node.exported = this.parseModuleExportName();
              this.checkExport(exports3, node.exported, this.lastTokStart);
            } else {
              node.exported = null;
            }
          }
          this.expectContextual("from");
          if (this.type !== types$12.string) {
            this.unexpected();
          }
          node.source = this.parseExprAtom();
          this.semicolon();
          return this.finishNode(node, "ExportAllDeclaration");
        }
        if (this.eat(types$12._default)) {
          this.checkExport(exports3, "default", this.lastTokStart);
          var isAsync;
          if (this.type === types$12._function || (isAsync = this.isAsyncFunction())) {
            var fNode = this.startNode();
            this.next();
            if (isAsync) {
              this.next();
            }
            node.declaration = this.parseFunction(fNode, FUNC_STATEMENT2 | FUNC_NULLABLE_ID2, false, isAsync);
          } else if (this.type === types$12._class) {
            var cNode = this.startNode();
            node.declaration = this.parseClass(cNode, "nullableID");
          } else {
            node.declaration = this.parseMaybeAssign();
            this.semicolon();
          }
          return this.finishNode(node, "ExportDefaultDeclaration");
        }
        if (this.shouldParseExportStatement()) {
          node.declaration = this.parseStatement(null);
          if (node.declaration.type === "VariableDeclaration") {
            this.checkVariableExport(exports3, node.declaration.declarations);
          } else {
            this.checkExport(exports3, node.declaration.id, node.declaration.id.start);
          }
          node.specifiers = [];
          node.source = null;
        } else {
          node.declaration = null;
          node.specifiers = this.parseExportSpecifiers(exports3);
          if (this.eatContextual("from")) {
            if (this.type !== types$12.string) {
              this.unexpected();
            }
            node.source = this.parseExprAtom();
          } else {
            for (var i4 = 0, list4 = node.specifiers; i4 < list4.length; i4 += 1) {
              var spec = list4[i4];
              this.checkUnreserved(spec.local);
              this.checkLocalExport(spec.local);
              if (spec.local.type === "Literal") {
                this.raise(spec.local.start, "A string literal cannot be used as an exported binding without `from`.");
              }
            }
            node.source = null;
          }
          this.semicolon();
        }
        return this.finishNode(node, "ExportNamedDeclaration");
      };
      pp$82.checkExport = function(exports3, name, pos) {
        if (!exports3) {
          return;
        }
        if (typeof name !== "string") {
          name = name.type === "Identifier" ? name.name : name.value;
        }
        if (hasOwn4(exports3, name)) {
          this.raiseRecoverable(pos, "Duplicate export '" + name + "'");
        }
        exports3[name] = true;
      };
      pp$82.checkPatternExport = function(exports3, pat) {
        var type = pat.type;
        if (type === "Identifier") {
          this.checkExport(exports3, pat, pat.start);
        } else if (type === "ObjectPattern") {
          for (var i4 = 0, list4 = pat.properties; i4 < list4.length; i4 += 1) {
            var prop = list4[i4];
            this.checkPatternExport(exports3, prop);
          }
        } else if (type === "ArrayPattern") {
          for (var i$12 = 0, list$1 = pat.elements; i$12 < list$1.length; i$12 += 1) {
            var elt = list$1[i$12];
            if (elt) {
              this.checkPatternExport(exports3, elt);
            }
          }
        } else if (type === "Property") {
          this.checkPatternExport(exports3, pat.value);
        } else if (type === "AssignmentPattern") {
          this.checkPatternExport(exports3, pat.left);
        } else if (type === "RestElement") {
          this.checkPatternExport(exports3, pat.argument);
        } else if (type === "ParenthesizedExpression") {
          this.checkPatternExport(exports3, pat.expression);
        }
      };
      pp$82.checkVariableExport = function(exports3, decls) {
        if (!exports3) {
          return;
        }
        for (var i4 = 0, list4 = decls; i4 < list4.length; i4 += 1) {
          var decl = list4[i4];
          this.checkPatternExport(exports3, decl.id);
        }
      };
      pp$82.shouldParseExportStatement = function() {
        return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();
      };
      pp$82.parseExportSpecifiers = function(exports3) {
        var nodes2 = [], first = true;
        this.expect(types$12.braceL);
        while (!this.eat(types$12.braceR)) {
          if (!first) {
            this.expect(types$12.comma);
            if (this.afterTrailingComma(types$12.braceR)) {
              break;
            }
          } else {
            first = false;
          }
          var node = this.startNode();
          node.local = this.parseModuleExportName();
          node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local;
          this.checkExport(exports3, node.exported, node.exported.start);
          nodes2.push(this.finishNode(node, "ExportSpecifier"));
        }
        return nodes2;
      };
      pp$82.parseImport = function(node) {
        this.next();
        if (this.type === types$12.string) {
          node.specifiers = empty$12;
          node.source = this.parseExprAtom();
        } else {
          node.specifiers = this.parseImportSpecifiers();
          this.expectContextual("from");
          node.source = this.type === types$12.string ? this.parseExprAtom() : this.unexpected();
        }
        this.semicolon();
        return this.finishNode(node, "ImportDeclaration");
      };
      pp$82.parseImportSpecifiers = function() {
        var nodes2 = [], first = true;
        if (this.type === types$12.name) {
          var node = this.startNode();
          node.local = this.parseIdent();
          this.checkLValSimple(node.local, BIND_LEXICAL2);
          nodes2.push(this.finishNode(node, "ImportDefaultSpecifier"));
          if (!this.eat(types$12.comma)) {
            return nodes2;
          }
        }
        if (this.type === types$12.star) {
          var node$1 = this.startNode();
          this.next();
          this.expectContextual("as");
          node$1.local = this.parseIdent();
          this.checkLValSimple(node$1.local, BIND_LEXICAL2);
          nodes2.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));
          return nodes2;
        }
        this.expect(types$12.braceL);
        while (!this.eat(types$12.braceR)) {
          if (!first) {
            this.expect(types$12.comma);
            if (this.afterTrailingComma(types$12.braceR)) {
              break;
            }
          } else {
            first = false;
          }
          var node$2 = this.startNode();
          node$2.imported = this.parseModuleExportName();
          if (this.eatContextual("as")) {
            node$2.local = this.parseIdent();
          } else {
            this.checkUnreserved(node$2.imported);
            node$2.local = node$2.imported;
          }
          this.checkLValSimple(node$2.local, BIND_LEXICAL2);
          nodes2.push(this.finishNode(node$2, "ImportSpecifier"));
        }
        return nodes2;
      };
      pp$82.parseModuleExportName = function() {
        if (this.options.ecmaVersion >= 13 && this.type === types$12.string) {
          var stringLiteral = this.parseLiteral(this.value);
          if (loneSurrogate2.test(stringLiteral.value)) {
            this.raise(stringLiteral.start, "An export name cannot include a lone surrogate.");
          }
          return stringLiteral;
        }
        return this.parseIdent(true);
      };
      pp$82.adaptDirectivePrologue = function(statements) {
        for (var i4 = 0; i4 < statements.length && this.isDirectiveCandidate(statements[i4]); ++i4) {
          statements[i4].directive = statements[i4].expression.raw.slice(1, -1);
        }
      };
      pp$82.isDirectiveCandidate = function(statement) {
        return statement.type === "ExpressionStatement" && statement.expression.type === "Literal" && typeof statement.expression.value === "string" && (this.input[statement.start] === '"' || this.input[statement.start] === "'");
      };
      var pp$72 = Parser4.prototype;
      pp$72.toAssignable = function(node, isBinding, refDestructuringErrors) {
        if (this.options.ecmaVersion >= 6 && node) {
          switch (node.type) {
            case "Identifier":
              if (this.inAsync && node.name === "await") {
                this.raise(node.start, "Cannot use 'await' as identifier inside an async function");
              }
              break;
            case "ObjectPattern":
            case "ArrayPattern":
            case "AssignmentPattern":
            case "RestElement":
              break;
            case "ObjectExpression":
              node.type = "ObjectPattern";
              if (refDestructuringErrors) {
                this.checkPatternErrors(refDestructuringErrors, true);
              }
              for (var i4 = 0, list4 = node.properties; i4 < list4.length; i4 += 1) {
                var prop = list4[i4];
                this.toAssignable(prop, isBinding);
                if (prop.type === "RestElement" && (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")) {
                  this.raise(prop.argument.start, "Unexpected token");
                }
              }
              break;
            case "Property":
              if (node.kind !== "init") {
                this.raise(node.key.start, "Object pattern can't contain getter or setter");
              }
              this.toAssignable(node.value, isBinding);
              break;
            case "ArrayExpression":
              node.type = "ArrayPattern";
              if (refDestructuringErrors) {
                this.checkPatternErrors(refDestructuringErrors, true);
              }
              this.toAssignableList(node.elements, isBinding);
              break;
            case "SpreadElement":
              node.type = "RestElement";
              this.toAssignable(node.argument, isBinding);
              if (node.argument.type === "AssignmentPattern") {
                this.raise(node.argument.start, "Rest elements cannot have a default value");
              }
              break;
            case "AssignmentExpression":
              if (node.operator !== "=") {
                this.raise(node.left.end, "Only '=' operator can be used for specifying default value.");
              }
              node.type = "AssignmentPattern";
              delete node.operator;
              this.toAssignable(node.left, isBinding);
              break;
            case "ParenthesizedExpression":
              this.toAssignable(node.expression, isBinding, refDestructuringErrors);
              break;
            case "ChainExpression":
              this.raiseRecoverable(node.start, "Optional chaining cannot appear in left-hand side");
              break;
            case "MemberExpression":
              if (!isBinding) {
                break;
              }
            default:
              this.raise(node.start, "Assigning to rvalue");
          }
        } else if (refDestructuringErrors) {
          this.checkPatternErrors(refDestructuringErrors, true);
        }
        return node;
      };
      pp$72.toAssignableList = function(exprList, isBinding) {
        var end = exprList.length;
        for (var i4 = 0; i4 < end; i4++) {
          var elt = exprList[i4];
          if (elt) {
            this.toAssignable(elt, isBinding);
          }
        }
        if (end) {
          var last = exprList[end - 1];
          if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier") {
            this.unexpected(last.argument.start);
          }
        }
        return exprList;
      };
      pp$72.parseSpread = function(refDestructuringErrors) {
        var node = this.startNode();
        this.next();
        node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
        return this.finishNode(node, "SpreadElement");
      };
      pp$72.parseRestBinding = function() {
        var node = this.startNode();
        this.next();
        if (this.options.ecmaVersion === 6 && this.type !== types$12.name) {
          this.unexpected();
        }
        node.argument = this.parseBindingAtom();
        return this.finishNode(node, "RestElement");
      };
      pp$72.parseBindingAtom = function() {
        if (this.options.ecmaVersion >= 6) {
          switch (this.type) {
            case types$12.bracketL:
              var node = this.startNode();
              this.next();
              node.elements = this.parseBindingList(types$12.bracketR, true, true);
              return this.finishNode(node, "ArrayPattern");
            case types$12.braceL:
              return this.parseObj(true);
          }
        }
        return this.parseIdent();
      };
      pp$72.parseBindingList = function(close, allowEmpty, allowTrailingComma) {
        var elts = [], first = true;
        while (!this.eat(close)) {
          if (first) {
            first = false;
          } else {
            this.expect(types$12.comma);
          }
          if (allowEmpty && this.type === types$12.comma) {
            elts.push(null);
          } else if (allowTrailingComma && this.afterTrailingComma(close)) {
            break;
          } else if (this.type === types$12.ellipsis) {
            var rest = this.parseRestBinding();
            this.parseBindingListItem(rest);
            elts.push(rest);
            if (this.type === types$12.comma) {
              this.raise(this.start, "Comma is not permitted after the rest element");
            }
            this.expect(close);
            break;
          } else {
            var elem = this.parseMaybeDefault(this.start, this.startLoc);
            this.parseBindingListItem(elem);
            elts.push(elem);
          }
        }
        return elts;
      };
      pp$72.parseBindingListItem = function(param) {
        return param;
      };
      pp$72.parseMaybeDefault = function(startPos, startLoc, left) {
        left = left || this.parseBindingAtom();
        if (this.options.ecmaVersion < 6 || !this.eat(types$12.eq)) {
          return left;
        }
        var node = this.startNodeAt(startPos, startLoc);
        node.left = left;
        node.right = this.parseMaybeAssign();
        return this.finishNode(node, "AssignmentPattern");
      };
      pp$72.checkLValSimple = function(expr, bindingType, checkClashes) {
        if (bindingType === void 0)
          bindingType = BIND_NONE2;
        var isBind = bindingType !== BIND_NONE2;
        switch (expr.type) {
          case "Identifier":
            if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {
              this.raiseRecoverable(expr.start, (isBind ? "Binding " : "Assigning to ") + expr.name + " in strict mode");
            }
            if (isBind) {
              if (bindingType === BIND_LEXICAL2 && expr.name === "let") {
                this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name");
              }
              if (checkClashes) {
                if (hasOwn4(checkClashes, expr.name)) {
                  this.raiseRecoverable(expr.start, "Argument name clash");
                }
                checkClashes[expr.name] = true;
              }
              if (bindingType !== BIND_OUTSIDE2) {
                this.declareName(expr.name, bindingType, expr.start);
              }
            }
            break;
          case "ChainExpression":
            this.raiseRecoverable(expr.start, "Optional chaining cannot appear in left-hand side");
            break;
          case "MemberExpression":
            if (isBind) {
              this.raiseRecoverable(expr.start, "Binding member expression");
            }
            break;
          case "ParenthesizedExpression":
            if (isBind) {
              this.raiseRecoverable(expr.start, "Binding parenthesized expression");
            }
            return this.checkLValSimple(expr.expression, bindingType, checkClashes);
          default:
            this.raise(expr.start, (isBind ? "Binding" : "Assigning to") + " rvalue");
        }
      };
      pp$72.checkLValPattern = function(expr, bindingType, checkClashes) {
        if (bindingType === void 0)
          bindingType = BIND_NONE2;
        switch (expr.type) {
          case "ObjectPattern":
            for (var i4 = 0, list4 = expr.properties; i4 < list4.length; i4 += 1) {
              var prop = list4[i4];
              this.checkLValInnerPattern(prop, bindingType, checkClashes);
            }
            break;
          case "ArrayPattern":
            for (var i$12 = 0, list$1 = expr.elements; i$12 < list$1.length; i$12 += 1) {
              var elem = list$1[i$12];
              if (elem) {
                this.checkLValInnerPattern(elem, bindingType, checkClashes);
              }
            }
            break;
          default:
            this.checkLValSimple(expr, bindingType, checkClashes);
        }
      };
      pp$72.checkLValInnerPattern = function(expr, bindingType, checkClashes) {
        if (bindingType === void 0)
          bindingType = BIND_NONE2;
        switch (expr.type) {
          case "Property":
            this.checkLValInnerPattern(expr.value, bindingType, checkClashes);
            break;
          case "AssignmentPattern":
            this.checkLValPattern(expr.left, bindingType, checkClashes);
            break;
          case "RestElement":
            this.checkLValPattern(expr.argument, bindingType, checkClashes);
            break;
          default:
            this.checkLValPattern(expr, bindingType, checkClashes);
        }
      };
      var TokContext3 = function TokContext4(token, isExpr, preserveSpace, override, generator) {
        this.token = token;
        this.isExpr = !!isExpr;
        this.preserveSpace = !!preserveSpace;
        this.override = override;
        this.generator = !!generator;
      };
      var types5 = {
        b_stat: new TokContext3("{", false),
        b_expr: new TokContext3("{", true),
        b_tmpl: new TokContext3("${", false),
        p_stat: new TokContext3("(", false),
        p_expr: new TokContext3("(", true),
        q_tmpl: new TokContext3("`", true, true, function(p3) {
          return p3.tryReadTemplateToken();
        }),
        f_stat: new TokContext3("function", false),
        f_expr: new TokContext3("function", true),
        f_expr_gen: new TokContext3("function", true, false, null, true),
        f_gen: new TokContext3("function", false, false, null, true)
      };
      var pp$62 = Parser4.prototype;
      pp$62.initialContext = function() {
        return [types5.b_stat];
      };
      pp$62.curContext = function() {
        return this.context[this.context.length - 1];
      };
      pp$62.braceIsBlock = function(prevType) {
        var parent = this.curContext();
        if (parent === types5.f_expr || parent === types5.f_stat) {
          return true;
        }
        if (prevType === types$12.colon && (parent === types5.b_stat || parent === types5.b_expr)) {
          return !parent.isExpr;
        }
        if (prevType === types$12._return || prevType === types$12.name && this.exprAllowed) {
          return lineBreak2.test(this.input.slice(this.lastTokEnd, this.start));
        }
        if (prevType === types$12._else || prevType === types$12.semi || prevType === types$12.eof || prevType === types$12.parenR || prevType === types$12.arrow) {
          return true;
        }
        if (prevType === types$12.braceL) {
          return parent === types5.b_stat;
        }
        if (prevType === types$12._var || prevType === types$12._const || prevType === types$12.name) {
          return false;
        }
        return !this.exprAllowed;
      };
      pp$62.inGeneratorContext = function() {
        for (var i4 = this.context.length - 1; i4 >= 1; i4--) {
          var context = this.context[i4];
          if (context.token === "function") {
            return context.generator;
          }
        }
        return false;
      };
      pp$62.updateContext = function(prevType) {
        var update, type = this.type;
        if (type.keyword && prevType === types$12.dot) {
          this.exprAllowed = false;
        } else if (update = type.updateContext) {
          update.call(this, prevType);
        } else {
          this.exprAllowed = type.beforeExpr;
        }
      };
      pp$62.overrideContext = function(tokenCtx) {
        if (this.curContext() !== tokenCtx) {
          this.context[this.context.length - 1] = tokenCtx;
        }
      };
      types$12.parenR.updateContext = types$12.braceR.updateContext = function() {
        if (this.context.length === 1) {
          this.exprAllowed = true;
          return;
        }
        var out = this.context.pop();
        if (out === types5.b_stat && this.curContext().token === "function") {
          out = this.context.pop();
        }
        this.exprAllowed = !out.isExpr;
      };
      types$12.braceL.updateContext = function(prevType) {
        this.context.push(this.braceIsBlock(prevType) ? types5.b_stat : types5.b_expr);
        this.exprAllowed = true;
      };
      types$12.dollarBraceL.updateContext = function() {
        this.context.push(types5.b_tmpl);
        this.exprAllowed = true;
      };
      types$12.parenL.updateContext = function(prevType) {
        var statementParens = prevType === types$12._if || prevType === types$12._for || prevType === types$12._with || prevType === types$12._while;
        this.context.push(statementParens ? types5.p_stat : types5.p_expr);
        this.exprAllowed = true;
      };
      types$12.incDec.updateContext = function() {
      };
      types$12._function.updateContext = types$12._class.updateContext = function(prevType) {
        if (prevType.beforeExpr && prevType !== types$12._else && !(prevType === types$12.semi && this.curContext() !== types5.p_stat) && !(prevType === types$12._return && lineBreak2.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types$12.colon || prevType === types$12.braceL) && this.curContext() === types5.b_stat)) {
          this.context.push(types5.f_expr);
        } else {
          this.context.push(types5.f_stat);
        }
        this.exprAllowed = false;
      };
      types$12.backQuote.updateContext = function() {
        if (this.curContext() === types5.q_tmpl) {
          this.context.pop();
        } else {
          this.context.push(types5.q_tmpl);
        }
        this.exprAllowed = false;
      };
      types$12.star.updateContext = function(prevType) {
        if (prevType === types$12._function) {
          var index2 = this.context.length - 1;
          if (this.context[index2] === types5.f_expr) {
            this.context[index2] = types5.f_expr_gen;
          } else {
            this.context[index2] = types5.f_gen;
          }
        }
        this.exprAllowed = true;
      };
      types$12.name.updateContext = function(prevType) {
        var allowed = false;
        if (this.options.ecmaVersion >= 6 && prevType !== types$12.dot) {
          if (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) {
            allowed = true;
          }
        }
        this.exprAllowed = allowed;
      };
      var pp$52 = Parser4.prototype;
      pp$52.checkPropClash = function(prop, propHash, refDestructuringErrors) {
        if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement") {
          return;
        }
        if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {
          return;
        }
        var key2 = prop.key;
        var name;
        switch (key2.type) {
          case "Identifier":
            name = key2.name;
            break;
          case "Literal":
            name = String(key2.value);
            break;
          default:
            return;
        }
        var kind = prop.kind;
        if (this.options.ecmaVersion >= 6) {
          if (name === "__proto__" && kind === "init") {
            if (propHash.proto) {
              if (refDestructuringErrors) {
                if (refDestructuringErrors.doubleProto < 0) {
                  refDestructuringErrors.doubleProto = key2.start;
                }
              } else {
                this.raiseRecoverable(key2.start, "Redefinition of __proto__ property");
              }
            }
            propHash.proto = true;
          }
          return;
        }
        name = "$" + name;
        var other2 = propHash[name];
        if (other2) {
          var redefinition;
          if (kind === "init") {
            redefinition = this.strict && other2.init || other2.get || other2.set;
          } else {
            redefinition = other2.init || other2[kind];
          }
          if (redefinition) {
            this.raiseRecoverable(key2.start, "Redefinition of property");
          }
        } else {
          other2 = propHash[name] = {
            init: false,
            get: false,
            set: false
          };
        }
        other2[kind] = true;
      };
      pp$52.parseExpression = function(forInit, refDestructuringErrors) {
        var startPos = this.start, startLoc = this.startLoc;
        var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);
        if (this.type === types$12.comma) {
          var node = this.startNodeAt(startPos, startLoc);
          node.expressions = [expr];
          while (this.eat(types$12.comma)) {
            node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors));
          }
          return this.finishNode(node, "SequenceExpression");
        }
        return expr;
      };
      pp$52.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {
        if (this.isContextual("yield")) {
          if (this.inGenerator) {
            return this.parseYield(forInit);
          } else {
            this.exprAllowed = false;
          }
        }
        var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;
        if (refDestructuringErrors) {
          oldParenAssign = refDestructuringErrors.parenthesizedAssign;
          oldTrailingComma = refDestructuringErrors.trailingComma;
          oldDoubleProto = refDestructuringErrors.doubleProto;
          refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
        } else {
          refDestructuringErrors = new DestructuringErrors3();
          ownDestructuringErrors = true;
        }
        var startPos = this.start, startLoc = this.startLoc;
        if (this.type === types$12.parenL || this.type === types$12.name) {
          this.potentialArrowAt = this.start;
          this.potentialArrowInForAwait = forInit === "await";
        }
        var left = this.parseMaybeConditional(forInit, refDestructuringErrors);
        if (afterLeftParse) {
          left = afterLeftParse.call(this, left, startPos, startLoc);
        }
        if (this.type.isAssign) {
          var node = this.startNodeAt(startPos, startLoc);
          node.operator = this.value;
          if (this.type === types$12.eq) {
            left = this.toAssignable(left, false, refDestructuringErrors);
          }
          if (!ownDestructuringErrors) {
            refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;
          }
          if (refDestructuringErrors.shorthandAssign >= left.start) {
            refDestructuringErrors.shorthandAssign = -1;
          }
          if (this.type === types$12.eq) {
            this.checkLValPattern(left);
          } else {
            this.checkLValSimple(left);
          }
          node.left = left;
          this.next();
          node.right = this.parseMaybeAssign(forInit);
          if (oldDoubleProto > -1) {
            refDestructuringErrors.doubleProto = oldDoubleProto;
          }
          return this.finishNode(node, "AssignmentExpression");
        } else {
          if (ownDestructuringErrors) {
            this.checkExpressionErrors(refDestructuringErrors, true);
          }
        }
        if (oldParenAssign > -1) {
          refDestructuringErrors.parenthesizedAssign = oldParenAssign;
        }
        if (oldTrailingComma > -1) {
          refDestructuringErrors.trailingComma = oldTrailingComma;
        }
        return left;
      };
      pp$52.parseMaybeConditional = function(forInit, refDestructuringErrors) {
        var startPos = this.start, startLoc = this.startLoc;
        var expr = this.parseExprOps(forInit, refDestructuringErrors);
        if (this.checkExpressionErrors(refDestructuringErrors)) {
          return expr;
        }
        if (this.eat(types$12.question)) {
          var node = this.startNodeAt(startPos, startLoc);
          node.test = expr;
          node.consequent = this.parseMaybeAssign();
          this.expect(types$12.colon);
          node.alternate = this.parseMaybeAssign(forInit);
          return this.finishNode(node, "ConditionalExpression");
        }
        return expr;
      };
      pp$52.parseExprOps = function(forInit, refDestructuringErrors) {
        var startPos = this.start, startLoc = this.startLoc;
        var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);
        if (this.checkExpressionErrors(refDestructuringErrors)) {
          return expr;
        }
        return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit);
      };
      pp$52.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {
        var prec = this.type.binop;
        if (prec != null && (!forInit || this.type !== types$12._in)) {
          if (prec > minPrec) {
            var logical = this.type === types$12.logicalOR || this.type === types$12.logicalAND;
            var coalesce = this.type === types$12.coalesce;
            if (coalesce) {
              prec = types$12.logicalAND.binop;
            }
            var op = this.value;
            this.next();
            var startPos = this.start, startLoc = this.startLoc;
            var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);
            var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);
            if (logical && this.type === types$12.coalesce || coalesce && (this.type === types$12.logicalOR || this.type === types$12.logicalAND)) {
              this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");
            }
            return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit);
          }
        }
        return left;
      };
      pp$52.buildBinary = function(startPos, startLoc, left, right, op, logical) {
        if (right.type === "PrivateIdentifier") {
          this.raise(right.start, "Private identifier can only be left side of binary expression");
        }
        var node = this.startNodeAt(startPos, startLoc);
        node.left = left;
        node.operator = op;
        node.right = right;
        return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression");
      };
      pp$52.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {
        var startPos = this.start, startLoc = this.startLoc, expr;
        if (this.isContextual("await") && this.canAwait) {
          expr = this.parseAwait(forInit);
          sawUnary = true;
        } else if (this.type.prefix) {
          var node = this.startNode(), update = this.type === types$12.incDec;
          node.operator = this.value;
          node.prefix = true;
          this.next();
          node.argument = this.parseMaybeUnary(null, true, update, forInit);
          this.checkExpressionErrors(refDestructuringErrors, true);
          if (update) {
            this.checkLValSimple(node.argument);
          } else if (this.strict && node.operator === "delete" && node.argument.type === "Identifier") {
            this.raiseRecoverable(node.start, "Deleting local variable in strict mode");
          } else if (node.operator === "delete" && isPrivateFieldAccess2(node.argument)) {
            this.raiseRecoverable(node.start, "Private fields can not be deleted");
          } else {
            sawUnary = true;
          }
          expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
        } else if (!sawUnary && this.type === types$12.privateId) {
          if (forInit || this.privateNameStack.length === 0) {
            this.unexpected();
          }
          expr = this.parsePrivateIdent();
          if (this.type !== types$12._in) {
            this.unexpected();
          }
        } else {
          expr = this.parseExprSubscripts(refDestructuringErrors, forInit);
          if (this.checkExpressionErrors(refDestructuringErrors)) {
            return expr;
          }
          while (this.type.postfix && !this.canInsertSemicolon()) {
            var node$1 = this.startNodeAt(startPos, startLoc);
            node$1.operator = this.value;
            node$1.prefix = false;
            node$1.argument = expr;
            this.checkLValSimple(expr);
            this.next();
            expr = this.finishNode(node$1, "UpdateExpression");
          }
        }
        if (!incDec && this.eat(types$12.starstar)) {
          if (sawUnary) {
            this.unexpected(this.lastTokStart);
          } else {
            return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), "**", false);
          }
        } else {
          return expr;
        }
      };
      function isPrivateFieldAccess2(node) {
        return node.type === "MemberExpression" && node.property.type === "PrivateIdentifier" || node.type === "ChainExpression" && isPrivateFieldAccess2(node.expression);
      }
      pp$52.parseExprSubscripts = function(refDestructuringErrors, forInit) {
        var startPos = this.start, startLoc = this.startLoc;
        var expr = this.parseExprAtom(refDestructuringErrors, forInit);
        if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")") {
          return expr;
        }
        var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);
        if (refDestructuringErrors && result.type === "MemberExpression") {
          if (refDestructuringErrors.parenthesizedAssign >= result.start) {
            refDestructuringErrors.parenthesizedAssign = -1;
          }
          if (refDestructuringErrors.parenthesizedBind >= result.start) {
            refDestructuringErrors.parenthesizedBind = -1;
          }
          if (refDestructuringErrors.trailingComma >= result.start) {
            refDestructuringErrors.trailingComma = -1;
          }
        }
        return result;
      };
      pp$52.parseSubscripts = function(base2, startPos, startLoc, noCalls, forInit) {
        var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base2.type === "Identifier" && base2.name === "async" && this.lastTokEnd === base2.end && !this.canInsertSemicolon() && base2.end - base2.start === 5 && this.potentialArrowAt === base2.start;
        var optionalChained = false;
        while (true) {
          var element6 = this.parseSubscript(base2, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);
          if (element6.optional) {
            optionalChained = true;
          }
          if (element6 === base2 || element6.type === "ArrowFunctionExpression") {
            if (optionalChained) {
              var chainNode = this.startNodeAt(startPos, startLoc);
              chainNode.expression = element6;
              element6 = this.finishNode(chainNode, "ChainExpression");
            }
            return element6;
          }
          base2 = element6;
        }
      };
      pp$52.parseSubscript = function(base2, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {
        var optionalSupported = this.options.ecmaVersion >= 11;
        var optional = optionalSupported && this.eat(types$12.questionDot);
        if (noCalls && optional) {
          this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
        }
        var computed = this.eat(types$12.bracketL);
        if (computed || optional && this.type !== types$12.parenL && this.type !== types$12.backQuote || this.eat(types$12.dot)) {
          var node = this.startNodeAt(startPos, startLoc);
          node.object = base2;
          if (computed) {
            node.property = this.parseExpression();
            this.expect(types$12.bracketR);
          } else if (this.type === types$12.privateId && base2.type !== "Super") {
            node.property = this.parsePrivateIdent();
          } else {
            node.property = this.parseIdent(this.options.allowReserved !== "never");
          }
          node.computed = !!computed;
          if (optionalSupported) {
            node.optional = optional;
          }
          base2 = this.finishNode(node, "MemberExpression");
        } else if (!noCalls && this.eat(types$12.parenL)) {
          var refDestructuringErrors = new DestructuringErrors3(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
          this.yieldPos = 0;
          this.awaitPos = 0;
          this.awaitIdentPos = 0;
          var exprList = this.parseExprList(types$12.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);
          if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$12.arrow)) {
            this.checkPatternErrors(refDestructuringErrors, false);
            this.checkYieldAwaitInDefaultParams();
            if (this.awaitIdentPos > 0) {
              this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function");
            }
            this.yieldPos = oldYieldPos;
            this.awaitPos = oldAwaitPos;
            this.awaitIdentPos = oldAwaitIdentPos;
            return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit);
          }
          this.checkExpressionErrors(refDestructuringErrors, true);
          this.yieldPos = oldYieldPos || this.yieldPos;
          this.awaitPos = oldAwaitPos || this.awaitPos;
          this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;
          var node$1 = this.startNodeAt(startPos, startLoc);
          node$1.callee = base2;
          node$1.arguments = exprList;
          if (optionalSupported) {
            node$1.optional = optional;
          }
          base2 = this.finishNode(node$1, "CallExpression");
        } else if (this.type === types$12.backQuote) {
          if (optional || optionalChained) {
            this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
          }
          var node$2 = this.startNodeAt(startPos, startLoc);
          node$2.tag = base2;
          node$2.quasi = this.parseTemplate({ isTagged: true });
          base2 = this.finishNode(node$2, "TaggedTemplateExpression");
        }
        return base2;
      };
      pp$52.parseExprAtom = function(refDestructuringErrors, forInit) {
        if (this.type === types$12.slash) {
          this.readRegexp();
        }
        var node, canBeArrow = this.potentialArrowAt === this.start;
        switch (this.type) {
          case types$12._super:
            if (!this.allowSuper) {
              this.raise(this.start, "'super' keyword outside a method");
            }
            node = this.startNode();
            this.next();
            if (this.type === types$12.parenL && !this.allowDirectSuper) {
              this.raise(node.start, "super() call outside constructor of a subclass");
            }
            if (this.type !== types$12.dot && this.type !== types$12.bracketL && this.type !== types$12.parenL) {
              this.unexpected();
            }
            return this.finishNode(node, "Super");
          case types$12._this:
            node = this.startNode();
            this.next();
            return this.finishNode(node, "ThisExpression");
          case types$12.name:
            var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
            var id = this.parseIdent(false);
            if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types$12._function)) {
              this.overrideContext(types5.f_expr);
              return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit);
            }
            if (canBeArrow && !this.canInsertSemicolon()) {
              if (this.eat(types$12.arrow)) {
                return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit);
              }
              if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types$12.name && !containsEsc && (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) {
                id = this.parseIdent(false);
                if (this.canInsertSemicolon() || !this.eat(types$12.arrow)) {
                  this.unexpected();
                }
                return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit);
              }
            }
            return id;
          case types$12.regexp:
            var value = this.value;
            node = this.parseLiteral(value.value);
            node.regex = { pattern: value.pattern, flags: value.flags };
            return node;
          case types$12.num:
          case types$12.string:
            return this.parseLiteral(this.value);
          case types$12._null:
          case types$12._true:
          case types$12._false:
            node = this.startNode();
            node.value = this.type === types$12._null ? null : this.type === types$12._true;
            node.raw = this.type.keyword;
            this.next();
            return this.finishNode(node, "Literal");
          case types$12.parenL:
            var start3 = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);
            if (refDestructuringErrors) {
              if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {
                refDestructuringErrors.parenthesizedAssign = start3;
              }
              if (refDestructuringErrors.parenthesizedBind < 0) {
                refDestructuringErrors.parenthesizedBind = start3;
              }
            }
            return expr;
          case types$12.bracketL:
            node = this.startNode();
            this.next();
            node.elements = this.parseExprList(types$12.bracketR, true, true, refDestructuringErrors);
            return this.finishNode(node, "ArrayExpression");
          case types$12.braceL:
            this.overrideContext(types5.b_expr);
            return this.parseObj(false, refDestructuringErrors);
          case types$12._function:
            node = this.startNode();
            this.next();
            return this.parseFunction(node, 0);
          case types$12._class:
            return this.parseClass(this.startNode(), false);
          case types$12._new:
            return this.parseNew();
          case types$12.backQuote:
            return this.parseTemplate();
          case types$12._import:
            if (this.options.ecmaVersion >= 11) {
              return this.parseExprImport();
            } else {
              return this.unexpected();
            }
          default:
            this.unexpected();
        }
      };
      pp$52.parseExprImport = function() {
        var node = this.startNode();
        if (this.containsEsc) {
          this.raiseRecoverable(this.start, "Escape sequence in keyword import");
        }
        var meta = this.parseIdent(true);
        switch (this.type) {
          case types$12.parenL:
            return this.parseDynamicImport(node);
          case types$12.dot:
            node.meta = meta;
            return this.parseImportMeta(node);
          default:
            this.unexpected();
        }
      };
      pp$52.parseDynamicImport = function(node) {
        this.next();
        node.source = this.parseMaybeAssign();
        if (!this.eat(types$12.parenR)) {
          var errorPos = this.start;
          if (this.eat(types$12.comma) && this.eat(types$12.parenR)) {
            this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");
          } else {
            this.unexpected(errorPos);
          }
        }
        return this.finishNode(node, "ImportExpression");
      };
      pp$52.parseImportMeta = function(node) {
        this.next();
        var containsEsc = this.containsEsc;
        node.property = this.parseIdent(true);
        if (node.property.name !== "meta") {
          this.raiseRecoverable(node.property.start, "The only valid meta property for import is 'import.meta'");
        }
        if (containsEsc) {
          this.raiseRecoverable(node.start, "'import.meta' must not contain escaped characters");
        }
        if (this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere) {
          this.raiseRecoverable(node.start, "Cannot use 'import.meta' outside a module");
        }
        return this.finishNode(node, "MetaProperty");
      };
      pp$52.parseLiteral = function(value) {
        var node = this.startNode();
        node.value = value;
        node.raw = this.input.slice(this.start, this.end);
        if (node.raw.charCodeAt(node.raw.length - 1) === 110) {
          node.bigint = node.raw.slice(0, -1).replace(/_/g, "");
        }
        this.next();
        return this.finishNode(node, "Literal");
      };
      pp$52.parseParenExpression = function() {
        this.expect(types$12.parenL);
        var val = this.parseExpression();
        this.expect(types$12.parenR);
        return val;
      };
      pp$52.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {
        var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
        if (this.options.ecmaVersion >= 6) {
          this.next();
          var innerStartPos = this.start, innerStartLoc = this.startLoc;
          var exprList = [], first = true, lastIsComma = false;
          var refDestructuringErrors = new DestructuringErrors3(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
          this.yieldPos = 0;
          this.awaitPos = 0;
          while (this.type !== types$12.parenR) {
            first ? first = false : this.expect(types$12.comma);
            if (allowTrailingComma && this.afterTrailingComma(types$12.parenR, true)) {
              lastIsComma = true;
              break;
            } else if (this.type === types$12.ellipsis) {
              spreadStart = this.start;
              exprList.push(this.parseParenItem(this.parseRestBinding()));
              if (this.type === types$12.comma) {
                this.raise(this.start, "Comma is not permitted after the rest element");
              }
              break;
            } else {
              exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));
            }
          }
          var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;
          this.expect(types$12.parenR);
          if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$12.arrow)) {
            this.checkPatternErrors(refDestructuringErrors, false);
            this.checkYieldAwaitInDefaultParams();
            this.yieldPos = oldYieldPos;
            this.awaitPos = oldAwaitPos;
            return this.parseParenArrowList(startPos, startLoc, exprList, forInit);
          }
          if (!exprList.length || lastIsComma) {
            this.unexpected(this.lastTokStart);
          }
          if (spreadStart) {
            this.unexpected(spreadStart);
          }
          this.checkExpressionErrors(refDestructuringErrors, true);
          this.yieldPos = oldYieldPos || this.yieldPos;
          this.awaitPos = oldAwaitPos || this.awaitPos;
          if (exprList.length > 1) {
            val = this.startNodeAt(innerStartPos, innerStartLoc);
            val.expressions = exprList;
            this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
          } else {
            val = exprList[0];
          }
        } else {
          val = this.parseParenExpression();
        }
        if (this.options.preserveParens) {
          var par = this.startNodeAt(startPos, startLoc);
          par.expression = val;
          return this.finishNode(par, "ParenthesizedExpression");
        } else {
          return val;
        }
      };
      pp$52.parseParenItem = function(item) {
        return item;
      };
      pp$52.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {
        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit);
      };
      var empty3 = [];
      pp$52.parseNew = function() {
        if (this.containsEsc) {
          this.raiseRecoverable(this.start, "Escape sequence in keyword new");
        }
        var node = this.startNode();
        var meta = this.parseIdent(true);
        if (this.options.ecmaVersion >= 6 && this.eat(types$12.dot)) {
          node.meta = meta;
          var containsEsc = this.containsEsc;
          node.property = this.parseIdent(true);
          if (node.property.name !== "target") {
            this.raiseRecoverable(node.property.start, "The only valid meta property for new is 'new.target'");
          }
          if (containsEsc) {
            this.raiseRecoverable(node.start, "'new.target' must not contain escaped characters");
          }
          if (!this.allowNewDotTarget) {
            this.raiseRecoverable(node.start, "'new.target' can only be used in functions and class static block");
          }
          return this.finishNode(node, "MetaProperty");
        }
        var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$12._import;
        node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);
        if (isImport && node.callee.type === "ImportExpression") {
          this.raise(startPos, "Cannot use new with import()");
        }
        if (this.eat(types$12.parenL)) {
          node.arguments = this.parseExprList(types$12.parenR, this.options.ecmaVersion >= 8, false);
        } else {
          node.arguments = empty3;
        }
        return this.finishNode(node, "NewExpression");
      };
      pp$52.parseTemplateElement = function(ref3) {
        var isTagged = ref3.isTagged;
        var elem = this.startNode();
        if (this.type === types$12.invalidTemplate) {
          if (!isTagged) {
            this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
          }
          elem.value = {
            raw: this.value,
            cooked: null
          };
        } else {
          elem.value = {
            raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
            cooked: this.value
          };
        }
        this.next();
        elem.tail = this.type === types$12.backQuote;
        return this.finishNode(elem, "TemplateElement");
      };
      pp$52.parseTemplate = function(ref3) {
        if (ref3 === void 0)
          ref3 = {};
        var isTagged = ref3.isTagged;
        if (isTagged === void 0)
          isTagged = false;
        var node = this.startNode();
        this.next();
        node.expressions = [];
        var curElt = this.parseTemplateElement({ isTagged });
        node.quasis = [curElt];
        while (!curElt.tail) {
          if (this.type === types$12.eof) {
            this.raise(this.pos, "Unterminated template literal");
          }
          this.expect(types$12.dollarBraceL);
          node.expressions.push(this.parseExpression());
          this.expect(types$12.braceR);
          node.quasis.push(curElt = this.parseTemplateElement({ isTagged }));
        }
        this.next();
        return this.finishNode(node, "TemplateLiteral");
      };
      pp$52.isAsyncProp = function(prop) {
        return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" && (this.type === types$12.name || this.type === types$12.num || this.type === types$12.string || this.type === types$12.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types$12.star) && !lineBreak2.test(this.input.slice(this.lastTokEnd, this.start));
      };
      pp$52.parseObj = function(isPattern, refDestructuringErrors) {
        var node = this.startNode(), first = true, propHash = {};
        node.properties = [];
        this.next();
        while (!this.eat(types$12.braceR)) {
          if (!first) {
            this.expect(types$12.comma);
            if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$12.braceR)) {
              break;
            }
          } else {
            first = false;
          }
          var prop = this.parseProperty(isPattern, refDestructuringErrors);
          if (!isPattern) {
            this.checkPropClash(prop, propHash, refDestructuringErrors);
          }
          node.properties.push(prop);
        }
        return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");
      };
      pp$52.parseProperty = function(isPattern, refDestructuringErrors) {
        var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
        if (this.options.ecmaVersion >= 9 && this.eat(types$12.ellipsis)) {
          if (isPattern) {
            prop.argument = this.parseIdent(false);
            if (this.type === types$12.comma) {
              this.raise(this.start, "Comma is not permitted after the rest element");
            }
            return this.finishNode(prop, "RestElement");
          }
          if (this.type === types$12.parenL && refDestructuringErrors) {
            if (refDestructuringErrors.parenthesizedAssign < 0) {
              refDestructuringErrors.parenthesizedAssign = this.start;
            }
            if (refDestructuringErrors.parenthesizedBind < 0) {
              refDestructuringErrors.parenthesizedBind = this.start;
            }
          }
          prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
          if (this.type === types$12.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
            refDestructuringErrors.trailingComma = this.start;
          }
          return this.finishNode(prop, "SpreadElement");
        }
        if (this.options.ecmaVersion >= 6) {
          prop.method = false;
          prop.shorthand = false;
          if (isPattern || refDestructuringErrors) {
            startPos = this.start;
            startLoc = this.startLoc;
          }
          if (!isPattern) {
            isGenerator = this.eat(types$12.star);
          }
        }
        var containsEsc = this.containsEsc;
        this.parsePropertyName(prop);
        if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
          isAsync = true;
          isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$12.star);
          this.parsePropertyName(prop, refDestructuringErrors);
        } else {
          isAsync = false;
        }
        this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
        return this.finishNode(prop, "Property");
      };
      pp$52.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
        if ((isGenerator || isAsync) && this.type === types$12.colon) {
          this.unexpected();
        }
        if (this.eat(types$12.colon)) {
          prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
          prop.kind = "init";
        } else if (this.options.ecmaVersion >= 6 && this.type === types$12.parenL) {
          if (isPattern) {
            this.unexpected();
          }
          prop.kind = "init";
          prop.method = true;
          prop.value = this.parseMethod(isGenerator, isAsync);
        } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && (this.type !== types$12.comma && this.type !== types$12.braceR && this.type !== types$12.eq)) {
          if (isGenerator || isAsync) {
            this.unexpected();
          }
          prop.kind = prop.key.name;
          this.parsePropertyName(prop);
          prop.value = this.parseMethod(false);
          var paramCount = prop.kind === "get" ? 0 : 1;
          if (prop.value.params.length !== paramCount) {
            var start3 = prop.value.start;
            if (prop.kind === "get") {
              this.raiseRecoverable(start3, "getter should have no params");
            } else {
              this.raiseRecoverable(start3, "setter should have exactly one param");
            }
          } else {
            if (prop.kind === "set" && prop.value.params[0].type === "RestElement") {
              this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params");
            }
          }
        } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
          if (isGenerator || isAsync) {
            this.unexpected();
          }
          this.checkUnreserved(prop.key);
          if (prop.key.name === "await" && !this.awaitIdentPos) {
            this.awaitIdentPos = startPos;
          }
          prop.kind = "init";
          if (isPattern) {
            prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
          } else if (this.type === types$12.eq && refDestructuringErrors) {
            if (refDestructuringErrors.shorthandAssign < 0) {
              refDestructuringErrors.shorthandAssign = this.start;
            }
            prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
          } else {
            prop.value = this.copyNode(prop.key);
          }
          prop.shorthand = true;
        } else {
          this.unexpected();
        }
      };
      pp$52.parsePropertyName = function(prop) {
        if (this.options.ecmaVersion >= 6) {
          if (this.eat(types$12.bracketL)) {
            prop.computed = true;
            prop.key = this.parseMaybeAssign();
            this.expect(types$12.bracketR);
            return prop.key;
          } else {
            prop.computed = false;
          }
        }
        return prop.key = this.type === types$12.num || this.type === types$12.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
      };
      pp$52.initFunction = function(node) {
        node.id = null;
        if (this.options.ecmaVersion >= 6) {
          node.generator = node.expression = false;
        }
        if (this.options.ecmaVersion >= 8) {
          node.async = false;
        }
      };
      pp$52.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {
        var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
        this.initFunction(node);
        if (this.options.ecmaVersion >= 6) {
          node.generator = isGenerator;
        }
        if (this.options.ecmaVersion >= 8) {
          node.async = !!isAsync;
        }
        this.yieldPos = 0;
        this.awaitPos = 0;
        this.awaitIdentPos = 0;
        this.enterScope(functionFlags2(isAsync, node.generator) | SCOPE_SUPER2 | (allowDirectSuper ? SCOPE_DIRECT_SUPER2 : 0));
        this.expect(types$12.parenL);
        node.params = this.parseBindingList(types$12.parenR, false, this.options.ecmaVersion >= 8);
        this.checkYieldAwaitInDefaultParams();
        this.parseFunctionBody(node, false, true, false);
        this.yieldPos = oldYieldPos;
        this.awaitPos = oldAwaitPos;
        this.awaitIdentPos = oldAwaitIdentPos;
        return this.finishNode(node, "FunctionExpression");
      };
      pp$52.parseArrowExpression = function(node, params, isAsync, forInit) {
        var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
        this.enterScope(functionFlags2(isAsync, false) | SCOPE_ARROW2);
        this.initFunction(node);
        if (this.options.ecmaVersion >= 8) {
          node.async = !!isAsync;
        }
        this.yieldPos = 0;
        this.awaitPos = 0;
        this.awaitIdentPos = 0;
        node.params = this.toAssignableList(params, true);
        this.parseFunctionBody(node, true, false, forInit);
        this.yieldPos = oldYieldPos;
        this.awaitPos = oldAwaitPos;
        this.awaitIdentPos = oldAwaitIdentPos;
        return this.finishNode(node, "ArrowFunctionExpression");
      };
      pp$52.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {
        var isExpression = isArrowFunction && this.type !== types$12.braceL;
        var oldStrict = this.strict, useStrict = false;
        if (isExpression) {
          node.body = this.parseMaybeAssign(forInit);
          node.expression = true;
          this.checkParams(node, false);
        } else {
          var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
          if (!oldStrict || nonSimple) {
            useStrict = this.strictDirective(this.end);
            if (useStrict && nonSimple) {
              this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list");
            }
          }
          var oldLabels = this.labels;
          this.labels = [];
          if (useStrict) {
            this.strict = true;
          }
          this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));
          if (this.strict && node.id) {
            this.checkLValSimple(node.id, BIND_OUTSIDE2);
          }
          node.body = this.parseBlock(false, void 0, useStrict && !oldStrict);
          node.expression = false;
          this.adaptDirectivePrologue(node.body.body);
          this.labels = oldLabels;
        }
        this.exitScope();
      };
      pp$52.isSimpleParamList = function(params) {
        for (var i4 = 0, list4 = params; i4 < list4.length; i4 += 1) {
          var param = list4[i4];
          if (param.type !== "Identifier") {
            return false;
          }
        }
        return true;
      };
      pp$52.checkParams = function(node, allowDuplicates) {
        var nameHash = /* @__PURE__ */ Object.create(null);
        for (var i4 = 0, list4 = node.params; i4 < list4.length; i4 += 1) {
          var param = list4[i4];
          this.checkLValInnerPattern(param, BIND_VAR2, allowDuplicates ? null : nameHash);
        }
      };
      pp$52.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
        var elts = [], first = true;
        while (!this.eat(close)) {
          if (!first) {
            this.expect(types$12.comma);
            if (allowTrailingComma && this.afterTrailingComma(close)) {
              break;
            }
          } else {
            first = false;
          }
          var elt = void 0;
          if (allowEmpty && this.type === types$12.comma) {
            elt = null;
          } else if (this.type === types$12.ellipsis) {
            elt = this.parseSpread(refDestructuringErrors);
            if (refDestructuringErrors && this.type === types$12.comma && refDestructuringErrors.trailingComma < 0) {
              refDestructuringErrors.trailingComma = this.start;
            }
          } else {
            elt = this.parseMaybeAssign(false, refDestructuringErrors);
          }
          elts.push(elt);
        }
        return elts;
      };
      pp$52.checkUnreserved = function(ref3) {
        var start3 = ref3.start;
        var end = ref3.end;
        var name = ref3.name;
        if (this.inGenerator && name === "yield") {
          this.raiseRecoverable(start3, "Cannot use 'yield' as identifier inside a generator");
        }
        if (this.inAsync && name === "await") {
          this.raiseRecoverable(start3, "Cannot use 'await' as identifier inside an async function");
        }
        if (this.currentThisScope().inClassFieldInit && name === "arguments") {
          this.raiseRecoverable(start3, "Cannot use 'arguments' in class field initializer");
        }
        if (this.inClassStaticBlock && (name === "arguments" || name === "await")) {
          this.raise(start3, "Cannot use " + name + " in class static initialization block");
        }
        if (this.keywords.test(name)) {
          this.raise(start3, "Unexpected keyword '" + name + "'");
        }
        if (this.options.ecmaVersion < 6 && this.input.slice(start3, end).indexOf("\\") !== -1) {
          return;
        }
        var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
        if (re.test(name)) {
          if (!this.inAsync && name === "await") {
            this.raiseRecoverable(start3, "Cannot use keyword 'await' outside an async function");
          }
          this.raiseRecoverable(start3, "The keyword '" + name + "' is reserved");
        }
      };
      pp$52.parseIdent = function(liberal, isBinding) {
        var node = this.startNode();
        if (this.type === types$12.name) {
          node.name = this.value;
        } else if (this.type.keyword) {
          node.name = this.type.keyword;
          if ((node.name === "class" || node.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
            this.context.pop();
          }
        } else {
          this.unexpected();
        }
        this.next(!!liberal);
        this.finishNode(node, "Identifier");
        if (!liberal) {
          this.checkUnreserved(node);
          if (node.name === "await" && !this.awaitIdentPos) {
            this.awaitIdentPos = node.start;
          }
        }
        return node;
      };
      pp$52.parsePrivateIdent = function() {
        var node = this.startNode();
        if (this.type === types$12.privateId) {
          node.name = this.value;
        } else {
          this.unexpected();
        }
        this.next();
        this.finishNode(node, "PrivateIdentifier");
        if (this.privateNameStack.length === 0) {
          this.raise(node.start, "Private field '#" + node.name + "' must be declared in an enclosing class");
        } else {
          this.privateNameStack[this.privateNameStack.length - 1].used.push(node);
        }
        return node;
      };
      pp$52.parseYield = function(forInit) {
        if (!this.yieldPos) {
          this.yieldPos = this.start;
        }
        var node = this.startNode();
        this.next();
        if (this.type === types$12.semi || this.canInsertSemicolon() || this.type !== types$12.star && !this.type.startsExpr) {
          node.delegate = false;
          node.argument = null;
        } else {
          node.delegate = this.eat(types$12.star);
          node.argument = this.parseMaybeAssign(forInit);
        }
        return this.finishNode(node, "YieldExpression");
      };
      pp$52.parseAwait = function(forInit) {
        if (!this.awaitPos) {
          this.awaitPos = this.start;
        }
        var node = this.startNode();
        this.next();
        node.argument = this.parseMaybeUnary(null, true, false, forInit);
        return this.finishNode(node, "AwaitExpression");
      };
      var pp$42 = Parser4.prototype;
      pp$42.raise = function(pos, message) {
        var loc = getLineInfo2(this.input, pos);
        message += " (" + loc.line + ":" + loc.column + ")";
        var err = new SyntaxError(message);
        err.pos = pos;
        err.loc = loc;
        err.raisedAt = this.pos;
        throw err;
      };
      pp$42.raiseRecoverable = pp$42.raise;
      pp$42.curPosition = function() {
        if (this.options.locations) {
          return new Position3(this.curLine, this.pos - this.lineStart);
        }
      };
      var pp$32 = Parser4.prototype;
      var Scope3 = function Scope4(flags2) {
        this.flags = flags2;
        this.var = [];
        this.lexical = [];
        this.functions = [];
        this.inClassFieldInit = false;
      };
      pp$32.enterScope = function(flags2) {
        this.scopeStack.push(new Scope3(flags2));
      };
      pp$32.exitScope = function() {
        this.scopeStack.pop();
      };
      pp$32.treatFunctionsAsVarInScope = function(scope) {
        return scope.flags & SCOPE_FUNCTION2 || !this.inModule && scope.flags & SCOPE_TOP2;
      };
      pp$32.declareName = function(name, bindingType, pos) {
        var redeclared = false;
        if (bindingType === BIND_LEXICAL2) {
          var scope = this.currentScope();
          redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
          scope.lexical.push(name);
          if (this.inModule && scope.flags & SCOPE_TOP2) {
            delete this.undefinedExports[name];
          }
        } else if (bindingType === BIND_SIMPLE_CATCH2) {
          var scope$1 = this.currentScope();
          scope$1.lexical.push(name);
        } else if (bindingType === BIND_FUNCTION2) {
          var scope$2 = this.currentScope();
          if (this.treatFunctionsAsVar) {
            redeclared = scope$2.lexical.indexOf(name) > -1;
          } else {
            redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;
          }
          scope$2.functions.push(name);
        } else {
          for (var i4 = this.scopeStack.length - 1; i4 >= 0; --i4) {
            var scope$3 = this.scopeStack[i4];
            if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH2 && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {
              redeclared = true;
              break;
            }
            scope$3.var.push(name);
            if (this.inModule && scope$3.flags & SCOPE_TOP2) {
              delete this.undefinedExports[name];
            }
            if (scope$3.flags & SCOPE_VAR2) {
              break;
            }
          }
        }
        if (redeclared) {
          this.raiseRecoverable(pos, "Identifier '" + name + "' has already been declared");
        }
      };
      pp$32.checkLocalExport = function(id) {
        if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1) {
          this.undefinedExports[id.name] = id;
        }
      };
      pp$32.currentScope = function() {
        return this.scopeStack[this.scopeStack.length - 1];
      };
      pp$32.currentVarScope = function() {
        for (var i4 = this.scopeStack.length - 1; ; i4--) {
          var scope = this.scopeStack[i4];
          if (scope.flags & SCOPE_VAR2) {
            return scope;
          }
        }
      };
      pp$32.currentThisScope = function() {
        for (var i4 = this.scopeStack.length - 1; ; i4--) {
          var scope = this.scopeStack[i4];
          if (scope.flags & SCOPE_VAR2 && !(scope.flags & SCOPE_ARROW2)) {
            return scope;
          }
        }
      };
      var Node4 = function Node5(parser, pos, loc) {
        this.type = "";
        this.start = pos;
        this.end = 0;
        if (parser.options.locations) {
          this.loc = new SourceLocation3(parser, loc);
        }
        if (parser.options.directSourceFile) {
          this.sourceFile = parser.options.directSourceFile;
        }
        if (parser.options.ranges) {
          this.range = [pos, 0];
        }
      };
      var pp$22 = Parser4.prototype;
      pp$22.startNode = function() {
        return new Node4(this, this.start, this.startLoc);
      };
      pp$22.startNodeAt = function(pos, loc) {
        return new Node4(this, pos, loc);
      };
      function finishNodeAt2(node, type, pos, loc) {
        node.type = type;
        node.end = pos;
        if (this.options.locations) {
          node.loc.end = loc;
        }
        if (this.options.ranges) {
          node.range[1] = pos;
        }
        return node;
      }
      pp$22.finishNode = function(node, type) {
        return finishNodeAt2.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);
      };
      pp$22.finishNodeAt = function(node, type, pos, loc) {
        return finishNodeAt2.call(this, node, type, pos, loc);
      };
      pp$22.copyNode = function(node) {
        var newNode = new Node4(this, node.start, this.startLoc);
        for (var prop in node) {
          newNode[prop] = node[prop];
        }
        return newNode;
      };
      var ecma9BinaryProperties2 = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";
      var ecma10BinaryProperties2 = ecma9BinaryProperties2 + " Extended_Pictographic";
      var ecma11BinaryProperties2 = ecma10BinaryProperties2;
      var ecma12BinaryProperties2 = ecma11BinaryProperties2 + " EBase EComp EMod EPres ExtPict";
      var ecma13BinaryProperties2 = ecma12BinaryProperties2;
      var unicodeBinaryProperties2 = {
        9: ecma9BinaryProperties2,
        10: ecma10BinaryProperties2,
        11: ecma11BinaryProperties2,
        12: ecma12BinaryProperties2,
        13: ecma13BinaryProperties2
      };
      var unicodeGeneralCategoryValues2 = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";
      var ecma9ScriptValues2 = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";
      var ecma10ScriptValues2 = ecma9ScriptValues2 + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";
      var ecma11ScriptValues2 = ecma10ScriptValues2 + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";
      var ecma12ScriptValues2 = ecma11ScriptValues2 + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi";
      var ecma13ScriptValues2 = ecma12ScriptValues2 + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith";
      var unicodeScriptValues2 = {
        9: ecma9ScriptValues2,
        10: ecma10ScriptValues2,
        11: ecma11ScriptValues2,
        12: ecma12ScriptValues2,
        13: ecma13ScriptValues2
      };
      var data3 = {};
      function buildUnicodeData2(ecmaVersion2) {
        var d2 = data3[ecmaVersion2] = {
          binary: wordsRegexp2(unicodeBinaryProperties2[ecmaVersion2] + " " + unicodeGeneralCategoryValues2),
          nonBinary: {
            General_Category: wordsRegexp2(unicodeGeneralCategoryValues2),
            Script: wordsRegexp2(unicodeScriptValues2[ecmaVersion2])
          }
        };
        d2.nonBinary.Script_Extensions = d2.nonBinary.Script;
        d2.nonBinary.gc = d2.nonBinary.General_Category;
        d2.nonBinary.sc = d2.nonBinary.Script;
        d2.nonBinary.scx = d2.nonBinary.Script_Extensions;
      }
      for (var i3 = 0, list3 = [9, 10, 11, 12, 13]; i3 < list3.length; i3 += 1) {
        var ecmaVersion = list3[i3];
        buildUnicodeData2(ecmaVersion);
      }
      var pp$12 = Parser4.prototype;
      var RegExpValidationState3 = function RegExpValidationState4(parser) {
        this.parser = parser;
        this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "") + (parser.options.ecmaVersion >= 13 ? "d" : "");
        this.unicodeProperties = data3[parser.options.ecmaVersion >= 13 ? 13 : parser.options.ecmaVersion];
        this.source = "";
        this.flags = "";
        this.start = 0;
        this.switchU = false;
        this.switchN = false;
        this.pos = 0;
        this.lastIntValue = 0;
        this.lastStringValue = "";
        this.lastAssertionIsQuantifiable = false;
        this.numCapturingParens = 0;
        this.maxBackReference = 0;
        this.groupNames = [];
        this.backReferenceNames = [];
      };
      RegExpValidationState3.prototype.reset = function reset3(start3, pattern, flags2) {
        var unicode = flags2.indexOf("u") !== -1;
        this.start = start3 | 0;
        this.source = pattern + "";
        this.flags = flags2;
        this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
        this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
      };
      RegExpValidationState3.prototype.raise = function raise2(message) {
        this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + message);
      };
      RegExpValidationState3.prototype.at = function at3(i4, forceU) {
        if (forceU === void 0)
          forceU = false;
        var s4 = this.source;
        var l2 = s4.length;
        if (i4 >= l2) {
          return -1;
        }
        var c2 = s4.charCodeAt(i4);
        if (!(forceU || this.switchU) || c2 <= 55295 || c2 >= 57344 || i4 + 1 >= l2) {
          return c2;
        }
        var next = s4.charCodeAt(i4 + 1);
        return next >= 56320 && next <= 57343 ? (c2 << 10) + next - 56613888 : c2;
      };
      RegExpValidationState3.prototype.nextIndex = function nextIndex2(i4, forceU) {
        if (forceU === void 0)
          forceU = false;
        var s4 = this.source;
        var l2 = s4.length;
        if (i4 >= l2) {
          return l2;
        }
        var c2 = s4.charCodeAt(i4), next;
        if (!(forceU || this.switchU) || c2 <= 55295 || c2 >= 57344 || i4 + 1 >= l2 || (next = s4.charCodeAt(i4 + 1)) < 56320 || next > 57343) {
          return i4 + 1;
        }
        return i4 + 2;
      };
      RegExpValidationState3.prototype.current = function current2(forceU) {
        if (forceU === void 0)
          forceU = false;
        return this.at(this.pos, forceU);
      };
      RegExpValidationState3.prototype.lookahead = function lookahead2(forceU) {
        if (forceU === void 0)
          forceU = false;
        return this.at(this.nextIndex(this.pos, forceU), forceU);
      };
      RegExpValidationState3.prototype.advance = function advance2(forceU) {
        if (forceU === void 0)
          forceU = false;
        this.pos = this.nextIndex(this.pos, forceU);
      };
      RegExpValidationState3.prototype.eat = function eat2(ch, forceU) {
        if (forceU === void 0)
          forceU = false;
        if (this.current(forceU) === ch) {
          this.advance(forceU);
          return true;
        }
        return false;
      };
      pp$12.validateRegExpFlags = function(state) {
        var validFlags = state.validFlags;
        var flags2 = state.flags;
        for (var i4 = 0; i4 < flags2.length; i4++) {
          var flag = flags2.charAt(i4);
          if (validFlags.indexOf(flag) === -1) {
            this.raise(state.start, "Invalid regular expression flag");
          }
          if (flags2.indexOf(flag, i4 + 1) > -1) {
            this.raise(state.start, "Duplicate regular expression flag");
          }
        }
      };
      pp$12.validateRegExpPattern = function(state) {
        this.regexp_pattern(state);
        if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {
          state.switchN = true;
          this.regexp_pattern(state);
        }
      };
      pp$12.regexp_pattern = function(state) {
        state.pos = 0;
        state.lastIntValue = 0;
        state.lastStringValue = "";
        state.lastAssertionIsQuantifiable = false;
        state.numCapturingParens = 0;
        state.maxBackReference = 0;
        state.groupNames.length = 0;
        state.backReferenceNames.length = 0;
        this.regexp_disjunction(state);
        if (state.pos !== state.source.length) {
          if (state.eat(41)) {
            state.raise("Unmatched ')'");
          }
          if (state.eat(93) || state.eat(125)) {
            state.raise("Lone quantifier brackets");
          }
        }
        if (state.maxBackReference > state.numCapturingParens) {
          state.raise("Invalid escape");
        }
        for (var i4 = 0, list4 = state.backReferenceNames; i4 < list4.length; i4 += 1) {
          var name = list4[i4];
          if (state.groupNames.indexOf(name) === -1) {
            state.raise("Invalid named capture referenced");
          }
        }
      };
      pp$12.regexp_disjunction = function(state) {
        this.regexp_alternative(state);
        while (state.eat(124)) {
          this.regexp_alternative(state);
        }
        if (this.regexp_eatQuantifier(state, true)) {
          state.raise("Nothing to repeat");
        }
        if (state.eat(123)) {
          state.raise("Lone quantifier brackets");
        }
      };
      pp$12.regexp_alternative = function(state) {
        while (state.pos < state.source.length && this.regexp_eatTerm(state)) {
        }
      };
      pp$12.regexp_eatTerm = function(state) {
        if (this.regexp_eatAssertion(state)) {
          if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
            if (state.switchU) {
              state.raise("Invalid quantifier");
            }
          }
          return true;
        }
        if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
          this.regexp_eatQuantifier(state);
          return true;
        }
        return false;
      };
      pp$12.regexp_eatAssertion = function(state) {
        var start3 = state.pos;
        state.lastAssertionIsQuantifiable = false;
        if (state.eat(94) || state.eat(36)) {
          return true;
        }
        if (state.eat(92)) {
          if (state.eat(66) || state.eat(98)) {
            return true;
          }
          state.pos = start3;
        }
        if (state.eat(40) && state.eat(63)) {
          var lookbehind = false;
          if (this.options.ecmaVersion >= 9) {
            lookbehind = state.eat(60);
          }
          if (state.eat(61) || state.eat(33)) {
            this.regexp_disjunction(state);
            if (!state.eat(41)) {
              state.raise("Unterminated group");
            }
            state.lastAssertionIsQuantifiable = !lookbehind;
            return true;
          }
        }
        state.pos = start3;
        return false;
      };
      pp$12.regexp_eatQuantifier = function(state, noError) {
        if (noError === void 0)
          noError = false;
        if (this.regexp_eatQuantifierPrefix(state, noError)) {
          state.eat(63);
          return true;
        }
        return false;
      };
      pp$12.regexp_eatQuantifierPrefix = function(state, noError) {
        return state.eat(42) || state.eat(43) || state.eat(63) || this.regexp_eatBracedQuantifier(state, noError);
      };
      pp$12.regexp_eatBracedQuantifier = function(state, noError) {
        var start3 = state.pos;
        if (state.eat(123)) {
          var min = 0, max = -1;
          if (this.regexp_eatDecimalDigits(state)) {
            min = state.lastIntValue;
            if (state.eat(44) && this.regexp_eatDecimalDigits(state)) {
              max = state.lastIntValue;
            }
            if (state.eat(125)) {
              if (max !== -1 && max < min && !noError) {
                state.raise("numbers out of order in {} quantifier");
              }
              return true;
            }
          }
          if (state.switchU && !noError) {
            state.raise("Incomplete quantifier");
          }
          state.pos = start3;
        }
        return false;
      };
      pp$12.regexp_eatAtom = function(state) {
        return this.regexp_eatPatternCharacters(state) || state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);
      };
      pp$12.regexp_eatReverseSolidusAtomEscape = function(state) {
        var start3 = state.pos;
        if (state.eat(92)) {
          if (this.regexp_eatAtomEscape(state)) {
            return true;
          }
          state.pos = start3;
        }
        return false;
      };
      pp$12.regexp_eatUncapturingGroup = function(state) {
        var start3 = state.pos;
        if (state.eat(40)) {
          if (state.eat(63) && state.eat(58)) {
            this.regexp_disjunction(state);
            if (state.eat(41)) {
              return true;
            }
            state.raise("Unterminated group");
          }
          state.pos = start3;
        }
        return false;
      };
      pp$12.regexp_eatCapturingGroup = function(state) {
        if (state.eat(40)) {
          if (this.options.ecmaVersion >= 9) {
            this.regexp_groupSpecifier(state);
          } else if (state.current() === 63) {
            state.raise("Invalid group");
          }
          this.regexp_disjunction(state);
          if (state.eat(41)) {
            state.numCapturingParens += 1;
            return true;
          }
          state.raise("Unterminated group");
        }
        return false;
      };
      pp$12.regexp_eatExtendedAtom = function(state) {
        return state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);
      };
      pp$12.regexp_eatInvalidBracedQuantifier = function(state) {
        if (this.regexp_eatBracedQuantifier(state, true)) {
          state.raise("Nothing to repeat");
        }
        return false;
      };
      pp$12.regexp_eatSyntaxCharacter = function(state) {
        var ch = state.current();
        if (isSyntaxCharacter2(ch)) {
          state.lastIntValue = ch;
          state.advance();
          return true;
        }
        return false;
      };
      function isSyntaxCharacter2(ch) {
        return ch === 36 || ch >= 40 && ch <= 43 || ch === 46 || ch === 63 || ch >= 91 && ch <= 94 || ch >= 123 && ch <= 125;
      }
      pp$12.regexp_eatPatternCharacters = function(state) {
        var start3 = state.pos;
        var ch = 0;
        while ((ch = state.current()) !== -1 && !isSyntaxCharacter2(ch)) {
          state.advance();
        }
        return state.pos !== start3;
      };
      pp$12.regexp_eatExtendedPatternCharacter = function(state) {
        var ch = state.current();
        if (ch !== -1 && ch !== 36 && !(ch >= 40 && ch <= 43) && ch !== 46 && ch !== 63 && ch !== 91 && ch !== 94 && ch !== 124) {
          state.advance();
          return true;
        }
        return false;
      };
      pp$12.regexp_groupSpecifier = function(state) {
        if (state.eat(63)) {
          if (this.regexp_eatGroupName(state)) {
            if (state.groupNames.indexOf(state.lastStringValue) !== -1) {
              state.raise("Duplicate capture group name");
            }
            state.groupNames.push(state.lastStringValue);
            return;
          }
          state.raise("Invalid group");
        }
      };
      pp$12.regexp_eatGroupName = function(state) {
        state.lastStringValue = "";
        if (state.eat(60)) {
          if (this.regexp_eatRegExpIdentifierName(state) && state.eat(62)) {
            return true;
          }
          state.raise("Invalid capture group name");
        }
        return false;
      };
      pp$12.regexp_eatRegExpIdentifierName = function(state) {
        state.lastStringValue = "";
        if (this.regexp_eatRegExpIdentifierStart(state)) {
          state.lastStringValue += codePointToString2(state.lastIntValue);
          while (this.regexp_eatRegExpIdentifierPart(state)) {
            state.lastStringValue += codePointToString2(state.lastIntValue);
          }
          return true;
        }
        return false;
      };
      pp$12.regexp_eatRegExpIdentifierStart = function(state) {
        var start3 = state.pos;
        var forceU = this.options.ecmaVersion >= 11;
        var ch = state.current(forceU);
        state.advance(forceU);
        if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
          ch = state.lastIntValue;
        }
        if (isRegExpIdentifierStart2(ch)) {
          state.lastIntValue = ch;
          return true;
        }
        state.pos = start3;
        return false;
      };
      function isRegExpIdentifierStart2(ch) {
        return isIdentifierStart2(ch, true) || ch === 36 || ch === 95;
      }
      pp$12.regexp_eatRegExpIdentifierPart = function(state) {
        var start3 = state.pos;
        var forceU = this.options.ecmaVersion >= 11;
        var ch = state.current(forceU);
        state.advance(forceU);
        if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
          ch = state.lastIntValue;
        }
        if (isRegExpIdentifierPart2(ch)) {
          state.lastIntValue = ch;
          return true;
        }
        state.pos = start3;
        return false;
      };
      function isRegExpIdentifierPart2(ch) {
        return isIdentifierChar2(ch, true) || ch === 36 || ch === 95 || ch === 8204 || ch === 8205;
      }
      pp$12.regexp_eatAtomEscape = function(state) {
        if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {
          return true;
        }
        if (state.switchU) {
          if (state.current() === 99) {
            state.raise("Invalid unicode escape");
          }
          state.raise("Invalid escape");
        }
        return false;
      };
      pp$12.regexp_eatBackReference = function(state) {
        var start3 = state.pos;
        if (this.regexp_eatDecimalEscape(state)) {
          var n2 = state.lastIntValue;
          if (state.switchU) {
            if (n2 > state.maxBackReference) {
              state.maxBackReference = n2;
            }
            return true;
          }
          if (n2 <= state.numCapturingParens) {
            return true;
          }
          state.pos = start3;
        }
        return false;
      };
      pp$12.regexp_eatKGroupName = function(state) {
        if (state.eat(107)) {
          if (this.regexp_eatGroupName(state)) {
            state.backReferenceNames.push(state.lastStringValue);
            return true;
          }
          state.raise("Invalid named reference");
        }
        return false;
      };
      pp$12.regexp_eatCharacterEscape = function(state) {
        return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state, false) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);
      };
      pp$12.regexp_eatCControlLetter = function(state) {
        var start3 = state.pos;
        if (state.eat(99)) {
          if (this.regexp_eatControlLetter(state)) {
            return true;
          }
          state.pos = start3;
        }
        return false;
      };
      pp$12.regexp_eatZero = function(state) {
        if (state.current() === 48 && !isDecimalDigit2(state.lookahead())) {
          state.lastIntValue = 0;
          state.advance();
          return true;
        }
        return false;
      };
      pp$12.regexp_eatControlEscape = function(state) {
        var ch = state.current();
        if (ch === 116) {
          state.lastIntValue = 9;
          state.advance();
          return true;
        }
        if (ch === 110) {
          state.lastIntValue = 10;
          state.advance();
          return true;
        }
        if (ch === 118) {
          state.lastIntValue = 11;
          state.advance();
          return true;
        }
        if (ch === 102) {
          state.lastIntValue = 12;
          state.advance();
          return true;
        }
        if (ch === 114) {
          state.lastIntValue = 13;
          state.advance();
          return true;
        }
        return false;
      };
      pp$12.regexp_eatControlLetter = function(state) {
        var ch = state.current();
        if (isControlLetter2(ch)) {
          state.lastIntValue = ch % 32;
          state.advance();
          return true;
        }
        return false;
      };
      function isControlLetter2(ch) {
        return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122;
      }
      pp$12.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {
        if (forceU === void 0)
          forceU = false;
        var start3 = state.pos;
        var switchU = forceU || state.switchU;
        if (state.eat(117)) {
          if (this.regexp_eatFixedHexDigits(state, 4)) {
            var lead = state.lastIntValue;
            if (switchU && lead >= 55296 && lead <= 56319) {
              var leadSurrogateEnd = state.pos;
              if (state.eat(92) && state.eat(117) && this.regexp_eatFixedHexDigits(state, 4)) {
                var trail = state.lastIntValue;
                if (trail >= 56320 && trail <= 57343) {
                  state.lastIntValue = (lead - 55296) * 1024 + (trail - 56320) + 65536;
                  return true;
                }
              }
              state.pos = leadSurrogateEnd;
              state.lastIntValue = lead;
            }
            return true;
          }
          if (switchU && state.eat(123) && this.regexp_eatHexDigits(state) && state.eat(125) && isValidUnicode2(state.lastIntValue)) {
            return true;
          }
          if (switchU) {
            state.raise("Invalid unicode escape");
          }
          state.pos = start3;
        }
        return false;
      };
      function isValidUnicode2(ch) {
        return ch >= 0 && ch <= 1114111;
      }
      pp$12.regexp_eatIdentityEscape = function(state) {
        if (state.switchU) {
          if (this.regexp_eatSyntaxCharacter(state)) {
            return true;
          }
          if (state.eat(47)) {
            state.lastIntValue = 47;
            return true;
          }
          return false;
        }
        var ch = state.current();
        if (ch !== 99 && (!state.switchN || ch !== 107)) {
          state.lastIntValue = ch;
          state.advance();
          return true;
        }
        return false;
      };
      pp$12.regexp_eatDecimalEscape = function(state) {
        state.lastIntValue = 0;
        var ch = state.current();
        if (ch >= 49 && ch <= 57) {
          do {
            state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
            state.advance();
          } while ((ch = state.current()) >= 48 && ch <= 57);
          return true;
        }
        return false;
      };
      pp$12.regexp_eatCharacterClassEscape = function(state) {
        var ch = state.current();
        if (isCharacterClassEscape2(ch)) {
          state.lastIntValue = -1;
          state.advance();
          return true;
        }
        if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 80 || ch === 112)) {
          state.lastIntValue = -1;
          state.advance();
          if (state.eat(123) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(125)) {
            return true;
          }
          state.raise("Invalid property name");
        }
        return false;
      };
      function isCharacterClassEscape2(ch) {
        return ch === 100 || ch === 68 || ch === 115 || ch === 83 || ch === 119 || ch === 87;
      }
      pp$12.regexp_eatUnicodePropertyValueExpression = function(state) {
        var start3 = state.pos;
        if (this.regexp_eatUnicodePropertyName(state) && state.eat(61)) {
          var name = state.lastStringValue;
          if (this.regexp_eatUnicodePropertyValue(state)) {
            var value = state.lastStringValue;
            this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
            return true;
          }
        }
        state.pos = start3;
        if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
          var nameOrValue = state.lastStringValue;
          this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);
          return true;
        }
        return false;
      };
      pp$12.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
        if (!hasOwn4(state.unicodeProperties.nonBinary, name)) {
          state.raise("Invalid property name");
        }
        if (!state.unicodeProperties.nonBinary[name].test(value)) {
          state.raise("Invalid property value");
        }
      };
      pp$12.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
        if (!state.unicodeProperties.binary.test(nameOrValue)) {
          state.raise("Invalid property name");
        }
      };
      pp$12.regexp_eatUnicodePropertyName = function(state) {
        var ch = 0;
        state.lastStringValue = "";
        while (isUnicodePropertyNameCharacter2(ch = state.current())) {
          state.lastStringValue += codePointToString2(ch);
          state.advance();
        }
        return state.lastStringValue !== "";
      };
      function isUnicodePropertyNameCharacter2(ch) {
        return isControlLetter2(ch) || ch === 95;
      }
      pp$12.regexp_eatUnicodePropertyValue = function(state) {
        var ch = 0;
        state.lastStringValue = "";
        while (isUnicodePropertyValueCharacter2(ch = state.current())) {
          state.lastStringValue += codePointToString2(ch);
          state.advance();
        }
        return state.lastStringValue !== "";
      };
      function isUnicodePropertyValueCharacter2(ch) {
        return isUnicodePropertyNameCharacter2(ch) || isDecimalDigit2(ch);
      }
      pp$12.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
        return this.regexp_eatUnicodePropertyValue(state);
      };
      pp$12.regexp_eatCharacterClass = function(state) {
        if (state.eat(91)) {
          state.eat(94);
          this.regexp_classRanges(state);
          if (state.eat(93)) {
            return true;
          }
          state.raise("Unterminated character class");
        }
        return false;
      };
      pp$12.regexp_classRanges = function(state) {
        while (this.regexp_eatClassAtom(state)) {
          var left = state.lastIntValue;
          if (state.eat(45) && this.regexp_eatClassAtom(state)) {
            var right = state.lastIntValue;
            if (state.switchU && (left === -1 || right === -1)) {
              state.raise("Invalid character class");
            }
            if (left !== -1 && right !== -1 && left > right) {
              state.raise("Range out of order in character class");
            }
          }
        }
      };
      pp$12.regexp_eatClassAtom = function(state) {
        var start3 = state.pos;
        if (state.eat(92)) {
          if (this.regexp_eatClassEscape(state)) {
            return true;
          }
          if (state.switchU) {
            var ch$1 = state.current();
            if (ch$1 === 99 || isOctalDigit2(ch$1)) {
              state.raise("Invalid class escape");
            }
            state.raise("Invalid escape");
          }
          state.pos = start3;
        }
        var ch = state.current();
        if (ch !== 93) {
          state.lastIntValue = ch;
          state.advance();
          return true;
        }
        return false;
      };
      pp$12.regexp_eatClassEscape = function(state) {
        var start3 = state.pos;
        if (state.eat(98)) {
          state.lastIntValue = 8;
          return true;
        }
        if (state.switchU && state.eat(45)) {
          state.lastIntValue = 45;
          return true;
        }
        if (!state.switchU && state.eat(99)) {
          if (this.regexp_eatClassControlLetter(state)) {
            return true;
          }
          state.pos = start3;
        }
        return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);
      };
      pp$12.regexp_eatClassControlLetter = function(state) {
        var ch = state.current();
        if (isDecimalDigit2(ch) || ch === 95) {
          state.lastIntValue = ch % 32;
          state.advance();
          return true;
        }
        return false;
      };
      pp$12.regexp_eatHexEscapeSequence = function(state) {
        var start3 = state.pos;
        if (state.eat(120)) {
          if (this.regexp_eatFixedHexDigits(state, 2)) {
            return true;
          }
          if (state.switchU) {
            state.raise("Invalid escape");
          }
          state.pos = start3;
        }
        return false;
      };
      pp$12.regexp_eatDecimalDigits = function(state) {
        var start3 = state.pos;
        var ch = 0;
        state.lastIntValue = 0;
        while (isDecimalDigit2(ch = state.current())) {
          state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
          state.advance();
        }
        return state.pos !== start3;
      };
      function isDecimalDigit2(ch) {
        return ch >= 48 && ch <= 57;
      }
      pp$12.regexp_eatHexDigits = function(state) {
        var start3 = state.pos;
        var ch = 0;
        state.lastIntValue = 0;
        while (isHexDigit2(ch = state.current())) {
          state.lastIntValue = 16 * state.lastIntValue + hexToInt2(ch);
          state.advance();
        }
        return state.pos !== start3;
      };
      function isHexDigit2(ch) {
        return ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102;
      }
      function hexToInt2(ch) {
        if (ch >= 65 && ch <= 70) {
          return 10 + (ch - 65);
        }
        if (ch >= 97 && ch <= 102) {
          return 10 + (ch - 97);
        }
        return ch - 48;
      }
      pp$12.regexp_eatLegacyOctalEscapeSequence = function(state) {
        if (this.regexp_eatOctalDigit(state)) {
          var n1 = state.lastIntValue;
          if (this.regexp_eatOctalDigit(state)) {
            var n2 = state.lastIntValue;
            if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
              state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
            } else {
              state.lastIntValue = n1 * 8 + n2;
            }
          } else {
            state.lastIntValue = n1;
          }
          return true;
        }
        return false;
      };
      pp$12.regexp_eatOctalDigit = function(state) {
        var ch = state.current();
        if (isOctalDigit2(ch)) {
          state.lastIntValue = ch - 48;
          state.advance();
          return true;
        }
        state.lastIntValue = 0;
        return false;
      };
      function isOctalDigit2(ch) {
        return ch >= 48 && ch <= 55;
      }
      pp$12.regexp_eatFixedHexDigits = function(state, length) {
        var start3 = state.pos;
        state.lastIntValue = 0;
        for (var i4 = 0; i4 < length; ++i4) {
          var ch = state.current();
          if (!isHexDigit2(ch)) {
            state.pos = start3;
            return false;
          }
          state.lastIntValue = 16 * state.lastIntValue + hexToInt2(ch);
          state.advance();
        }
        return true;
      };
      var Token3 = function Token4(p3) {
        this.type = p3.type;
        this.value = p3.value;
        this.start = p3.start;
        this.end = p3.end;
        if (p3.options.locations) {
          this.loc = new SourceLocation3(p3, p3.startLoc, p3.endLoc);
        }
        if (p3.options.ranges) {
          this.range = [p3.start, p3.end];
        }
      };
      var pp2 = Parser4.prototype;
      pp2.next = function(ignoreEscapeSequenceInKeyword) {
        if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc) {
          this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword);
        }
        if (this.options.onToken) {
          this.options.onToken(new Token3(this));
        }
        this.lastTokEnd = this.end;
        this.lastTokStart = this.start;
        this.lastTokEndLoc = this.endLoc;
        this.lastTokStartLoc = this.startLoc;
        this.nextToken();
      };
      pp2.getToken = function() {
        this.next();
        return new Token3(this);
      };
      if (typeof Symbol !== "undefined") {
        pp2[Symbol.iterator] = function() {
          var this$1$1 = this;
          return {
            next: function() {
              var token = this$1$1.getToken();
              return {
                done: token.type === types$12.eof,
                value: token
              };
            }
          };
        };
      }
      pp2.nextToken = function() {
        var curContext = this.curContext();
        if (!curContext || !curContext.preserveSpace) {
          this.skipSpace();
        }
        this.start = this.pos;
        if (this.options.locations) {
          this.startLoc = this.curPosition();
        }
        if (this.pos >= this.input.length) {
          return this.finishToken(types$12.eof);
        }
        if (curContext.override) {
          return curContext.override(this);
        } else {
          this.readToken(this.fullCharCodeAtPos());
        }
      };
      pp2.readToken = function(code2) {
        if (isIdentifierStart2(code2, this.options.ecmaVersion >= 6) || code2 === 92) {
          return this.readWord();
        }
        return this.getTokenFromCode(code2);
      };
      pp2.fullCharCodeAtPos = function() {
        var code2 = this.input.charCodeAt(this.pos);
        if (code2 <= 55295 || code2 >= 56320) {
          return code2;
        }
        var next = this.input.charCodeAt(this.pos + 1);
        return next <= 56319 || next >= 57344 ? code2 : (code2 << 10) + next - 56613888;
      };
      pp2.skipBlockComment = function() {
        var startLoc = this.options.onComment && this.curPosition();
        var start3 = this.pos, end = this.input.indexOf("*/", this.pos += 2);
        if (end === -1) {
          this.raise(this.pos - 2, "Unterminated comment");
        }
        this.pos = end + 2;
        if (this.options.locations) {
          for (var nextBreak = void 0, pos = start3; (nextBreak = nextLineBreak2(this.input, pos, this.pos)) > -1; ) {
            ++this.curLine;
            pos = this.lineStart = nextBreak;
          }
        }
        if (this.options.onComment) {
          this.options.onComment(true, this.input.slice(start3 + 2, end), start3, this.pos, startLoc, this.curPosition());
        }
      };
      pp2.skipLineComment = function(startSkip) {
        var start3 = this.pos;
        var startLoc = this.options.onComment && this.curPosition();
        var ch = this.input.charCodeAt(this.pos += startSkip);
        while (this.pos < this.input.length && !isNewLine2(ch)) {
          ch = this.input.charCodeAt(++this.pos);
        }
        if (this.options.onComment) {
          this.options.onComment(false, this.input.slice(start3 + startSkip, this.pos), start3, this.pos, startLoc, this.curPosition());
        }
      };
      pp2.skipSpace = function() {
        loop:
          while (this.pos < this.input.length) {
            var ch = this.input.charCodeAt(this.pos);
            switch (ch) {
              case 32:
              case 160:
                ++this.pos;
                break;
              case 13:
                if (this.input.charCodeAt(this.pos + 1) === 10) {
                  ++this.pos;
                }
              case 10:
              case 8232:
              case 8233:
                ++this.pos;
                if (this.options.locations) {
                  ++this.curLine;
                  this.lineStart = this.pos;
                }
                break;
              case 47:
                switch (this.input.charCodeAt(this.pos + 1)) {
                  case 42:
                    this.skipBlockComment();
                    break;
                  case 47:
                    this.skipLineComment(2);
                    break;
                  default:
                    break loop;
                }
                break;
              default:
                if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace2.test(String.fromCharCode(ch))) {
                  ++this.pos;
                } else {
                  break loop;
                }
            }
          }
      };
      pp2.finishToken = function(type, val) {
        this.end = this.pos;
        if (this.options.locations) {
          this.endLoc = this.curPosition();
        }
        var prevType = this.type;
        this.type = type;
        this.value = val;
        this.updateContext(prevType);
      };
      pp2.readToken_dot = function() {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next >= 48 && next <= 57) {
          return this.readNumber(true);
        }
        var next2 = this.input.charCodeAt(this.pos + 2);
        if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {
          this.pos += 3;
          return this.finishToken(types$12.ellipsis);
        } else {
          ++this.pos;
          return this.finishToken(types$12.dot);
        }
      };
      pp2.readToken_slash = function() {
        var next = this.input.charCodeAt(this.pos + 1);
        if (this.exprAllowed) {
          ++this.pos;
          return this.readRegexp();
        }
        if (next === 61) {
          return this.finishOp(types$12.assign, 2);
        }
        return this.finishOp(types$12.slash, 1);
      };
      pp2.readToken_mult_modulo_exp = function(code2) {
        var next = this.input.charCodeAt(this.pos + 1);
        var size = 1;
        var tokentype = code2 === 42 ? types$12.star : types$12.modulo;
        if (this.options.ecmaVersion >= 7 && code2 === 42 && next === 42) {
          ++size;
          tokentype = types$12.starstar;
          next = this.input.charCodeAt(this.pos + 2);
        }
        if (next === 61) {
          return this.finishOp(types$12.assign, size + 1);
        }
        return this.finishOp(tokentype, size);
      };
      pp2.readToken_pipe_amp = function(code2) {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next === code2) {
          if (this.options.ecmaVersion >= 12) {
            var next2 = this.input.charCodeAt(this.pos + 2);
            if (next2 === 61) {
              return this.finishOp(types$12.assign, 3);
            }
          }
          return this.finishOp(code2 === 124 ? types$12.logicalOR : types$12.logicalAND, 2);
        }
        if (next === 61) {
          return this.finishOp(types$12.assign, 2);
        }
        return this.finishOp(code2 === 124 ? types$12.bitwiseOR : types$12.bitwiseAND, 1);
      };
      pp2.readToken_caret = function() {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next === 61) {
          return this.finishOp(types$12.assign, 2);
        }
        return this.finishOp(types$12.bitwiseXOR, 1);
      };
      pp2.readToken_plus_min = function(code2) {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next === code2) {
          if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak2.test(this.input.slice(this.lastTokEnd, this.pos)))) {
            this.skipLineComment(3);
            this.skipSpace();
            return this.nextToken();
          }
          return this.finishOp(types$12.incDec, 2);
        }
        if (next === 61) {
          return this.finishOp(types$12.assign, 2);
        }
        return this.finishOp(types$12.plusMin, 1);
      };
      pp2.readToken_lt_gt = function(code2) {
        var next = this.input.charCodeAt(this.pos + 1);
        var size = 1;
        if (next === code2) {
          size = code2 === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
          if (this.input.charCodeAt(this.pos + size) === 61) {
            return this.finishOp(types$12.assign, size + 1);
          }
          return this.finishOp(types$12.bitShift, size);
        }
        if (next === 33 && code2 === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {
          this.skipLineComment(4);
          this.skipSpace();
          return this.nextToken();
        }
        if (next === 61) {
          size = 2;
        }
        return this.finishOp(types$12.relational, size);
      };
      pp2.readToken_eq_excl = function(code2) {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next === 61) {
          return this.finishOp(types$12.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);
        }
        if (code2 === 61 && next === 62 && this.options.ecmaVersion >= 6) {
          this.pos += 2;
          return this.finishToken(types$12.arrow);
        }
        return this.finishOp(code2 === 61 ? types$12.eq : types$12.prefix, 1);
      };
      pp2.readToken_question = function() {
        var ecmaVersion2 = this.options.ecmaVersion;
        if (ecmaVersion2 >= 11) {
          var next = this.input.charCodeAt(this.pos + 1);
          if (next === 46) {
            var next2 = this.input.charCodeAt(this.pos + 2);
            if (next2 < 48 || next2 > 57) {
              return this.finishOp(types$12.questionDot, 2);
            }
          }
          if (next === 63) {
            if (ecmaVersion2 >= 12) {
              var next2$1 = this.input.charCodeAt(this.pos + 2);
              if (next2$1 === 61) {
                return this.finishOp(types$12.assign, 3);
              }
            }
            return this.finishOp(types$12.coalesce, 2);
          }
        }
        return this.finishOp(types$12.question, 1);
      };
      pp2.readToken_numberSign = function() {
        var ecmaVersion2 = this.options.ecmaVersion;
        var code2 = 35;
        if (ecmaVersion2 >= 13) {
          ++this.pos;
          code2 = this.fullCharCodeAtPos();
          if (isIdentifierStart2(code2, true) || code2 === 92) {
            return this.finishToken(types$12.privateId, this.readWord1());
          }
        }
        this.raise(this.pos, "Unexpected character '" + codePointToString2(code2) + "'");
      };
      pp2.getTokenFromCode = function(code2) {
        switch (code2) {
          case 46:
            return this.readToken_dot();
          case 40:
            ++this.pos;
            return this.finishToken(types$12.parenL);
          case 41:
            ++this.pos;
            return this.finishToken(types$12.parenR);
          case 59:
            ++this.pos;
            return this.finishToken(types$12.semi);
          case 44:
            ++this.pos;
            return this.finishToken(types$12.comma);
          case 91:
            ++this.pos;
            return this.finishToken(types$12.bracketL);
          case 93:
            ++this.pos;
            return this.finishToken(types$12.bracketR);
          case 123:
            ++this.pos;
            return this.finishToken(types$12.braceL);
          case 125:
            ++this.pos;
            return this.finishToken(types$12.braceR);
          case 58:
            ++this.pos;
            return this.finishToken(types$12.colon);
          case 96:
            if (this.options.ecmaVersion < 6) {
              break;
            }
            ++this.pos;
            return this.finishToken(types$12.backQuote);
          case 48:
            var next = this.input.charCodeAt(this.pos + 1);
            if (next === 120 || next === 88) {
              return this.readRadixNumber(16);
            }
            if (this.options.ecmaVersion >= 6) {
              if (next === 111 || next === 79) {
                return this.readRadixNumber(8);
              }
              if (next === 98 || next === 66) {
                return this.readRadixNumber(2);
              }
            }
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            return this.readNumber(false);
          case 34:
          case 39:
            return this.readString(code2);
          case 47:
            return this.readToken_slash();
          case 37:
          case 42:
            return this.readToken_mult_modulo_exp(code2);
          case 124:
          case 38:
            return this.readToken_pipe_amp(code2);
          case 94:
            return this.readToken_caret();
          case 43:
          case 45:
            return this.readToken_plus_min(code2);
          case 60:
          case 62:
            return this.readToken_lt_gt(code2);
          case 61:
          case 33:
            return this.readToken_eq_excl(code2);
          case 63:
            return this.readToken_question();
          case 126:
            return this.finishOp(types$12.prefix, 1);
          case 35:
            return this.readToken_numberSign();
        }
        this.raise(this.pos, "Unexpected character '" + codePointToString2(code2) + "'");
      };
      pp2.finishOp = function(type, size) {
        var str = this.input.slice(this.pos, this.pos + size);
        this.pos += size;
        return this.finishToken(type, str);
      };
      pp2.readRegexp = function() {
        var escaped2, inClass, start3 = this.pos;
        for (; ; ) {
          if (this.pos >= this.input.length) {
            this.raise(start3, "Unterminated regular expression");
          }
          var ch = this.input.charAt(this.pos);
          if (lineBreak2.test(ch)) {
            this.raise(start3, "Unterminated regular expression");
          }
          if (!escaped2) {
            if (ch === "[") {
              inClass = true;
            } else if (ch === "]" && inClass) {
              inClass = false;
            } else if (ch === "/" && !inClass) {
              break;
            }
            escaped2 = ch === "\\";
          } else {
            escaped2 = false;
          }
          ++this.pos;
        }
        var pattern = this.input.slice(start3, this.pos);
        ++this.pos;
        var flagsStart = this.pos;
        var flags2 = this.readWord1();
        if (this.containsEsc) {
          this.unexpected(flagsStart);
        }
        var state = this.regexpState || (this.regexpState = new RegExpValidationState3(this));
        state.reset(start3, pattern, flags2);
        this.validateRegExpFlags(state);
        this.validateRegExpPattern(state);
        var value = null;
        try {
          value = new RegExp(pattern, flags2);
        } catch (e3) {
        }
        return this.finishToken(types$12.regexp, { pattern, flags: flags2, value });
      };
      pp2.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {
        var allowSeparators = this.options.ecmaVersion >= 12 && len === void 0;
        var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;
        var start3 = this.pos, total = 0, lastCode = 0;
        for (var i4 = 0, e3 = len == null ? Infinity : len; i4 < e3; ++i4, ++this.pos) {
          var code2 = this.input.charCodeAt(this.pos), val = void 0;
          if (allowSeparators && code2 === 95) {
            if (isLegacyOctalNumericLiteral) {
              this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals");
            }
            if (lastCode === 95) {
              this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore");
            }
            if (i4 === 0) {
              this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits");
            }
            lastCode = code2;
            continue;
          }
          if (code2 >= 97) {
            val = code2 - 97 + 10;
          } else if (code2 >= 65) {
            val = code2 - 65 + 10;
          } else if (code2 >= 48 && code2 <= 57) {
            val = code2 - 48;
          } else {
            val = Infinity;
          }
          if (val >= radix) {
            break;
          }
          lastCode = code2;
          total = total * radix + val;
        }
        if (allowSeparators && lastCode === 95) {
          this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits");
        }
        if (this.pos === start3 || len != null && this.pos - start3 !== len) {
          return null;
        }
        return total;
      };
      function stringToNumber2(str, isLegacyOctalNumericLiteral) {
        if (isLegacyOctalNumericLiteral) {
          return parseInt(str, 8);
        }
        return parseFloat(str.replace(/_/g, ""));
      }
      function stringToBigInt2(str) {
        if (typeof BigInt !== "function") {
          return null;
        }
        return BigInt(str.replace(/_/g, ""));
      }
      pp2.readRadixNumber = function(radix) {
        var start3 = this.pos;
        this.pos += 2;
        var val = this.readInt(radix);
        if (val == null) {
          this.raise(this.start + 2, "Expected number in radix " + radix);
        }
        if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {
          val = stringToBigInt2(this.input.slice(start3, this.pos));
          ++this.pos;
        } else if (isIdentifierStart2(this.fullCharCodeAtPos())) {
          this.raise(this.pos, "Identifier directly after number");
        }
        return this.finishToken(types$12.num, val);
      };
      pp2.readNumber = function(startsWithDot) {
        var start3 = this.pos;
        if (!startsWithDot && this.readInt(10, void 0, true) === null) {
          this.raise(start3, "Invalid number");
        }
        var octal = this.pos - start3 >= 2 && this.input.charCodeAt(start3) === 48;
        if (octal && this.strict) {
          this.raise(start3, "Invalid number");
        }
        var next = this.input.charCodeAt(this.pos);
        if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {
          var val$1 = stringToBigInt2(this.input.slice(start3, this.pos));
          ++this.pos;
          if (isIdentifierStart2(this.fullCharCodeAtPos())) {
            this.raise(this.pos, "Identifier directly after number");
          }
          return this.finishToken(types$12.num, val$1);
        }
        if (octal && /[89]/.test(this.input.slice(start3, this.pos))) {
          octal = false;
        }
        if (next === 46 && !octal) {
          ++this.pos;
          this.readInt(10);
          next = this.input.charCodeAt(this.pos);
        }
        if ((next === 69 || next === 101) && !octal) {
          next = this.input.charCodeAt(++this.pos);
          if (next === 43 || next === 45) {
            ++this.pos;
          }
          if (this.readInt(10) === null) {
            this.raise(start3, "Invalid number");
          }
        }
        if (isIdentifierStart2(this.fullCharCodeAtPos())) {
          this.raise(this.pos, "Identifier directly after number");
        }
        var val = stringToNumber2(this.input.slice(start3, this.pos), octal);
        return this.finishToken(types$12.num, val);
      };
      pp2.readCodePoint = function() {
        var ch = this.input.charCodeAt(this.pos), code2;
        if (ch === 123) {
          if (this.options.ecmaVersion < 6) {
            this.unexpected();
          }
          var codePos = ++this.pos;
          code2 = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
          ++this.pos;
          if (code2 > 1114111) {
            this.invalidStringToken(codePos, "Code point out of bounds");
          }
        } else {
          code2 = this.readHexChar(4);
        }
        return code2;
      };
      pp2.readString = function(quote) {
        var out = "", chunkStart = ++this.pos;
        for (; ; ) {
          if (this.pos >= this.input.length) {
            this.raise(this.start, "Unterminated string constant");
          }
          var ch = this.input.charCodeAt(this.pos);
          if (ch === quote) {
            break;
          }
          if (ch === 92) {
            out += this.input.slice(chunkStart, this.pos);
            out += this.readEscapedChar(false);
            chunkStart = this.pos;
          } else if (ch === 8232 || ch === 8233) {
            if (this.options.ecmaVersion < 10) {
              this.raise(this.start, "Unterminated string constant");
            }
            ++this.pos;
            if (this.options.locations) {
              this.curLine++;
              this.lineStart = this.pos;
            }
          } else {
            if (isNewLine2(ch)) {
              this.raise(this.start, "Unterminated string constant");
            }
            ++this.pos;
          }
        }
        out += this.input.slice(chunkStart, this.pos++);
        return this.finishToken(types$12.string, out);
      };
      var INVALID_TEMPLATE_ESCAPE_ERROR2 = {};
      pp2.tryReadTemplateToken = function() {
        this.inTemplateElement = true;
        try {
          this.readTmplToken();
        } catch (err) {
          if (err === INVALID_TEMPLATE_ESCAPE_ERROR2) {
            this.readInvalidTemplateToken();
          } else {
            throw err;
          }
        }
        this.inTemplateElement = false;
      };
      pp2.invalidStringToken = function(position3, message) {
        if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
          throw INVALID_TEMPLATE_ESCAPE_ERROR2;
        } else {
          this.raise(position3, message);
        }
      };
      pp2.readTmplToken = function() {
        var out = "", chunkStart = this.pos;
        for (; ; ) {
          if (this.pos >= this.input.length) {
            this.raise(this.start, "Unterminated template");
          }
          var ch = this.input.charCodeAt(this.pos);
          if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {
            if (this.pos === this.start && (this.type === types$12.template || this.type === types$12.invalidTemplate)) {
              if (ch === 36) {
                this.pos += 2;
                return this.finishToken(types$12.dollarBraceL);
              } else {
                ++this.pos;
                return this.finishToken(types$12.backQuote);
              }
            }
            out += this.input.slice(chunkStart, this.pos);
            return this.finishToken(types$12.template, out);
          }
          if (ch === 92) {
            out += this.input.slice(chunkStart, this.pos);
            out += this.readEscapedChar(true);
            chunkStart = this.pos;
          } else if (isNewLine2(ch)) {
            out += this.input.slice(chunkStart, this.pos);
            ++this.pos;
            switch (ch) {
              case 13:
                if (this.input.charCodeAt(this.pos) === 10) {
                  ++this.pos;
                }
              case 10:
                out += "\n";
                break;
              default:
                out += String.fromCharCode(ch);
                break;
            }
            if (this.options.locations) {
              ++this.curLine;
              this.lineStart = this.pos;
            }
            chunkStart = this.pos;
          } else {
            ++this.pos;
          }
        }
      };
      pp2.readInvalidTemplateToken = function() {
        for (; this.pos < this.input.length; this.pos++) {
          switch (this.input[this.pos]) {
            case "\\":
              ++this.pos;
              break;
            case "$":
              if (this.input[this.pos + 1] !== "{") {
                break;
              }
            case "`":
              return this.finishToken(types$12.invalidTemplate, this.input.slice(this.start, this.pos));
          }
        }
        this.raise(this.start, "Unterminated template");
      };
      pp2.readEscapedChar = function(inTemplate) {
        var ch = this.input.charCodeAt(++this.pos);
        ++this.pos;
        switch (ch) {
          case 110:
            return "\n";
          case 114:
            return "\r";
          case 120:
            return String.fromCharCode(this.readHexChar(2));
          case 117:
            return codePointToString2(this.readCodePoint());
          case 116:
            return "	";
          case 98:
            return "\b";
          case 118:
            return "\v";
          case 102:
            return "\f";
          case 13:
            if (this.input.charCodeAt(this.pos) === 10) {
              ++this.pos;
            }
          case 10:
            if (this.options.locations) {
              this.lineStart = this.pos;
              ++this.curLine;
            }
            return "";
          case 56:
          case 57:
            if (this.strict) {
              this.invalidStringToken(this.pos - 1, "Invalid escape sequence");
            }
            if (inTemplate) {
              var codePos = this.pos - 1;
              this.invalidStringToken(codePos, "Invalid escape sequence in template string");
              return null;
            }
          default:
            if (ch >= 48 && ch <= 55) {
              var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
              var octal = parseInt(octalStr, 8);
              if (octal > 255) {
                octalStr = octalStr.slice(0, -1);
                octal = parseInt(octalStr, 8);
              }
              this.pos += octalStr.length - 1;
              ch = this.input.charCodeAt(this.pos);
              if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
                this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? "Octal literal in template string" : "Octal literal in strict mode");
              }
              return String.fromCharCode(octal);
            }
            if (isNewLine2(ch)) {
              return "";
            }
            return String.fromCharCode(ch);
        }
      };
      pp2.readHexChar = function(len) {
        var codePos = this.pos;
        var n2 = this.readInt(16, len);
        if (n2 === null) {
          this.invalidStringToken(codePos, "Bad character escape sequence");
        }
        return n2;
      };
      pp2.readWord1 = function() {
        this.containsEsc = false;
        var word = "", first = true, chunkStart = this.pos;
        var astral = this.options.ecmaVersion >= 6;
        while (this.pos < this.input.length) {
          var ch = this.fullCharCodeAtPos();
          if (isIdentifierChar2(ch, astral)) {
            this.pos += ch <= 65535 ? 1 : 2;
          } else if (ch === 92) {
            this.containsEsc = true;
            word += this.input.slice(chunkStart, this.pos);
            var escStart = this.pos;
            if (this.input.charCodeAt(++this.pos) !== 117) {
              this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX");
            }
            ++this.pos;
            var esc = this.readCodePoint();
            if (!(first ? isIdentifierStart2 : isIdentifierChar2)(esc, astral)) {
              this.invalidStringToken(escStart, "Invalid Unicode escape");
            }
            word += codePointToString2(esc);
            chunkStart = this.pos;
          } else {
            break;
          }
          first = false;
        }
        return word + this.input.slice(chunkStart, this.pos);
      };
      pp2.readWord = function() {
        var word = this.readWord1();
        var type = types$12.name;
        if (this.keywords.test(word)) {
          type = keywords2[word];
        }
        return this.finishToken(type, word);
      };
      var version2 = "8.7.1";
      Parser4.acorn = {
        Parser: Parser4,
        version: version2,
        defaultOptions: defaultOptions2,
        Position: Position3,
        SourceLocation: SourceLocation3,
        getLineInfo: getLineInfo2,
        Node: Node4,
        TokenType: TokenType3,
        tokTypes: types$12,
        keywordTypes: keywords2,
        TokContext: TokContext3,
        tokContexts: types5,
        isIdentifierChar: isIdentifierChar2,
        isIdentifierStart: isIdentifierStart2,
        Token: Token3,
        isNewLine: isNewLine2,
        lineBreak: lineBreak2,
        lineBreakG: lineBreakG2,
        nonASCIIwhitespace: nonASCIIwhitespace2
      };
      function parse8(input2, options) {
        return Parser4.parse(input2, options);
      }
      function parseExpressionAt2(input2, pos, options) {
        return Parser4.parseExpressionAt(input2, pos, options);
      }
      function tokenizer2(input2, options) {
        return Parser4.tokenizer(input2, options);
      }
      exports2.Node = Node4;
      exports2.Parser = Parser4;
      exports2.Position = Position3;
      exports2.SourceLocation = SourceLocation3;
      exports2.TokContext = TokContext3;
      exports2.Token = Token3;
      exports2.TokenType = TokenType3;
      exports2.defaultOptions = defaultOptions2;
      exports2.getLineInfo = getLineInfo2;
      exports2.isIdentifierChar = isIdentifierChar2;
      exports2.isIdentifierStart = isIdentifierStart2;
      exports2.isNewLine = isNewLine2;
      exports2.keywordTypes = keywords2;
      exports2.lineBreak = lineBreak2;
      exports2.lineBreakG = lineBreakG2;
      exports2.nonASCIIwhitespace = nonASCIIwhitespace2;
      exports2.parse = parse8;
      exports2.parseExpressionAt = parseExpressionAt2;
      exports2.tokContexts = types5;
      exports2.tokTypes = types$12;
      exports2.tokenizer = tokenizer2;
      exports2.version = version2;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// node_modules/acorn-jsx/index.js
var require_acorn_jsx = __commonJS({
  "node_modules/acorn-jsx/index.js"(exports, module2) {
    "use strict";
    var XHTMLEntities = require_xhtml();
    var hexNumber = /^[\da-fA-F]+$/;
    var decimalNumber = /^\d+$/;
    var acornJsxMap = /* @__PURE__ */ new WeakMap();
    function getJsxTokens(acorn) {
      acorn = acorn.Parser.acorn || acorn;
      let acornJsx2 = acornJsxMap.get(acorn);
      if (!acornJsx2) {
        const tt = acorn.tokTypes;
        const TokContext3 = acorn.TokContext;
        const TokenType3 = acorn.TokenType;
        const tc_oTag = new TokContext3("<tag", false);
        const tc_cTag = new TokContext3("</tag", false);
        const tc_expr = new TokContext3("<tag>...</tag>", true, true);
        const tokContexts = {
          tc_oTag,
          tc_cTag,
          tc_expr
        };
        const tokTypes = {
          jsxName: new TokenType3("jsxName"),
          jsxText: new TokenType3("jsxText", { beforeExpr: true }),
          jsxTagStart: new TokenType3("jsxTagStart", { startsExpr: true }),
          jsxTagEnd: new TokenType3("jsxTagEnd")
        };
        tokTypes.jsxTagStart.updateContext = function() {
          this.context.push(tc_expr);
          this.context.push(tc_oTag);
          this.exprAllowed = false;
        };
        tokTypes.jsxTagEnd.updateContext = function(prevType) {
          let out = this.context.pop();
          if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {
            this.context.pop();
            this.exprAllowed = this.curContext() === tc_expr;
          } else {
            this.exprAllowed = true;
          }
        };
        acornJsx2 = { tokContexts, tokTypes };
        acornJsxMap.set(acorn, acornJsx2);
      }
      return acornJsx2;
    }
    function getQualifiedJSXName(object) {
      if (!object)
        return object;
      if (object.type === "JSXIdentifier")
        return object.name;
      if (object.type === "JSXNamespacedName")
        return object.namespace.name + ":" + object.name.name;
      if (object.type === "JSXMemberExpression")
        return getQualifiedJSXName(object.object) + "." + getQualifiedJSXName(object.property);
    }
    module2.exports = function(options) {
      options = options || {};
      return function(Parser4) {
        return plugin2({
          allowNamespaces: options.allowNamespaces !== false,
          allowNamespacedObjects: !!options.allowNamespacedObjects
        }, Parser4);
      };
    };
    Object.defineProperty(module2.exports, "tokTypes", {
      get: function get_tokTypes() {
        return getJsxTokens(require_acorn()).tokTypes;
      },
      configurable: true,
      enumerable: true
    });
    function plugin2(options, Parser4) {
      const acorn = Parser4.acorn || require_acorn();
      const acornJsx2 = getJsxTokens(acorn);
      const tt = acorn.tokTypes;
      const tok = acornJsx2.tokTypes;
      const tokContexts = acorn.tokContexts;
      const tc_oTag = acornJsx2.tokContexts.tc_oTag;
      const tc_cTag = acornJsx2.tokContexts.tc_cTag;
      const tc_expr = acornJsx2.tokContexts.tc_expr;
      const isNewLine2 = acorn.isNewLine;
      const isIdentifierStart2 = acorn.isIdentifierStart;
      const isIdentifierChar2 = acorn.isIdentifierChar;
      return class extends Parser4 {
        static get acornJsx() {
          return acornJsx2;
        }
        jsx_readToken() {
          let out = "", chunkStart = this.pos;
          for (; ; ) {
            if (this.pos >= this.input.length)
              this.raise(this.start, "Unterminated JSX contents");
            let ch = this.input.charCodeAt(this.pos);
            switch (ch) {
              case 60:
              case 123:
                if (this.pos === this.start) {
                  if (ch === 60 && this.exprAllowed) {
                    ++this.pos;
                    return this.finishToken(tok.jsxTagStart);
                  }
                  return this.getTokenFromCode(ch);
                }
                out += this.input.slice(chunkStart, this.pos);
                return this.finishToken(tok.jsxText, out);
              case 38:
                out += this.input.slice(chunkStart, this.pos);
                out += this.jsx_readEntity();
                chunkStart = this.pos;
                break;
              case 62:
              case 125:
                this.raise(this.pos, "Unexpected token `" + this.input[this.pos] + "`. Did you mean `" + (ch === 62 ? "&gt;" : "&rbrace;") + '` or `{"' + this.input[this.pos] + '"}`?');
              default:
                if (isNewLine2(ch)) {
                  out += this.input.slice(chunkStart, this.pos);
                  out += this.jsx_readNewLine(true);
                  chunkStart = this.pos;
                } else {
                  ++this.pos;
                }
            }
          }
        }
        jsx_readNewLine(normalizeCRLF) {
          let ch = this.input.charCodeAt(this.pos);
          let out;
          ++this.pos;
          if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {
            ++this.pos;
            out = normalizeCRLF ? "\n" : "\r\n";
          } else {
            out = String.fromCharCode(ch);
          }
          if (this.options.locations) {
            ++this.curLine;
            this.lineStart = this.pos;
          }
          return out;
        }
        jsx_readString(quote) {
          let out = "", chunkStart = ++this.pos;
          for (; ; ) {
            if (this.pos >= this.input.length)
              this.raise(this.start, "Unterminated string constant");
            let ch = this.input.charCodeAt(this.pos);
            if (ch === quote)
              break;
            if (ch === 38) {
              out += this.input.slice(chunkStart, this.pos);
              out += this.jsx_readEntity();
              chunkStart = this.pos;
            } else if (isNewLine2(ch)) {
              out += this.input.slice(chunkStart, this.pos);
              out += this.jsx_readNewLine(false);
              chunkStart = this.pos;
            } else {
              ++this.pos;
            }
          }
          out += this.input.slice(chunkStart, this.pos++);
          return this.finishToken(tt.string, out);
        }
        jsx_readEntity() {
          let str = "", count = 0, entity;
          let ch = this.input[this.pos];
          if (ch !== "&")
            this.raise(this.pos, "Entity must start with an ampersand");
          let startPos = ++this.pos;
          while (this.pos < this.input.length && count++ < 10) {
            ch = this.input[this.pos++];
            if (ch === ";") {
              if (str[0] === "#") {
                if (str[1] === "x") {
                  str = str.substr(2);
                  if (hexNumber.test(str))
                    entity = String.fromCharCode(parseInt(str, 16));
                } else {
                  str = str.substr(1);
                  if (decimalNumber.test(str))
                    entity = String.fromCharCode(parseInt(str, 10));
                }
              } else {
                entity = XHTMLEntities[str];
              }
              break;
            }
            str += ch;
          }
          if (!entity) {
            this.pos = startPos;
            return "&";
          }
          return entity;
        }
        jsx_readWord() {
          let ch, start3 = this.pos;
          do {
            ch = this.input.charCodeAt(++this.pos);
          } while (isIdentifierChar2(ch) || ch === 45);
          return this.finishToken(tok.jsxName, this.input.slice(start3, this.pos));
        }
        jsx_parseIdentifier() {
          let node = this.startNode();
          if (this.type === tok.jsxName)
            node.name = this.value;
          else if (this.type.keyword)
            node.name = this.type.keyword;
          else
            this.unexpected();
          this.next();
          return this.finishNode(node, "JSXIdentifier");
        }
        jsx_parseNamespacedName() {
          let startPos = this.start, startLoc = this.startLoc;
          let name = this.jsx_parseIdentifier();
          if (!options.allowNamespaces || !this.eat(tt.colon))
            return name;
          var node = this.startNodeAt(startPos, startLoc);
          node.namespace = name;
          node.name = this.jsx_parseIdentifier();
          return this.finishNode(node, "JSXNamespacedName");
        }
        jsx_parseElementName() {
          if (this.type === tok.jsxTagEnd)
            return "";
          let startPos = this.start, startLoc = this.startLoc;
          let node = this.jsx_parseNamespacedName();
          if (this.type === tt.dot && node.type === "JSXNamespacedName" && !options.allowNamespacedObjects) {
            this.unexpected();
          }
          while (this.eat(tt.dot)) {
            let newNode = this.startNodeAt(startPos, startLoc);
            newNode.object = node;
            newNode.property = this.jsx_parseIdentifier();
            node = this.finishNode(newNode, "JSXMemberExpression");
          }
          return node;
        }
        jsx_parseAttributeValue() {
          switch (this.type) {
            case tt.braceL:
              let node = this.jsx_parseExpressionContainer();
              if (node.expression.type === "JSXEmptyExpression")
                this.raise(node.start, "JSX attributes must only be assigned a non-empty expression");
              return node;
            case tok.jsxTagStart:
            case tt.string:
              return this.parseExprAtom();
            default:
              this.raise(this.start, "JSX value should be either an expression or a quoted JSX text");
          }
        }
        jsx_parseEmptyExpression() {
          let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
          return this.finishNodeAt(node, "JSXEmptyExpression", this.start, this.startLoc);
        }
        jsx_parseExpressionContainer() {
          let node = this.startNode();
          this.next();
          node.expression = this.type === tt.braceR ? this.jsx_parseEmptyExpression() : this.parseExpression();
          this.expect(tt.braceR);
          return this.finishNode(node, "JSXExpressionContainer");
        }
        jsx_parseAttribute() {
          let node = this.startNode();
          if (this.eat(tt.braceL)) {
            this.expect(tt.ellipsis);
            node.argument = this.parseMaybeAssign();
            this.expect(tt.braceR);
            return this.finishNode(node, "JSXSpreadAttribute");
          }
          node.name = this.jsx_parseNamespacedName();
          node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;
          return this.finishNode(node, "JSXAttribute");
        }
        jsx_parseOpeningElementAt(startPos, startLoc) {
          let node = this.startNodeAt(startPos, startLoc);
          node.attributes = [];
          let nodeName = this.jsx_parseElementName();
          if (nodeName)
            node.name = nodeName;
          while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)
            node.attributes.push(this.jsx_parseAttribute());
          node.selfClosing = this.eat(tt.slash);
          this.expect(tok.jsxTagEnd);
          return this.finishNode(node, nodeName ? "JSXOpeningElement" : "JSXOpeningFragment");
        }
        jsx_parseClosingElementAt(startPos, startLoc) {
          let node = this.startNodeAt(startPos, startLoc);
          let nodeName = this.jsx_parseElementName();
          if (nodeName)
            node.name = nodeName;
          this.expect(tok.jsxTagEnd);
          return this.finishNode(node, nodeName ? "JSXClosingElement" : "JSXClosingFragment");
        }
        jsx_parseElementAt(startPos, startLoc) {
          let node = this.startNodeAt(startPos, startLoc);
          let children2 = [];
          let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);
          let closingElement = null;
          if (!openingElement.selfClosing) {
            contents:
              for (; ; ) {
                switch (this.type) {
                  case tok.jsxTagStart:
                    startPos = this.start;
                    startLoc = this.startLoc;
                    this.next();
                    if (this.eat(tt.slash)) {
                      closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);
                      break contents;
                    }
                    children2.push(this.jsx_parseElementAt(startPos, startLoc));
                    break;
                  case tok.jsxText:
                    children2.push(this.parseExprAtom());
                    break;
                  case tt.braceL:
                    children2.push(this.jsx_parseExpressionContainer());
                    break;
                  default:
                    this.unexpected();
                }
              }
            if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {
              this.raise(closingElement.start, "Expected corresponding JSX closing tag for <" + getQualifiedJSXName(openingElement.name) + ">");
            }
          }
          let fragmentOrElement = openingElement.name ? "Element" : "Fragment";
          node["opening" + fragmentOrElement] = openingElement;
          node["closing" + fragmentOrElement] = closingElement;
          node.children = children2;
          if (this.type === tt.relational && this.value === "<") {
            this.raise(this.start, "Adjacent JSX elements must be wrapped in an enclosing tag");
          }
          return this.finishNode(node, "JSX" + fragmentOrElement);
        }
        jsx_parseText() {
          let node = this.parseLiteral(this.value);
          node.type = "JSXText";
          return node;
        }
        jsx_parseElement() {
          let startPos = this.start, startLoc = this.startLoc;
          this.next();
          return this.jsx_parseElementAt(startPos, startLoc);
        }
        parseExprAtom(refShortHandDefaultPos) {
          if (this.type === tok.jsxText)
            return this.jsx_parseText();
          else if (this.type === tok.jsxTagStart)
            return this.jsx_parseElement();
          else
            return super.parseExprAtom(refShortHandDefaultPos);
        }
        readToken(code2) {
          let context = this.curContext();
          if (context === tc_expr)
            return this.jsx_readToken();
          if (context === tc_oTag || context === tc_cTag) {
            if (isIdentifierStart2(code2))
              return this.jsx_readWord();
            if (code2 == 62) {
              ++this.pos;
              return this.finishToken(tok.jsxTagEnd);
            }
            if ((code2 === 34 || code2 === 39) && context == tc_oTag)
              return this.jsx_readString(code2);
          }
          if (code2 === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {
            ++this.pos;
            return this.finishToken(tok.jsxTagStart);
          }
          return super.readToken(code2);
        }
        updateContext(prevType) {
          if (this.type == tt.braceL) {
            var curContext = this.curContext();
            if (curContext == tc_oTag)
              this.context.push(tokContexts.b_expr);
            else if (curContext == tc_expr)
              this.context.push(tokContexts.b_tmpl);
            else
              super.updateContext(prevType);
            this.exprAllowed = true;
          } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {
            this.context.length -= 2;
            this.context.push(tc_cTag);
            this.exprAllowed = false;
          } else {
            return super.updateContext(prevType);
          }
        }
      };
    }
  }
});

// node_modules/micromark-extension-mdx-expression/lib/syntax.js
function mdxExpression(options = {}) {
  const addResult = options.addResult;
  const acorn = options.acorn;
  const spread = options.spread;
  let allowEmpty = options.allowEmpty;
  let acornOptions;
  if (allowEmpty === null || allowEmpty === void 0) {
    allowEmpty = true;
  }
  if (acorn) {
    if (!acorn.parseExpressionAt) {
      throw new Error("Expected a proper `acorn` instance passed in as `options.acorn`");
    }
    acornOptions = Object.assign({
      ecmaVersion: 2020,
      sourceType: "module"
    }, options.acornOptions);
  } else if (options.acornOptions || options.addResult) {
    throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
  }
  return {
    flow: {
      [123]: {
        tokenize: tokenizeFlowExpression,
        concrete: true
      }
    },
    text: {
      [123]: {
        tokenize: tokenizeTextExpression
      }
    }
  };
  function tokenizeFlowExpression(effects, ok2, nok) {
    const self2 = this;
    return start3;
    function start3(code2) {
      return factoryMdxExpression.call(self2, effects, factorySpace(effects, after, "whitespace"), "mdxFlowExpression", "mdxFlowExpressionMarker", "mdxFlowExpressionChunk", acorn, acornOptions, addResult, spread, allowEmpty)(code2);
    }
    function after(code2) {
      return code2 === null || markdownLineEnding(code2) ? ok2(code2) : nok(code2);
    }
  }
  function tokenizeTextExpression(effects, ok2) {
    const self2 = this;
    return start3;
    function start3(code2) {
      return factoryMdxExpression.call(self2, effects, ok2, "mdxTextExpression", "mdxTextExpressionMarker", "mdxTextExpressionChunk", acorn, acornOptions, addResult, spread, allowEmpty, true)(code2);
    }
  }
}
var init_syntax2 = __esm({
  "node_modules/micromark-extension-mdx-expression/lib/syntax.js"() {
    init_micromark_factory_mdx_expression();
    init_micromark_factory_space();
    init_micromark_util_character();
  }
});

// node_modules/micromark-extension-mdx-expression/index.js
var init_micromark_extension_mdx_expression = __esm({
  "node_modules/micromark-extension-mdx-expression/index.js"() {
    init_syntax2();
  }
});

// node_modules/micromark-extension-mdx-md/index.js
var mdxMd;
var init_micromark_extension_mdx_md = __esm({
  "node_modules/micromark-extension-mdx-md/index.js"() {
    mdxMd = {
      disable: { null: ["autolink", "codeIndented", "htmlFlow", "htmlText"] }
    };
  }
});

// node_modules/micromark-util-chunked/index.js
function splice(list3, start3, remove, items) {
  const end = list3.length;
  let chunkStart = 0;
  let parameters;
  if (start3 < 0) {
    start3 = -start3 > end ? 0 : end + start3;
  } else {
    start3 = start3 > end ? end : start3;
  }
  remove = remove > 0 ? remove : 0;
  if (items.length < 1e4) {
    parameters = Array.from(items);
    parameters.unshift(start3, remove);
    [].splice.apply(list3, parameters);
  } else {
    if (remove)
      [].splice.apply(list3, [start3, remove]);
    while (chunkStart < items.length) {
      parameters = items.slice(chunkStart, chunkStart + 1e4);
      parameters.unshift(start3, 0);
      [].splice.apply(list3, parameters);
      chunkStart += 1e4;
      start3 += 1e4;
    }
  }
}
function push(list3, items) {
  if (list3.length > 0) {
    splice(list3, list3.length, 0, items);
    return list3;
  }
  return items;
}
var init_micromark_util_chunked = __esm({
  "node_modules/micromark-util-chunked/index.js"() {
  }
});

// node_modules/micromark-util-combine-extensions/index.js
function combineExtensions(extensions) {
  const all5 = {};
  let index2 = -1;
  while (++index2 < extensions.length) {
    syntaxExtension(all5, extensions[index2]);
  }
  return all5;
}
function syntaxExtension(all5, extension2) {
  let hook;
  for (hook in extension2) {
    const maybe = hasOwnProperty2.call(all5, hook) ? all5[hook] : void 0;
    const left = maybe || (all5[hook] = {});
    const right = extension2[hook];
    let code2;
    for (code2 in right) {
      if (!hasOwnProperty2.call(left, code2))
        left[code2] = [];
      const value = right[code2];
      constructs(left[code2], Array.isArray(value) ? value : value ? [value] : []);
    }
  }
}
function constructs(existing, list3) {
  let index2 = -1;
  const before = [];
  while (++index2 < list3.length) {
    ;
    (list3[index2].add === "after" ? existing : before).push(list3[index2]);
  }
  splice(existing, 0, 0, before);
}
var hasOwnProperty2;
var init_micromark_util_combine_extensions = __esm({
  "node_modules/micromark-util-combine-extensions/index.js"() {
    init_micromark_util_chunked();
    hasOwnProperty2 = {}.hasOwnProperty;
  }
});

// node_modules/@astrojs/markdown-remark/dist/mdxjs.js
function mdxjs(options) {
  const settings = Object.assign({
    acorn: Parser.extend((0, import_acorn_jsx.default)()),
    acornOptions: { ecmaVersion: 2020, sourceType: "module" },
    addResult: true
  }, options);
  return combineExtensions([mdxExpression(settings), mdxJsx(settings), mdxMd]);
}
var import_acorn_jsx;
var init_mdxjs = __esm({
  "node_modules/@astrojs/markdown-remark/dist/mdxjs.js"() {
    init_micromark_extension_mdx_jsx();
    init_acorn();
    import_acorn_jsx = __toESM(require_acorn_jsx(), 1);
    init_micromark_extension_mdx_expression();
    init_micromark_extension_mdx_md();
    init_micromark_util_combine_extensions();
  }
});

// node_modules/@astrojs/markdown-remark/dist/remark-mdxish.js
function remarkMdxish() {
  const data3 = this.data();
  add("micromarkExtensions", extMdxJs);
  add("fromMarkdownExtensions", extMdxFromMarkdown);
  add("toMarkdownExtensions", extMdxToMarkdown);
  function add(field, value) {
    const list3 = data3[field] ? data3[field] : data3[field] = [];
    list3.push(value);
  }
}
function makeFromMarkdownLessStrict(extensions) {
  extensions.forEach((extension2) => {
    ["mdxJsxFlowTag", "mdxJsxTextTag"].forEach((exitHandler) => {
      if (!extension2.exit || !extension2.exit[exitHandler])
        return;
      extension2.exit[exitHandler] = chainHandlers(fixSelfClosing, extension2.exit[exitHandler]);
    });
  });
  return extensions;
}
function fixSelfClosing() {
  const tag2 = this.getData("mdxJsxTag");
  if (tag2.name && selfClosingTags.has(tag2.name))
    tag2.selfClosing = true;
}
function chainHandlers(...handlers3) {
  return function handlerChain(token) {
    handlers3.forEach((handler2) => handler2.call(this, token));
  };
}
var extMdxJs, extMdxFromMarkdown, extMdxToMarkdown, selfClosingTags;
var init_remark_mdxish = __esm({
  "node_modules/@astrojs/markdown-remark/dist/remark-mdxish.js"() {
    init_mdast_util_mdxish();
    init_mdxjs();
    extMdxJs = mdxjs({});
    extMdxFromMarkdown = makeFromMarkdownLessStrict(mdxFromMarkdown());
    extMdxToMarkdown = mdxToMarkdown();
    selfClosingTags = /* @__PURE__ */ new Set([
      "area",
      "base",
      "br",
      "col",
      "embed",
      "hr",
      "img",
      "input",
      "link",
      "meta",
      "source",
      "track",
      "wbr"
    ]);
  }
});

// node_modules/@astrojs/prism/internal.mjs
function addAstro(Prism3) {
  if (Prism3.languages.astro) {
    return;
  }
  let scriptLang;
  if (Prism3.languages.typescript) {
    scriptLang = "typescript";
  } else {
    scriptLang = "javascript";
    console.warn("Prism TypeScript language not loaded, Astro scripts will be treated as JavaScript.");
  }
  let script = Prism3.util.clone(Prism3.languages[scriptLang]);
  let space = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source;
  let braces = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source;
  let spread = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
  function re(source, flags2) {
    source = source.replace(/<S>/g, function() {
      return space;
    }).replace(/<BRACES>/g, function() {
      return braces;
    }).replace(/<SPREAD>/g, function() {
      return spread;
    });
    return RegExp(source, flags2);
  }
  spread = re(spread).source;
  Prism3.languages.astro = Prism3.languages.extend("markup", script);
  Prism3.languages.astro.tag.pattern = re(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[^]|[^\\"])*"|'(?:\\[^]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source);
  Prism3.languages.astro.tag.inside["tag"].pattern = /^<\/?[^\s>\/]*/i;
  Prism3.languages.astro.tag.inside["attr-value"].pattern = /=(?!\{)(?:"(?:\\[^]|[^\\"])*"|'(?:\\[^]|[^\\'])*'|[^\s'">]+)/i;
  Prism3.languages.astro.tag.inside["tag"].inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/;
  Prism3.languages.astro.tag.inside["comment"] = script["comment"];
  Prism3.languages.insertBefore("inside", "attr-name", {
    spread: {
      pattern: re(/<SPREAD>/.source),
      inside: Prism3.languages.astro
    }
  }, Prism3.languages.astro.tag);
  Prism3.languages.insertBefore("inside", "special-attr", {
    script: {
      pattern: re(/=<BRACES>/.source),
      inside: {
        "script-punctuation": {
          pattern: /^=(?={)/,
          alias: "punctuation"
        },
        rest: Prism3.languages.astro
      },
      alias: `language-${scriptLang}`
    }
  }, Prism3.languages.astro.tag);
  let stringifyToken = function(token) {
    if (!token) {
      return "";
    }
    if (typeof token === "string") {
      return token;
    }
    if (typeof token.content === "string") {
      return token.content;
    }
    return token.content.map(stringifyToken).join("");
  };
  let walkTokens = function(tokens) {
    let openedTags = [];
    for (let i3 = 0; i3 < tokens.length; i3++) {
      let token = tokens[i3];
      if (token.type === "style") {
        return;
      }
      let notTagNorBrace = false;
      if (typeof token !== "string") {
        if (token.type === "tag" && token.content[0] && token.content[0].type === "tag") {
          if (token.content[0].content[0].content === "</") {
            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {
              openedTags.pop();
            }
          } else {
            if (token.content[token.content.length - 1].content === "/>") {
            } else {
              openedTags.push({
                tagName: stringifyToken(token.content[0].content[1]),
                openedBraces: 0
              });
            }
          }
        } else if (openedTags.length > 0 && token.type === "punctuation" && token.content === "{") {
          openedTags[openedTags.length - 1].openedBraces++;
        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === "punctuation" && token.content === "}") {
          openedTags[openedTags.length - 1].openedBraces--;
        } else {
          notTagNorBrace = true;
        }
      }
      if (notTagNorBrace || typeof token === "string") {
        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {
          let plainText = stringifyToken(token);
          if (i3 < tokens.length - 1 && (typeof tokens[i3 + 1] === "string" || tokens[i3 + 1].type === "plain-text")) {
            plainText += stringifyToken(tokens[i3 + 1]);
            tokens.splice(i3 + 1, 1);
          }
          if (i3 > 0 && (typeof tokens[i3 - 1] === "string" || tokens[i3 - 1].type === "plain-text")) {
            plainText = stringifyToken(tokens[i3 - 1]) + plainText;
            tokens.splice(i3 - 1, 1);
            i3--;
          }
          tokens[i3] = new Prism3.Token("plain-text", plainText, null, plainText);
        }
      }
      if (token.content && typeof token.content !== "string") {
        walkTokens(token.content);
      }
    }
  };
  Prism3.hooks.add("after-tokenize", function(env2) {
    if (env2.language !== "astro") {
      return;
    }
    walkTokens(env2.tokens);
  });
}
var init_internal = __esm({
  "node_modules/@astrojs/prism/internal.mjs"() {
  }
});

// node_modules/prismjs/prism.js
var require_prism = __commonJS({
  "node_modules/prismjs/prism.js"(exports, module2) {
    var _self = typeof window !== "undefined" ? window : typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope ? self : {};
    var Prism3 = function(_self2) {
      var lang = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i;
      var uniqueId = 0;
      var plainTextGrammar = {};
      var _ = {
        manual: _self2.Prism && _self2.Prism.manual,
        disableWorkerMessageHandler: _self2.Prism && _self2.Prism.disableWorkerMessageHandler,
        util: {
          encode: function encode2(tokens) {
            if (tokens instanceof Token3) {
              return new Token3(tokens.type, encode2(tokens.content), tokens.alias);
            } else if (Array.isArray(tokens)) {
              return tokens.map(encode2);
            } else {
              return tokens.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
            }
          },
          type: function(o2) {
            return Object.prototype.toString.call(o2).slice(8, -1);
          },
          objId: function(obj) {
            if (!obj["__id"]) {
              Object.defineProperty(obj, "__id", { value: ++uniqueId });
            }
            return obj["__id"];
          },
          clone: function deepClone(o2, visited) {
            visited = visited || {};
            var clone2;
            var id;
            switch (_.util.type(o2)) {
              case "Object":
                id = _.util.objId(o2);
                if (visited[id]) {
                  return visited[id];
                }
                clone2 = {};
                visited[id] = clone2;
                for (var key2 in o2) {
                  if (o2.hasOwnProperty(key2)) {
                    clone2[key2] = deepClone(o2[key2], visited);
                  }
                }
                return clone2;
              case "Array":
                id = _.util.objId(o2);
                if (visited[id]) {
                  return visited[id];
                }
                clone2 = [];
                visited[id] = clone2;
                o2.forEach(function(v2, i3) {
                  clone2[i3] = deepClone(v2, visited);
                });
                return clone2;
              default:
                return o2;
            }
          },
          getLanguage: function(element6) {
            while (element6) {
              var m3 = lang.exec(element6.className);
              if (m3) {
                return m3[1].toLowerCase();
              }
              element6 = element6.parentElement;
            }
            return "none";
          },
          setLanguage: function(element6, language) {
            element6.className = element6.className.replace(RegExp(lang, "gi"), "");
            element6.classList.add("language-" + language);
          },
          currentScript: function() {
            if (typeof document === "undefined") {
              return null;
            }
            if ("currentScript" in document && 1 < 2) {
              return document.currentScript;
            }
            try {
              throw new Error();
            } catch (err) {
              var src2 = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(err.stack) || [])[1];
              if (src2) {
                var scripts = document.getElementsByTagName("script");
                for (var i3 in scripts) {
                  if (scripts[i3].src == src2) {
                    return scripts[i3];
                  }
                }
              }
              return null;
            }
          },
          isActive: function(element6, className, defaultActivation) {
            var no = "no-" + className;
            while (element6) {
              var classList = element6.classList;
              if (classList.contains(className)) {
                return true;
              }
              if (classList.contains(no)) {
                return false;
              }
              element6 = element6.parentElement;
            }
            return !!defaultActivation;
          }
        },
        languages: {
          plain: plainTextGrammar,
          plaintext: plainTextGrammar,
          text: plainTextGrammar,
          txt: plainTextGrammar,
          extend: function(id, redef) {
            var lang2 = _.util.clone(_.languages[id]);
            for (var key2 in redef) {
              lang2[key2] = redef[key2];
            }
            return lang2;
          },
          insertBefore: function(inside, before, insert, root5) {
            root5 = root5 || _.languages;
            var grammar = root5[inside];
            var ret = {};
            for (var token in grammar) {
              if (grammar.hasOwnProperty(token)) {
                if (token == before) {
                  for (var newToken in insert) {
                    if (insert.hasOwnProperty(newToken)) {
                      ret[newToken] = insert[newToken];
                    }
                  }
                }
                if (!insert.hasOwnProperty(token)) {
                  ret[token] = grammar[token];
                }
              }
            }
            var old = root5[inside];
            root5[inside] = ret;
            _.languages.DFS(_.languages, function(key2, value) {
              if (value === old && key2 != inside) {
                this[key2] = ret;
              }
            });
            return ret;
          },
          DFS: function DFS(o2, callback, type, visited) {
            visited = visited || {};
            var objId = _.util.objId;
            for (var i3 in o2) {
              if (o2.hasOwnProperty(i3)) {
                callback.call(o2, i3, o2[i3], type || i3);
                var property = o2[i3];
                var propertyType = _.util.type(property);
                if (propertyType === "Object" && !visited[objId(property)]) {
                  visited[objId(property)] = true;
                  DFS(property, callback, null, visited);
                } else if (propertyType === "Array" && !visited[objId(property)]) {
                  visited[objId(property)] = true;
                  DFS(property, callback, i3, visited);
                }
              }
            }
          }
        },
        plugins: {},
        highlightAll: function(async, callback) {
          _.highlightAllUnder(document, async, callback);
        },
        highlightAllUnder: function(container, async, callback) {
          var env2 = {
            callback,
            container,
            selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
          };
          _.hooks.run("before-highlightall", env2);
          env2.elements = Array.prototype.slice.apply(env2.container.querySelectorAll(env2.selector));
          _.hooks.run("before-all-elements-highlight", env2);
          for (var i3 = 0, element6; element6 = env2.elements[i3++]; ) {
            _.highlightElement(element6, async === true, env2.callback);
          }
        },
        highlightElement: function(element6, async, callback) {
          var language = _.util.getLanguage(element6);
          var grammar = _.languages[language];
          _.util.setLanguage(element6, language);
          var parent = element6.parentElement;
          if (parent && parent.nodeName.toLowerCase() === "pre") {
            _.util.setLanguage(parent, language);
          }
          var code2 = element6.textContent;
          var env2 = {
            element: element6,
            language,
            grammar,
            code: code2
          };
          function insertHighlightedCode(highlightedCode) {
            env2.highlightedCode = highlightedCode;
            _.hooks.run("before-insert", env2);
            env2.element.innerHTML = env2.highlightedCode;
            _.hooks.run("after-highlight", env2);
            _.hooks.run("complete", env2);
            callback && callback.call(env2.element);
          }
          _.hooks.run("before-sanity-check", env2);
          parent = env2.element.parentElement;
          if (parent && parent.nodeName.toLowerCase() === "pre" && !parent.hasAttribute("tabindex")) {
            parent.setAttribute("tabindex", "0");
          }
          if (!env2.code) {
            _.hooks.run("complete", env2);
            callback && callback.call(env2.element);
            return;
          }
          _.hooks.run("before-highlight", env2);
          if (!env2.grammar) {
            insertHighlightedCode(_.util.encode(env2.code));
            return;
          }
          if (async && _self2.Worker) {
            var worker = new Worker(_.filename);
            worker.onmessage = function(evt) {
              insertHighlightedCode(evt.data);
            };
            worker.postMessage(JSON.stringify({
              language: env2.language,
              code: env2.code,
              immediateClose: true
            }));
          } else {
            insertHighlightedCode(_.highlight(env2.code, env2.grammar, env2.language));
          }
        },
        highlight: function(text8, grammar, language) {
          var env2 = {
            code: text8,
            grammar,
            language
          };
          _.hooks.run("before-tokenize", env2);
          if (!env2.grammar) {
            throw new Error('The language "' + env2.language + '" has no grammar.');
          }
          env2.tokens = _.tokenize(env2.code, env2.grammar);
          _.hooks.run("after-tokenize", env2);
          return Token3.stringify(_.util.encode(env2.tokens), env2.language);
        },
        tokenize: function(text8, grammar) {
          var rest = grammar.rest;
          if (rest) {
            for (var token in rest) {
              grammar[token] = rest[token];
            }
            delete grammar.rest;
          }
          var tokenList = new LinkedList();
          addAfter(tokenList, tokenList.head, text8);
          matchGrammar(text8, tokenList, grammar, tokenList.head, 0);
          return toArray(tokenList);
        },
        hooks: {
          all: {},
          add: function(name, callback) {
            var hooks = _.hooks.all;
            hooks[name] = hooks[name] || [];
            hooks[name].push(callback);
          },
          run: function(name, env2) {
            var callbacks = _.hooks.all[name];
            if (!callbacks || !callbacks.length) {
              return;
            }
            for (var i3 = 0, callback; callback = callbacks[i3++]; ) {
              callback(env2);
            }
          }
        },
        Token: Token3
      };
      _self2.Prism = _;
      function Token3(type, content3, alias, matchedStr) {
        this.type = type;
        this.content = content3;
        this.alias = alias;
        this.length = (matchedStr || "").length | 0;
      }
      Token3.stringify = function stringify3(o2, language) {
        if (typeof o2 == "string") {
          return o2;
        }
        if (Array.isArray(o2)) {
          var s4 = "";
          o2.forEach(function(e3) {
            s4 += stringify3(e3, language);
          });
          return s4;
        }
        var env2 = {
          type: o2.type,
          content: stringify3(o2.content, language),
          tag: "span",
          classes: ["token", o2.type],
          attributes: {},
          language
        };
        var aliases = o2.alias;
        if (aliases) {
          if (Array.isArray(aliases)) {
            Array.prototype.push.apply(env2.classes, aliases);
          } else {
            env2.classes.push(aliases);
          }
        }
        _.hooks.run("wrap", env2);
        var attributes2 = "";
        for (var name in env2.attributes) {
          attributes2 += " " + name + '="' + (env2.attributes[name] || "").replace(/"/g, "&quot;") + '"';
        }
        return "<" + env2.tag + ' class="' + env2.classes.join(" ") + '"' + attributes2 + ">" + env2.content + "</" + env2.tag + ">";
      };
      function matchPattern(pattern, pos, text8, lookbehind) {
        pattern.lastIndex = pos;
        var match = pattern.exec(text8);
        if (match && lookbehind && match[1]) {
          var lookbehindLength = match[1].length;
          match.index += lookbehindLength;
          match[0] = match[0].slice(lookbehindLength);
        }
        return match;
      }
      function matchGrammar(text8, tokenList, grammar, startNode, startPos, rematch) {
        for (var token in grammar) {
          if (!grammar.hasOwnProperty(token) || !grammar[token]) {
            continue;
          }
          var patterns = grammar[token];
          patterns = Array.isArray(patterns) ? patterns : [patterns];
          for (var j = 0; j < patterns.length; ++j) {
            if (rematch && rematch.cause == token + "," + j) {
              return;
            }
            var patternObj = patterns[j];
            var inside = patternObj.inside;
            var lookbehind = !!patternObj.lookbehind;
            var greedy = !!patternObj.greedy;
            var alias = patternObj.alias;
            if (greedy && !patternObj.pattern.global) {
              var flags2 = patternObj.pattern.toString().match(/[imsuy]*$/)[0];
              patternObj.pattern = RegExp(patternObj.pattern.source, flags2 + "g");
            }
            var pattern = patternObj.pattern || patternObj;
            for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {
              if (rematch && pos >= rematch.reach) {
                break;
              }
              var str = currentNode.value;
              if (tokenList.length > text8.length) {
                return;
              }
              if (str instanceof Token3) {
                continue;
              }
              var removeCount = 1;
              var match;
              if (greedy) {
                match = matchPattern(pattern, pos, text8, lookbehind);
                if (!match || match.index >= text8.length) {
                  break;
                }
                var from = match.index;
                var to = match.index + match[0].length;
                var p3 = pos;
                p3 += currentNode.value.length;
                while (from >= p3) {
                  currentNode = currentNode.next;
                  p3 += currentNode.value.length;
                }
                p3 -= currentNode.value.length;
                pos = p3;
                if (currentNode.value instanceof Token3) {
                  continue;
                }
                for (var k2 = currentNode; k2 !== tokenList.tail && (p3 < to || typeof k2.value === "string"); k2 = k2.next) {
                  removeCount++;
                  p3 += k2.value.length;
                }
                removeCount--;
                str = text8.slice(pos, p3);
                match.index -= pos;
              } else {
                match = matchPattern(pattern, 0, str, lookbehind);
                if (!match) {
                  continue;
                }
              }
              var from = match.index;
              var matchStr = match[0];
              var before = str.slice(0, from);
              var after = str.slice(from + matchStr.length);
              var reach = pos + str.length;
              if (rematch && reach > rematch.reach) {
                rematch.reach = reach;
              }
              var removeFrom = currentNode.prev;
              if (before) {
                removeFrom = addAfter(tokenList, removeFrom, before);
                pos += before.length;
              }
              removeRange(tokenList, removeFrom, removeCount);
              var wrapped = new Token3(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);
              currentNode = addAfter(tokenList, removeFrom, wrapped);
              if (after) {
                addAfter(tokenList, currentNode, after);
              }
              if (removeCount > 1) {
                var nestedRematch = {
                  cause: token + "," + j,
                  reach
                };
                matchGrammar(text8, tokenList, grammar, currentNode.prev, pos, nestedRematch);
                if (rematch && nestedRematch.reach > rematch.reach) {
                  rematch.reach = nestedRematch.reach;
                }
              }
            }
          }
        }
      }
      function LinkedList() {
        var head2 = { value: null, prev: null, next: null };
        var tail = { value: null, prev: head2, next: null };
        head2.next = tail;
        this.head = head2;
        this.tail = tail;
        this.length = 0;
      }
      function addAfter(list3, node, value) {
        var next = node.next;
        var newNode = { value, prev: node, next };
        node.next = newNode;
        next.prev = newNode;
        list3.length++;
        return newNode;
      }
      function removeRange(list3, node, count) {
        var next = node.next;
        for (var i3 = 0; i3 < count && next !== list3.tail; i3++) {
          next = next.next;
        }
        node.next = next;
        next.prev = node;
        list3.length -= i3;
      }
      function toArray(list3) {
        var array = [];
        var node = list3.head.next;
        while (node !== list3.tail) {
          array.push(node.value);
          node = node.next;
        }
        return array;
      }
      if (!_self2.document) {
        if (!_self2.addEventListener) {
          return _;
        }
        if (!_.disableWorkerMessageHandler) {
          _self2.addEventListener("message", function(evt) {
            var message = JSON.parse(evt.data);
            var lang2 = message.language;
            var code2 = message.code;
            var immediateClose = message.immediateClose;
            _self2.postMessage(_.highlight(code2, _.languages[lang2], lang2));
            if (immediateClose) {
              _self2.close();
            }
          }, false);
        }
        return _;
      }
      var script = _.util.currentScript();
      if (script) {
        _.filename = script.src;
        if (script.hasAttribute("data-manual")) {
          _.manual = true;
        }
      }
      function highlightAutomaticallyCallback() {
        if (!_.manual) {
          _.highlightAll();
        }
      }
      if (!_.manual) {
        var readyState = document.readyState;
        if (readyState === "loading" || readyState === "interactive" && script && script.defer) {
          document.addEventListener("DOMContentLoaded", highlightAutomaticallyCallback);
        } else {
          if (window.requestAnimationFrame) {
            window.requestAnimationFrame(highlightAutomaticallyCallback);
          } else {
            window.setTimeout(highlightAutomaticallyCallback, 16);
          }
        }
      }
      return _;
    }(_self);
    if (typeof module2 !== "undefined" && module2.exports) {
      module2.exports = Prism3;
    }
    if (typeof global !== "undefined") {
      global.Prism = Prism3;
    }
    Prism3.languages.markup = {
      "comment": {
        pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
        greedy: true
      },
      "prolog": {
        pattern: /<\?[\s\S]+?\?>/,
        greedy: true
      },
      "doctype": {
        pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
        greedy: true,
        inside: {
          "internal-subset": {
            pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
            lookbehind: true,
            greedy: true,
            inside: null
          },
          "string": {
            pattern: /"[^"]*"|'[^']*'/,
            greedy: true
          },
          "punctuation": /^<!|>$|[[\]]/,
          "doctype-tag": /^DOCTYPE/i,
          "name": /[^\s<>'"]+/
        }
      },
      "cdata": {
        pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
        greedy: true
      },
      "tag": {
        pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
        greedy: true,
        inside: {
          "tag": {
            pattern: /^<\/?[^\s>\/]+/,
            inside: {
              "punctuation": /^<\/?/,
              "namespace": /^[^\s>\/:]+:/
            }
          },
          "special-attr": [],
          "attr-value": {
            pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
            inside: {
              "punctuation": [
                {
                  pattern: /^=/,
                  alias: "attr-equals"
                },
                /"|'/
              ]
            }
          },
          "punctuation": /\/?>/,
          "attr-name": {
            pattern: /[^\s>\/]+/,
            inside: {
              "namespace": /^[^\s>\/:]+:/
            }
          }
        }
      },
      "entity": [
        {
          pattern: /&[\da-z]{1,8};/i,
          alias: "named-entity"
        },
        /&#x?[\da-f]{1,8};/i
      ]
    };
    Prism3.languages.markup["tag"].inside["attr-value"].inside["entity"] = Prism3.languages.markup["entity"];
    Prism3.languages.markup["doctype"].inside["internal-subset"].inside = Prism3.languages.markup;
    Prism3.hooks.add("wrap", function(env2) {
      if (env2.type === "entity") {
        env2.attributes["title"] = env2.content.replace(/&amp;/, "&");
      }
    });
    Object.defineProperty(Prism3.languages.markup.tag, "addInlined", {
      value: function addInlined(tagName, lang) {
        var includedCdataInside = {};
        includedCdataInside["language-" + lang] = {
          pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
          lookbehind: true,
          inside: Prism3.languages[lang]
        };
        includedCdataInside["cdata"] = /^<!\[CDATA\[|\]\]>$/i;
        var inside = {
          "included-cdata": {
            pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
            inside: includedCdataInside
          }
        };
        inside["language-" + lang] = {
          pattern: /[\s\S]+/,
          inside: Prism3.languages[lang]
        };
        var def = {};
        def[tagName] = {
          pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function() {
            return tagName;
          }), "i"),
          lookbehind: true,
          greedy: true,
          inside
        };
        Prism3.languages.insertBefore("markup", "cdata", def);
      }
    });
    Object.defineProperty(Prism3.languages.markup.tag, "addAttribute", {
      value: function(attrName, lang) {
        Prism3.languages.markup.tag.inside["special-attr"].push({
          pattern: RegExp(/(^|["'\s])/.source + "(?:" + attrName + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source, "i"),
          lookbehind: true,
          inside: {
            "attr-name": /^[^\s=]+/,
            "attr-value": {
              pattern: /=[\s\S]+/,
              inside: {
                "value": {
                  pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                  lookbehind: true,
                  alias: [lang, "language-" + lang],
                  inside: Prism3.languages[lang]
                },
                "punctuation": [
                  {
                    pattern: /^=/,
                    alias: "attr-equals"
                  },
                  /"|'/
                ]
              }
            }
          }
        });
      }
    });
    Prism3.languages.html = Prism3.languages.markup;
    Prism3.languages.mathml = Prism3.languages.markup;
    Prism3.languages.svg = Prism3.languages.markup;
    Prism3.languages.xml = Prism3.languages.extend("markup", {});
    Prism3.languages.ssml = Prism3.languages.xml;
    Prism3.languages.atom = Prism3.languages.xml;
    Prism3.languages.rss = Prism3.languages.xml;
    (function(Prism4) {
      var string3 = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
      Prism4.languages.css = {
        "comment": /\/\*[\s\S]*?\*\//,
        "atrule": {
          pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
          inside: {
            "rule": /^@[\w-]+/,
            "selector-function-argument": {
              pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
              lookbehind: true,
              alias: "selector"
            },
            "keyword": {
              pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
              lookbehind: true
            }
          }
        },
        "url": {
          pattern: RegExp("\\burl\\((?:" + string3.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
          greedy: true,
          inside: {
            "function": /^url/i,
            "punctuation": /^\(|\)$/,
            "string": {
              pattern: RegExp("^" + string3.source + "$"),
              alias: "url"
            }
          }
        },
        "selector": {
          pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + string3.source + ")*(?=\\s*\\{)"),
          lookbehind: true
        },
        "string": {
          pattern: string3,
          greedy: true
        },
        "property": {
          pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
          lookbehind: true
        },
        "important": /!important\b/i,
        "function": {
          pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
          lookbehind: true
        },
        "punctuation": /[(){};:,]/
      };
      Prism4.languages.css["atrule"].inside.rest = Prism4.languages.css;
      var markup = Prism4.languages.markup;
      if (markup) {
        markup.tag.addInlined("style", "css");
        markup.tag.addAttribute("style", "css");
      }
    })(Prism3);
    Prism3.languages.clike = {
      "comment": [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: true,
          greedy: true
        }
      ],
      "string": {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: true
      },
      "class-name": {
        pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
        lookbehind: true,
        inside: {
          "punctuation": /[.\\]/
        }
      },
      "keyword": /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
      "boolean": /\b(?:false|true)\b/,
      "function": /\b\w+(?=\()/,
      "number": /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
      "operator": /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
      "punctuation": /[{}[\];(),.:]/
    };
    Prism3.languages.javascript = Prism3.languages.extend("clike", {
      "class-name": [
        Prism3.languages.clike["class-name"],
        {
          pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
          lookbehind: true
        }
      ],
      "keyword": [
        {
          pattern: /((?:^|\})\s*)catch\b/,
          lookbehind: true
        },
        {
          pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
          lookbehind: true
        }
      ],
      "function": /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
      "number": {
        pattern: RegExp(/(^|[^\w$])/.source + "(?:" + (/NaN|Infinity/.source + "|" + /0[bB][01]+(?:_[01]+)*n?/.source + "|" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + /\d+(?:_\d+)*n/.source + "|" + /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ")" + /(?![\w$])/.source),
        lookbehind: true
      },
      "operator": /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
    });
    Prism3.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/;
    Prism3.languages.insertBefore("javascript", "keyword", {
      "regex": {
        pattern: RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source + /\//.source + "(?:" + /(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source + "|" + /(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ")" + /(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),
        lookbehind: true,
        greedy: true,
        inside: {
          "regex-source": {
            pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
            lookbehind: true,
            alias: "language-regex",
            inside: Prism3.languages.regex
          },
          "regex-delimiter": /^\/|\/$/,
          "regex-flags": /^[a-z]+$/
        }
      },
      "function-variable": {
        pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
        alias: "function"
      },
      "parameter": [
        {
          pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
          lookbehind: true,
          inside: Prism3.languages.javascript
        },
        {
          pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
          lookbehind: true,
          inside: Prism3.languages.javascript
        },
        {
          pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
          lookbehind: true,
          inside: Prism3.languages.javascript
        },
        {
          pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
          lookbehind: true,
          inside: Prism3.languages.javascript
        }
      ],
      "constant": /\b[A-Z](?:[A-Z_]|\dx?)*\b/
    });
    Prism3.languages.insertBefore("javascript", "string", {
      "hashbang": {
        pattern: /^#!.*/,
        greedy: true,
        alias: "comment"
      },
      "template-string": {
        pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
        greedy: true,
        inside: {
          "template-punctuation": {
            pattern: /^`|`$/,
            alias: "string"
          },
          "interpolation": {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
            lookbehind: true,
            inside: {
              "interpolation-punctuation": {
                pattern: /^\$\{|\}$/,
                alias: "punctuation"
              },
              rest: Prism3.languages.javascript
            }
          },
          "string": /[\s\S]+/
        }
      },
      "string-property": {
        pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
        lookbehind: true,
        greedy: true,
        alias: "property"
      }
    });
    Prism3.languages.insertBefore("javascript", "operator", {
      "literal-property": {
        pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
        lookbehind: true,
        alias: "property"
      }
    });
    if (Prism3.languages.markup) {
      Prism3.languages.markup.tag.addInlined("script", "javascript");
      Prism3.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, "javascript");
    }
    Prism3.languages.js = Prism3.languages.javascript;
    (function() {
      if (typeof Prism3 === "undefined" || typeof document === "undefined") {
        return;
      }
      if (!Element.prototype.matches) {
        Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
      }
      var LOADING_MESSAGE = "Loading\u2026";
      var FAILURE_MESSAGE = function(status, message) {
        return "\u2716 Error " + status + " while fetching file: " + message;
      };
      var FAILURE_EMPTY_MESSAGE = "\u2716 Error: File does not exist or is empty";
      var EXTENSIONS = {
        "js": "javascript",
        "py": "python",
        "rb": "ruby",
        "ps1": "powershell",
        "psm1": "powershell",
        "sh": "bash",
        "bat": "batch",
        "h": "c",
        "tex": "latex"
      };
      var STATUS_ATTR = "data-src-status";
      var STATUS_LOADING = "loading";
      var STATUS_LOADED = "loaded";
      var STATUS_FAILED = "failed";
      var SELECTOR = "pre[data-src]:not([" + STATUS_ATTR + '="' + STATUS_LOADED + '"]):not([' + STATUS_ATTR + '="' + STATUS_LOADING + '"])';
      function loadFile(src2, success2, error3) {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", src2, true);
        xhr.onreadystatechange = function() {
          if (xhr.readyState == 4) {
            if (xhr.status < 400 && xhr.responseText) {
              success2(xhr.responseText);
            } else {
              if (xhr.status >= 400) {
                error3(FAILURE_MESSAGE(xhr.status, xhr.statusText));
              } else {
                error3(FAILURE_EMPTY_MESSAGE);
              }
            }
          }
        };
        xhr.send(null);
      }
      function parseRange(range2) {
        var m3 = /^\s*(\d+)\s*(?:(,)\s*(?:(\d+)\s*)?)?$/.exec(range2 || "");
        if (m3) {
          var start3 = Number(m3[1]);
          var comma = m3[2];
          var end = m3[3];
          if (!comma) {
            return [start3, start3];
          }
          if (!end) {
            return [start3, void 0];
          }
          return [start3, Number(end)];
        }
        return void 0;
      }
      Prism3.hooks.add("before-highlightall", function(env2) {
        env2.selector += ", " + SELECTOR;
      });
      Prism3.hooks.add("before-sanity-check", function(env2) {
        var pre = env2.element;
        if (pre.matches(SELECTOR)) {
          env2.code = "";
          pre.setAttribute(STATUS_ATTR, STATUS_LOADING);
          var code2 = pre.appendChild(document.createElement("CODE"));
          code2.textContent = LOADING_MESSAGE;
          var src2 = pre.getAttribute("data-src");
          var language = env2.language;
          if (language === "none") {
            var extension2 = (/\.(\w+)$/.exec(src2) || [, "none"])[1];
            language = EXTENSIONS[extension2] || extension2;
          }
          Prism3.util.setLanguage(code2, language);
          Prism3.util.setLanguage(pre, language);
          var autoloader = Prism3.plugins.autoloader;
          if (autoloader) {
            autoloader.loadLanguages(language);
          }
          loadFile(src2, function(text8) {
            pre.setAttribute(STATUS_ATTR, STATUS_LOADED);
            var range2 = parseRange(pre.getAttribute("data-range"));
            if (range2) {
              var lines = text8.split(/\r\n?|\n/g);
              var start3 = range2[0];
              var end = range2[1] == null ? lines.length : range2[1];
              if (start3 < 0) {
                start3 += lines.length;
              }
              start3 = Math.max(0, Math.min(start3 - 1, lines.length));
              if (end < 0) {
                end += lines.length;
              }
              end = Math.max(0, Math.min(end, lines.length));
              text8 = lines.slice(start3, end).join("\n");
              if (!pre.hasAttribute("data-start")) {
                pre.setAttribute("data-start", String(start3 + 1));
              }
            }
            code2.textContent = text8;
            Prism3.highlightElement(code2);
          }, function(error3) {
            pre.setAttribute(STATUS_ATTR, STATUS_FAILED);
            code2.textContent = error3;
          });
        }
      });
      Prism3.plugins.fileHighlight = {
        highlight: function highlight(container) {
          var elements = (container || document).querySelectorAll(SELECTOR);
          for (var i3 = 0, element6; element6 = elements[i3++]; ) {
            Prism3.highlightElement(element6);
          }
        }
      };
      var logged = false;
      Prism3.fileHighlight = function() {
        if (!logged) {
          console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.");
          logged = true;
        }
        Prism3.plugins.fileHighlight.highlight.apply(this, arguments);
      };
    })();
  }
});

// node_modules/prismjs/components.js
var require_components = __commonJS({
  "node_modules/prismjs/components.js"(exports, module2) {
    var components = { "core": { "meta": { "path": "components/prism-core.js", "option": "mandatory" }, "core": "Core" }, "themes": { "meta": { "path": "themes/{id}.css", "link": "index.html?theme={id}", "exclusive": true }, "prism": { "title": "Default", "option": "default" }, "prism-dark": "Dark", "prism-funky": "Funky", "prism-okaidia": { "title": "Okaidia", "owner": "ocodia" }, "prism-twilight": { "title": "Twilight", "owner": "remybach" }, "prism-coy": { "title": "Coy", "owner": "tshedor" }, "prism-solarizedlight": { "title": "Solarized Light", "owner": "hectormatos2011 " }, "prism-tomorrow": { "title": "Tomorrow Night", "owner": "Rosey" } }, "languages": { "meta": { "path": "components/prism-{id}", "noCSS": true, "examplesPath": "examples/prism-{id}", "addCheckAll": true }, "markup": { "title": "Markup", "alias": ["html", "xml", "svg", "mathml", "ssml", "atom", "rss"], "aliasTitles": { "html": "HTML", "xml": "XML", "svg": "SVG", "mathml": "MathML", "ssml": "SSML", "atom": "Atom", "rss": "RSS" }, "option": "default" }, "css": { "title": "CSS", "option": "default", "modify": "markup" }, "clike": { "title": "C-like", "option": "default" }, "javascript": { "title": "JavaScript", "require": "clike", "modify": "markup", "optional": "regex", "alias": "js", "option": "default" }, "abap": { "title": "ABAP", "owner": "dellagustin" }, "abnf": { "title": "ABNF", "owner": "RunDevelopment" }, "actionscript": { "title": "ActionScript", "require": "javascript", "modify": "markup", "owner": "Golmote" }, "ada": { "title": "Ada", "owner": "Lucretia" }, "agda": { "title": "Agda", "owner": "xy-ren" }, "al": { "title": "AL", "owner": "RunDevelopment" }, "antlr4": { "title": "ANTLR4", "alias": "g4", "owner": "RunDevelopment" }, "apacheconf": { "title": "Apache Configuration", "owner": "GuiTeK" }, "apex": { "title": "Apex", "require": ["clike", "sql"], "owner": "RunDevelopment" }, "apl": { "title": "APL", "owner": "ngn" }, "applescript": { "title": "AppleScript", "owner": "Golmote" }, "aql": { "title": "AQL", "owner": "RunDevelopment" }, "arduino": { "title": "Arduino", "require": "cpp", "alias": "ino", "owner": "dkern" }, "arff": { "title": "ARFF", "owner": "Golmote" }, "armasm": { "title": "ARM Assembly", "alias": "arm-asm", "owner": "RunDevelopment" }, "arturo": { "title": "Arturo", "alias": "art", "optional": ["bash", "css", "javascript", "markup", "markdown", "sql"], "owner": "drkameleon" }, "asciidoc": { "alias": "adoc", "title": "AsciiDoc", "owner": "Golmote" }, "aspnet": { "title": "ASP.NET (C#)", "require": ["markup", "csharp"], "owner": "nauzilus" }, "asm6502": { "title": "6502 Assembly", "owner": "kzurawel" }, "asmatmel": { "title": "Atmel AVR Assembly", "owner": "cerkit" }, "autohotkey": { "title": "AutoHotkey", "owner": "aviaryan" }, "autoit": { "title": "AutoIt", "owner": "Golmote" }, "avisynth": { "title": "AviSynth", "alias": "avs", "owner": "Zinfidel" }, "avro-idl": { "title": "Avro IDL", "alias": "avdl", "owner": "RunDevelopment" }, "awk": { "title": "AWK", "alias": "gawk", "aliasTitles": { "gawk": "GAWK" }, "owner": "RunDevelopment" }, "bash": { "title": "Bash", "alias": "shell", "aliasTitles": { "shell": "Shell" }, "owner": "zeitgeist87" }, "basic": { "title": "BASIC", "owner": "Golmote" }, "batch": { "title": "Batch", "owner": "Golmote" }, "bbcode": { "title": "BBcode", "alias": "shortcode", "aliasTitles": { "shortcode": "Shortcode" }, "owner": "RunDevelopment" }, "bicep": { "title": "Bicep", "owner": "johnnyreilly" }, "birb": { "title": "Birb", "require": "clike", "owner": "Calamity210" }, "bison": { "title": "Bison", "require": "c", "owner": "Golmote" }, "bnf": { "title": "BNF", "alias": "rbnf", "aliasTitles": { "rbnf": "RBNF" }, "owner": "RunDevelopment" }, "brainfuck": { "title": "Brainfuck", "owner": "Golmote" }, "brightscript": { "title": "BrightScript", "owner": "RunDevelopment" }, "bro": { "title": "Bro", "owner": "wayward710" }, "bsl": { "title": "BSL (1C:Enterprise)", "alias": "oscript", "aliasTitles": { "oscript": "OneScript" }, "owner": "Diversus23" }, "c": { "title": "C", "require": "clike", "owner": "zeitgeist87" }, "csharp": { "title": "C#", "require": "clike", "alias": ["cs", "dotnet"], "owner": "mvalipour" }, "cpp": { "title": "C++", "require": "c", "owner": "zeitgeist87" }, "cfscript": { "title": "CFScript", "require": "clike", "alias": "cfc", "owner": "mjclemente" }, "chaiscript": { "title": "ChaiScript", "require": ["clike", "cpp"], "owner": "RunDevelopment" }, "cil": { "title": "CIL", "owner": "sbrl" }, "clojure": { "title": "Clojure", "owner": "troglotit" }, "cmake": { "title": "CMake", "owner": "mjrogozinski" }, "cobol": { "title": "COBOL", "owner": "RunDevelopment" }, "coffeescript": { "title": "CoffeeScript", "require": "javascript", "alias": "coffee", "owner": "R-osey" }, "concurnas": { "title": "Concurnas", "alias": "conc", "owner": "jasontatton" }, "csp": { "title": "Content-Security-Policy", "owner": "ScottHelme" }, "cooklang": { "title": "Cooklang", "owner": "ahue" }, "coq": { "title": "Coq", "owner": "RunDevelopment" }, "crystal": { "title": "Crystal", "require": "ruby", "owner": "MakeNowJust" }, "css-extras": { "title": "CSS Extras", "require": "css", "modify": "css", "owner": "milesj" }, "csv": { "title": "CSV", "owner": "RunDevelopment" }, "cue": { "title": "CUE", "owner": "RunDevelopment" }, "cypher": { "title": "Cypher", "owner": "RunDevelopment" }, "d": { "title": "D", "require": "clike", "owner": "Golmote" }, "dart": { "title": "Dart", "require": "clike", "owner": "Golmote" }, "dataweave": { "title": "DataWeave", "owner": "machaval" }, "dax": { "title": "DAX", "owner": "peterbud" }, "dhall": { "title": "Dhall", "owner": "RunDevelopment" }, "diff": { "title": "Diff", "owner": "uranusjr" }, "django": { "title": "Django/Jinja2", "require": "markup-templating", "alias": "jinja2", "owner": "romanvm" }, "dns-zone-file": { "title": "DNS zone file", "owner": "RunDevelopment", "alias": "dns-zone" }, "docker": { "title": "Docker", "alias": "dockerfile", "owner": "JustinBeckwith" }, "dot": { "title": "DOT (Graphviz)", "alias": "gv", "optional": "markup", "owner": "RunDevelopment" }, "ebnf": { "title": "EBNF", "owner": "RunDevelopment" }, "editorconfig": { "title": "EditorConfig", "owner": "osipxd" }, "eiffel": { "title": "Eiffel", "owner": "Conaclos" }, "ejs": { "title": "EJS", "require": ["javascript", "markup-templating"], "owner": "RunDevelopment", "alias": "eta", "aliasTitles": { "eta": "Eta" } }, "elixir": { "title": "Elixir", "owner": "Golmote" }, "elm": { "title": "Elm", "owner": "zwilias" }, "etlua": { "title": "Embedded Lua templating", "require": ["lua", "markup-templating"], "owner": "RunDevelopment" }, "erb": { "title": "ERB", "require": ["ruby", "markup-templating"], "owner": "Golmote" }, "erlang": { "title": "Erlang", "owner": "Golmote" }, "excel-formula": { "title": "Excel Formula", "alias": ["xlsx", "xls"], "owner": "RunDevelopment" }, "fsharp": { "title": "F#", "require": "clike", "owner": "simonreynolds7" }, "factor": { "title": "Factor", "owner": "catb0t" }, "false": { "title": "False", "owner": "edukisto" }, "firestore-security-rules": { "title": "Firestore security rules", "require": "clike", "owner": "RunDevelopment" }, "flow": { "title": "Flow", "require": "javascript", "owner": "Golmote" }, "fortran": { "title": "Fortran", "owner": "Golmote" }, "ftl": { "title": "FreeMarker Template Language", "require": "markup-templating", "owner": "RunDevelopment" }, "gml": { "title": "GameMaker Language", "alias": "gamemakerlanguage", "require": "clike", "owner": "LiarOnce" }, "gap": { "title": "GAP (CAS)", "owner": "RunDevelopment" }, "gcode": { "title": "G-code", "owner": "RunDevelopment" }, "gdscript": { "title": "GDScript", "owner": "RunDevelopment" }, "gedcom": { "title": "GEDCOM", "owner": "Golmote" }, "gettext": { "title": "gettext", "alias": "po", "owner": "RunDevelopment" }, "gherkin": { "title": "Gherkin", "owner": "hason" }, "git": { "title": "Git", "owner": "lgiraudel" }, "glsl": { "title": "GLSL", "require": "c", "owner": "Golmote" }, "gn": { "title": "GN", "alias": "gni", "owner": "RunDevelopment" }, "linker-script": { "title": "GNU Linker Script", "alias": "ld", "owner": "RunDevelopment" }, "go": { "title": "Go", "require": "clike", "owner": "arnehormann" }, "go-module": { "title": "Go module", "alias": "go-mod", "owner": "RunDevelopment" }, "graphql": { "title": "GraphQL", "optional": "markdown", "owner": "Golmote" }, "groovy": { "title": "Groovy", "require": "clike", "owner": "robfletcher" }, "haml": { "title": "Haml", "require": "ruby", "optional": ["css", "css-extras", "coffeescript", "erb", "javascript", "less", "markdown", "scss", "textile"], "owner": "Golmote" }, "handlebars": { "title": "Handlebars", "require": "markup-templating", "alias": ["hbs", "mustache"], "aliasTitles": { "mustache": "Mustache" }, "owner": "Golmote" }, "haskell": { "title": "Haskell", "alias": "hs", "owner": "bholst" }, "haxe": { "title": "Haxe", "require": "clike", "optional": "regex", "owner": "Golmote" }, "hcl": { "title": "HCL", "owner": "outsideris" }, "hlsl": { "title": "HLSL", "require": "c", "owner": "RunDevelopment" }, "hoon": { "title": "Hoon", "owner": "matildepark" }, "http": { "title": "HTTP", "optional": ["csp", "css", "hpkp", "hsts", "javascript", "json", "markup", "uri"], "owner": "danielgtaylor" }, "hpkp": { "title": "HTTP Public-Key-Pins", "owner": "ScottHelme" }, "hsts": { "title": "HTTP Strict-Transport-Security", "owner": "ScottHelme" }, "ichigojam": { "title": "IchigoJam", "owner": "BlueCocoa" }, "icon": { "title": "Icon", "owner": "Golmote" }, "icu-message-format": { "title": "ICU Message Format", "owner": "RunDevelopment" }, "idris": { "title": "Idris", "alias": "idr", "owner": "KeenS", "require": "haskell" }, "ignore": { "title": ".ignore", "owner": "osipxd", "alias": ["gitignore", "hgignore", "npmignore"], "aliasTitles": { "gitignore": ".gitignore", "hgignore": ".hgignore", "npmignore": ".npmignore" } }, "inform7": { "title": "Inform 7", "owner": "Golmote" }, "ini": { "title": "Ini", "owner": "aviaryan" }, "io": { "title": "Io", "owner": "AlesTsurko" }, "j": { "title": "J", "owner": "Golmote" }, "java": { "title": "Java", "require": "clike", "owner": "sherblot" }, "javadoc": { "title": "JavaDoc", "require": ["markup", "java", "javadoclike"], "modify": "java", "optional": "scala", "owner": "RunDevelopment" }, "javadoclike": { "title": "JavaDoc-like", "modify": ["java", "javascript", "php"], "owner": "RunDevelopment" }, "javastacktrace": { "title": "Java stack trace", "owner": "RunDevelopment" }, "jexl": { "title": "Jexl", "owner": "czosel" }, "jolie": { "title": "Jolie", "require": "clike", "owner": "thesave" }, "jq": { "title": "JQ", "owner": "RunDevelopment" }, "jsdoc": { "title": "JSDoc", "require": ["javascript", "javadoclike", "typescript"], "modify": "javascript", "optional": ["actionscript", "coffeescript"], "owner": "RunDevelopment" }, "js-extras": { "title": "JS Extras", "require": "javascript", "modify": "javascript", "optional": ["actionscript", "coffeescript", "flow", "n4js", "typescript"], "owner": "RunDevelopment" }, "json": { "title": "JSON", "alias": "webmanifest", "aliasTitles": { "webmanifest": "Web App Manifest" }, "owner": "CupOfTea696" }, "json5": { "title": "JSON5", "require": "json", "owner": "RunDevelopment" }, "jsonp": { "title": "JSONP", "require": "json", "owner": "RunDevelopment" }, "jsstacktrace": { "title": "JS stack trace", "owner": "sbrl" }, "js-templates": { "title": "JS Templates", "require": "javascript", "modify": "javascript", "optional": ["css", "css-extras", "graphql", "markdown", "markup", "sql"], "owner": "RunDevelopment" }, "julia": { "title": "Julia", "owner": "cdagnino" }, "keepalived": { "title": "Keepalived Configure", "owner": "dev-itsheng" }, "keyman": { "title": "Keyman", "owner": "mcdurdin" }, "kotlin": { "title": "Kotlin", "alias": ["kt", "kts"], "aliasTitles": { "kts": "Kotlin Script" }, "require": "clike", "owner": "Golmote" }, "kumir": { "title": "KuMir (\u041A\u0443\u041C\u0438\u0440)", "alias": "kum", "owner": "edukisto" }, "kusto": { "title": "Kusto", "owner": "RunDevelopment" }, "latex": { "title": "LaTeX", "alias": ["tex", "context"], "aliasTitles": { "tex": "TeX", "context": "ConTeXt" }, "owner": "japborst" }, "latte": { "title": "Latte", "require": ["clike", "markup-templating", "php"], "owner": "nette" }, "less": { "title": "Less", "require": "css", "optional": "css-extras", "owner": "Golmote" }, "lilypond": { "title": "LilyPond", "require": "scheme", "alias": "ly", "owner": "RunDevelopment" }, "liquid": { "title": "Liquid", "require": "markup-templating", "owner": "cinhtau" }, "lisp": { "title": "Lisp", "alias": ["emacs", "elisp", "emacs-lisp"], "owner": "JuanCaicedo" }, "livescript": { "title": "LiveScript", "owner": "Golmote" }, "llvm": { "title": "LLVM IR", "owner": "porglezomp" }, "log": { "title": "Log file", "optional": "javastacktrace", "owner": "RunDevelopment" }, "lolcode": { "title": "LOLCODE", "owner": "Golmote" }, "lua": { "title": "Lua", "owner": "Golmote" }, "magma": { "title": "Magma (CAS)", "owner": "RunDevelopment" }, "makefile": { "title": "Makefile", "owner": "Golmote" }, "markdown": { "title": "Markdown", "require": "markup", "optional": "yaml", "alias": "md", "owner": "Golmote" }, "markup-templating": { "title": "Markup templating", "require": "markup", "owner": "Golmote" }, "mata": { "title": "Mata", "owner": "RunDevelopment" }, "matlab": { "title": "MATLAB", "owner": "Golmote" }, "maxscript": { "title": "MAXScript", "owner": "RunDevelopment" }, "mel": { "title": "MEL", "owner": "Golmote" }, "mermaid": { "title": "Mermaid", "owner": "RunDevelopment" }, "mizar": { "title": "Mizar", "owner": "Golmote" }, "mongodb": { "title": "MongoDB", "owner": "airs0urce", "require": "javascript" }, "monkey": { "title": "Monkey", "owner": "Golmote" }, "moonscript": { "title": "MoonScript", "alias": "moon", "owner": "RunDevelopment" }, "n1ql": { "title": "N1QL", "owner": "TMWilds" }, "n4js": { "title": "N4JS", "require": "javascript", "optional": "jsdoc", "alias": "n4jsd", "owner": "bsmith-n4" }, "nand2tetris-hdl": { "title": "Nand To Tetris HDL", "owner": "stephanmax" }, "naniscript": { "title": "Naninovel Script", "owner": "Elringus", "alias": "nani" }, "nasm": { "title": "NASM", "owner": "rbmj" }, "neon": { "title": "NEON", "owner": "nette" }, "nevod": { "title": "Nevod", "owner": "nezaboodka" }, "nginx": { "title": "nginx", "owner": "volado" }, "nim": { "title": "Nim", "owner": "Golmote" }, "nix": { "title": "Nix", "owner": "Golmote" }, "nsis": { "title": "NSIS", "owner": "idleberg" }, "objectivec": { "title": "Objective-C", "require": "c", "alias": "objc", "owner": "uranusjr" }, "ocaml": { "title": "OCaml", "owner": "Golmote" }, "odin": { "title": "Odin", "owner": "edukisto" }, "opencl": { "title": "OpenCL", "require": "c", "modify": ["c", "cpp"], "owner": "Milania1" }, "openqasm": { "title": "OpenQasm", "alias": "qasm", "owner": "RunDevelopment" }, "oz": { "title": "Oz", "owner": "Golmote" }, "parigp": { "title": "PARI/GP", "owner": "Golmote" }, "parser": { "title": "Parser", "require": "markup", "owner": "Golmote" }, "pascal": { "title": "Pascal", "alias": "objectpascal", "aliasTitles": { "objectpascal": "Object Pascal" }, "owner": "Golmote" }, "pascaligo": { "title": "Pascaligo", "owner": "DefinitelyNotAGoat" }, "psl": { "title": "PATROL Scripting Language", "owner": "bertysentry" }, "pcaxis": { "title": "PC-Axis", "alias": "px", "owner": "RunDevelopment" }, "peoplecode": { "title": "PeopleCode", "alias": "pcode", "owner": "RunDevelopment" }, "perl": { "title": "Perl", "owner": "Golmote" }, "php": { "title": "PHP", "require": "markup-templating", "owner": "milesj" }, "phpdoc": { "title": "PHPDoc", "require": ["php", "javadoclike"], "modify": "php", "owner": "RunDevelopment" }, "php-extras": { "title": "PHP Extras", "require": "php", "modify": "php", "owner": "milesj" }, "plant-uml": { "title": "PlantUML", "alias": "plantuml", "owner": "RunDevelopment" }, "plsql": { "title": "PL/SQL", "require": "sql", "owner": "Golmote" }, "powerquery": { "title": "PowerQuery", "alias": ["pq", "mscript"], "owner": "peterbud" }, "powershell": { "title": "PowerShell", "owner": "nauzilus" }, "processing": { "title": "Processing", "require": "clike", "owner": "Golmote" }, "prolog": { "title": "Prolog", "owner": "Golmote" }, "promql": { "title": "PromQL", "owner": "arendjr" }, "properties": { "title": ".properties", "owner": "Golmote" }, "protobuf": { "title": "Protocol Buffers", "require": "clike", "owner": "just-boris" }, "pug": { "title": "Pug", "require": ["markup", "javascript"], "optional": ["coffeescript", "ejs", "handlebars", "less", "livescript", "markdown", "scss", "stylus", "twig"], "owner": "Golmote" }, "puppet": { "title": "Puppet", "owner": "Golmote" }, "pure": { "title": "Pure", "optional": ["c", "cpp", "fortran"], "owner": "Golmote" }, "purebasic": { "title": "PureBasic", "require": "clike", "alias": "pbfasm", "owner": "HeX0R101" }, "purescript": { "title": "PureScript", "require": "haskell", "alias": "purs", "owner": "sriharshachilakapati" }, "python": { "title": "Python", "alias": "py", "owner": "multipetros" }, "qsharp": { "title": "Q#", "require": "clike", "alias": "qs", "owner": "fedonman" }, "q": { "title": "Q (kdb+ database)", "owner": "Golmote" }, "qml": { "title": "QML", "require": "javascript", "owner": "RunDevelopment" }, "qore": { "title": "Qore", "require": "clike", "owner": "temnroegg" }, "r": { "title": "R", "owner": "Golmote" }, "racket": { "title": "Racket", "require": "scheme", "alias": "rkt", "owner": "RunDevelopment" }, "cshtml": { "title": "Razor C#", "alias": "razor", "require": ["markup", "csharp"], "optional": ["css", "css-extras", "javascript", "js-extras"], "owner": "RunDevelopment" }, "jsx": { "title": "React JSX", "require": ["markup", "javascript"], "optional": ["jsdoc", "js-extras", "js-templates"], "owner": "vkbansal" }, "tsx": { "title": "React TSX", "require": ["jsx", "typescript"] }, "reason": { "title": "Reason", "require": "clike", "owner": "Golmote" }, "regex": { "title": "Regex", "owner": "RunDevelopment" }, "rego": { "title": "Rego", "owner": "JordanSh" }, "renpy": { "title": "Ren'py", "alias": "rpy", "owner": "HyuchiaDiego" }, "rescript": { "title": "ReScript", "alias": "res", "owner": "vmarcosp" }, "rest": { "title": "reST (reStructuredText)", "owner": "Golmote" }, "rip": { "title": "Rip", "owner": "ravinggenius" }, "roboconf": { "title": "Roboconf", "owner": "Golmote" }, "robotframework": { "title": "Robot Framework", "alias": "robot", "owner": "RunDevelopment" }, "ruby": { "title": "Ruby", "require": "clike", "alias": "rb", "owner": "samflores" }, "rust": { "title": "Rust", "owner": "Golmote" }, "sas": { "title": "SAS", "optional": ["groovy", "lua", "sql"], "owner": "Golmote" }, "sass": { "title": "Sass (Sass)", "require": "css", "optional": "css-extras", "owner": "Golmote" }, "scss": { "title": "Sass (Scss)", "require": "css", "optional": "css-extras", "owner": "MoOx" }, "scala": { "title": "Scala", "require": "java", "owner": "jozic" }, "scheme": { "title": "Scheme", "owner": "bacchus123" }, "shell-session": { "title": "Shell session", "require": "bash", "alias": ["sh-session", "shellsession"], "owner": "RunDevelopment" }, "smali": { "title": "Smali", "owner": "RunDevelopment" }, "smalltalk": { "title": "Smalltalk", "owner": "Golmote" }, "smarty": { "title": "Smarty", "require": "markup-templating", "optional": "php", "owner": "Golmote" }, "sml": { "title": "SML", "alias": "smlnj", "aliasTitles": { "smlnj": "SML/NJ" }, "owner": "RunDevelopment" }, "solidity": { "title": "Solidity (Ethereum)", "alias": "sol", "require": "clike", "owner": "glachaud" }, "solution-file": { "title": "Solution file", "alias": "sln", "owner": "RunDevelopment" }, "soy": { "title": "Soy (Closure Template)", "require": "markup-templating", "owner": "Golmote" }, "sparql": { "title": "SPARQL", "require": "turtle", "owner": "Triply-Dev", "alias": "rq" }, "splunk-spl": { "title": "Splunk SPL", "owner": "RunDevelopment" }, "sqf": { "title": "SQF: Status Quo Function (Arma 3)", "require": "clike", "owner": "RunDevelopment" }, "sql": { "title": "SQL", "owner": "multipetros" }, "squirrel": { "title": "Squirrel", "require": "clike", "owner": "RunDevelopment" }, "stan": { "title": "Stan", "owner": "RunDevelopment" }, "stata": { "title": "Stata Ado", "require": ["mata", "java", "python"], "owner": "RunDevelopment" }, "iecst": { "title": "Structured Text (IEC 61131-3)", "owner": "serhioromano" }, "stylus": { "title": "Stylus", "owner": "vkbansal" }, "supercollider": { "title": "SuperCollider", "alias": "sclang", "owner": "RunDevelopment" }, "swift": { "title": "Swift", "owner": "chrischares" }, "systemd": { "title": "Systemd configuration file", "owner": "RunDevelopment" }, "t4-templating": { "title": "T4 templating", "owner": "RunDevelopment" }, "t4-cs": { "title": "T4 Text Templates (C#)", "require": ["t4-templating", "csharp"], "alias": "t4", "owner": "RunDevelopment" }, "t4-vb": { "title": "T4 Text Templates (VB)", "require": ["t4-templating", "vbnet"], "owner": "RunDevelopment" }, "tap": { "title": "TAP", "owner": "isaacs", "require": "yaml" }, "tcl": { "title": "Tcl", "owner": "PeterChaplin" }, "tt2": { "title": "Template Toolkit 2", "require": ["clike", "markup-templating"], "owner": "gflohr" }, "textile": { "title": "Textile", "require": "markup", "optional": "css", "owner": "Golmote" }, "toml": { "title": "TOML", "owner": "RunDevelopment" }, "tremor": { "title": "Tremor", "alias": ["trickle", "troy"], "owner": "darach", "aliasTitles": { "trickle": "trickle", "troy": "troy" } }, "turtle": { "title": "Turtle", "alias": "trig", "aliasTitles": { "trig": "TriG" }, "owner": "jakubklimek" }, "twig": { "title": "Twig", "require": "markup-templating", "owner": "brandonkelly" }, "typescript": { "title": "TypeScript", "require": "javascript", "optional": "js-templates", "alias": "ts", "owner": "vkbansal" }, "typoscript": { "title": "TypoScript", "alias": "tsconfig", "aliasTitles": { "tsconfig": "TSConfig" }, "owner": "dkern" }, "unrealscript": { "title": "UnrealScript", "alias": ["uscript", "uc"], "owner": "RunDevelopment" }, "uorazor": { "title": "UO Razor Script", "owner": "jaseowns" }, "uri": { "title": "URI", "alias": "url", "aliasTitles": { "url": "URL" }, "owner": "RunDevelopment" }, "v": { "title": "V", "require": "clike", "owner": "taggon" }, "vala": { "title": "Vala", "require": "clike", "optional": "regex", "owner": "TemplarVolk" }, "vbnet": { "title": "VB.Net", "require": "basic", "owner": "Bigsby" }, "velocity": { "title": "Velocity", "require": "markup", "owner": "Golmote" }, "verilog": { "title": "Verilog", "owner": "a-rey" }, "vhdl": { "title": "VHDL", "owner": "a-rey" }, "vim": { "title": "vim", "owner": "westonganger" }, "visual-basic": { "title": "Visual Basic", "alias": ["vb", "vba"], "aliasTitles": { "vba": "VBA" }, "owner": "Golmote" }, "warpscript": { "title": "WarpScript", "owner": "RunDevelopment" }, "wasm": { "title": "WebAssembly", "owner": "Golmote" }, "web-idl": { "title": "Web IDL", "alias": "webidl", "owner": "RunDevelopment" }, "wiki": { "title": "Wiki markup", "require": "markup", "owner": "Golmote" }, "wolfram": { "title": "Wolfram language", "alias": ["mathematica", "nb", "wl"], "aliasTitles": { "mathematica": "Mathematica", "nb": "Mathematica Notebook" }, "owner": "msollami" }, "wren": { "title": "Wren", "owner": "clsource" }, "xeora": { "title": "Xeora", "require": "markup", "alias": "xeoracube", "aliasTitles": { "xeoracube": "XeoraCube" }, "owner": "freakmaxi" }, "xml-doc": { "title": "XML doc (.net)", "require": "markup", "modify": ["csharp", "fsharp", "vbnet"], "owner": "RunDevelopment" }, "xojo": { "title": "Xojo (REALbasic)", "owner": "Golmote" }, "xquery": { "title": "XQuery", "require": "markup", "owner": "Golmote" }, "yaml": { "title": "YAML", "alias": "yml", "owner": "hason" }, "yang": { "title": "YANG", "owner": "RunDevelopment" }, "zig": { "title": "Zig", "owner": "RunDevelopment" } }, "plugins": { "meta": { "path": "plugins/{id}/prism-{id}", "link": "plugins/{id}/" }, "line-highlight": { "title": "Line Highlight", "description": "Highlights specific lines and/or line ranges." }, "line-numbers": { "title": "Line Numbers", "description": "Line number at the beginning of code lines.", "owner": "kuba-kubula" }, "show-invisibles": { "title": "Show Invisibles", "description": "Show hidden characters such as tabs and line breaks.", "optional": ["autolinker", "data-uri-highlight"] }, "autolinker": { "title": "Autolinker", "description": "Converts URLs and emails in code to clickable links. Parses Markdown links in comments." }, "wpd": { "title": "WebPlatform Docs", "description": 'Makes tokens link to <a href="https://webplatform.github.io/docs/">WebPlatform.org documentation</a>. The links open in a new tab.' }, "custom-class": { "title": "Custom Class", "description": "This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.", "owner": "dvkndn", "noCSS": true }, "file-highlight": { "title": "File Highlight", "description": "Fetch external files and highlight them with Prism. Used on the Prism website itself.", "noCSS": true }, "show-language": { "title": "Show Language", "description": "Display the highlighted language in code blocks (inline code does not show the label).", "owner": "nauzilus", "noCSS": true, "require": "toolbar" }, "jsonp-highlight": { "title": "JSONP Highlight", "description": "Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).", "noCSS": true, "owner": "nauzilus" }, "highlight-keywords": { "title": "Highlight Keywords", "description": "Adds special CSS classes for each keyword for fine-grained highlighting.", "owner": "vkbansal", "noCSS": true }, "remove-initial-line-feed": { "title": "Remove initial line feed", "description": "Removes the initial line feed in code blocks.", "owner": "Golmote", "noCSS": true }, "inline-color": { "title": "Inline color", "description": "Adds a small inline preview for colors in style sheets.", "require": "css-extras", "owner": "RunDevelopment" }, "previewers": { "title": "Previewers", "description": "Previewers for angles, colors, gradients, easing and time.", "require": "css-extras", "owner": "Golmote" }, "autoloader": { "title": "Autoloader", "description": "Automatically loads the needed languages to highlight the code blocks.", "owner": "Golmote", "noCSS": true }, "keep-markup": { "title": "Keep Markup", "description": "Prevents custom markup from being dropped out during highlighting.", "owner": "Golmote", "optional": "normalize-whitespace", "noCSS": true }, "command-line": { "title": "Command Line", "description": "Display a command line with a prompt and, optionally, the output/response from the commands.", "owner": "chriswells0" }, "unescaped-markup": { "title": "Unescaped Markup", "description": "Write markup without having to escape anything." }, "normalize-whitespace": { "title": "Normalize Whitespace", "description": "Supports multiple operations to normalize whitespace in code blocks.", "owner": "zeitgeist87", "optional": "unescaped-markup", "noCSS": true }, "data-uri-highlight": { "title": "Data-URI Highlight", "description": "Highlights data-URI contents.", "owner": "Golmote", "noCSS": true }, "toolbar": { "title": "Toolbar", "description": "Attach a toolbar for plugins to easily register buttons on the top of a code block.", "owner": "mAAdhaTTah" }, "copy-to-clipboard": { "title": "Copy to Clipboard Button", "description": "Add a button that copies the code block to the clipboard when clicked.", "owner": "mAAdhaTTah", "require": "toolbar", "noCSS": true }, "download-button": { "title": "Download Button", "description": "A button in the toolbar of a code block adding a convenient way to download a code file.", "owner": "Golmote", "require": "toolbar", "noCSS": true }, "match-braces": { "title": "Match braces", "description": "Highlights matching braces.", "owner": "RunDevelopment" }, "diff-highlight": { "title": "Diff Highlight", "description": "Highlights the code inside diff blocks.", "owner": "RunDevelopment", "require": "diff" }, "filter-highlight-all": { "title": "Filter highlightAll", "description": "Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.", "owner": "RunDevelopment", "noCSS": true }, "treeview": { "title": "Treeview", "description": "A language with special styles to highlight file system tree structures.", "owner": "Golmote" } } };
    if (typeof module2 !== "undefined" && module2.exports) {
      module2.exports = components;
    }
  }
});

// node_modules/prismjs/dependencies.js
var require_dependencies = __commonJS({
  "node_modules/prismjs/dependencies.js"(exports, module2) {
    "use strict";
    var getLoader = function() {
      var noop3 = function() {
      };
      function forEach3(value, callbackFn) {
        if (Array.isArray(value)) {
          value.forEach(callbackFn);
        } else if (value != null) {
          callbackFn(value, 0);
        }
      }
      function toSet(array) {
        var set = {};
        for (var i3 = 0, l2 = array.length; i3 < l2; i3++) {
          set[array[i3]] = true;
        }
        return set;
      }
      function createEntryMap(components) {
        var map3 = {};
        for (var categoryName in components) {
          var category = components[categoryName];
          for (var id in category) {
            if (id != "meta") {
              var entry = category[id];
              map3[id] = typeof entry == "string" ? { title: entry } : entry;
            }
          }
        }
        return map3;
      }
      function createDependencyResolver(entryMap) {
        var map3 = {};
        var _stackArray = [];
        function addToMap(id, stack) {
          if (id in map3) {
            return;
          }
          stack.push(id);
          var firstIndex = stack.indexOf(id);
          if (firstIndex < stack.length - 1) {
            throw new Error("Circular dependency: " + stack.slice(firstIndex).join(" -> "));
          }
          var dependencies = {};
          var entry = entryMap[id];
          if (entry) {
            let handleDirectDependency = function(depId) {
              if (!(depId in entryMap)) {
                throw new Error(id + " depends on an unknown component " + depId);
              }
              if (depId in dependencies) {
                return;
              }
              addToMap(depId, stack);
              dependencies[depId] = true;
              for (var transitiveDepId in map3[depId]) {
                dependencies[transitiveDepId] = true;
              }
            };
            forEach3(entry.require, handleDirectDependency);
            forEach3(entry.optional, handleDirectDependency);
            forEach3(entry.modify, handleDirectDependency);
          }
          map3[id] = dependencies;
          stack.pop();
        }
        return function(id) {
          var deps = map3[id];
          if (!deps) {
            addToMap(id, _stackArray);
            deps = map3[id];
          }
          return deps;
        };
      }
      function createAliasResolver(entryMap) {
        var map3;
        return function(idOrAlias) {
          if (idOrAlias in entryMap) {
            return idOrAlias;
          } else {
            if (!map3) {
              map3 = {};
              for (var id in entryMap) {
                var entry = entryMap[id];
                forEach3(entry && entry.alias, function(alias) {
                  if (alias in map3) {
                    throw new Error(alias + " cannot be alias for both " + id + " and " + map3[alias]);
                  }
                  if (alias in entryMap) {
                    throw new Error(alias + " cannot be alias of " + id + " because it is a component.");
                  }
                  map3[alias] = id;
                });
              }
            }
            return map3[idOrAlias] || idOrAlias;
          }
        };
      }
      function loadComponentsInOrder(dependencyResolver, ids, loadComponent, chainer) {
        var series = chainer ? chainer.series : void 0;
        var parallel = chainer ? chainer.parallel : noop3;
        var cache = {};
        var ends = {};
        function handleId(id2) {
          if (id2 in cache) {
            return cache[id2];
          }
          ends[id2] = true;
          var dependsOn = [];
          for (var depId in dependencyResolver(id2)) {
            if (depId in ids) {
              dependsOn.push(depId);
            }
          }
          var value;
          if (dependsOn.length === 0) {
            value = loadComponent(id2);
          } else {
            var depsValue = parallel(dependsOn.map(function(depId2) {
              var value2 = handleId(depId2);
              delete ends[depId2];
              return value2;
            }));
            if (series) {
              value = series(depsValue, function() {
                return loadComponent(id2);
              });
            } else {
              loadComponent(id2);
            }
          }
          return cache[id2] = value;
        }
        for (var id in ids) {
          handleId(id);
        }
        var endValues = [];
        for (var endId in ends) {
          endValues.push(cache[endId]);
        }
        return parallel(endValues);
      }
      function hasKeys(obj) {
        for (var key2 in obj) {
          return true;
        }
        return false;
      }
      function getLoader2(components, load59, loaded) {
        var entryMap = createEntryMap(components);
        var resolveAlias = createAliasResolver(entryMap);
        load59 = load59.map(resolveAlias);
        loaded = (loaded || []).map(resolveAlias);
        var loadSet = toSet(load59);
        var loadedSet = toSet(loaded);
        load59.forEach(addRequirements);
        function addRequirements(id) {
          var entry2 = entryMap[id];
          forEach3(entry2 && entry2.require, function(reqId) {
            if (!(reqId in loadedSet)) {
              loadSet[reqId] = true;
              addRequirements(reqId);
            }
          });
        }
        var dependencyResolver = createDependencyResolver(entryMap);
        var loadAdditions = loadSet;
        var newIds;
        while (hasKeys(loadAdditions)) {
          newIds = {};
          for (var loadId in loadAdditions) {
            var entry = entryMap[loadId];
            forEach3(entry && entry.modify, function(modId) {
              if (modId in loadedSet) {
                newIds[modId] = true;
              }
            });
          }
          for (var loadedId in loadedSet) {
            if (!(loadedId in loadSet)) {
              for (var depId in dependencyResolver(loadedId)) {
                if (depId in loadSet) {
                  newIds[loadedId] = true;
                  break;
                }
              }
            }
          }
          loadAdditions = newIds;
          for (var newId in loadAdditions) {
            loadSet[newId] = true;
          }
        }
        var loader = {
          getIds: function() {
            var ids = [];
            loader.load(function(id) {
              ids.push(id);
            });
            return ids;
          },
          load: function(loadComponent, chainer) {
            return loadComponentsInOrder(dependencyResolver, loadSet, loadComponent, chainer);
          }
        };
        return loader;
      }
      return getLoader2;
    }();
    if (typeof module2 !== "undefined") {
      module2.exports = getLoader;
    }
  }
});

// node_modules/prismjs/components/index.js
var require_components2 = __commonJS({
  "node_modules/prismjs/components/index.js"(exports, module2) {
    var components = require_components();
    var getLoader = require_dependencies();
    var loadedLanguages = /* @__PURE__ */ new Set();
    function loadLanguages2(languages) {
      if (languages === void 0) {
        languages = Object.keys(components.languages).filter((l2) => l2 != "meta");
      } else if (!Array.isArray(languages)) {
        languages = [languages];
      }
      const loaded = [...loadedLanguages, ...Object.keys(Prism.languages)];
      getLoader(components, languages, loaded).load((lang) => {
        if (!(lang in components.languages)) {
          if (!loadLanguages2.silent) {
            console.warn("Language does not exist: " + lang);
          }
          return;
        }
        const pathToLanguage = "./prism-" + lang;
        delete require.cache[require.resolve(pathToLanguage)];
        delete Prism.languages[lang];
        require(pathToLanguage);
        loadedLanguages.add(lang);
      });
    }
    loadLanguages2.silent = false;
    module2.exports = loadLanguages2;
  }
});

// node_modules/@astrojs/markdown-remark/dist/remark-prism.js
function runHighlighter(lang, code2) {
  let classLanguage = `language-${lang}`;
  if (lang == null) {
    lang = "plaintext";
  }
  const ensureLoaded = (lang2) => {
    if (lang2 && !import_prismjs.default.languages[lang2]) {
      (0, import_components.default)([lang2]);
    }
  };
  if (languageMap.has(lang)) {
    ensureLoaded(languageMap.get(lang));
  } else if (lang === "astro") {
    ensureLoaded("typescript");
    addAstro(import_prismjs.default);
  } else {
    ensureLoaded("markup-templating");
    ensureLoaded(lang);
  }
  if (lang && !import_prismjs.default.languages[lang]) {
    console.warn(`Unable to load the language: ${lang}`);
  }
  const grammar = import_prismjs.default.languages[lang];
  let html6 = code2;
  if (grammar) {
    html6 = import_prismjs.default.highlight(code2, grammar, lang);
  }
  return { classLanguage, html: html6 };
}
function transformer(className) {
  return function(tree) {
    const visitor = (node) => {
      let { lang, value } = node;
      node.type = "html";
      let { html: html6, classLanguage } = runHighlighter(lang, value);
      let classes = [classLanguage];
      if (className) {
        classes.push(className);
      }
      node.value = `<pre class="${classes.join(" ")}"><code is:raw class="${classLanguage}">${html6}</code></pre>`;
      return node;
    };
    return visit(tree, "code", visitor);
  };
}
function plugin(className) {
  return transformer.bind(null, className);
}
var import_prismjs, import_components, languageMap, remark_prism_default;
var init_remark_prism = __esm({
  "node_modules/@astrojs/markdown-remark/dist/remark-prism.js"() {
    init_internal();
    import_prismjs = __toESM(require_prism(), 1);
    import_components = __toESM(require_components2(), 1);
    init_unist_util_visit();
    languageMap = /* @__PURE__ */ new Map([["ts", "typescript"]]);
    remark_prism_default = plugin;
  }
});

// node_modules/@astrojs/markdown-remark/dist/remark-scoped-styles.js
function scopedStyles(className) {
  const visitor = (node) => {
    var _a8;
    if (noVisit.has(node.type))
      return;
    const { data: data3 } = node;
    let currentClassName = ((_a8 = data3 == null ? void 0 : data3.hProperties) == null ? void 0 : _a8.class) ?? "";
    node.data = node.data || {};
    node.data.hProperties = node.data.hProperties || {};
    node.data.hProperties.class = `${className} ${currentClassName}`.trim();
    return node;
  };
  return () => (tree) => visit(tree, visitor);
}
var noVisit;
var init_remark_scoped_styles = __esm({
  "node_modules/@astrojs/markdown-remark/dist/remark-scoped-styles.js"() {
    init_unist_util_visit();
    noVisit = /* @__PURE__ */ new Set(["root", "html", "text"]);
  }
});

// node_modules/vscode-oniguruma/release/main.js
var require_main = __commonJS({
  "node_modules/vscode-oniguruma/release/main.js"(exports, module2) {
    !function(t3, n2) {
      typeof exports == "object" && typeof module2 == "object" ? module2.exports = n2() : typeof define == "function" && define.amd ? define([], n2) : typeof exports == "object" ? exports.onig = n2() : t3.onig = n2();
    }(exports, function() {
      return t3 = { 770: function(t4, n3, e3) {
        "use strict";
        var r3 = this && this.__importDefault || function(t5) {
          return t5 && t5.__esModule ? t5 : { default: t5 };
        };
        Object.defineProperty(n3, "__esModule", { value: true }), n3.setDefaultDebugCall = n3.createOnigScanner = n3.createOnigString = n3.loadWASM = n3.OnigScanner = n3.OnigString = void 0;
        const i3 = r3(e3(418));
        let o2 = null, a2 = false;
        class f4 {
          constructor(t5) {
            const n4 = t5.length, e4 = f4._utf8ByteLength(t5), r4 = e4 !== n4, i4 = r4 ? new Uint32Array(n4 + 1) : null;
            r4 && (i4[n4] = e4);
            const o3 = r4 ? new Uint32Array(e4 + 1) : null;
            r4 && (o3[e4] = n4);
            const a3 = new Uint8Array(e4);
            let s5 = 0;
            for (let e5 = 0; e5 < n4; e5++) {
              const f5 = t5.charCodeAt(e5);
              let u4 = f5, c3 = false;
              if (f5 >= 55296 && f5 <= 56319 && e5 + 1 < n4) {
                const n5 = t5.charCodeAt(e5 + 1);
                n5 >= 56320 && n5 <= 57343 && (u4 = 65536 + (f5 - 55296 << 10) | n5 - 56320, c3 = true);
              }
              r4 && (i4[e5] = s5, c3 && (i4[e5 + 1] = s5), u4 <= 127 ? o3[s5 + 0] = e5 : u4 <= 2047 ? (o3[s5 + 0] = e5, o3[s5 + 1] = e5) : u4 <= 65535 ? (o3[s5 + 0] = e5, o3[s5 + 1] = e5, o3[s5 + 2] = e5) : (o3[s5 + 0] = e5, o3[s5 + 1] = e5, o3[s5 + 2] = e5, o3[s5 + 3] = e5)), u4 <= 127 ? a3[s5++] = u4 : u4 <= 2047 ? (a3[s5++] = 192 | (1984 & u4) >>> 6, a3[s5++] = 128 | (63 & u4) >>> 0) : u4 <= 65535 ? (a3[s5++] = 224 | (61440 & u4) >>> 12, a3[s5++] = 128 | (4032 & u4) >>> 6, a3[s5++] = 128 | (63 & u4) >>> 0) : (a3[s5++] = 240 | (1835008 & u4) >>> 18, a3[s5++] = 128 | (258048 & u4) >>> 12, a3[s5++] = 128 | (4032 & u4) >>> 6, a3[s5++] = 128 | (63 & u4) >>> 0), c3 && e5++;
            }
            this.utf16Length = n4, this.utf8Length = e4, this.utf16Value = t5, this.utf8Value = a3, this.utf16OffsetToUtf8 = i4, this.utf8OffsetToUtf16 = o3;
          }
          static _utf8ByteLength(t5) {
            let n4 = 0;
            for (let e4 = 0, r4 = t5.length; e4 < r4; e4++) {
              const i4 = t5.charCodeAt(e4);
              let o3 = i4, a3 = false;
              if (i4 >= 55296 && i4 <= 56319 && e4 + 1 < r4) {
                const n5 = t5.charCodeAt(e4 + 1);
                n5 >= 56320 && n5 <= 57343 && (o3 = 65536 + (i4 - 55296 << 10) | n5 - 56320, a3 = true);
              }
              n4 += o3 <= 127 ? 1 : o3 <= 2047 ? 2 : o3 <= 65535 ? 3 : 4, a3 && e4++;
            }
            return n4;
          }
          createString(t5) {
            const n4 = t5._omalloc(this.utf8Length);
            return t5.HEAPU8.set(this.utf8Value, n4), n4;
          }
        }
        class s4 {
          constructor(t5) {
            if (this.id = ++s4.LAST_ID, !o2)
              throw new Error("Must invoke loadWASM first.");
            this._onigBinding = o2, this.content = t5;
            const n4 = new f4(t5);
            this.utf16Length = n4.utf16Length, this.utf8Length = n4.utf8Length, this.utf16OffsetToUtf8 = n4.utf16OffsetToUtf8, this.utf8OffsetToUtf16 = n4.utf8OffsetToUtf16, this.utf8Length < 1e4 && !s4._sharedPtrInUse ? (s4._sharedPtr || (s4._sharedPtr = o2._omalloc(1e4)), s4._sharedPtrInUse = true, o2.HEAPU8.set(n4.utf8Value, s4._sharedPtr), this.ptr = s4._sharedPtr) : this.ptr = n4.createString(o2);
          }
          convertUtf8OffsetToUtf16(t5) {
            return this.utf8OffsetToUtf16 ? t5 < 0 ? 0 : t5 > this.utf8Length ? this.utf16Length : this.utf8OffsetToUtf16[t5] : t5;
          }
          convertUtf16OffsetToUtf8(t5) {
            return this.utf16OffsetToUtf8 ? t5 < 0 ? 0 : t5 > this.utf16Length ? this.utf8Length : this.utf16OffsetToUtf8[t5] : t5;
          }
          dispose() {
            this.ptr === s4._sharedPtr ? s4._sharedPtrInUse = false : this._onigBinding._ofree(this.ptr);
          }
        }
        n3.OnigString = s4, s4.LAST_ID = 0, s4._sharedPtr = 0, s4._sharedPtrInUse = false;
        class u3 {
          constructor(t5) {
            if (!o2)
              throw new Error("Must invoke loadWASM first.");
            const n4 = [], e4 = [];
            for (let r5 = 0, i5 = t5.length; r5 < i5; r5++) {
              const i6 = new f4(t5[r5]);
              n4[r5] = i6.createString(o2), e4[r5] = i6.utf8Length;
            }
            const r4 = o2._omalloc(4 * t5.length);
            o2.HEAPU32.set(n4, r4 / 4);
            const i4 = o2._omalloc(4 * t5.length);
            o2.HEAPU32.set(e4, i4 / 4);
            const a3 = o2._createOnigScanner(r4, i4, t5.length);
            for (let e5 = 0, r5 = t5.length; e5 < r5; e5++)
              o2._ofree(n4[e5]);
            o2._ofree(i4), o2._ofree(r4), a3 === 0 && function(t6) {
              throw new Error(t6.UTF8ToString(t6._getLastOnigError()));
            }(o2), this._onigBinding = o2, this._ptr = a3;
          }
          dispose() {
            this._onigBinding._freeOnigScanner(this._ptr);
          }
          findNextMatchSync(t5, n4, e4) {
            let r4 = a2, i4 = 0;
            if (typeof e4 == "number" ? (8 & e4 && (r4 = true), i4 = e4) : typeof e4 == "boolean" && (r4 = e4), typeof t5 == "string") {
              t5 = new s4(t5);
              const e5 = this._findNextMatchSync(t5, n4, r4, i4);
              return t5.dispose(), e5;
            }
            return this._findNextMatchSync(t5, n4, r4, i4);
          }
          _findNextMatchSync(t5, n4, e4, r4) {
            const i4 = this._onigBinding;
            let o3;
            if (o3 = e4 ? i4._findNextOnigScannerMatchDbg(this._ptr, t5.id, t5.ptr, t5.utf8Length, t5.convertUtf16OffsetToUtf8(n4), r4) : i4._findNextOnigScannerMatch(this._ptr, t5.id, t5.ptr, t5.utf8Length, t5.convertUtf16OffsetToUtf8(n4), r4), o3 === 0)
              return null;
            const a3 = i4.HEAPU32;
            let f5 = o3 / 4;
            const s5 = a3[f5++], u4 = a3[f5++];
            let c3 = [];
            for (let n5 = 0; n5 < u4; n5++) {
              const e5 = t5.convertUtf8OffsetToUtf16(a3[f5++]), r5 = t5.convertUtf8OffsetToUtf16(a3[f5++]);
              c3[n5] = { start: e5, end: r5, length: r5 - e5 };
            }
            return { index: s5, captureIndices: c3 };
          }
        }
        n3.OnigScanner = u3;
        let c2 = false, l2 = null;
        n3.loadWASM = function(t5) {
          if (c2)
            return l2;
          let n4, e4, r4, a3;
          if (c2 = true, function(t6) {
            return typeof t6.instantiator == "function";
          }(t5))
            n4 = t5.instantiator, e4 = t5.print;
          else {
            let r5;
            !function(t6) {
              return t6.data !== void 0;
            }(t5) ? r5 = t5 : (r5 = t5.data, e4 = t5.print), n4 = function(t6) {
              return typeof Response != "undefined" && t6 instanceof Response;
            }(r5) ? typeof WebAssembly.instantiateStreaming == "function" ? function(t6) {
              return (n5) => WebAssembly.instantiateStreaming(t6, n5);
            }(r5) : function(t6) {
              return async (n5) => {
                const e5 = await t6.arrayBuffer();
                return WebAssembly.instantiate(e5, n5);
              };
            }(r5) : function(t6) {
              return (n5) => WebAssembly.instantiate(t6, n5);
            }(r5);
          }
          return l2 = new Promise((t6, n5) => {
            r4 = t6, a3 = n5;
          }), function(t6, n5, e5, r5) {
            i3.default({ print: n5, instantiateWasm: (n6, e6) => {
              if (typeof performance == "undefined") {
                const t7 = () => Date.now();
                n6.env.emscripten_get_now = t7, n6.wasi_snapshot_preview1.emscripten_get_now = t7;
              }
              return t6(n6).then((t7) => e6(t7.instance), r5), {};
            } }).then((t7) => {
              o2 = t7, e5();
            });
          }(n4, e4, r4, a3), l2;
        }, n3.createOnigString = function(t5) {
          return new s4(t5);
        }, n3.createOnigScanner = function(t5) {
          return new u3(t5);
        }, n3.setDefaultDebugCall = function(t5) {
          a2 = t5;
        };
      }, 418: (t4) => {
        var n3 = (typeof document != "undefined" && document.currentScript && document.currentScript.src, function(t5) {
          var n4, e3, r3 = (t5 = t5 || {}) !== void 0 ? t5 : {};
          r3.ready = new Promise(function(t6, r4) {
            n4 = t6, e3 = r4;
          });
          var i3, o2 = {};
          for (i3 in r3)
            r3.hasOwnProperty(i3) && (o2[i3] = r3[i3]);
          var a2, f4 = [], s4 = false, u3 = false, c2 = true, l2 = "";
          function p3(t6) {
            return r3.locateFile ? r3.locateFile(t6, l2) : l2 + t6;
          }
          c2 && (a2 = function(t6) {
            var n5;
            return typeof readbuffer == "function" ? new Uint8Array(readbuffer(t6)) : (v2(typeof (n5 = read(t6, "binary")) == "object"), n5);
          }, typeof scriptArgs != "undefined" ? f4 = scriptArgs : arguments !== void 0 && (f4 = arguments), typeof onig_print != "undefined" && (typeof console == "undefined" && (console = {}), console.log = onig_print, console.warn = console.error = typeof printErr != "undefined" ? printErr : onig_print));
          var h4 = r3.print || console.log.bind(console), d2 = r3.printErr || console.warn.bind(console);
          for (i3 in o2)
            o2.hasOwnProperty(i3) && (r3[i3] = o2[i3]);
          o2 = null, r3.arguments && (f4 = r3.arguments), r3.thisProgram && r3.thisProgram, r3.quit && r3.quit;
          var g3, _, m3 = function(t6) {
          };
          r3.wasmBinary && (g3 = r3.wasmBinary), r3.noExitRuntime, typeof WebAssembly != "object" && z("no native wasm support detected");
          var y2 = false;
          function v2(t6, n5) {
            t6 || z("Assertion failed: " + n5);
          }
          var w2, S3, A3, b2 = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : void 0;
          function O2(t6, n5, e4) {
            for (var r4 = n5 + e4, i4 = n5; t6[i4] && !(i4 >= r4); )
              ++i4;
            if (i4 - n5 > 16 && t6.subarray && b2)
              return b2.decode(t6.subarray(n5, i4));
            for (var o3 = ""; n5 < i4; ) {
              var a3 = t6[n5++];
              if (128 & a3) {
                var f5 = 63 & t6[n5++];
                if ((224 & a3) != 192) {
                  var s5 = 63 & t6[n5++];
                  if ((a3 = (240 & a3) == 224 ? (15 & a3) << 12 | f5 << 6 | s5 : (7 & a3) << 18 | f5 << 12 | s5 << 6 | 63 & t6[n5++]) < 65536)
                    o3 += String.fromCharCode(a3);
                  else {
                    var u4 = a3 - 65536;
                    o3 += String.fromCharCode(55296 | u4 >> 10, 56320 | 1023 & u4);
                  }
                } else
                  o3 += String.fromCharCode((31 & a3) << 6 | f5);
              } else
                o3 += String.fromCharCode(a3);
            }
            return o3;
          }
          function U2(t6, n5) {
            return t6 ? O2(S3, t6, n5) : "";
          }
          function x3(t6, n5) {
            return t6 % n5 > 0 && (t6 += n5 - t6 % n5), t6;
          }
          function P2(t6) {
            w2 = t6, r3.HEAP8 = new Int8Array(t6), r3.HEAP16 = new Int16Array(t6), r3.HEAP32 = A3 = new Int32Array(t6), r3.HEAPU8 = S3 = new Uint8Array(t6), r3.HEAPU16 = new Uint16Array(t6), r3.HEAPU32 = new Uint32Array(t6), r3.HEAPF32 = new Float32Array(t6), r3.HEAPF64 = new Float64Array(t6);
          }
          typeof TextDecoder != "undefined" && new TextDecoder("utf-16le"), r3.INITIAL_MEMORY;
          var T2, R2 = [], E2 = [], M = [], L2 = [];
          function I2() {
            if (r3.preRun)
              for (typeof r3.preRun == "function" && (r3.preRun = [r3.preRun]); r3.preRun.length; )
                N2(r3.preRun.shift());
            $3(R2);
          }
          function D2() {
            $3(E2);
          }
          function W() {
            $3(M);
          }
          function C2() {
            if (r3.postRun)
              for (typeof r3.postRun == "function" && (r3.postRun = [r3.postRun]); r3.postRun.length; )
                k2(r3.postRun.shift());
            $3(L2);
          }
          function N2(t6) {
            R2.unshift(t6);
          }
          function k2(t6) {
            L2.unshift(t6);
          }
          E2.push({ func: function() {
            ut();
          } });
          var B2 = 0, H2 = null, j = null;
          function F3(t6) {
            B2++, r3.monitorRunDependencies && r3.monitorRunDependencies(B2);
          }
          function V(t6) {
            if (B2--, r3.monitorRunDependencies && r3.monitorRunDependencies(B2), B2 == 0 && (H2 !== null && (clearInterval(H2), H2 = null), j)) {
              var n5 = j;
              j = null, n5();
            }
          }
          function z(t6) {
            r3.onAbort && r3.onAbort(t6), d2(t6 += ""), y2 = true, t6 = "abort(" + t6 + "). Build with -s ASSERTIONS=1 for more info.";
            var n5 = new WebAssembly.RuntimeError(t6);
            throw e3(n5), n5;
          }
          function q(t6, n5) {
            return String.prototype.startsWith ? t6.startsWith(n5) : t6.indexOf(n5) === 0;
          }
          r3.preloadedImages = {}, r3.preloadedAudios = {};
          var Y = "data:application/octet-stream;base64,";
          function G(t6) {
            return q(t6, Y);
          }
          var J, K = "onig.wasm";
          function Q(t6) {
            try {
              if (t6 == K && g3)
                return new Uint8Array(g3);
              if (a2)
                return a2(t6);
              throw "both async and sync fetching of the wasm failed";
            } catch (t7) {
              z(t7);
            }
          }
          function X() {
            return g3 || !s4 && !u3 || typeof fetch != "function" ? Promise.resolve().then(function() {
              return Q(K);
            }) : fetch(K, { credentials: "same-origin" }).then(function(t6) {
              if (!t6.ok)
                throw "failed to load wasm binary file at '" + K + "'";
              return t6.arrayBuffer();
            }).catch(function() {
              return Q(K);
            });
          }
          function Z2() {
            var t6 = { env: st, wasi_snapshot_preview1: st };
            function n5(t7, n6) {
              var e4 = t7.exports;
              r3.asm = e4, P2((_ = r3.asm.memory).buffer), T2 = r3.asm.__indirect_function_table, V();
            }
            function i4(t7) {
              n5(t7.instance);
            }
            function o3(n6) {
              return X().then(function(n7) {
                return WebAssembly.instantiate(n7, t6);
              }).then(n6, function(t7) {
                d2("failed to asynchronously prepare wasm: " + t7), z(t7);
              });
            }
            if (F3(), r3.instantiateWasm)
              try {
                return r3.instantiateWasm(t6, n5);
              } catch (t7) {
                return d2("Module.instantiateWasm callback failed with error: " + t7), false;
              }
            return (g3 || typeof WebAssembly.instantiateStreaming != "function" || G(K) || typeof fetch != "function" ? o3(i4) : fetch(K, { credentials: "same-origin" }).then(function(n6) {
              return WebAssembly.instantiateStreaming(n6, t6).then(i4, function(t7) {
                return d2("wasm streaming compile failed: " + t7), d2("falling back to ArrayBuffer instantiation"), o3(i4);
              });
            })).catch(e3), {};
          }
          function $3(t6) {
            for (; t6.length > 0; ) {
              var n5 = t6.shift();
              if (typeof n5 != "function") {
                var e4 = n5.func;
                typeof e4 == "number" ? n5.arg === void 0 ? T2.get(e4)() : T2.get(e4)(n5.arg) : e4(n5.arg === void 0 ? null : n5.arg);
              } else
                n5(r3);
            }
          }
          function tt(t6, n5, e4) {
            S3.copyWithin(t6, n5, n5 + e4);
          }
          function nt() {
            return S3.length;
          }
          function et(t6) {
            try {
              return _.grow(t6 - w2.byteLength + 65535 >>> 16), P2(_.buffer), 1;
            } catch (t7) {
            }
          }
          function rt(t6) {
            var n5 = nt(), e4 = 2147483648;
            if (t6 > e4)
              return false;
            for (var r4 = 1; r4 <= 4; r4 *= 2) {
              var i4 = n5 * (1 + 0.2 / r4);
              if (i4 = Math.min(i4, t6 + 100663296), et(Math.min(e4, x3(Math.max(t6, i4), 65536))))
                return true;
            }
            return false;
          }
          G(K) || (K = p3(K)), J = typeof dateNow != "undefined" ? dateNow : function() {
            return performance.now();
          };
          var it = { mappings: {}, buffers: [null, [], []], printChar: function(t6, n5) {
            var e4 = it.buffers[t6];
            n5 === 0 || n5 === 10 ? ((t6 === 1 ? h4 : d2)(O2(e4, 0)), e4.length = 0) : e4.push(n5);
          }, varargs: void 0, get: function() {
            return it.varargs += 4, A3[it.varargs - 4 >> 2];
          }, getStr: function(t6) {
            return U2(t6);
          }, get64: function(t6, n5) {
            return t6;
          } };
          function ot(t6, n5, e4, r4) {
            for (var i4 = 0, o3 = 0; o3 < e4; o3++) {
              for (var a3 = A3[n5 + 8 * o3 >> 2], f5 = A3[n5 + (8 * o3 + 4) >> 2], s5 = 0; s5 < f5; s5++)
                it.printChar(t6, S3[a3 + s5]);
              i4 += f5;
            }
            return A3[r4 >> 2] = i4, 0;
          }
          function at3(t6) {
            m3(0 | t6);
          }
          var ft, st = { emscripten_get_now: J, emscripten_memcpy_big: tt, emscripten_resize_heap: rt, fd_write: ot, setTempRet0: at3 }, ut = (Z2(), r3.___wasm_call_ctors = function() {
            return (ut = r3.___wasm_call_ctors = r3.asm.__wasm_call_ctors).apply(null, arguments);
          });
          function ct(t6) {
            function e4() {
              ft || (ft = true, r3.calledRun = true, y2 || (D2(), W(), n4(r3), r3.onRuntimeInitialized && r3.onRuntimeInitialized(), C2()));
            }
            t6 = t6 || f4, B2 > 0 || (I2(), B2 > 0 || (r3.setStatus ? (r3.setStatus("Running..."), setTimeout(function() {
              setTimeout(function() {
                r3.setStatus("");
              }, 1), e4();
            }, 1)) : e4()));
          }
          if (r3.___errno_location = function() {
            return (r3.___errno_location = r3.asm.__errno_location).apply(null, arguments);
          }, r3._omalloc = function() {
            return (r3._omalloc = r3.asm.omalloc).apply(null, arguments);
          }, r3._ofree = function() {
            return (r3._ofree = r3.asm.ofree).apply(null, arguments);
          }, r3._getLastOnigError = function() {
            return (r3._getLastOnigError = r3.asm.getLastOnigError).apply(null, arguments);
          }, r3._createOnigScanner = function() {
            return (r3._createOnigScanner = r3.asm.createOnigScanner).apply(null, arguments);
          }, r3._freeOnigScanner = function() {
            return (r3._freeOnigScanner = r3.asm.freeOnigScanner).apply(null, arguments);
          }, r3._findNextOnigScannerMatch = function() {
            return (r3._findNextOnigScannerMatch = r3.asm.findNextOnigScannerMatch).apply(null, arguments);
          }, r3._findNextOnigScannerMatchDbg = function() {
            return (r3._findNextOnigScannerMatchDbg = r3.asm.findNextOnigScannerMatchDbg).apply(null, arguments);
          }, r3.stackSave = function() {
            return (r3.stackSave = r3.asm.stackSave).apply(null, arguments);
          }, r3.stackRestore = function() {
            return (r3.stackRestore = r3.asm.stackRestore).apply(null, arguments);
          }, r3.stackAlloc = function() {
            return (r3.stackAlloc = r3.asm.stackAlloc).apply(null, arguments);
          }, r3.dynCall_jiji = function() {
            return (r3.dynCall_jiji = r3.asm.dynCall_jiji).apply(null, arguments);
          }, r3.UTF8ToString = U2, j = function t6() {
            ft || ct(), ft || (j = t6);
          }, r3.run = ct, r3.preInit)
            for (typeof r3.preInit == "function" && (r3.preInit = [r3.preInit]); r3.preInit.length > 0; )
              r3.preInit.pop()();
          return ct(), t5.ready;
        });
        t4.exports = n3;
      } }, n2 = {}, function e3(r3) {
        var i3 = n2[r3];
        if (i3 !== void 0)
          return i3.exports;
        var o2 = n2[r3] = { exports: {} };
        return t3[r3].call(o2.exports, o2, o2.exports, e3), o2.exports;
      }(770);
      var t3, n2;
    });
  }
});

// node_modules/vscode-textmate/release/main.js
var require_main2 = __commonJS({
  "node_modules/vscode-textmate/release/main.js"(exports, module2) {
    !function(e3, t3) {
      typeof exports == "object" && typeof module2 == "object" ? module2.exports = t3() : typeof define == "function" && define.amd ? define([], t3) : typeof exports == "object" ? exports.vscodetextmate = t3() : e3.vscodetextmate = t3();
    }(exports, function() {
      return function(e3) {
        var t3 = {};
        function n2(r3) {
          if (t3[r3])
            return t3[r3].exports;
          var i3 = t3[r3] = { i: r3, l: false, exports: {} };
          return e3[r3].call(i3.exports, i3, i3.exports, n2), i3.l = true, i3.exports;
        }
        return n2.m = e3, n2.c = t3, n2.d = function(e4, t4, r3) {
          n2.o(e4, t4) || Object.defineProperty(e4, t4, { enumerable: true, get: r3 });
        }, n2.r = function(e4) {
          typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e4, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e4, "__esModule", { value: true });
        }, n2.t = function(e4, t4) {
          if (1 & t4 && (e4 = n2(e4)), 8 & t4)
            return e4;
          if (4 & t4 && typeof e4 == "object" && e4 && e4.__esModule)
            return e4;
          var r3 = /* @__PURE__ */ Object.create(null);
          if (n2.r(r3), Object.defineProperty(r3, "default", { enumerable: true, value: e4 }), 2 & t4 && typeof e4 != "string")
            for (var i3 in e4)
              n2.d(r3, i3, function(t5) {
                return e4[t5];
              }.bind(null, i3));
          return r3;
        }, n2.n = function(e4) {
          var t4 = e4 && e4.__esModule ? function() {
            return e4.default;
          } : function() {
            return e4;
          };
          return n2.d(t4, "a", t4), t4;
        }, n2.o = function(e4, t4) {
          return Object.prototype.hasOwnProperty.call(e4, t4);
        }, n2.p = "", n2(n2.s = 3);
      }([function(e3, t3, n2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r3 = n2(1), i3 = n2(5), o2 = n2(6), s4 = n2(2), a2 = typeof performance == "undefined" ? function() {
          return Date.now();
        } : function() {
          return performance.now();
        };
        t3.createGrammar = function(e4, t4, n3, r4, i4, o3) {
          return new v2(e4, t4, n3, r4, i4, o3);
        };
        var c2 = function(e4) {
          this.scopeName = e4;
        };
        t3.FullScopeDependency = c2;
        var u3 = function() {
          function e4(e5, t4) {
            this.scopeName = e5, this.include = t4;
          }
          return e4.prototype.toKey = function() {
            return this.scopeName + "#" + this.include;
          }, e4;
        }();
        t3.PartialScopeDependency = u3;
        var l2 = function() {
          function e4() {
            this.full = [], this.partial = [], this.visitedRule = /* @__PURE__ */ new Set(), this._seenFull = /* @__PURE__ */ new Set(), this._seenPartial = /* @__PURE__ */ new Set();
          }
          return e4.prototype.add = function(e5) {
            e5 instanceof c2 ? this._seenFull.has(e5.scopeName) || (this._seenFull.add(e5.scopeName), this.full.push(e5)) : this._seenPartial.has(e5.toKey()) || (this._seenPartial.add(e5.toKey()), this.partial.push(e5));
          }, e4;
        }();
        function h4(e4, t4, n3, i4, o3) {
          for (var s5 = 0, a3 = i4; s5 < a3.length; s5++) {
            var l3 = a3[s5];
            if (!e4.visitedRule.has(l3)) {
              e4.visitedRule.add(l3);
              var d3 = l3.repository ? r3.mergeObjects({}, o3, l3.repository) : o3;
              Array.isArray(l3.patterns) && h4(e4, t4, n3, l3.patterns, d3);
              var g4 = l3.include;
              if (g4)
                if (g4 === "$base" || g4 === t4.scopeName)
                  f4(e4, t4, t4);
                else if (g4 === "$self" || g4 === n3.scopeName)
                  f4(e4, t4, n3);
                else if (g4.charAt(0) === "#")
                  p3(e4, t4, n3, g4.substring(1), d3);
                else {
                  var m4 = g4.indexOf("#");
                  if (m4 >= 0) {
                    var _2 = g4.substring(0, m4), y3 = g4.substring(m4 + 1);
                    _2 === t4.scopeName ? p3(e4, t4, t4, y3, d3) : _2 === n3.scopeName ? p3(e4, t4, n3, y3, d3) : e4.add(new u3(_2, g4.substring(m4 + 1)));
                  } else
                    e4.add(new c2(g4));
                }
            }
          }
        }
        function p3(e4, t4, n3, r4, i4) {
          (i4 === void 0 && (i4 = n3.repository), i4 && i4[r4]) && h4(e4, t4, n3, [i4[r4]], i4);
        }
        function f4(e4, t4, n3) {
          if (n3.patterns && Array.isArray(n3.patterns) && h4(e4, t4, n3, n3.patterns, n3.repository), n3.injections) {
            var r4 = [];
            for (var i4 in n3.injections)
              r4.push(n3.injections[i4]);
            h4(e4, t4, n3, r4, n3.repository);
          }
        }
        function d2(e4, t4) {
          if (!e4)
            return false;
          if (e4 === t4)
            return true;
          var n3 = t4.length;
          return e4.length > n3 && e4.substr(0, n3) === t4 && e4[n3] === ".";
        }
        function g3(e4, t4) {
          if (t4.length < e4.length)
            return false;
          var n3 = 0;
          return e4.every(function(e5) {
            for (var r4 = n3; r4 < t4.length; r4++)
              if (d2(t4[r4], e5))
                return n3 = r4 + 1, true;
            return false;
          });
        }
        function m3(e4, t4, n3, r4, s5) {
          for (var a3 = o2.createMatchers(t4, g3), c3 = i3.RuleFactory.getCompiledRuleId(n3, r4, s5.repository), u4 = 0, l3 = a3; u4 < l3.length; u4++) {
            var h5 = l3[u4];
            e4.push({ matcher: h5.matcher, ruleId: c3, grammar: s5, priority: h5.priority });
          }
        }
        t3.ScopeDependencyCollector = l2, t3.collectSpecificDependencies = p3, t3.collectDependencies = f4;
        var _ = function(e4, t4, n3, r4) {
          this.scopeName = e4, this.languageId = t4, this.tokenType = n3, this.themeData = r4;
        };
        t3.ScopeMetadata = _;
        var y2 = function() {
          function e4(t4, n3, r4) {
            if (this._initialLanguage = t4, this._themeProvider = n3, this._cache = /* @__PURE__ */ new Map(), this._defaultMetaData = new _("", this._initialLanguage, 0, [this._themeProvider.getDefaults()]), this._embeddedLanguages = /* @__PURE__ */ Object.create(null), r4)
              for (var i4 = Object.keys(r4), o3 = 0, s5 = i4.length; o3 < s5; o3++) {
                var a3 = i4[o3], c3 = r4[a3];
                typeof c3 == "number" && c3 !== 0 ? this._embeddedLanguages[a3] = c3 : console.warn("Invalid embedded language found at scope " + a3 + ": <<" + c3 + ">>");
              }
            var u4 = Object.keys(this._embeddedLanguages).map(function(t5) {
              return e4._escapeRegExpCharacters(t5);
            });
            u4.length === 0 ? this._embeddedLanguagesRegex = null : (u4.sort(), u4.reverse(), this._embeddedLanguagesRegex = new RegExp("^((" + u4.join(")|(") + "))($|\\.)", ""));
          }
          return e4.prototype.onDidChangeTheme = function() {
            this._cache = /* @__PURE__ */ new Map(), this._defaultMetaData = new _("", this._initialLanguage, 0, [this._themeProvider.getDefaults()]);
          }, e4.prototype.getDefaultMetadata = function() {
            return this._defaultMetaData;
          }, e4._escapeRegExpCharacters = function(e5) {
            return e5.replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&");
          }, e4.prototype.getMetadataForScope = function(t4) {
            if (t4 === null)
              return e4._NULL_SCOPE_METADATA;
            var n3 = this._cache.get(t4);
            return n3 || (n3 = this._doGetMetadataForScope(t4), this._cache.set(t4, n3), n3);
          }, e4.prototype._doGetMetadataForScope = function(e5) {
            var t4 = this._scopeToLanguage(e5), n3 = this._toStandardTokenType(e5), r4 = this._themeProvider.themeMatch(e5);
            return new _(e5, t4, n3, r4);
          }, e4.prototype._scopeToLanguage = function(e5) {
            if (!e5)
              return 0;
            if (!this._embeddedLanguagesRegex)
              return 0;
            var t4 = e5.match(this._embeddedLanguagesRegex);
            if (!t4)
              return 0;
            var n3 = this._embeddedLanguages[t4[1]] || 0;
            return n3 || 0;
          }, e4.prototype._toStandardTokenType = function(t4) {
            var n3 = t4.match(e4.STANDARD_TOKEN_TYPE_REGEXP);
            if (!n3)
              return 0;
            switch (n3[1]) {
              case "comment":
                return 1;
              case "string":
                return 2;
              case "regex":
                return 4;
              case "meta.embedded":
                return 8;
            }
            throw new Error("Unexpected match for standard token type!");
          }, e4._NULL_SCOPE_METADATA = new _("", 0, 0, null), e4.STANDARD_TOKEN_TYPE_REGEXP = /\b(comment|string|regex|meta\.embedded)\b/, e4;
        }(), v2 = function() {
          function e4(e5, t4, n3, r4, i4, s5) {
            if (this._scopeMetadataProvider = new y2(t4, i4, n3), this._onigLib = s5, this._rootId = -1, this._lastRuleId = 0, this._ruleId2desc = [null], this._includedGrammars = {}, this._grammarRepository = i4, this._grammar = C2(e5, null), this._injections = null, this._tokenTypeMatchers = [], r4)
              for (var a3 = 0, c3 = Object.keys(r4); a3 < c3.length; a3++)
                for (var u4 = c3[a3], l3 = 0, h5 = o2.createMatchers(u4, g3); l3 < h5.length; l3++) {
                  var p4 = h5[l3];
                  this._tokenTypeMatchers.push({ matcher: p4.matcher, type: r4[u4] });
                }
          }
          return e4.prototype.dispose = function() {
            for (var e5 = 0, t4 = this._ruleId2desc; e5 < t4.length; e5++) {
              var n3 = t4[e5];
              n3 && n3.dispose();
            }
          }, e4.prototype.createOnigScanner = function(e5) {
            return this._onigLib.createOnigScanner(e5);
          }, e4.prototype.createOnigString = function(e5) {
            return this._onigLib.createOnigString(e5);
          }, e4.prototype.onDidChangeTheme = function() {
            this._scopeMetadataProvider.onDidChangeTheme();
          }, e4.prototype.getMetadataForScope = function(e5) {
            return this._scopeMetadataProvider.getMetadataForScope(e5);
          }, e4.prototype.getInjections = function() {
            var e5 = this;
            if (this._injections === null) {
              this._injections = [];
              var t4 = this._grammar.injections;
              if (t4)
                for (var n3 in t4)
                  m3(this._injections, n3, t4[n3], this, this._grammar);
              if (this._grammarRepository) {
                var r4 = this._grammarRepository.injections(this._grammar.scopeName);
                r4 && r4.forEach(function(t5) {
                  var n4 = e5.getExternalGrammar(t5);
                  if (n4) {
                    var r5 = n4.injectionSelector;
                    r5 && m3(e5._injections, r5, n4, e5, n4);
                  }
                });
              }
              this._injections.sort(function(e6, t5) {
                return e6.priority - t5.priority;
              });
            }
            return this._injections;
          }, e4.prototype.registerRule = function(e5) {
            var t4 = ++this._lastRuleId, n3 = e5(t4);
            return this._ruleId2desc[t4] = n3, n3;
          }, e4.prototype.getRule = function(e5) {
            return this._ruleId2desc[e5];
          }, e4.prototype.getExternalGrammar = function(e5, t4) {
            if (this._includedGrammars[e5])
              return this._includedGrammars[e5];
            if (this._grammarRepository) {
              var n3 = this._grammarRepository.lookup(e5);
              if (n3)
                return this._includedGrammars[e5] = C2(n3, t4 && t4.$base), this._includedGrammars[e5];
            }
            return null;
          }, e4.prototype.tokenizeLine = function(e5, t4) {
            var n3 = this._tokenize(e5, t4, false);
            return { tokens: n3.lineTokens.getResult(n3.ruleStack, n3.lineLength), ruleStack: n3.ruleStack };
          }, e4.prototype.tokenizeLine2 = function(e5, t4) {
            var n3 = this._tokenize(e5, t4, true);
            return { tokens: n3.lineTokens.getBinaryResult(n3.ruleStack, n3.lineLength), ruleStack: n3.ruleStack };
          }, e4.prototype._tokenize = function(e5, t4, n3) {
            var r4;
            if (this._rootId === -1 && (this._rootId = i3.RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository)), t4 && t4 !== I2.NULL)
              r4 = false, t4.reset();
            else {
              r4 = true;
              var o3 = this._scopeMetadataProvider.getDefaultMetadata(), s5 = o3.themeData[0], a3 = P2.set(0, o3.languageId, o3.tokenType, s5.fontStyle, s5.foreground, s5.background), c3 = this.getRule(this._rootId).getName(null, null), u4 = this._scopeMetadataProvider.getMetadataForScope(c3), l3 = x3.mergeMetadata(a3, null, u4), h5 = new x3(null, c3 === null ? "unknown" : c3, l3);
              t4 = new I2(null, this._rootId, -1, -1, false, null, h5, h5);
            }
            e5 += "\n";
            var p4 = this.createOnigString(e5), f5 = p4.content.length, d3 = new T2(n3, e5, this._tokenTypeMatchers), g4 = S3(this, p4, r4, 0, t4, d3, true);
            return b2(p4), { lineLength: f5, lineTokens: d3, ruleStack: g4 };
          }, e4;
        }();
        function b2(e4) {
          typeof e4.dispose == "function" && e4.dispose();
        }
        function C2(e4, t4) {
          return (e4 = r3.clone(e4)).repository = e4.repository || {}, e4.repository.$self = { $vscodeTextmateLocation: e4.$vscodeTextmateLocation, patterns: e4.patterns, name: e4.scopeName }, e4.repository.$base = t4 || e4.repository.$self, e4;
        }
        function w2(e4, t4, n3, r4, i4, o3, s5) {
          if (o3.length !== 0) {
            for (var a3 = t4.content, c3 = Math.min(o3.length, s5.length), u4 = [], l3 = s5[0].end, h5 = 0; h5 < c3; h5++) {
              var p4 = o3[h5];
              if (p4 !== null) {
                var f5 = s5[h5];
                if (f5.length !== 0) {
                  if (f5.start > l3)
                    break;
                  for (; u4.length > 0 && u4[u4.length - 1].endPos <= f5.start; )
                    i4.produceFromScopes(u4[u4.length - 1].scopes, u4[u4.length - 1].endPos), u4.pop();
                  if (u4.length > 0 ? i4.produceFromScopes(u4[u4.length - 1].scopes, f5.start) : i4.produce(r4, f5.start), p4.retokenizeCapturedWithRuleId) {
                    var d3 = p4.getName(a3, s5), g4 = r4.contentNameScopesList.push(e4, d3), m4 = p4.getContentName(a3, s5), _2 = g4.push(e4, m4), y3 = r4.push(p4.retokenizeCapturedWithRuleId, f5.start, -1, false, null, g4, _2), v3 = e4.createOnigString(a3.substring(0, f5.end));
                    S3(e4, v3, n3 && f5.start === 0, f5.start, y3, i4, false), b2(v3);
                  } else {
                    var C3 = p4.getName(a3, s5);
                    if (C3 !== null) {
                      var w3 = (u4.length > 0 ? u4[u4.length - 1].scopes : r4.contentNameScopesList).push(e4, C3);
                      u4.push(new A3(w3, f5.end));
                    }
                  }
                }
              }
            }
            for (; u4.length > 0; )
              i4.produceFromScopes(u4[u4.length - 1].scopes, u4[u4.length - 1].endPos), u4.pop();
          }
        }
        function k2(e4) {
          for (var t4 = [], n3 = 0, r4 = e4.rules.length; n3 < r4; n3++)
            t4.push("   - " + e4.rules[n3] + ": " + e4.debugRegExps[n3]);
          return t4.join("\n");
        }
        function R2(e4, t4, n3, r4, i4, o3) {
          var c3 = function(e5, t5, n4, r5, i5, o4) {
            var c4 = i5.getRule(e5), u5 = c4.compile(e5, i5.endRule, n4, r5 === o4), l4 = 0;
            s4.DebugFlags.InDebugMode && (l4 = a2());
            var h6 = u5.scanner.findNextMatchSync(t5, r5);
            if (s4.DebugFlags.InDebugMode) {
              var p5 = a2() - l4;
              p5 > 5 && console.warn("Rule " + c4.debugName + " (" + c4.id + ") matching took " + p5 + " against '" + t5 + "'"), h6 && console.log("matched rule id: " + u5.rules[h6.index] + " from " + h6.captureIndices[0].start + " to " + h6.captureIndices[0].end);
            }
            return h6 ? { captureIndices: h6.captureIndices, matchedRuleId: u5.rules[h6.index] } : null;
          }(e4, t4, n3, r4, i4, o3), u4 = e4.getInjections();
          if (u4.length === 0)
            return c3;
          var l3 = function(e5, t5, n4, r5, i5, o4, a3) {
            for (var c4, u5 = Number.MAX_VALUE, l4 = null, h6 = 0, p5 = o4.contentNameScopesList.generateScopes(), f5 = 0, d3 = e5.length; f5 < d3; f5++) {
              var g4 = e5[f5];
              if (g4.matcher(p5)) {
                var m4 = t5.getRule(g4.ruleId).compile(t5, null, r5, i5 === a3), _2 = m4.scanner.findNextMatchSync(n4, i5);
                if (s4.DebugFlags.InDebugMode && (console.log("  scanning for injections"), console.log(k2(m4))), _2) {
                  var y3 = _2.captureIndices[0].start;
                  if (!(y3 >= u5) && (u5 = y3, l4 = _2.captureIndices, c4 = m4.rules[_2.index], h6 = g4.priority, u5 === i5))
                    break;
                }
              }
            }
            return l4 ? { priorityMatch: h6 === -1, captureIndices: l4, matchedRuleId: c4 } : null;
          }(u4, e4, t4, n3, r4, i4, o3);
          if (!l3)
            return c3;
          if (!c3)
            return l3;
          var h5 = c3.captureIndices[0].start, p4 = l3.captureIndices[0].start;
          return p4 < h5 || l3.priorityMatch && p4 === h5 ? l3 : c3;
        }
        function S3(e4, t4, n3, r4, o3, a3, c3) {
          var u4 = t4.content.length, l3 = false, h5 = -1;
          if (c3) {
            var p4 = function(e5, t5, n4, r5, o4, a4) {
              for (var c4 = o4.beginRuleCapturedEOL ? 0 : -1, u5 = [], l4 = o4; l4; l4 = l4.pop()) {
                var h6 = l4.getRule(e5);
                h6 instanceof i3.BeginWhileRule && u5.push({ rule: h6, stack: l4 });
              }
              for (var p5 = u5.pop(); p5; p5 = u5.pop()) {
                var f6 = p5.rule.compileWhile(e5, p5.stack.endRule, n4, c4 === r5), d3 = f6.scanner.findNextMatchSync(t5, r5);
                if (s4.DebugFlags.InDebugMode && (console.log("  scanning for while rule"), console.log(k2(f6))), !d3) {
                  s4.DebugFlags.InDebugMode && console.log("  popping " + p5.rule.debugName + " - " + p5.rule.debugWhileRegExp), o4 = p5.stack.pop();
                  break;
                }
                if (f6.rules[d3.index] !== -2) {
                  o4 = p5.stack.pop();
                  break;
                }
                d3.captureIndices && d3.captureIndices.length && (a4.produce(p5.stack, d3.captureIndices[0].start), w2(e5, t5, n4, p5.stack, a4, p5.rule.whileCaptures, d3.captureIndices), a4.produce(p5.stack, d3.captureIndices[0].end), c4 = d3.captureIndices[0].end, d3.captureIndices[0].end > r5 && (r5 = d3.captureIndices[0].end, n4 = false));
              }
              return { stack: o4, linePos: r5, anchorPosition: c4, isFirstLine: n4 };
            }(e4, t4, n3, r4, o3, a3);
            o3 = p4.stack, r4 = p4.linePos, n3 = p4.isFirstLine, h5 = p4.anchorPosition;
          }
          for (; !l3; )
            f5();
          function f5() {
            s4.DebugFlags.InDebugMode && (console.log(""), console.log("@@scanNext " + r4 + ": |" + t4.content.substr(r4).replace(/\n$/, "\\n") + "|"));
            var c4 = R2(e4, t4, n3, r4, o3, h5);
            if (!c4)
              return s4.DebugFlags.InDebugMode && console.log("  no more matches."), a3.produce(o3, u4), void (l3 = true);
            var p5 = c4.captureIndices, f6 = c4.matchedRuleId, d3 = !!(p5 && p5.length > 0) && p5[0].end > r4;
            if (f6 === -1) {
              var g4 = o3.getRule(e4);
              s4.DebugFlags.InDebugMode && console.log("  popping " + g4.debugName + " - " + g4.debugEndRegExp), a3.produce(o3, p5[0].start), o3 = o3.setContentNameScopesList(o3.nameScopesList), w2(e4, t4, n3, o3, a3, g4.endCaptures, p5), a3.produce(o3, p5[0].end);
              var m4 = o3;
              if (o3 = o3.pop(), h5 = m4.getAnchorPos(), !d3 && m4.getEnterPos() === r4)
                return s4.DebugFlags.InDebugMode && console.error("[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing"), o3 = m4, a3.produce(o3, u4), void (l3 = true);
            } else {
              var _2 = e4.getRule(f6);
              a3.produce(o3, p5[0].start);
              var y3 = o3, v3 = _2.getName(t4.content, p5), b3 = o3.contentNameScopesList.push(e4, v3);
              if (o3 = o3.push(f6, r4, h5, p5[0].end === u4, null, b3, b3), _2 instanceof i3.BeginEndRule) {
                var C3 = _2;
                s4.DebugFlags.InDebugMode && console.log("  pushing " + C3.debugName + " - " + C3.debugBeginRegExp), w2(e4, t4, n3, o3, a3, C3.beginCaptures, p5), a3.produce(o3, p5[0].end), h5 = p5[0].end;
                var k3 = C3.getContentName(t4.content, p5), S4 = b3.push(e4, k3);
                if (o3 = o3.setContentNameScopesList(S4), C3.endHasBackReferences && (o3 = o3.setEndRule(C3.getEndWithResolvedBackReferences(t4.content, p5))), !d3 && y3.hasSameRuleAs(o3))
                  return s4.DebugFlags.InDebugMode && console.error("[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"), o3 = o3.pop(), a3.produce(o3, u4), void (l3 = true);
              } else if (_2 instanceof i3.BeginWhileRule) {
                C3 = _2;
                s4.DebugFlags.InDebugMode && console.log("  pushing " + C3.debugName), w2(e4, t4, n3, o3, a3, C3.beginCaptures, p5), a3.produce(o3, p5[0].end), h5 = p5[0].end;
                k3 = C3.getContentName(t4.content, p5), S4 = b3.push(e4, k3);
                if (o3 = o3.setContentNameScopesList(S4), C3.whileHasBackReferences && (o3 = o3.setEndRule(C3.getWhileWithResolvedBackReferences(t4.content, p5))), !d3 && y3.hasSameRuleAs(o3))
                  return s4.DebugFlags.InDebugMode && console.error("[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"), o3 = o3.pop(), a3.produce(o3, u4), void (l3 = true);
              } else {
                var P3 = _2;
                if (s4.DebugFlags.InDebugMode && console.log("  matched " + P3.debugName + " - " + P3.debugMatchRegExp), w2(e4, t4, n3, o3, a3, P3.captures, p5), a3.produce(o3, p5[0].end), o3 = o3.pop(), !d3)
                  return s4.DebugFlags.InDebugMode && console.error("[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping"), o3 = o3.safePop(), a3.produce(o3, u4), void (l3 = true);
              }
            }
            p5[0].end > r4 && (r4 = p5[0].end, n3 = false);
          }
          return o3;
        }
        t3.Grammar = v2;
        var P2 = function() {
          function e4() {
          }
          return e4.toBinaryStr = function(e5) {
            for (var t4 = e5.toString(2); t4.length < 32; )
              t4 = "0" + t4;
            return t4;
          }, e4.printMetadata = function(t4) {
            var n3 = e4.getLanguageId(t4), r4 = e4.getTokenType(t4), i4 = e4.getFontStyle(t4), o3 = e4.getForeground(t4), s5 = e4.getBackground(t4);
            console.log({ languageId: n3, tokenType: r4, fontStyle: i4, foreground: o3, background: s5 });
          }, e4.getLanguageId = function(e5) {
            return (255 & e5) >>> 0;
          }, e4.getTokenType = function(e5) {
            return (1792 & e5) >>> 8;
          }, e4.getFontStyle = function(e5) {
            return (14336 & e5) >>> 11;
          }, e4.getForeground = function(e5) {
            return (8372224 & e5) >>> 14;
          }, e4.getBackground = function(e5) {
            return (4286578688 & e5) >>> 23;
          }, e4.set = function(t4, n3, r4, i4, o3, s5) {
            var a3 = e4.getLanguageId(t4), c3 = e4.getTokenType(t4), u4 = e4.getFontStyle(t4), l3 = e4.getForeground(t4), h5 = e4.getBackground(t4);
            return n3 !== 0 && (a3 = n3), r4 !== 0 && (c3 = r4 === 8 ? 0 : r4), i4 !== -1 && (u4 = i4), o3 !== 0 && (l3 = o3), s5 !== 0 && (h5 = s5), (a3 << 0 | c3 << 8 | u4 << 11 | l3 << 14 | h5 << 23) >>> 0;
          }, e4;
        }();
        t3.StackElementMetadata = P2;
        var x3 = function() {
          function e4(e5, t4, n3) {
            this.parent = e5, this.scope = t4, this.metadata = n3;
          }
          return e4._equals = function(e5, t4) {
            for (; ; ) {
              if (e5 === t4)
                return true;
              if (!e5 && !t4)
                return true;
              if (!e5 || !t4)
                return false;
              if (e5.scope !== t4.scope || e5.metadata !== t4.metadata)
                return false;
              e5 = e5.parent, t4 = t4.parent;
            }
          }, e4.prototype.equals = function(t4) {
            return e4._equals(this, t4);
          }, e4._matchesScope = function(e5, t4, n3) {
            return t4 === e5 || e5.substring(0, n3.length) === n3;
          }, e4._matches = function(e5, t4) {
            if (t4 === null)
              return true;
            for (var n3 = t4.length, r4 = 0, i4 = t4[r4], o3 = i4 + "."; e5; ) {
              if (this._matchesScope(e5.scope, i4, o3)) {
                if (++r4 === n3)
                  return true;
                o3 = (i4 = t4[r4]) + ".";
              }
              e5 = e5.parent;
            }
            return false;
          }, e4.mergeMetadata = function(e5, t4, n3) {
            if (n3 === null)
              return e5;
            var r4 = -1, i4 = 0, o3 = 0;
            if (n3.themeData !== null)
              for (var s5 = 0, a3 = n3.themeData.length; s5 < a3; s5++) {
                var c3 = n3.themeData[s5];
                if (this._matches(t4, c3.parentScopes)) {
                  r4 = c3.fontStyle, i4 = c3.foreground, o3 = c3.background;
                  break;
                }
              }
            return P2.set(e5, n3.languageId, n3.tokenType, r4, i4, o3);
          }, e4._push = function(t4, n3, r4) {
            for (var i4 = 0, o3 = r4.length; i4 < o3; i4++) {
              var s5 = r4[i4], a3 = n3.getMetadataForScope(s5), c3 = e4.mergeMetadata(t4.metadata, t4, a3);
              t4 = new e4(t4, s5, c3);
            }
            return t4;
          }, e4.prototype.push = function(t4, n3) {
            return n3 === null ? this : n3.indexOf(" ") >= 0 ? e4._push(this, t4, n3.split(/ /g)) : e4._push(this, t4, [n3]);
          }, e4._generateScopes = function(e5) {
            for (var t4 = [], n3 = 0; e5; )
              t4[n3++] = e5.scope, e5 = e5.parent;
            return t4.reverse(), t4;
          }, e4.prototype.generateScopes = function() {
            return e4._generateScopes(this);
          }, e4;
        }();
        t3.ScopeListElement = x3;
        var I2 = function() {
          function e4(e5, t4, n3, r4, i4, o3, s5, a3) {
            this.parent = e5, this.depth = this.parent ? this.parent.depth + 1 : 1, this.ruleId = t4, this._enterPos = n3, this._anchorPos = r4, this.beginRuleCapturedEOL = i4, this.endRule = o3, this.nameScopesList = s5, this.contentNameScopesList = a3;
          }
          return e4._structuralEquals = function(e5, t4) {
            for (; ; ) {
              if (e5 === t4)
                return true;
              if (!e5 && !t4)
                return true;
              if (!e5 || !t4)
                return false;
              if (e5.depth !== t4.depth || e5.ruleId !== t4.ruleId || e5.endRule !== t4.endRule)
                return false;
              e5 = e5.parent, t4 = t4.parent;
            }
          }, e4._equals = function(e5, t4) {
            return e5 === t4 || !!this._structuralEquals(e5, t4) && e5.contentNameScopesList.equals(t4.contentNameScopesList);
          }, e4.prototype.clone = function() {
            return this;
          }, e4.prototype.equals = function(t4) {
            return t4 !== null && e4._equals(this, t4);
          }, e4._reset = function(e5) {
            for (; e5; )
              e5._enterPos = -1, e5._anchorPos = -1, e5 = e5.parent;
          }, e4.prototype.reset = function() {
            e4._reset(this);
          }, e4.prototype.pop = function() {
            return this.parent;
          }, e4.prototype.safePop = function() {
            return this.parent ? this.parent : this;
          }, e4.prototype.push = function(t4, n3, r4, i4, o3, s5, a3) {
            return new e4(this, t4, n3, r4, i4, o3, s5, a3);
          }, e4.prototype.getEnterPos = function() {
            return this._enterPos;
          }, e4.prototype.getAnchorPos = function() {
            return this._anchorPos;
          }, e4.prototype.getRule = function(e5) {
            return e5.getRule(this.ruleId);
          }, e4.prototype._writeString = function(e5, t4) {
            return this.parent && (t4 = this.parent._writeString(e5, t4)), e5[t4++] = "(" + this.ruleId + ", TODO-" + this.nameScopesList + ", TODO-" + this.contentNameScopesList + ")", t4;
          }, e4.prototype.toString = function() {
            var e5 = [];
            return this._writeString(e5, 0), "[" + e5.join(",") + "]";
          }, e4.prototype.setContentNameScopesList = function(e5) {
            return this.contentNameScopesList === e5 ? this : this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, e5);
          }, e4.prototype.setEndRule = function(t4) {
            return this.endRule === t4 ? this : new e4(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, t4, this.nameScopesList, this.contentNameScopesList);
          }, e4.prototype.hasSameRuleAs = function(e5) {
            return this.ruleId === e5.ruleId;
          }, e4.NULL = new e4(null, 0, 0, 0, false, null, null, null), e4;
        }();
        t3.StackElement = I2;
        var A3 = function(e4, t4) {
          this.scopes = e4, this.endPos = t4;
        };
        t3.LocalStackElement = A3;
        var T2 = function() {
          function e4(e5, t4, n3) {
            this._emitBinaryTokens = e5, this._tokenTypeOverrides = n3, s4.DebugFlags.InDebugMode ? this._lineText = t4 : this._lineText = null, this._tokens = [], this._binaryTokens = [], this._lastTokenEndIndex = 0;
          }
          return e4.prototype.produce = function(e5, t4) {
            this.produceFromScopes(e5.contentNameScopesList, t4);
          }, e4.prototype.produceFromScopes = function(e5, t4) {
            if (!(this._lastTokenEndIndex >= t4)) {
              if (this._emitBinaryTokens) {
                for (var n3 = e5.metadata, r4 = 0, i4 = this._tokenTypeOverrides; r4 < i4.length; r4++) {
                  var o3 = i4[r4];
                  o3.matcher(e5.generateScopes()) && (n3 = P2.set(n3, 0, L2(o3.type), -1, 0, 0));
                }
                return this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === n3 || (this._binaryTokens.push(this._lastTokenEndIndex), this._binaryTokens.push(n3)), void (this._lastTokenEndIndex = t4);
              }
              var a3 = e5.generateScopes();
              if (s4.DebugFlags.InDebugMode) {
                console.log("  token: |" + this._lineText.substring(this._lastTokenEndIndex, t4).replace(/\n$/, "\\n") + "|");
                for (var c3 = 0; c3 < a3.length; c3++)
                  console.log("      * " + a3[c3]);
              }
              this._tokens.push({ startIndex: this._lastTokenEndIndex, endIndex: t4, scopes: a3 }), this._lastTokenEndIndex = t4;
            }
          }, e4.prototype.getResult = function(e5, t4) {
            return this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === t4 - 1 && this._tokens.pop(), this._tokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(e5, t4), this._tokens[this._tokens.length - 1].startIndex = 0), this._tokens;
          }, e4.prototype.getBinaryResult = function(e5, t4) {
            this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === t4 - 1 && (this._binaryTokens.pop(), this._binaryTokens.pop()), this._binaryTokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(e5, t4), this._binaryTokens[this._binaryTokens.length - 2] = 0);
            for (var n3 = new Uint32Array(this._binaryTokens.length), r4 = 0, i4 = this._binaryTokens.length; r4 < i4; r4++)
              n3[r4] = this._binaryTokens[r4];
            return n3;
          }, e4;
        }();
        function L2(e4) {
          switch (e4) {
            case 4:
              return 4;
            case 2:
              return 2;
            case 1:
              return 1;
            case 0:
            default:
              return 8;
          }
        }
      }, function(e3, t3, n2) {
        "use strict";
        function r3(e4) {
          return Array.isArray(e4) ? function(e5) {
            for (var t4 = [], n3 = 0, i4 = e5.length; n3 < i4; n3++)
              t4[n3] = r3(e5[n3]);
            return t4;
          }(e4) : typeof e4 == "object" ? function(e5) {
            var t4 = {};
            for (var n3 in e5)
              t4[n3] = r3(e5[n3]);
            return t4;
          }(e4) : e4;
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.clone = function(e4) {
          return r3(e4);
        }, t3.mergeObjects = function(e4) {
          for (var t4 = [], n3 = 1; n3 < arguments.length; n3++)
            t4[n3 - 1] = arguments[n3];
          return t4.forEach(function(t5) {
            for (var n4 in t5)
              e4[n4] = t5[n4];
          }), e4;
        }, t3.basename = function e4(t4) {
          var n3 = ~t4.lastIndexOf("/") || ~t4.lastIndexOf("\\");
          return n3 === 0 ? t4 : ~n3 == t4.length - 1 ? e4(t4.substring(0, t4.length - 1)) : t4.substr(1 + ~n3);
        };
        var i3 = /\$(\d+)|\${(\d+):\/(downcase|upcase)}/, o2 = function() {
          function e4() {
          }
          return e4.hasCaptures = function(e5) {
            return e5 !== null && i3.test(e5);
          }, e4.replaceCaptures = function(e5, t4, n3) {
            return e5.replace(i3, function(e6, r4, i4, o3) {
              var s4 = n3[parseInt(r4 || i4, 10)];
              if (!s4)
                return e6;
              for (var a2 = t4.substring(s4.start, s4.end); a2[0] === "."; )
                a2 = a2.substring(1);
              switch (o3) {
                case "downcase":
                  return a2.toLowerCase();
                case "upcase":
                  return a2.toUpperCase();
                default:
                  return a2;
              }
            });
          }, e4;
        }();
        t3.RegexSource = o2;
      }, function(e3, t3, n2) {
        "use strict";
        (function(e4) {
          Object.defineProperty(t3, "__esModule", { value: true }), t3.DebugFlags = { InDebugMode: e4 !== void 0 && !!e4.env.VSCODE_TEXTMATE_DEBUG };
        }).call(this, n2(7));
      }, function(e3, t3, n2) {
        "use strict";
        var r3 = this && this.__awaiter || function(e4, t4, n3, r4) {
          return new (n3 || (n3 = Promise))(function(i4, o3) {
            function s5(e5) {
              try {
                c3(r4.next(e5));
              } catch (e6) {
                o3(e6);
              }
            }
            function a3(e5) {
              try {
                c3(r4.throw(e5));
              } catch (e6) {
                o3(e6);
              }
            }
            function c3(e5) {
              var t5;
              e5.done ? i4(e5.value) : (t5 = e5.value, t5 instanceof n3 ? t5 : new n3(function(e6) {
                e6(t5);
              })).then(s5, a3);
            }
            c3((r4 = r4.apply(e4, t4 || [])).next());
          });
        }, i3 = this && this.__generator || function(e4, t4) {
          var n3, r4, i4, o3, s5 = { label: 0, sent: function() {
            if (1 & i4[0])
              throw i4[1];
            return i4[1];
          }, trys: [], ops: [] };
          return o3 = { next: a3(0), throw: a3(1), return: a3(2) }, typeof Symbol == "function" && (o3[Symbol.iterator] = function() {
            return this;
          }), o3;
          function a3(o4) {
            return function(a4) {
              return function(o5) {
                if (n3)
                  throw new TypeError("Generator is already executing.");
                for (; s5; )
                  try {
                    if (n3 = 1, r4 && (i4 = 2 & o5[0] ? r4.return : o5[0] ? r4.throw || ((i4 = r4.return) && i4.call(r4), 0) : r4.next) && !(i4 = i4.call(r4, o5[1])).done)
                      return i4;
                    switch (r4 = 0, i4 && (o5 = [2 & o5[0], i4.value]), o5[0]) {
                      case 0:
                      case 1:
                        i4 = o5;
                        break;
                      case 4:
                        return s5.label++, { value: o5[1], done: false };
                      case 5:
                        s5.label++, r4 = o5[1], o5 = [0];
                        continue;
                      case 7:
                        o5 = s5.ops.pop(), s5.trys.pop();
                        continue;
                      default:
                        if (!(i4 = s5.trys, (i4 = i4.length > 0 && i4[i4.length - 1]) || o5[0] !== 6 && o5[0] !== 2)) {
                          s5 = 0;
                          continue;
                        }
                        if (o5[0] === 3 && (!i4 || o5[1] > i4[0] && o5[1] < i4[3])) {
                          s5.label = o5[1];
                          break;
                        }
                        if (o5[0] === 6 && s5.label < i4[1]) {
                          s5.label = i4[1], i4 = o5;
                          break;
                        }
                        if (i4 && s5.label < i4[2]) {
                          s5.label = i4[2], s5.ops.push(o5);
                          break;
                        }
                        i4[2] && s5.ops.pop(), s5.trys.pop();
                        continue;
                    }
                    o5 = t4.call(e4, s5);
                  } catch (e5) {
                    o5 = [6, e5], r4 = 0;
                  } finally {
                    n3 = i4 = 0;
                  }
                if (5 & o5[0])
                  throw o5[1];
                return { value: o5[0] ? o5[1] : void 0, done: true };
              }([o4, a4]);
            };
          }
        };
        Object.defineProperty(t3, "__esModule", { value: true });
        var o2 = n2(4), s4 = n2(8), a2 = n2(11), c2 = n2(0), u3 = function() {
          function e4(e5) {
            this._options = e5, this._syncRegistry = new o2.SyncRegistry(a2.Theme.createFromRawTheme(e5.theme, e5.colorMap), e5.onigLib), this._ensureGrammarCache = /* @__PURE__ */ new Map();
          }
          return e4.prototype.dispose = function() {
            this._syncRegistry.dispose();
          }, e4.prototype.setTheme = function(e5, t4) {
            this._syncRegistry.setTheme(a2.Theme.createFromRawTheme(e5, t4));
          }, e4.prototype.getColorMap = function() {
            return this._syncRegistry.getColorMap();
          }, e4.prototype.loadGrammarWithEmbeddedLanguages = function(e5, t4, n3) {
            return this.loadGrammarWithConfiguration(e5, t4, { embeddedLanguages: n3 });
          }, e4.prototype.loadGrammarWithConfiguration = function(e5, t4, n3) {
            return this._loadGrammar(e5, t4, n3.embeddedLanguages, n3.tokenTypes);
          }, e4.prototype.loadGrammar = function(e5) {
            return this._loadGrammar(e5, 0, null, null);
          }, e4.prototype._doLoadSingleGrammar = function(e5) {
            return r3(this, void 0, void 0, function() {
              var t4, n3;
              return i3(this, function(r4) {
                switch (r4.label) {
                  case 0:
                    return [4, this._options.loadGrammar(e5)];
                  case 1:
                    return (t4 = r4.sent()) && (n3 = typeof this._options.getInjections == "function" ? this._options.getInjections(e5) : void 0, this._syncRegistry.addGrammar(t4, n3)), [2];
                }
              });
            });
          }, e4.prototype._loadSingleGrammar = function(e5) {
            return r3(this, void 0, void 0, function() {
              return i3(this, function(t4) {
                return this._ensureGrammarCache.has(e5) || this._ensureGrammarCache.set(e5, this._doLoadSingleGrammar(e5)), [2, this._ensureGrammarCache.get(e5)];
              });
            });
          }, e4.prototype._collectDependenciesForDep = function(e5, t4, n3) {
            var r4 = this._syncRegistry.lookup(n3.scopeName);
            if (r4) {
              n3 instanceof c2.FullScopeDependency ? c2.collectDependencies(t4, this._syncRegistry.lookup(e5), r4) : c2.collectSpecificDependencies(t4, this._syncRegistry.lookup(e5), r4, n3.include);
              var i4 = this._syncRegistry.injections(n3.scopeName);
              if (i4)
                for (var o3 = 0, s5 = i4; o3 < s5.length; o3++) {
                  var a3 = s5[o3];
                  t4.add(new c2.FullScopeDependency(a3));
                }
            } else if (n3.scopeName === e5)
              throw new Error("No grammar provided for <" + e5 + ">");
          }, e4.prototype._loadGrammar = function(e5, t4, n3, o3) {
            return r3(this, void 0, void 0, function() {
              var r4, s5, a3, u4, l2, h4, p3, f4, d2, g3, m3, _, y2 = this;
              return i3(this, function(i4) {
                switch (i4.label) {
                  case 0:
                    r4 = /* @__PURE__ */ new Set(), s5 = /* @__PURE__ */ new Set(), r4.add(e5), a3 = [new c2.FullScopeDependency(e5)], i4.label = 1;
                  case 1:
                    return a3.length > 0 ? (u4 = a3, a3 = [], [4, Promise.all(u4.map(function(e6) {
                      return y2._loadSingleGrammar(e6.scopeName);
                    }))]) : [3, 3];
                  case 2:
                    for (i4.sent(), l2 = new c2.ScopeDependencyCollector(), h4 = 0, p3 = u4; h4 < p3.length; h4++)
                      _ = p3[h4], this._collectDependenciesForDep(e5, l2, _);
                    for (f4 = 0, d2 = l2.full; f4 < d2.length; f4++)
                      _ = d2[f4], r4.has(_.scopeName) || (r4.add(_.scopeName), a3.push(_));
                    for (g3 = 0, m3 = l2.partial; g3 < m3.length; g3++)
                      _ = m3[g3], r4.has(_.scopeName) || s5.has(_.toKey()) || (s5.add(_.toKey()), a3.push(_));
                    return [3, 1];
                  case 3:
                    return [2, this.grammarForScopeName(e5, t4, n3, o3)];
                }
              });
            });
          }, e4.prototype.addGrammar = function(e5, t4, n3, o3) {
            return t4 === void 0 && (t4 = []), n3 === void 0 && (n3 = 0), o3 === void 0 && (o3 = null), r3(this, void 0, void 0, function() {
              return i3(this, function(r4) {
                switch (r4.label) {
                  case 0:
                    return this._syncRegistry.addGrammar(e5, t4), [4, this.grammarForScopeName(e5.scopeName, n3, o3)];
                  case 1:
                    return [2, r4.sent()];
                }
              });
            });
          }, e4.prototype.grammarForScopeName = function(e5, t4, n3, r4) {
            return t4 === void 0 && (t4 = 0), n3 === void 0 && (n3 = null), r4 === void 0 && (r4 = null), this._syncRegistry.grammarForScopeName(e5, t4, n3, r4);
          }, e4;
        }();
        t3.Registry = u3, t3.INITIAL = c2.StackElement.NULL, t3.parseRawGrammar = s4.parseRawGrammar;
      }, function(e3, t3, n2) {
        "use strict";
        var r3 = this && this.__awaiter || function(e4, t4, n3, r4) {
          return new (n3 || (n3 = Promise))(function(i4, o3) {
            function s5(e5) {
              try {
                c2(r4.next(e5));
              } catch (e6) {
                o3(e6);
              }
            }
            function a2(e5) {
              try {
                c2(r4.throw(e5));
              } catch (e6) {
                o3(e6);
              }
            }
            function c2(e5) {
              var t5;
              e5.done ? i4(e5.value) : (t5 = e5.value, t5 instanceof n3 ? t5 : new n3(function(e6) {
                e6(t5);
              })).then(s5, a2);
            }
            c2((r4 = r4.apply(e4, t4 || [])).next());
          });
        }, i3 = this && this.__generator || function(e4, t4) {
          var n3, r4, i4, o3, s5 = { label: 0, sent: function() {
            if (1 & i4[0])
              throw i4[1];
            return i4[1];
          }, trys: [], ops: [] };
          return o3 = { next: a2(0), throw: a2(1), return: a2(2) }, typeof Symbol == "function" && (o3[Symbol.iterator] = function() {
            return this;
          }), o3;
          function a2(o4) {
            return function(a3) {
              return function(o5) {
                if (n3)
                  throw new TypeError("Generator is already executing.");
                for (; s5; )
                  try {
                    if (n3 = 1, r4 && (i4 = 2 & o5[0] ? r4.return : o5[0] ? r4.throw || ((i4 = r4.return) && i4.call(r4), 0) : r4.next) && !(i4 = i4.call(r4, o5[1])).done)
                      return i4;
                    switch (r4 = 0, i4 && (o5 = [2 & o5[0], i4.value]), o5[0]) {
                      case 0:
                      case 1:
                        i4 = o5;
                        break;
                      case 4:
                        return s5.label++, { value: o5[1], done: false };
                      case 5:
                        s5.label++, r4 = o5[1], o5 = [0];
                        continue;
                      case 7:
                        o5 = s5.ops.pop(), s5.trys.pop();
                        continue;
                      default:
                        if (!(i4 = s5.trys, (i4 = i4.length > 0 && i4[i4.length - 1]) || o5[0] !== 6 && o5[0] !== 2)) {
                          s5 = 0;
                          continue;
                        }
                        if (o5[0] === 3 && (!i4 || o5[1] > i4[0] && o5[1] < i4[3])) {
                          s5.label = o5[1];
                          break;
                        }
                        if (o5[0] === 6 && s5.label < i4[1]) {
                          s5.label = i4[1], i4 = o5;
                          break;
                        }
                        if (i4 && s5.label < i4[2]) {
                          s5.label = i4[2], s5.ops.push(o5);
                          break;
                        }
                        i4[2] && s5.ops.pop(), s5.trys.pop();
                        continue;
                    }
                    o5 = t4.call(e4, s5);
                  } catch (e5) {
                    o5 = [6, e5], r4 = 0;
                  } finally {
                    n3 = i4 = 0;
                  }
                if (5 & o5[0])
                  throw o5[1];
                return { value: o5[0] ? o5[1] : void 0, done: true };
              }([o4, a3]);
            };
          }
        };
        Object.defineProperty(t3, "__esModule", { value: true });
        var o2 = n2(0), s4 = function() {
          function e4(e5, t4) {
            this._theme = e5, this._grammars = {}, this._rawGrammars = {}, this._injectionGrammars = {}, this._onigLibPromise = t4;
          }
          return e4.prototype.dispose = function() {
            for (var e5 in this._grammars)
              this._grammars.hasOwnProperty(e5) && this._grammars[e5].dispose();
          }, e4.prototype.setTheme = function(e5) {
            var t4 = this;
            this._theme = e5, Object.keys(this._grammars).forEach(function(e6) {
              t4._grammars[e6].onDidChangeTheme();
            });
          }, e4.prototype.getColorMap = function() {
            return this._theme.getColorMap();
          }, e4.prototype.addGrammar = function(e5, t4) {
            this._rawGrammars[e5.scopeName] = e5, t4 && (this._injectionGrammars[e5.scopeName] = t4);
          }, e4.prototype.lookup = function(e5) {
            return this._rawGrammars[e5];
          }, e4.prototype.injections = function(e5) {
            return this._injectionGrammars[e5];
          }, e4.prototype.getDefaults = function() {
            return this._theme.getDefaults();
          }, e4.prototype.themeMatch = function(e5) {
            return this._theme.match(e5);
          }, e4.prototype.grammarForScopeName = function(e5, t4, n3, s5) {
            return r3(this, void 0, void 0, function() {
              var r4, a2, c2, u3, l2;
              return i3(this, function(i4) {
                switch (i4.label) {
                  case 0:
                    return this._grammars[e5] ? [3, 2] : (r4 = this._rawGrammars[e5]) ? (a2 = this._grammars, c2 = e5, u3 = o2.createGrammar, l2 = [r4, t4, n3, s5, this], [4, this._onigLibPromise]) : [2, null];
                  case 1:
                    a2[c2] = u3.apply(void 0, l2.concat([i4.sent()])), i4.label = 2;
                  case 2:
                    return [2, this._grammars[e5]];
                }
              });
            });
          }, e4;
        }();
        t3.SyncRegistry = s4;
      }, function(e3, t3, n2) {
        "use strict";
        var r3, i3 = this && this.__extends || (r3 = function(e4, t4) {
          return (r3 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
            e5.__proto__ = t5;
          } || function(e5, t5) {
            for (var n3 in t5)
              t5.hasOwnProperty(n3) && (e5[n3] = t5[n3]);
          })(e4, t4);
        }, function(e4, t4) {
          function n3() {
            this.constructor = e4;
          }
          r3(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (n3.prototype = t4.prototype, new n3());
        });
        Object.defineProperty(t3, "__esModule", { value: true });
        var o2 = n2(1), s4 = /\\(\d+)/, a2 = /\\(\d+)/g, c2 = function() {
          function e4(e5, t4, n3) {
            this.debugRegExps = t4, this.rules = n3, this.scanner = e5.createOnigScanner(t4);
          }
          return e4.prototype.dispose = function() {
            typeof this.scanner.dispose == "function" && this.scanner.dispose();
          }, e4;
        }();
        t3.CompiledRule = c2;
        var u3 = function() {
          function e4(e5, t4, n3, r4) {
            this.$location = e5, this.id = t4, this._name = n3 || null, this._nameIsCapturing = o2.RegexSource.hasCaptures(this._name), this._contentName = r4 || null, this._contentNameIsCapturing = o2.RegexSource.hasCaptures(this._contentName);
          }
          return Object.defineProperty(e4.prototype, "debugName", { get: function() {
            var e5 = this.$location ? o2.basename(this.$location.filename) + ":" + this.$location.line : "unknown";
            return this.constructor.name + "#" + this.id + " @ " + e5;
          }, enumerable: true, configurable: true }), e4.prototype.getName = function(e5, t4) {
            return this._nameIsCapturing && this._name !== null && e5 !== null && t4 !== null ? o2.RegexSource.replaceCaptures(this._name, e5, t4) : this._name;
          }, e4.prototype.getContentName = function(e5, t4) {
            return this._contentNameIsCapturing && this._contentName !== null ? o2.RegexSource.replaceCaptures(this._contentName, e5, t4) : this._contentName;
          }, e4;
        }();
        t3.Rule = u3;
        var l2 = function(e4) {
          function t4(t5, n3, r4, i4, o3) {
            var s5 = e4.call(this, t5, n3, r4, i4) || this;
            return s5.retokenizeCapturedWithRuleId = o3, s5;
          }
          return i3(t4, e4), t4.prototype.dispose = function() {
          }, t4.prototype.collectPatternsRecursive = function(e5, t5, n3) {
            throw new Error("Not supported!");
          }, t4.prototype.compile = function(e5, t5, n3, r4) {
            throw new Error("Not supported!");
          }, t4;
        }(u3);
        t3.CaptureRule = l2;
        var h4 = function() {
          function e4(e5, t4, n3) {
            if (n3 === void 0 && (n3 = true), n3)
              if (e5) {
                for (var r4 = e5.length, i4 = 0, o3 = [], a3 = false, c3 = 0; c3 < r4; c3++) {
                  if (e5.charAt(c3) === "\\" && c3 + 1 < r4) {
                    var u4 = e5.charAt(c3 + 1);
                    u4 === "z" ? (o3.push(e5.substring(i4, c3)), o3.push("$(?!\\n)(?<!\\n)"), i4 = c3 + 2) : u4 !== "A" && u4 !== "G" || (a3 = true), c3++;
                  }
                }
                this.hasAnchor = a3, i4 === 0 ? this.source = e5 : (o3.push(e5.substring(i4, r4)), this.source = o3.join(""));
              } else
                this.hasAnchor = false, this.source = e5;
            else
              this.hasAnchor = false, this.source = e5;
            this.hasAnchor ? this._anchorCache = this._buildAnchorCache() : this._anchorCache = null, this.ruleId = t4, this.hasBackReferences = s4.test(this.source);
          }
          return e4.prototype.clone = function() {
            return new e4(this.source, this.ruleId, true);
          }, e4.prototype.setSource = function(e5) {
            this.source !== e5 && (this.source = e5, this.hasAnchor && (this._anchorCache = this._buildAnchorCache()));
          }, e4.prototype.resolveBackReferences = function(e5, t4) {
            var n3 = t4.map(function(t5) {
              return e5.substring(t5.start, t5.end);
            });
            return a2.lastIndex = 0, this.source.replace(a2, function(e6, t5) {
              return (n3[parseInt(t5, 10)] || "").replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&");
            });
          }, e4.prototype._buildAnchorCache = function() {
            var e5, t4, n3, r4, i4 = [], o3 = [], s5 = [], a3 = [];
            for (e5 = 0, t4 = this.source.length; e5 < t4; e5++)
              n3 = this.source.charAt(e5), i4[e5] = n3, o3[e5] = n3, s5[e5] = n3, a3[e5] = n3, n3 === "\\" && e5 + 1 < t4 && ((r4 = this.source.charAt(e5 + 1)) === "A" ? (i4[e5 + 1] = "\uFFFF", o3[e5 + 1] = "\uFFFF", s5[e5 + 1] = "A", a3[e5 + 1] = "A") : r4 === "G" ? (i4[e5 + 1] = "\uFFFF", o3[e5 + 1] = "G", s5[e5 + 1] = "\uFFFF", a3[e5 + 1] = "G") : (i4[e5 + 1] = r4, o3[e5 + 1] = r4, s5[e5 + 1] = r4, a3[e5 + 1] = r4), e5++);
            return { A0_G0: i4.join(""), A0_G1: o3.join(""), A1_G0: s5.join(""), A1_G1: a3.join("") };
          }, e4.prototype.resolveAnchors = function(e5, t4) {
            return this.hasAnchor && this._anchorCache ? e5 ? t4 ? this._anchorCache.A1_G1 : this._anchorCache.A1_G0 : t4 ? this._anchorCache.A0_G1 : this._anchorCache.A0_G0 : this.source;
          }, e4;
        }();
        t3.RegExpSource = h4;
        var p3 = function() {
          function e4() {
            this._items = [], this._hasAnchors = false, this._cached = null, this._anchorCache = { A0_G0: null, A0_G1: null, A1_G0: null, A1_G1: null };
          }
          return e4.prototype.dispose = function() {
            this._disposeCaches();
          }, e4.prototype._disposeCaches = function() {
            this._cached && (this._cached.dispose(), this._cached = null), this._anchorCache.A0_G0 && (this._anchorCache.A0_G0.dispose(), this._anchorCache.A0_G0 = null), this._anchorCache.A0_G1 && (this._anchorCache.A0_G1.dispose(), this._anchorCache.A0_G1 = null), this._anchorCache.A1_G0 && (this._anchorCache.A1_G0.dispose(), this._anchorCache.A1_G0 = null), this._anchorCache.A1_G1 && (this._anchorCache.A1_G1.dispose(), this._anchorCache.A1_G1 = null);
          }, e4.prototype.push = function(e5) {
            this._items.push(e5), this._hasAnchors = this._hasAnchors || e5.hasAnchor;
          }, e4.prototype.unshift = function(e5) {
            this._items.unshift(e5), this._hasAnchors = this._hasAnchors || e5.hasAnchor;
          }, e4.prototype.length = function() {
            return this._items.length;
          }, e4.prototype.setSource = function(e5, t4) {
            this._items[e5].source !== t4 && (this._disposeCaches(), this._items[e5].setSource(t4));
          }, e4.prototype.compile = function(e5, t4, n3) {
            if (this._hasAnchors)
              return t4 ? n3 ? (this._anchorCache.A1_G1 || (this._anchorCache.A1_G1 = this._resolveAnchors(e5, t4, n3)), this._anchorCache.A1_G1) : (this._anchorCache.A1_G0 || (this._anchorCache.A1_G0 = this._resolveAnchors(e5, t4, n3)), this._anchorCache.A1_G0) : n3 ? (this._anchorCache.A0_G1 || (this._anchorCache.A0_G1 = this._resolveAnchors(e5, t4, n3)), this._anchorCache.A0_G1) : (this._anchorCache.A0_G0 || (this._anchorCache.A0_G0 = this._resolveAnchors(e5, t4, n3)), this._anchorCache.A0_G0);
            if (!this._cached) {
              var r4 = this._items.map(function(e6) {
                return e6.source;
              });
              this._cached = new c2(e5, r4, this._items.map(function(e6) {
                return e6.ruleId;
              }));
            }
            return this._cached;
          }, e4.prototype._resolveAnchors = function(e5, t4, n3) {
            var r4 = this._items.map(function(e6) {
              return e6.resolveAnchors(t4, n3);
            });
            return new c2(e5, r4, this._items.map(function(e6) {
              return e6.ruleId;
            }));
          }, e4;
        }();
        t3.RegExpSourceList = p3;
        var f4 = function(e4) {
          function t4(t5, n3, r4, i4, o3) {
            var s5 = e4.call(this, t5, n3, r4, null) || this;
            return s5._match = new h4(i4, s5.id), s5.captures = o3, s5._cachedCompiledPatterns = null, s5;
          }
          return i3(t4, e4), t4.prototype.dispose = function() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }, Object.defineProperty(t4.prototype, "debugMatchRegExp", { get: function() {
            return "" + this._match.source;
          }, enumerable: true, configurable: true }), t4.prototype.collectPatternsRecursive = function(e5, t5, n3) {
            t5.push(this._match);
          }, t4.prototype.compile = function(e5, t5, n3, r4) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new p3(), this.collectPatternsRecursive(e5, this._cachedCompiledPatterns, true)), this._cachedCompiledPatterns.compile(e5, n3, r4);
          }, t4;
        }(u3);
        t3.MatchRule = f4;
        var d2 = function(e4) {
          function t4(t5, n3, r4, i4, o3) {
            var s5 = e4.call(this, t5, n3, r4, i4) || this;
            return s5.patterns = o3.patterns, s5.hasMissingPatterns = o3.hasMissingPatterns, s5._cachedCompiledPatterns = null, s5;
          }
          return i3(t4, e4), t4.prototype.dispose = function() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }, t4.prototype.collectPatternsRecursive = function(e5, t5, n3) {
            var r4, i4;
            for (r4 = 0, i4 = this.patterns.length; r4 < i4; r4++)
              e5.getRule(this.patterns[r4]).collectPatternsRecursive(e5, t5, false);
          }, t4.prototype.compile = function(e5, t5, n3, r4) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new p3(), this.collectPatternsRecursive(e5, this._cachedCompiledPatterns, true)), this._cachedCompiledPatterns.compile(e5, n3, r4);
          }, t4;
        }(u3);
        t3.IncludeOnlyRule = d2;
        var g3 = function(e4) {
          function t4(t5, n3, r4, i4, o3, s5, a3, c3, u4, l3) {
            var p4 = e4.call(this, t5, n3, r4, i4) || this;
            return p4._begin = new h4(o3, p4.id), p4.beginCaptures = s5, p4._end = new h4(a3 || "\uFFFF", -1), p4.endHasBackReferences = p4._end.hasBackReferences, p4.endCaptures = c3, p4.applyEndPatternLast = u4 || false, p4.patterns = l3.patterns, p4.hasMissingPatterns = l3.hasMissingPatterns, p4._cachedCompiledPatterns = null, p4;
          }
          return i3(t4, e4), t4.prototype.dispose = function() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }, Object.defineProperty(t4.prototype, "debugBeginRegExp", { get: function() {
            return "" + this._begin.source;
          }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "debugEndRegExp", { get: function() {
            return "" + this._end.source;
          }, enumerable: true, configurable: true }), t4.prototype.getEndWithResolvedBackReferences = function(e5, t5) {
            return this._end.resolveBackReferences(e5, t5);
          }, t4.prototype.collectPatternsRecursive = function(e5, t5, n3) {
            if (n3) {
              var r4, i4 = void 0;
              for (i4 = 0, r4 = this.patterns.length; i4 < r4; i4++)
                e5.getRule(this.patterns[i4]).collectPatternsRecursive(e5, t5, false);
            } else
              t5.push(this._begin);
          }, t4.prototype.compile = function(e5, t5, n3, r4) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new p3(), this.collectPatternsRecursive(e5, this._cachedCompiledPatterns, true), this.applyEndPatternLast ? this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end) : this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end)), this._end.hasBackReferences && (this.applyEndPatternLast ? this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, t5) : this._cachedCompiledPatterns.setSource(0, t5)), this._cachedCompiledPatterns.compile(e5, n3, r4);
          }, t4;
        }(u3);
        t3.BeginEndRule = g3;
        var m3 = function(e4) {
          function t4(t5, n3, r4, i4, o3, s5, a3, c3, u4) {
            var l3 = e4.call(this, t5, n3, r4, i4) || this;
            return l3._begin = new h4(o3, l3.id), l3.beginCaptures = s5, l3.whileCaptures = c3, l3._while = new h4(a3, -2), l3.whileHasBackReferences = l3._while.hasBackReferences, l3.patterns = u4.patterns, l3.hasMissingPatterns = u4.hasMissingPatterns, l3._cachedCompiledPatterns = null, l3._cachedCompiledWhilePatterns = null, l3;
          }
          return i3(t4, e4), t4.prototype.dispose = function() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null), this._cachedCompiledWhilePatterns && (this._cachedCompiledWhilePatterns.dispose(), this._cachedCompiledWhilePatterns = null);
          }, Object.defineProperty(t4.prototype, "debugBeginRegExp", { get: function() {
            return "" + this._begin.source;
          }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "debugWhileRegExp", { get: function() {
            return "" + this._while.source;
          }, enumerable: true, configurable: true }), t4.prototype.getWhileWithResolvedBackReferences = function(e5, t5) {
            return this._while.resolveBackReferences(e5, t5);
          }, t4.prototype.collectPatternsRecursive = function(e5, t5, n3) {
            if (n3) {
              var r4, i4 = void 0;
              for (i4 = 0, r4 = this.patterns.length; i4 < r4; i4++)
                e5.getRule(this.patterns[i4]).collectPatternsRecursive(e5, t5, false);
            } else
              t5.push(this._begin);
          }, t4.prototype.compile = function(e5, t5, n3, r4) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new p3(), this.collectPatternsRecursive(e5, this._cachedCompiledPatterns, true)), this._cachedCompiledPatterns.compile(e5, n3, r4);
          }, t4.prototype.compileWhile = function(e5, t5, n3, r4) {
            return this._cachedCompiledWhilePatterns || (this._cachedCompiledWhilePatterns = new p3(), this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while)), this._while.hasBackReferences && this._cachedCompiledWhilePatterns.setSource(0, t5 || "\uFFFF"), this._cachedCompiledWhilePatterns.compile(e5, n3, r4);
          }, t4;
        }(u3);
        t3.BeginWhileRule = m3;
        var _ = function() {
          function e4() {
          }
          return e4.createCaptureRule = function(e5, t4, n3, r4, i4) {
            return e5.registerRule(function(e6) {
              return new l2(t4, e6, n3, r4, i4);
            });
          }, e4.getCompiledRuleId = function(t4, n3, r4) {
            return t4.id || n3.registerRule(function(i4) {
              if (t4.id = i4, t4.match)
                return new f4(t4.$vscodeTextmateLocation, t4.id, t4.name, t4.match, e4._compileCaptures(t4.captures, n3, r4));
              if (t4.begin === void 0) {
                t4.repository && (r4 = o2.mergeObjects({}, r4, t4.repository));
                var s5 = t4.patterns;
                return s5 === void 0 && t4.include && (s5 = [{ include: t4.include }]), new d2(t4.$vscodeTextmateLocation, t4.id, t4.name, t4.contentName, e4._compilePatterns(s5, n3, r4));
              }
              return t4.while ? new m3(t4.$vscodeTextmateLocation, t4.id, t4.name, t4.contentName, t4.begin, e4._compileCaptures(t4.beginCaptures || t4.captures, n3, r4), t4.while, e4._compileCaptures(t4.whileCaptures || t4.captures, n3, r4), e4._compilePatterns(t4.patterns, n3, r4)) : new g3(t4.$vscodeTextmateLocation, t4.id, t4.name, t4.contentName, t4.begin, e4._compileCaptures(t4.beginCaptures || t4.captures, n3, r4), t4.end, e4._compileCaptures(t4.endCaptures || t4.captures, n3, r4), t4.applyEndPatternLast, e4._compilePatterns(t4.patterns, n3, r4));
            }), t4.id;
          }, e4._compileCaptures = function(t4, n3, r4) {
            var i4 = [];
            if (t4) {
              var o3 = 0;
              for (var s5 in t4) {
                if (s5 !== "$vscodeTextmateLocation")
                  (c3 = parseInt(s5, 10)) > o3 && (o3 = c3);
              }
              for (var a3 = 0; a3 <= o3; a3++)
                i4[a3] = null;
              for (var s5 in t4)
                if (s5 !== "$vscodeTextmateLocation") {
                  var c3 = parseInt(s5, 10), u4 = 0;
                  t4[s5].patterns && (u4 = e4.getCompiledRuleId(t4[s5], n3, r4)), i4[c3] = e4.createCaptureRule(n3, t4[s5].$vscodeTextmateLocation, t4[s5].name, t4[s5].contentName, u4);
                }
            }
            return i4;
          }, e4._compilePatterns = function(t4, n3, r4) {
            var i4 = [];
            if (t4)
              for (var o3 = 0, s5 = t4.length; o3 < s5; o3++) {
                var a3 = t4[o3], c3 = -1;
                if (a3.include)
                  if (a3.include.charAt(0) === "#") {
                    var u4 = r4[a3.include.substr(1)];
                    u4 && (c3 = e4.getCompiledRuleId(u4, n3, r4));
                  } else if (a3.include === "$base" || a3.include === "$self")
                    c3 = e4.getCompiledRuleId(r4[a3.include], n3, r4);
                  else {
                    var l3 = null, h5 = null, p4 = a3.include.indexOf("#");
                    p4 >= 0 ? (l3 = a3.include.substring(0, p4), h5 = a3.include.substring(p4 + 1)) : l3 = a3.include;
                    var f5 = n3.getExternalGrammar(l3, r4);
                    if (f5)
                      if (h5) {
                        var _2 = f5.repository[h5];
                        _2 && (c3 = e4.getCompiledRuleId(_2, n3, f5.repository));
                      } else
                        c3 = e4.getCompiledRuleId(f5.repository.$self, n3, f5.repository);
                  }
                else
                  c3 = e4.getCompiledRuleId(a3, n3, r4);
                if (c3 !== -1) {
                  var y2 = n3.getRule(c3), v2 = false;
                  if ((y2 instanceof d2 || y2 instanceof g3 || y2 instanceof m3) && y2.hasMissingPatterns && y2.patterns.length === 0 && (v2 = true), v2)
                    continue;
                  i4.push(c3);
                }
              }
            return { patterns: i4, hasMissingPatterns: (t4 ? t4.length : 0) !== i4.length };
          }, e4;
        }();
        t3.RuleFactory = _;
      }, function(e3, t3, n2) {
        "use strict";
        function r3(e4) {
          return !!e4 && !!e4.match(/[\w\.:]+/);
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.createMatchers = function(e4, t4) {
          for (var n3, i3, o2, s4 = [], a2 = (o2 = (i3 = /([LR]:|[\w\.:][\w\.:\-]*|[\,\|\-\(\)])/g).exec(n3 = e4), { next: function() {
            if (!o2)
              return null;
            var e5 = o2[0];
            return o2 = i3.exec(n3), e5;
          } }), c2 = a2.next(); c2 !== null; ) {
            var u3 = 0;
            if (c2.length === 2 && c2.charAt(1) === ":") {
              switch (c2.charAt(0)) {
                case "R":
                  u3 = 1;
                  break;
                case "L":
                  u3 = -1;
                  break;
                default:
                  console.log("Unknown priority " + c2 + " in scope selector");
              }
              c2 = a2.next();
            }
            var l2 = p3();
            if (s4.push({ matcher: l2, priority: u3 }), c2 !== ",")
              break;
            c2 = a2.next();
          }
          return s4;
          function h4() {
            if (c2 === "-") {
              c2 = a2.next();
              var e5 = h4();
              return function(t5) {
                return !!e5 && !e5(t5);
              };
            }
            if (c2 === "(") {
              c2 = a2.next();
              var n4 = function() {
                var e6 = [], t5 = p3();
                for (; t5 && (e6.push(t5), c2 === "|" || c2 === ","); ) {
                  do {
                    c2 = a2.next();
                  } while (c2 === "|" || c2 === ",");
                  t5 = p3();
                }
                return function(t6) {
                  return e6.some(function(e7) {
                    return e7(t6);
                  });
                };
              }();
              return c2 === ")" && (c2 = a2.next()), n4;
            }
            if (r3(c2)) {
              var i4 = [];
              do {
                i4.push(c2), c2 = a2.next();
              } while (r3(c2));
              return function(e6) {
                return t4(i4, e6);
              };
            }
            return null;
          }
          function p3() {
            for (var e5 = [], t5 = h4(); t5; )
              e5.push(t5), t5 = h4();
            return function(t6) {
              return e5.every(function(e6) {
                return e6(t6);
              });
            };
          }
        };
      }, function(e3, t3) {
        var n2, r3, i3 = e3.exports = {};
        function o2() {
          throw new Error("setTimeout has not been defined");
        }
        function s4() {
          throw new Error("clearTimeout has not been defined");
        }
        function a2(e4) {
          if (n2 === setTimeout)
            return setTimeout(e4, 0);
          if ((n2 === o2 || !n2) && setTimeout)
            return n2 = setTimeout, setTimeout(e4, 0);
          try {
            return n2(e4, 0);
          } catch (t4) {
            try {
              return n2.call(null, e4, 0);
            } catch (t5) {
              return n2.call(this, e4, 0);
            }
          }
        }
        !function() {
          try {
            n2 = typeof setTimeout == "function" ? setTimeout : o2;
          } catch (e4) {
            n2 = o2;
          }
          try {
            r3 = typeof clearTimeout == "function" ? clearTimeout : s4;
          } catch (e4) {
            r3 = s4;
          }
        }();
        var c2, u3 = [], l2 = false, h4 = -1;
        function p3() {
          l2 && c2 && (l2 = false, c2.length ? u3 = c2.concat(u3) : h4 = -1, u3.length && f4());
        }
        function f4() {
          if (!l2) {
            var e4 = a2(p3);
            l2 = true;
            for (var t4 = u3.length; t4; ) {
              for (c2 = u3, u3 = []; ++h4 < t4; )
                c2 && c2[h4].run();
              h4 = -1, t4 = u3.length;
            }
            c2 = null, l2 = false, function(e5) {
              if (r3 === clearTimeout)
                return clearTimeout(e5);
              if ((r3 === s4 || !r3) && clearTimeout)
                return r3 = clearTimeout, clearTimeout(e5);
              try {
                r3(e5);
              } catch (t5) {
                try {
                  return r3.call(null, e5);
                } catch (t6) {
                  return r3.call(this, e5);
                }
              }
            }(e4);
          }
        }
        function d2(e4, t4) {
          this.fun = e4, this.array = t4;
        }
        function g3() {
        }
        i3.nextTick = function(e4) {
          var t4 = new Array(arguments.length - 1);
          if (arguments.length > 1)
            for (var n3 = 1; n3 < arguments.length; n3++)
              t4[n3 - 1] = arguments[n3];
          u3.push(new d2(e4, t4)), u3.length !== 1 || l2 || a2(f4);
        }, d2.prototype.run = function() {
          this.fun.apply(null, this.array);
        }, i3.title = "browser", i3.browser = true, i3.env = {}, i3.argv = [], i3.version = "", i3.versions = {}, i3.on = g3, i3.addListener = g3, i3.once = g3, i3.off = g3, i3.removeListener = g3, i3.removeAllListeners = g3, i3.emit = g3, i3.prependListener = g3, i3.prependOnceListener = g3, i3.listeners = function(e4) {
          return [];
        }, i3.binding = function(e4) {
          throw new Error("process.binding is not supported");
        }, i3.cwd = function() {
          return "/";
        }, i3.chdir = function(e4) {
          throw new Error("process.chdir is not supported");
        }, i3.umask = function() {
          return 0;
        };
      }, function(e3, t3, n2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r3 = n2(9), i3 = n2(2), o2 = n2(10);
        t3.parseRawGrammar = function(e4, t4) {
          return t4 === void 0 && (t4 = null), t4 !== null && /\.json$/.test(t4) ? function(e5, t5) {
            if (i3.DebugFlags.InDebugMode)
              return o2.parse(e5, t5, true);
            return JSON.parse(e5);
          }(e4, t4) : function(e5, t5) {
            if (i3.DebugFlags.InDebugMode)
              return r3.parseWithLocation(e5, t5, "$vscodeTextmateLocation");
            return r3.parse(e5);
          }(e4, t4);
        };
      }, function(e3, t3, n2) {
        "use strict";
        function r3(e4, t4, n3) {
          var r4 = e4.length, i3 = 0, o2 = 1, s4 = 0;
          function a2(t5) {
            if (n3 === null)
              i3 += t5;
            else
              for (; t5 > 0; ) {
                e4.charCodeAt(i3) === 10 ? (i3++, o2++, s4 = 0) : (i3++, s4++), t5--;
              }
          }
          function c2(e5) {
            n3 === null ? i3 = e5 : a2(e5 - i3);
          }
          function u3() {
            for (; i3 < r4; ) {
              var t5 = e4.charCodeAt(i3);
              if (t5 !== 32 && t5 !== 9 && t5 !== 13 && t5 !== 10)
                break;
              a2(1);
            }
          }
          function l2(t5) {
            return e4.substr(i3, t5.length) === t5 && (a2(t5.length), true);
          }
          function h4(t5) {
            var n4 = e4.indexOf(t5, i3);
            c2(n4 !== -1 ? n4 + t5.length : r4);
          }
          function p3(t5) {
            var n4 = e4.indexOf(t5, i3);
            if (n4 !== -1) {
              var o3 = e4.substring(i3, n4);
              return c2(n4 + t5.length), o3;
            }
            o3 = e4.substr(i3);
            return c2(r4), o3;
          }
          r4 > 0 && e4.charCodeAt(0) === 65279 && (i3 = 1);
          var f4 = 0, d2 = null, g3 = [], m3 = [], _ = null;
          function y2(e5, t5) {
            g3.push(f4), m3.push(d2), f4 = e5, d2 = t5;
          }
          function v2() {
            if (g3.length === 0)
              return b2("illegal state stack");
            f4 = g3.pop(), d2 = m3.pop();
          }
          function b2(t5) {
            throw new Error("Near offset " + i3 + ": " + t5 + " ~~~" + e4.substr(i3, 50) + "~~~");
          }
          var C2, w2, k2, R2 = function() {
            if (_ === null)
              return b2("missing <key>");
            var e5 = {};
            n3 !== null && (e5[n3] = { filename: t4, line: o2, char: s4 }), d2[_] = e5, _ = null, y2(1, e5);
          }, S3 = function() {
            if (_ === null)
              return b2("missing <key>");
            var e5 = [];
            d2[_] = e5, _ = null, y2(2, e5);
          }, P2 = function() {
            var e5 = {};
            n3 !== null && (e5[n3] = { filename: t4, line: o2, char: s4 }), d2.push(e5), y2(1, e5);
          }, x3 = function() {
            var e5 = [];
            d2.push(e5), y2(2, e5);
          };
          function I2() {
            if (f4 !== 1)
              return b2("unexpected </dict>");
            v2();
          }
          function A3() {
            return f4 === 1 || f4 !== 2 ? b2("unexpected </array>") : void v2();
          }
          function T2(e5) {
            if (f4 === 1) {
              if (_ === null)
                return b2("missing <key>");
              d2[_] = e5, _ = null;
            } else
              f4 === 2 ? d2.push(e5) : d2 = e5;
          }
          function L2(e5) {
            if (isNaN(e5))
              return b2("cannot parse float");
            if (f4 === 1) {
              if (_ === null)
                return b2("missing <key>");
              d2[_] = e5, _ = null;
            } else
              f4 === 2 ? d2.push(e5) : d2 = e5;
          }
          function M(e5) {
            if (isNaN(e5))
              return b2("cannot parse integer");
            if (f4 === 1) {
              if (_ === null)
                return b2("missing <key>");
              d2[_] = e5, _ = null;
            } else
              f4 === 2 ? d2.push(e5) : d2 = e5;
          }
          function G(e5) {
            if (f4 === 1) {
              if (_ === null)
                return b2("missing <key>");
              d2[_] = e5, _ = null;
            } else
              f4 === 2 ? d2.push(e5) : d2 = e5;
          }
          function D2(e5) {
            if (f4 === 1) {
              if (_ === null)
                return b2("missing <key>");
              d2[_] = e5, _ = null;
            } else
              f4 === 2 ? d2.push(e5) : d2 = e5;
          }
          function N2(e5) {
            if (f4 === 1) {
              if (_ === null)
                return b2("missing <key>");
              d2[_] = e5, _ = null;
            } else
              f4 === 2 ? d2.push(e5) : d2 = e5;
          }
          function E2(e5) {
            if (e5.isClosed)
              return "";
            var t5 = p3("</");
            return h4(">"), t5.replace(/&#([0-9]+);/g, function(e6, t6) {
              return String.fromCodePoint(parseInt(t6, 10));
            }).replace(/&#x([0-9a-f]+);/g, function(e6, t6) {
              return String.fromCodePoint(parseInt(t6, 16));
            }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function(e6) {
              switch (e6) {
                case "&amp;":
                  return "&";
                case "&lt;":
                  return "<";
                case "&gt;":
                  return ">";
                case "&quot;":
                  return '"';
                case "&apos;":
                  return "'";
              }
              return e6;
            });
          }
          for (; i3 < r4 && (u3(), !(i3 >= r4)); ) {
            var O2 = e4.charCodeAt(i3);
            if (a2(1), O2 !== 60)
              return b2("expected <");
            if (i3 >= r4)
              return b2("unexpected end of input");
            var j = e4.charCodeAt(i3);
            if (j !== 63)
              if (j !== 33) {
                if (j === 47) {
                  if (a2(1), u3(), l2("plist")) {
                    h4(">");
                    continue;
                  }
                  if (l2("dict")) {
                    h4(">"), I2();
                    continue;
                  }
                  if (l2("array")) {
                    h4(">"), A3();
                    continue;
                  }
                  return b2("unexpected closed tag");
                }
                var F3 = (w2 = void 0, k2 = void 0, w2 = p3(">"), k2 = false, w2.charCodeAt(w2.length - 1) === 47 && (k2 = true, w2 = w2.substring(0, w2.length - 1)), { name: w2.trim(), isClosed: k2 });
                switch (F3.name) {
                  case "dict":
                    f4 === 1 ? R2() : f4 === 2 ? P2() : (d2 = {}, n3 !== null && (d2[n3] = { filename: t4, line: o2, char: s4 }), y2(1, d2)), F3.isClosed && I2();
                    continue;
                  case "array":
                    f4 === 1 ? S3() : f4 === 2 ? x3() : y2(2, d2 = []), F3.isClosed && A3();
                    continue;
                  case "key":
                    C2 = E2(F3), f4 !== 1 ? b2("unexpected <key>") : _ !== null ? b2("too many <key>") : _ = C2;
                    continue;
                  case "string":
                    T2(E2(F3));
                    continue;
                  case "real":
                    L2(parseFloat(E2(F3)));
                    continue;
                  case "integer":
                    M(parseInt(E2(F3), 10));
                    continue;
                  case "date":
                    G(new Date(E2(F3)));
                    continue;
                  case "data":
                    D2(E2(F3));
                    continue;
                  case "true":
                    E2(F3), N2(true);
                    continue;
                  case "false":
                    E2(F3), N2(false);
                    continue;
                }
                if (!/^plist/.test(F3.name))
                  return b2("unexpected opened tag " + F3.name);
              } else {
                if (a2(1), l2("--")) {
                  h4("-->");
                  continue;
                }
                h4(">");
              }
            else
              a2(1), h4("?>");
          }
          return d2;
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.parseWithLocation = function(e4, t4, n3) {
          return r3(e4, t4, n3);
        }, t3.parse = function(e4) {
          return r3(e4, null, null);
        };
      }, function(e3, t3, n2) {
        "use strict";
        function r3(e4, t4) {
          throw new Error("Near offset " + e4.pos + ": " + t4 + " ~~~" + e4.source.substr(e4.pos, 50) + "~~~");
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.parse = function(e4, t4, n3) {
          var a2 = new i3(e4), c2 = new o2(), u3 = 0, l2 = null, h4 = [], p3 = [];
          function f4() {
            h4.push(u3), p3.push(l2);
          }
          function d2() {
            u3 = h4.pop(), l2 = p3.pop();
          }
          function g3(e5) {
            r3(a2, e5);
          }
          for (; s4(a2, c2); ) {
            if (u3 === 0) {
              if (l2 !== null && g3("too many constructs in root"), c2.type === 3) {
                l2 = {}, n3 && (l2.$vscodeTextmateLocation = c2.toLocation(t4)), f4(), u3 = 1;
                continue;
              }
              if (c2.type === 2) {
                l2 = [], f4(), u3 = 4;
                continue;
              }
              g3("unexpected token in root");
            }
            if (u3 === 2) {
              if (c2.type === 5) {
                d2();
                continue;
              }
              if (c2.type === 7) {
                u3 = 3;
                continue;
              }
              g3("expected , or }");
            }
            if (u3 === 1 || u3 === 3) {
              if (u3 === 1 && c2.type === 5) {
                d2();
                continue;
              }
              if (c2.type === 1) {
                var m3 = c2.value;
                if (s4(a2, c2) && c2.type === 6 || g3("expected colon"), s4(a2, c2) || g3("expected value"), u3 = 2, c2.type === 1) {
                  l2[m3] = c2.value;
                  continue;
                }
                if (c2.type === 8) {
                  l2[m3] = null;
                  continue;
                }
                if (c2.type === 9) {
                  l2[m3] = true;
                  continue;
                }
                if (c2.type === 10) {
                  l2[m3] = false;
                  continue;
                }
                if (c2.type === 11) {
                  l2[m3] = parseFloat(c2.value);
                  continue;
                }
                if (c2.type === 2) {
                  var _ = [];
                  l2[m3] = _, f4(), u3 = 4, l2 = _;
                  continue;
                }
                if (c2.type === 3) {
                  var y2 = {};
                  n3 && (y2.$vscodeTextmateLocation = c2.toLocation(t4)), l2[m3] = y2, f4(), u3 = 1, l2 = y2;
                  continue;
                }
              }
              g3("unexpected token in dict");
            }
            if (u3 === 5) {
              if (c2.type === 4) {
                d2();
                continue;
              }
              if (c2.type === 7) {
                u3 = 6;
                continue;
              }
              g3("expected , or ]");
            }
            if (u3 === 4 || u3 === 6) {
              if (u3 === 4 && c2.type === 4) {
                d2();
                continue;
              }
              if (u3 = 5, c2.type === 1) {
                l2.push(c2.value);
                continue;
              }
              if (c2.type === 8) {
                l2.push(null);
                continue;
              }
              if (c2.type === 9) {
                l2.push(true);
                continue;
              }
              if (c2.type === 10) {
                l2.push(false);
                continue;
              }
              if (c2.type === 11) {
                l2.push(parseFloat(c2.value));
                continue;
              }
              if (c2.type === 2) {
                _ = [];
                l2.push(_), f4(), u3 = 4, l2 = _;
                continue;
              }
              if (c2.type === 3) {
                y2 = {};
                n3 && (y2.$vscodeTextmateLocation = c2.toLocation(t4)), l2.push(y2), f4(), u3 = 1, l2 = y2;
                continue;
              }
              g3("unexpected token in array");
            }
            g3("unknown state");
          }
          return p3.length !== 0 && g3("unclosed constructs"), l2;
        };
        var i3 = function(e4) {
          this.source = e4, this.pos = 0, this.len = e4.length, this.line = 1, this.char = 0;
        }, o2 = function() {
          function e4() {
            this.value = null, this.type = 0, this.offset = -1, this.len = -1, this.line = -1, this.char = -1;
          }
          return e4.prototype.toLocation = function(e5) {
            return { filename: e5, line: this.line, char: this.char };
          }, e4;
        }();
        function s4(e4, t4) {
          t4.value = null, t4.type = 0, t4.offset = -1, t4.len = -1, t4.line = -1, t4.char = -1;
          for (var n3, i4 = e4.source, o3 = e4.pos, s5 = e4.len, a2 = e4.line, c2 = e4.char; ; ) {
            if (o3 >= s5)
              return false;
            if ((n3 = i4.charCodeAt(o3)) !== 32 && n3 !== 9 && n3 !== 13) {
              if (n3 !== 10)
                break;
              o3++, a2++, c2 = 0;
            } else
              o3++, c2++;
          }
          if (t4.offset = o3, t4.line = a2, t4.char = c2, n3 === 34) {
            for (t4.type = 1, o3++, c2++; ; ) {
              if (o3 >= s5)
                return false;
              if (n3 = i4.charCodeAt(o3), o3++, c2++, n3 !== 92) {
                if (n3 === 34)
                  break;
              } else
                o3++, c2++;
            }
            t4.value = i4.substring(t4.offset + 1, o3 - 1).replace(/\\u([0-9A-Fa-f]{4})/g, function(e5, t5) {
              return String.fromCodePoint(parseInt(t5, 16));
            }).replace(/\\(.)/g, function(t5, n4) {
              switch (n4) {
                case '"':
                  return '"';
                case "\\":
                  return "\\";
                case "/":
                  return "/";
                case "b":
                  return "\b";
                case "f":
                  return "\f";
                case "n":
                  return "\n";
                case "r":
                  return "\r";
                case "t":
                  return "	";
                default:
                  r3(e4, "invalid escape sequence");
              }
              throw new Error("unreachable");
            });
          } else if (n3 === 91)
            t4.type = 2, o3++, c2++;
          else if (n3 === 123)
            t4.type = 3, o3++, c2++;
          else if (n3 === 93)
            t4.type = 4, o3++, c2++;
          else if (n3 === 125)
            t4.type = 5, o3++, c2++;
          else if (n3 === 58)
            t4.type = 6, o3++, c2++;
          else if (n3 === 44)
            t4.type = 7, o3++, c2++;
          else if (n3 === 110) {
            if (t4.type = 8, o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 117)
              return false;
            if (o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 108)
              return false;
            if (o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 108)
              return false;
            o3++, c2++;
          } else if (n3 === 116) {
            if (t4.type = 9, o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 114)
              return false;
            if (o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 117)
              return false;
            if (o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 101)
              return false;
            o3++, c2++;
          } else if (n3 === 102) {
            if (t4.type = 10, o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 97)
              return false;
            if (o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 108)
              return false;
            if (o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 115)
              return false;
            if (o3++, c2++, (n3 = i4.charCodeAt(o3)) !== 101)
              return false;
            o3++, c2++;
          } else
            for (t4.type = 11; ; ) {
              if (o3 >= s5)
                return false;
              if (!((n3 = i4.charCodeAt(o3)) === 46 || n3 >= 48 && n3 <= 57 || n3 === 101 || n3 === 69 || n3 === 45 || n3 === 43))
                break;
              o3++, c2++;
            }
          return t4.len = o3 - t4.offset, t4.value === null && (t4.value = i4.substr(t4.offset, t4.len)), e4.pos = o3, e4.line = a2, e4.char = c2, true;
        }
      }, function(e3, t3, n2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r3 = function(e4, t4, n3, r4, i4, o3) {
          this.scope = e4, this.parentScopes = t4, this.index = n3, this.fontStyle = r4, this.foreground = i4, this.background = o3;
        };
        function i3(e4) {
          return !!/^#[0-9a-f]{6}$/i.test(e4) || (!!/^#[0-9a-f]{8}$/i.test(e4) || (!!/^#[0-9a-f]{3}$/i.test(e4) || !!/^#[0-9a-f]{4}$/i.test(e4)));
        }
        function o2(e4) {
          if (!e4)
            return [];
          if (!e4.settings || !Array.isArray(e4.settings))
            return [];
          for (var t4 = e4.settings, n3 = [], o3 = 0, s5 = 0, a3 = t4.length; s5 < a3; s5++) {
            var c3 = t4[s5];
            if (c3.settings) {
              var u4 = void 0;
              if (typeof c3.scope == "string")
                u4 = c3.scope.replace(/^[,]+/, "").replace(/[,]+$/, "").split(",");
              else
                u4 = Array.isArray(c3.scope) ? c3.scope : [""];
              var l3 = -1;
              if (typeof c3.settings.fontStyle == "string") {
                l3 = 0;
                for (var h5 = 0, p4 = (g3 = c3.settings.fontStyle.split(" ")).length; h5 < p4; h5++) {
                  switch (g3[h5]) {
                    case "italic":
                      l3 |= 1;
                      break;
                    case "bold":
                      l3 |= 2;
                      break;
                    case "underline":
                      l3 |= 4;
                  }
                }
              }
              var f4 = null;
              typeof c3.settings.foreground == "string" && i3(c3.settings.foreground) && (f4 = c3.settings.foreground);
              var d2 = null;
              typeof c3.settings.background == "string" && i3(c3.settings.background) && (d2 = c3.settings.background);
              for (h5 = 0, p4 = u4.length; h5 < p4; h5++) {
                var g3, m3 = (g3 = u4[h5].trim().split(" "))[g3.length - 1], _ = null;
                g3.length > 1 && (_ = g3.slice(0, g3.length - 1)).reverse(), n3[o3++] = new r3(m3, _, s5, l3, f4, d2);
              }
            }
          }
          return n3;
        }
        function s4(e4, t4) {
          e4.sort(function(e5, t5) {
            var n4 = u3(e5.scope, t5.scope);
            return n4 !== 0 || (n4 = l2(e5.parentScopes, t5.parentScopes)) !== 0 ? n4 : e5.index - t5.index;
          });
          for (var n3 = 0, r4 = "#000000", i4 = "#ffffff"; e4.length >= 1 && e4[0].scope === ""; ) {
            var o3 = e4.shift();
            o3.fontStyle !== -1 && (n3 = o3.fontStyle), o3.foreground !== null && (r4 = o3.foreground), o3.background !== null && (i4 = o3.background);
          }
          for (var s5 = new a2(t4), f4 = new h4(0, null, n3, s5.getId(r4), s5.getId(i4)), d2 = new p3(new h4(0, null, -1, 0, 0), []), g3 = 0, m3 = e4.length; g3 < m3; g3++) {
            var _ = e4[g3];
            d2.insert(0, _.scope, _.parentScopes, _.fontStyle, s5.getId(_.foreground), s5.getId(_.background));
          }
          return new c2(s5, f4, d2);
        }
        t3.ParsedThemeRule = r3, t3.parseTheme = o2;
        var a2 = function() {
          function e4(e5) {
            if (this._lastColorId = 0, this._id2color = [], this._color2id = /* @__PURE__ */ Object.create(null), Array.isArray(e5)) {
              this._isFrozen = true;
              for (var t4 = 0, n3 = e5.length; t4 < n3; t4++)
                this._color2id[e5[t4]] = t4, this._id2color[t4] = e5[t4];
            } else
              this._isFrozen = false;
          }
          return e4.prototype.getId = function(e5) {
            if (e5 === null)
              return 0;
            e5 = e5.toUpperCase();
            var t4 = this._color2id[e5];
            if (t4)
              return t4;
            if (this._isFrozen)
              throw new Error("Missing color in color map - " + e5);
            return t4 = ++this._lastColorId, this._color2id[e5] = t4, this._id2color[t4] = e5, t4;
          }, e4.prototype.getColorMap = function() {
            return this._id2color.slice(0);
          }, e4;
        }();
        t3.ColorMap = a2;
        var c2 = function() {
          function e4(e5, t4, n3) {
            this._colorMap = e5, this._root = n3, this._defaults = t4, this._cache = {};
          }
          return e4.createFromRawTheme = function(e5, t4) {
            return this.createFromParsedTheme(o2(e5), t4);
          }, e4.createFromParsedTheme = function(e5, t4) {
            return s4(e5, t4);
          }, e4.prototype.getColorMap = function() {
            return this._colorMap.getColorMap();
          }, e4.prototype.getDefaults = function() {
            return this._defaults;
          }, e4.prototype.match = function(e5) {
            return this._cache.hasOwnProperty(e5) || (this._cache[e5] = this._root.match(e5)), this._cache[e5];
          }, e4;
        }();
        function u3(e4, t4) {
          return e4 < t4 ? -1 : e4 > t4 ? 1 : 0;
        }
        function l2(e4, t4) {
          if (e4 === null && t4 === null)
            return 0;
          if (!e4)
            return -1;
          if (!t4)
            return 1;
          var n3 = e4.length, r4 = t4.length;
          if (n3 === r4) {
            for (var i4 = 0; i4 < n3; i4++) {
              var o3 = u3(e4[i4], t4[i4]);
              if (o3 !== 0)
                return o3;
            }
            return 0;
          }
          return n3 - r4;
        }
        t3.Theme = c2, t3.strcmp = u3, t3.strArrCmp = l2;
        var h4 = function() {
          function e4(e5, t4, n3, r4, i4) {
            this.scopeDepth = e5, this.parentScopes = t4, this.fontStyle = n3, this.foreground = r4, this.background = i4;
          }
          return e4.prototype.clone = function() {
            return new e4(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);
          }, e4.cloneArr = function(e5) {
            for (var t4 = [], n3 = 0, r4 = e5.length; n3 < r4; n3++)
              t4[n3] = e5[n3].clone();
            return t4;
          }, e4.prototype.acceptOverwrite = function(e5, t4, n3, r4) {
            this.scopeDepth > e5 ? console.log("how did this happen?") : this.scopeDepth = e5, t4 !== -1 && (this.fontStyle = t4), n3 !== 0 && (this.foreground = n3), r4 !== 0 && (this.background = r4);
          }, e4;
        }();
        t3.ThemeTrieElementRule = h4;
        var p3 = function() {
          function e4(e5, t4, n3) {
            t4 === void 0 && (t4 = []), n3 === void 0 && (n3 = {}), this._mainRule = e5, this._rulesWithParentScopes = t4, this._children = n3;
          }
          return e4._sortBySpecificity = function(e5) {
            return e5.length === 1 || e5.sort(this._cmpBySpecificity), e5;
          }, e4._cmpBySpecificity = function(e5, t4) {
            if (e5.scopeDepth === t4.scopeDepth) {
              var n3 = e5.parentScopes, r4 = t4.parentScopes, i4 = n3 === null ? 0 : n3.length, o3 = r4 === null ? 0 : r4.length;
              if (i4 === o3)
                for (var s5 = 0; s5 < i4; s5++) {
                  var a3 = n3[s5].length, c3 = r4[s5].length;
                  if (a3 !== c3)
                    return c3 - a3;
                }
              return o3 - i4;
            }
            return t4.scopeDepth - e5.scopeDepth;
          }, e4.prototype.match = function(t4) {
            if (t4 === "")
              return e4._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
            var n3, r4, i4 = t4.indexOf(".");
            return i4 === -1 ? (n3 = t4, r4 = "") : (n3 = t4.substring(0, i4), r4 = t4.substring(i4 + 1)), this._children.hasOwnProperty(n3) ? this._children[n3].match(r4) : e4._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
          }, e4.prototype.insert = function(t4, n3, r4, i4, o3, s5) {
            if (n3 !== "") {
              var a3, c3, u4, l3 = n3.indexOf(".");
              l3 === -1 ? (a3 = n3, c3 = "") : (a3 = n3.substring(0, l3), c3 = n3.substring(l3 + 1)), this._children.hasOwnProperty(a3) ? u4 = this._children[a3] : (u4 = new e4(this._mainRule.clone(), h4.cloneArr(this._rulesWithParentScopes)), this._children[a3] = u4), u4.insert(t4 + 1, c3, r4, i4, o3, s5);
            } else
              this._doInsertHere(t4, r4, i4, o3, s5);
          }, e4.prototype._doInsertHere = function(e5, t4, n3, r4, i4) {
            if (t4 !== null) {
              for (var o3 = 0, s5 = this._rulesWithParentScopes.length; o3 < s5; o3++) {
                var a3 = this._rulesWithParentScopes[o3];
                if (l2(a3.parentScopes, t4) === 0)
                  return void a3.acceptOverwrite(e5, n3, r4, i4);
              }
              n3 === -1 && (n3 = this._mainRule.fontStyle), r4 === 0 && (r4 = this._mainRule.foreground), i4 === 0 && (i4 = this._mainRule.background), this._rulesWithParentScopes.push(new h4(e5, t4, n3, r4, i4));
            } else
              this._mainRule.acceptOverwrite(e5, n3, r4, i4);
          }, e4;
        }();
        t3.ThemeTrieElement = p3;
      }]);
    });
  }
});

// node_modules/shiki/dist/index.js
var require_dist = __commonJS({
  "node_modules/shiki/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var vscodeOniguruma = require_main();
    var vscodeTextmate = require_main2();
    var themes = [
      "css-variables",
      "dark-plus",
      "dracula-soft",
      "dracula",
      "github-dark-dimmed",
      "github-dark",
      "github-light",
      "light-plus",
      "material-darker",
      "material-default",
      "material-lighter",
      "material-ocean",
      "material-palenight",
      "min-dark",
      "min-light",
      "monokai",
      "nord",
      "one-dark-pro",
      "poimandres",
      "rose-pine-dawn",
      "rose-pine-moon",
      "rose-pine",
      "slack-dark",
      "slack-ochin",
      "solarized-dark",
      "solarized-light",
      "vitesse-dark",
      "vitesse-light"
    ];
    var languages = [
      {
        id: "abap",
        scopeName: "source.abap",
        path: "abap.tmLanguage.json",
        samplePath: "abap.sample"
      },
      {
        id: "actionscript-3",
        scopeName: "source.actionscript.3",
        path: "actionscript-3.tmLanguage.json",
        samplePath: "actionscript-3.sample"
      },
      {
        id: "ada",
        scopeName: "source.ada",
        path: "ada.tmLanguage.json",
        samplePath: "ada.sample"
      },
      {
        id: "apache",
        scopeName: "source.apacheconf",
        path: "apache.tmLanguage.json"
      },
      {
        id: "apex",
        scopeName: "source.apex",
        path: "apex.tmLanguage.json",
        samplePath: "apex.sample"
      },
      {
        id: "apl",
        scopeName: "source.apl",
        path: "apl.tmLanguage.json",
        embeddedLangs: ["html", "xml", "css", "javascript", "json"]
      },
      {
        id: "applescript",
        scopeName: "source.applescript",
        path: "applescript.tmLanguage.json",
        samplePath: "applescript.sample"
      },
      {
        id: "asm",
        scopeName: "source.asm.x86_64",
        path: "asm.tmLanguage.json",
        samplePath: "asm.sample"
      },
      {
        id: "astro",
        scopeName: "text.html.astro",
        path: "astro.tmLanguage.json",
        samplePath: "astro.sample",
        embeddedLangs: ["css", "javascript", "less", "sass", "scss", "stylus", "typescript", "tsx"]
      },
      {
        id: "awk",
        scopeName: "source.awk",
        path: "awk.tmLanguage.json",
        samplePath: "awk.sample"
      },
      {
        id: "ballerina",
        scopeName: "source.ballerina",
        path: "ballerina.tmLanguage.json",
        samplePath: "ballerina.sample"
      },
      {
        id: "bat",
        scopeName: "source.batchfile",
        path: "bat.tmLanguage.json",
        samplePath: "bat.sample",
        aliases: ["batch"]
      },
      {
        id: "berry",
        scopeName: "source.berry",
        path: "berry.tmLanguage.json",
        samplePath: "berry.sample",
        aliases: ["be"]
      },
      {
        id: "bibtex",
        scopeName: "text.bibtex",
        path: "bibtex.tmLanguage.json"
      },
      {
        id: "bicep",
        scopeName: "source.bicep",
        path: "bicep.tmLanguage.json",
        samplePath: "bicep.sample"
      },
      {
        id: "c",
        scopeName: "source.c",
        path: "c.tmLanguage.json",
        samplePath: "c.sample"
      },
      {
        id: "clojure",
        scopeName: "source.clojure",
        path: "clojure.tmLanguage.json",
        samplePath: "clojure.sample",
        aliases: ["clj"]
      },
      {
        id: "cobol",
        scopeName: "source.cobol",
        path: "cobol.tmLanguage.json",
        samplePath: "cobol.sample",
        embeddedLangs: ["sql", "html", "java"]
      },
      {
        id: "codeql",
        scopeName: "source.ql",
        path: "codeql.tmLanguage.json",
        samplePath: "codeql.sample",
        aliases: ["ql"]
      },
      {
        id: "coffee",
        scopeName: "source.coffee",
        path: "coffee.tmLanguage.json",
        samplePath: "coffee.sample",
        embeddedLangs: ["javascript"]
      },
      {
        id: "cpp",
        scopeName: "source.cpp",
        path: "cpp.tmLanguage.json",
        samplePath: "cpp.sample",
        embeddedLangs: ["sql"]
      },
      {
        id: "crystal",
        scopeName: "source.crystal",
        path: "crystal.tmLanguage.json",
        samplePath: "crystal.sample",
        embeddedLangs: ["html", "sql", "css", "c", "javascript", "shellscript"]
      },
      {
        id: "csharp",
        scopeName: "source.cs",
        path: "csharp.tmLanguage.json",
        samplePath: "csharp.sample",
        aliases: ["c#"]
      },
      {
        id: "css",
        scopeName: "source.css",
        path: "css.tmLanguage.json",
        samplePath: "css.sample"
      },
      {
        id: "cue",
        scopeName: "source.cue",
        path: "cue.tmLanguage.json",
        samplePath: "cue.sample"
      },
      {
        id: "d",
        scopeName: "source.d",
        path: "d.tmLanguage.json",
        samplePath: "d.sample"
      },
      {
        id: "dart",
        scopeName: "source.dart",
        path: "dart.tmLanguage.json",
        samplePath: "dart.sample"
      },
      {
        id: "diff",
        scopeName: "source.diff",
        path: "diff.tmLanguage.json",
        samplePath: "diff.sample"
      },
      {
        id: "docker",
        scopeName: "source.dockerfile",
        path: "docker.tmLanguage.json",
        samplePath: "docker.sample"
      },
      {
        id: "dream-maker",
        scopeName: "source.dm",
        path: "dream-maker.tmLanguage.json"
      },
      {
        id: "elixir",
        scopeName: "source.elixir",
        path: "elixir.tmLanguage.json",
        samplePath: "elixir.sample",
        embeddedLangs: ["html"]
      },
      {
        id: "elm",
        scopeName: "source.elm",
        path: "elm.tmLanguage.json",
        samplePath: "elm.sample"
      },
      {
        id: "erb",
        scopeName: "text.html.erb",
        path: "erb.tmLanguage.json",
        samplePath: "erb.sample",
        embeddedLangs: ["html", "ruby"]
      },
      {
        id: "erlang",
        scopeName: "source.erlang",
        path: "erlang.tmLanguage.json",
        samplePath: "erlang.sample"
      },
      {
        id: "fish",
        scopeName: "source.fish",
        path: "fish.tmLanguage.json",
        samplePath: "fish.sample"
      },
      {
        id: "fsharp",
        scopeName: "source.fsharp",
        path: "fsharp.tmLanguage.json",
        samplePath: "fsharp.sample",
        aliases: ["f#"],
        embeddedLangs: ["markdown"]
      },
      {
        id: "gherkin",
        scopeName: "text.gherkin.feature",
        path: "gherkin.tmLanguage.json"
      },
      {
        id: "git-commit",
        scopeName: "text.git-commit",
        path: "git-commit.tmLanguage.json",
        embeddedLangs: ["diff"]
      },
      {
        id: "git-rebase",
        scopeName: "text.git-rebase",
        path: "git-rebase.tmLanguage.json",
        embeddedLangs: ["shellscript"]
      },
      {
        id: "gnuplot",
        scopeName: "source.gnuplot",
        path: "gnuplot.tmLanguage.json"
      },
      {
        id: "go",
        scopeName: "source.go",
        path: "go.tmLanguage.json",
        samplePath: "go.sample"
      },
      {
        id: "graphql",
        scopeName: "source.graphql",
        path: "graphql.tmLanguage.json",
        embeddedLangs: ["javascript", "typescript", "jsx", "tsx"]
      },
      {
        id: "groovy",
        scopeName: "source.groovy",
        path: "groovy.tmLanguage.json"
      },
      {
        id: "hack",
        scopeName: "source.hack",
        path: "hack.tmLanguage.json",
        embeddedLangs: ["html", "sql"]
      },
      {
        id: "haml",
        scopeName: "text.haml",
        path: "haml.tmLanguage.json",
        embeddedLangs: ["ruby", "javascript", "sass", "coffee", "markdown", "css"]
      },
      {
        id: "handlebars",
        scopeName: "text.html.handlebars",
        path: "handlebars.tmLanguage.json",
        aliases: ["hbs"],
        embeddedLangs: ["html", "css", "javascript", "yaml"]
      },
      {
        id: "haskell",
        scopeName: "source.haskell",
        path: "haskell.tmLanguage.json"
      },
      {
        id: "hcl",
        scopeName: "source.hcl",
        path: "hcl.tmLanguage.json"
      },
      {
        id: "hlsl",
        scopeName: "source.hlsl",
        path: "hlsl.tmLanguage.json"
      },
      {
        id: "html",
        scopeName: "text.html.basic",
        path: "html.tmLanguage.json",
        samplePath: "html.sample",
        embeddedLangs: ["javascript", "css"]
      },
      {
        id: "ini",
        scopeName: "source.ini",
        path: "ini.tmLanguage.json"
      },
      {
        id: "java",
        scopeName: "source.java",
        path: "java.tmLanguage.json",
        samplePath: "java.sample"
      },
      {
        id: "javascript",
        scopeName: "source.js",
        path: "javascript.tmLanguage.json",
        samplePath: "javascript.sample",
        aliases: ["js"]
      },
      {
        id: "jinja-html",
        scopeName: "text.html.jinja",
        path: "jinja-html.tmLanguage.json",
        embeddedLangs: ["html"]
      },
      {
        id: "json",
        scopeName: "source.json",
        path: "json.tmLanguage.json"
      },
      {
        id: "jsonc",
        scopeName: "source.json.comments",
        path: "jsonc.tmLanguage.json"
      },
      {
        id: "jsonnet",
        scopeName: "source.jsonnet",
        path: "jsonnet.tmLanguage.json"
      },
      {
        id: "jssm",
        scopeName: "source.jssm",
        path: "jssm.tmLanguage.json",
        samplePath: "jssm.sample",
        aliases: ["fsl"]
      },
      {
        id: "jsx",
        scopeName: "source.js.jsx",
        path: "jsx.tmLanguage.json"
      },
      {
        id: "julia",
        scopeName: "source.julia",
        path: "julia.tmLanguage.json",
        embeddedLangs: ["cpp", "python", "javascript", "r", "sql"]
      },
      {
        id: "jupyter",
        scopeName: "source.jupyter",
        path: "jupyter.tmLanguage.json",
        embeddedLangs: ["json"]
      },
      {
        id: "kotlin",
        scopeName: "source.kotlin",
        path: "kotlin.tmLanguage.json"
      },
      {
        id: "latex",
        scopeName: "text.tex.latex",
        path: "latex.tmLanguage.json",
        embeddedLangs: ["tex", "css", "html", "java", "javascript", "typescript", "lua", "python", "julia", "ruby", "xml", "yaml", "cpp", "haskell", "scala", "gnuplot"]
      },
      {
        id: "less",
        scopeName: "source.css.less",
        path: "less.tmLanguage.json",
        embeddedLangs: ["css"]
      },
      {
        id: "lisp",
        scopeName: "source.lisp",
        path: "lisp.tmLanguage.json"
      },
      {
        id: "logo",
        scopeName: "source.logo",
        path: "logo.tmLanguage.json"
      },
      {
        id: "lua",
        scopeName: "source.lua",
        path: "lua.tmLanguage.json",
        embeddedLangs: ["c"]
      },
      {
        id: "make",
        scopeName: "source.makefile",
        path: "make.tmLanguage.json",
        aliases: ["makefile"]
      },
      {
        id: "markdown",
        scopeName: "text.html.markdown",
        path: "markdown.tmLanguage.json",
        aliases: ["md"],
        embeddedLangs: ["css", "html", "ini", "java", "lua", "make", "perl", "r", "ruby", "php", "sql", "vb", "xml", "xsl", "yaml", "bat", "clojure", "coffee", "c", "cpp", "diff", "docker", "git-commit", "git-rebase", "go", "groovy", "pug", "javascript", "json", "jsonc", "less", "objective-c", "swift", "scss", "raku", "powershell", "python", "rust", "scala", "shellscript", "typescript", "tsx", "csharp", "fsharp", "dart", "handlebars", "erlang", "elixir", "latex", "bibtex"]
      },
      {
        id: "marko",
        scopeName: "text.marko",
        path: "marko.tmLanguage.json",
        samplePath: "marko.sample",
        embeddedLangs: ["css", "less", "scss", "javascript"]
      },
      {
        id: "matlab",
        scopeName: "source.matlab",
        path: "matlab.tmLanguage.json"
      },
      {
        id: "mdx",
        scopeName: "text.html.markdown.jsx",
        path: "mdx.tmLanguage.json",
        embeddedLangs: ["jsx", "markdown"]
      },
      {
        id: "nginx",
        scopeName: "source.nginx",
        path: "nginx.tmLanguage.json",
        embeddedLangs: ["lua"]
      },
      {
        id: "nim",
        scopeName: "source.nim",
        path: "nim.tmLanguage.json",
        embeddedLangs: ["c", "html", "xml", "javascript", "css", "markdown"]
      },
      {
        id: "nix",
        scopeName: "source.nix",
        path: "nix.tmLanguage.json"
      },
      {
        id: "objective-c",
        scopeName: "source.objc",
        path: "objective-c.tmLanguage.json",
        aliases: ["objc"]
      },
      {
        id: "objective-cpp",
        scopeName: "source.objcpp",
        path: "objective-cpp.tmLanguage.json"
      },
      {
        id: "ocaml",
        scopeName: "source.ocaml",
        path: "ocaml.tmLanguage.json"
      },
      {
        id: "pascal",
        scopeName: "source.pascal",
        path: "pascal.tmLanguage.json"
      },
      {
        id: "perl",
        scopeName: "source.perl",
        path: "perl.tmLanguage.json",
        embeddedLangs: ["html", "xml", "css", "javascript", "sql"]
      },
      {
        id: "php",
        scopeName: "source.php",
        path: "php.tmLanguage.json",
        embeddedLangs: ["html", "xml", "sql", "javascript", "json", "css"]
      },
      {
        id: "plsql",
        scopeName: "source.plsql.oracle",
        path: "plsql.tmLanguage.json"
      },
      {
        id: "postcss",
        scopeName: "source.css.postcss",
        path: "postcss.tmLanguage.json"
      },
      {
        id: "powershell",
        scopeName: "source.powershell",
        path: "powershell.tmLanguage.json",
        aliases: ["ps", "ps1"]
      },
      {
        id: "prisma",
        scopeName: "source.prisma",
        path: "prisma.tmLanguage.json",
        samplePath: "prisma.sample"
      },
      {
        id: "prolog",
        scopeName: "source.prolog",
        path: "prolog.tmLanguage.json"
      },
      {
        id: "pug",
        scopeName: "text.pug",
        path: "pug.tmLanguage.json",
        aliases: ["jade"],
        embeddedLangs: ["javascript", "css", "sass", "stylus", "coffee", "html"]
      },
      {
        id: "puppet",
        scopeName: "source.puppet",
        path: "puppet.tmLanguage.json"
      },
      {
        id: "purescript",
        scopeName: "source.purescript",
        path: "purescript.tmLanguage.json"
      },
      {
        id: "python",
        scopeName: "source.python",
        path: "python.tmLanguage.json",
        samplePath: "python.sample",
        aliases: ["py"]
      },
      {
        id: "r",
        scopeName: "source.r",
        path: "r.tmLanguage.json"
      },
      {
        id: "raku",
        scopeName: "source.perl.6",
        path: "raku.tmLanguage.json",
        aliases: ["perl6"]
      },
      {
        id: "razor",
        scopeName: "text.aspnetcorerazor",
        path: "razor.tmLanguage.json",
        embeddedLangs: ["html", "csharp"]
      },
      {
        id: "rel",
        scopeName: "source.rel",
        path: "rel.tmLanguage.json",
        samplePath: "rel.sample"
      },
      {
        id: "riscv",
        scopeName: "source.riscv",
        path: "riscv.tmLanguage.json"
      },
      {
        id: "ruby",
        scopeName: "source.ruby",
        path: "ruby.tmLanguage.json",
        samplePath: "ruby.sample",
        aliases: ["rb"],
        embeddedLangs: ["html", "xml", "sql", "css", "c", "javascript", "shellscript", "lua"]
      },
      {
        id: "rust",
        scopeName: "source.rust",
        path: "rust.tmLanguage.json",
        aliases: ["rs"]
      },
      {
        id: "sas",
        scopeName: "source.sas",
        path: "sas.tmLanguage.json",
        embeddedLangs: ["sql"]
      },
      {
        id: "sass",
        scopeName: "source.sass",
        path: "sass.tmLanguage.json"
      },
      {
        id: "scala",
        scopeName: "source.scala",
        path: "scala.tmLanguage.json"
      },
      {
        id: "scheme",
        scopeName: "source.scheme",
        path: "scheme.tmLanguage.json"
      },
      {
        id: "scss",
        scopeName: "source.css.scss",
        path: "scss.tmLanguage.json",
        embeddedLangs: ["css"]
      },
      {
        id: "shaderlab",
        scopeName: "source.shaderlab",
        path: "shaderlab.tmLanguage.json",
        aliases: ["shader"],
        embeddedLangs: ["hlsl"]
      },
      {
        id: "shellscript",
        scopeName: "source.shell",
        path: "shellscript.tmLanguage.json",
        aliases: ["shell", "bash", "sh", "zsh"],
        embeddedLangs: ["ruby", "python", "applescript", "html", "markdown"]
      },
      {
        id: "smalltalk",
        scopeName: "source.smalltalk",
        path: "smalltalk.tmLanguage.json"
      },
      {
        id: "solidity",
        scopeName: "source.solidity",
        path: "solidity.tmLanguage.json"
      },
      {
        id: "sparql",
        scopeName: "source.sparql",
        path: "sparql.tmLanguage.json",
        samplePath: "sparql.sample",
        embeddedLangs: ["turtle"]
      },
      {
        id: "sql",
        scopeName: "source.sql",
        path: "sql.tmLanguage.json"
      },
      {
        id: "ssh-config",
        scopeName: "source.ssh-config",
        path: "ssh-config.tmLanguage.json"
      },
      {
        id: "stata",
        scopeName: "source.stata",
        path: "stata.tmLanguage.json",
        samplePath: "stata.sample",
        embeddedLangs: ["sql"]
      },
      {
        id: "stylus",
        scopeName: "source.stylus",
        path: "stylus.tmLanguage.json",
        aliases: ["styl"]
      },
      {
        id: "svelte",
        scopeName: "source.svelte",
        path: "svelte.tmLanguage.json",
        embeddedLangs: ["javascript", "typescript", "coffee", "stylus", "sass", "css", "scss", "less", "postcss", "pug", "markdown"]
      },
      {
        id: "swift",
        scopeName: "source.swift",
        path: "swift.tmLanguage.json"
      },
      {
        id: "system-verilog",
        scopeName: "source.systemverilog",
        path: "system-verilog.tmLanguage.json"
      },
      {
        id: "tasl",
        scopeName: "source.tasl",
        path: "tasl.tmLanguage.json",
        samplePath: "tasl.sample"
      },
      {
        id: "tcl",
        scopeName: "source.tcl",
        path: "tcl.tmLanguage.json"
      },
      {
        id: "tex",
        scopeName: "text.tex",
        path: "tex.tmLanguage.json",
        embeddedLangs: ["r"]
      },
      {
        id: "toml",
        scopeName: "source.toml",
        path: "toml.tmLanguage.json"
      },
      {
        id: "tsx",
        scopeName: "source.tsx",
        path: "tsx.tmLanguage.json",
        samplePath: "tsx.sample"
      },
      {
        id: "turtle",
        scopeName: "source.turtle",
        path: "turtle.tmLanguage.json",
        samplePath: "turtle.sample"
      },
      {
        id: "twig",
        scopeName: "text.html.twig",
        path: "twig.tmLanguage.json",
        embeddedLangs: ["css", "javascript", "php", "python", "ruby"]
      },
      {
        id: "typescript",
        scopeName: "source.ts",
        path: "typescript.tmLanguage.json",
        aliases: ["ts"]
      },
      {
        id: "vb",
        scopeName: "source.asp.vb.net",
        path: "vb.tmLanguage.json",
        aliases: ["cmd"]
      },
      {
        id: "verilog",
        scopeName: "source.verilog",
        path: "verilog.tmLanguage.json"
      },
      {
        id: "vhdl",
        scopeName: "source.vhdl",
        path: "vhdl.tmLanguage.json"
      },
      {
        id: "viml",
        scopeName: "source.viml",
        path: "viml.tmLanguage.json",
        aliases: ["vim", "vimscript"]
      },
      {
        id: "vue-html",
        scopeName: "text.html.vue-html",
        path: "vue-html.tmLanguage.json",
        embeddedLangs: ["vue", "javascript"]
      },
      {
        id: "vue",
        scopeName: "source.vue",
        path: "vue.tmLanguage.json",
        embeddedLangs: ["json", "markdown", "pug", "haml", "vue-html", "sass", "scss", "less", "stylus", "postcss", "css", "typescript", "coffee", "javascript"]
      },
      {
        id: "wasm",
        scopeName: "source.wat",
        path: "wasm.tmLanguage.json"
      },
      {
        id: "wenyan",
        scopeName: "source.wenyan",
        path: "wenyan.tmLanguage.json",
        aliases: ["\u6587\u8A00"]
      },
      {
        id: "xml",
        scopeName: "text.xml",
        path: "xml.tmLanguage.json",
        embeddedLangs: ["java"]
      },
      {
        id: "xsl",
        scopeName: "text.xml.xsl",
        path: "xsl.tmLanguage.json",
        embeddedLangs: ["xml"]
      },
      {
        id: "yaml",
        scopeName: "source.yaml",
        path: "yaml.tmLanguage.json"
      },
      {
        id: "zenscript",
        scopeName: "source.zenscript",
        path: "zenscript.tmLanguage.json",
        samplePath: "zenscript.sample"
      }
    ];
    exports.FontStyle = void 0;
    (function(FontStyle) {
      FontStyle[FontStyle["NotSet"] = -1] = "NotSet";
      FontStyle[FontStyle["None"] = 0] = "None";
      FontStyle[FontStyle["Italic"] = 1] = "Italic";
      FontStyle[FontStyle["Bold"] = 2] = "Bold";
      FontStyle[FontStyle["Underline"] = 4] = "Underline";
    })(exports.FontStyle || (exports.FontStyle = {}));
    var StackElementMetadata = class {
      static toBinaryStr(metadata59) {
        let r3 = metadata59.toString(2);
        while (r3.length < 32) {
          r3 = "0" + r3;
        }
        return r3;
      }
      static printMetadata(metadata59) {
        let languageId = StackElementMetadata.getLanguageId(metadata59);
        let tokenType = StackElementMetadata.getTokenType(metadata59);
        let fontStyle = StackElementMetadata.getFontStyle(metadata59);
        let foreground = StackElementMetadata.getForeground(metadata59);
        let background = StackElementMetadata.getBackground(metadata59);
        console.log({
          languageId,
          tokenType,
          fontStyle,
          foreground,
          background
        });
      }
      static getLanguageId(metadata59) {
        return (metadata59 & 255) >>> 0;
      }
      static getTokenType(metadata59) {
        return (metadata59 & 1792) >>> 8;
      }
      static getFontStyle(metadata59) {
        return (metadata59 & 14336) >>> 11;
      }
      static getForeground(metadata59) {
        return (metadata59 & 8372224) >>> 14;
      }
      static getBackground(metadata59) {
        return (metadata59 & 4286578688) >>> 23;
      }
      static set(metadata59, languageId, tokenType, fontStyle, foreground, background) {
        let _languageId = StackElementMetadata.getLanguageId(metadata59);
        let _tokenType = StackElementMetadata.getTokenType(metadata59);
        let _fontStyle = StackElementMetadata.getFontStyle(metadata59);
        let _foreground = StackElementMetadata.getForeground(metadata59);
        let _background = StackElementMetadata.getBackground(metadata59);
        if (languageId !== 0) {
          _languageId = languageId;
        }
        if (tokenType !== 0) {
          _tokenType = tokenType === 8 ? 0 : tokenType;
        }
        if (fontStyle !== exports.FontStyle.NotSet) {
          _fontStyle = fontStyle;
        }
        if (foreground !== 0) {
          _foreground = foreground;
        }
        if (background !== 0) {
          _background = background;
        }
        return (_languageId << 0 | _tokenType << 8 | _fontStyle << 11 | _foreground << 14 | _background << 23) >>> 0;
      }
    };
    function trimEndSlash(str) {
      if (str.endsWith("/") || str.endsWith("\\"))
        return str.slice(0, -1);
      return str;
    }
    function trimStartDot(str) {
      if (str.startsWith("./"))
        return str.slice(2);
      return str;
    }
    function dirname2(str) {
      const parts = str.split(/[\/\\]/g);
      return parts[parts.length - 2];
    }
    function join2(...parts) {
      return parts.map(trimEndSlash).map(trimStartDot).join("/");
    }
    function groupBy(elements, keyGetter) {
      const map3 = /* @__PURE__ */ new Map();
      for (const element6 of elements) {
        const key2 = keyGetter(element6);
        if (map3.has(key2)) {
          const group = map3.get(key2);
          group.push(element6);
        } else {
          map3.set(key2, [element6]);
        }
      }
      return map3;
    }
    function createScanner(text8, ignoreTrivia) {
      if (ignoreTrivia === void 0) {
        ignoreTrivia = false;
      }
      var len = text8.length;
      var pos = 0, value = "", tokenOffset = 0, token = 16, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0;
      function scanHexDigits(count, exact) {
        var digits = 0;
        var value2 = 0;
        while (digits < count || !exact) {
          var ch = text8.charCodeAt(pos);
          if (ch >= 48 && ch <= 57) {
            value2 = value2 * 16 + ch - 48;
          } else if (ch >= 65 && ch <= 70) {
            value2 = value2 * 16 + ch - 65 + 10;
          } else if (ch >= 97 && ch <= 102) {
            value2 = value2 * 16 + ch - 97 + 10;
          } else {
            break;
          }
          pos++;
          digits++;
        }
        if (digits < count) {
          value2 = -1;
        }
        return value2;
      }
      function setPosition(newPosition) {
        pos = newPosition;
        value = "";
        tokenOffset = 0;
        token = 16;
        scanError = 0;
      }
      function scanNumber() {
        var start3 = pos;
        if (text8.charCodeAt(pos) === 48) {
          pos++;
        } else {
          pos++;
          while (pos < text8.length && isDigit(text8.charCodeAt(pos))) {
            pos++;
          }
        }
        if (pos < text8.length && text8.charCodeAt(pos) === 46) {
          pos++;
          if (pos < text8.length && isDigit(text8.charCodeAt(pos))) {
            pos++;
            while (pos < text8.length && isDigit(text8.charCodeAt(pos))) {
              pos++;
            }
          } else {
            scanError = 3;
            return text8.substring(start3, pos);
          }
        }
        var end = pos;
        if (pos < text8.length && (text8.charCodeAt(pos) === 69 || text8.charCodeAt(pos) === 101)) {
          pos++;
          if (pos < text8.length && text8.charCodeAt(pos) === 43 || text8.charCodeAt(pos) === 45) {
            pos++;
          }
          if (pos < text8.length && isDigit(text8.charCodeAt(pos))) {
            pos++;
            while (pos < text8.length && isDigit(text8.charCodeAt(pos))) {
              pos++;
            }
            end = pos;
          } else {
            scanError = 3;
          }
        }
        return text8.substring(start3, end);
      }
      function scanString() {
        var result = "", start3 = pos;
        while (true) {
          if (pos >= len) {
            result += text8.substring(start3, pos);
            scanError = 2;
            break;
          }
          var ch = text8.charCodeAt(pos);
          if (ch === 34) {
            result += text8.substring(start3, pos);
            pos++;
            break;
          }
          if (ch === 92) {
            result += text8.substring(start3, pos);
            pos++;
            if (pos >= len) {
              scanError = 2;
              break;
            }
            var ch2 = text8.charCodeAt(pos++);
            switch (ch2) {
              case 34:
                result += '"';
                break;
              case 92:
                result += "\\";
                break;
              case 47:
                result += "/";
                break;
              case 98:
                result += "\b";
                break;
              case 102:
                result += "\f";
                break;
              case 110:
                result += "\n";
                break;
              case 114:
                result += "\r";
                break;
              case 116:
                result += "	";
                break;
              case 117:
                var ch3 = scanHexDigits(4, true);
                if (ch3 >= 0) {
                  result += String.fromCharCode(ch3);
                } else {
                  scanError = 4;
                }
                break;
              default:
                scanError = 5;
            }
            start3 = pos;
            continue;
          }
          if (ch >= 0 && ch <= 31) {
            if (isLineBreak(ch)) {
              result += text8.substring(start3, pos);
              scanError = 2;
              break;
            } else {
              scanError = 6;
            }
          }
          pos++;
        }
        return result;
      }
      function scanNext() {
        value = "";
        scanError = 0;
        tokenOffset = pos;
        lineStartOffset = lineNumber;
        prevTokenLineStartOffset = tokenLineStartOffset;
        if (pos >= len) {
          tokenOffset = len;
          return token = 17;
        }
        var code2 = text8.charCodeAt(pos);
        if (isWhiteSpace(code2)) {
          do {
            pos++;
            value += String.fromCharCode(code2);
            code2 = text8.charCodeAt(pos);
          } while (isWhiteSpace(code2));
          return token = 15;
        }
        if (isLineBreak(code2)) {
          pos++;
          value += String.fromCharCode(code2);
          if (code2 === 13 && text8.charCodeAt(pos) === 10) {
            pos++;
            value += "\n";
          }
          lineNumber++;
          tokenLineStartOffset = pos;
          return token = 14;
        }
        switch (code2) {
          case 123:
            pos++;
            return token = 1;
          case 125:
            pos++;
            return token = 2;
          case 91:
            pos++;
            return token = 3;
          case 93:
            pos++;
            return token = 4;
          case 58:
            pos++;
            return token = 6;
          case 44:
            pos++;
            return token = 5;
          case 34:
            pos++;
            value = scanString();
            return token = 10;
          case 47:
            var start3 = pos - 1;
            if (text8.charCodeAt(pos + 1) === 47) {
              pos += 2;
              while (pos < len) {
                if (isLineBreak(text8.charCodeAt(pos))) {
                  break;
                }
                pos++;
              }
              value = text8.substring(start3, pos);
              return token = 12;
            }
            if (text8.charCodeAt(pos + 1) === 42) {
              pos += 2;
              var safeLength = len - 1;
              var commentClosed = false;
              while (pos < safeLength) {
                var ch = text8.charCodeAt(pos);
                if (ch === 42 && text8.charCodeAt(pos + 1) === 47) {
                  pos += 2;
                  commentClosed = true;
                  break;
                }
                pos++;
                if (isLineBreak(ch)) {
                  if (ch === 13 && text8.charCodeAt(pos) === 10) {
                    pos++;
                  }
                  lineNumber++;
                  tokenLineStartOffset = pos;
                }
              }
              if (!commentClosed) {
                pos++;
                scanError = 1;
              }
              value = text8.substring(start3, pos);
              return token = 13;
            }
            value += String.fromCharCode(code2);
            pos++;
            return token = 16;
          case 45:
            value += String.fromCharCode(code2);
            pos++;
            if (pos === len || !isDigit(text8.charCodeAt(pos))) {
              return token = 16;
            }
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            value += scanNumber();
            return token = 11;
          default:
            while (pos < len && isUnknownContentCharacter(code2)) {
              pos++;
              code2 = text8.charCodeAt(pos);
            }
            if (tokenOffset !== pos) {
              value = text8.substring(tokenOffset, pos);
              switch (value) {
                case "true":
                  return token = 8;
                case "false":
                  return token = 9;
                case "null":
                  return token = 7;
              }
              return token = 16;
            }
            value += String.fromCharCode(code2);
            pos++;
            return token = 16;
        }
      }
      function isUnknownContentCharacter(code2) {
        if (isWhiteSpace(code2) || isLineBreak(code2)) {
          return false;
        }
        switch (code2) {
          case 125:
          case 93:
          case 123:
          case 91:
          case 34:
          case 58:
          case 44:
          case 47:
            return false;
        }
        return true;
      }
      function scanNextNonTrivia() {
        var result;
        do {
          result = scanNext();
        } while (result >= 12 && result <= 15);
        return result;
      }
      return {
        setPosition,
        getPosition: function() {
          return pos;
        },
        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,
        getToken: function() {
          return token;
        },
        getTokenValue: function() {
          return value;
        },
        getTokenOffset: function() {
          return tokenOffset;
        },
        getTokenLength: function() {
          return pos - tokenOffset;
        },
        getTokenStartLine: function() {
          return lineStartOffset;
        },
        getTokenStartCharacter: function() {
          return tokenOffset - prevTokenLineStartOffset;
        },
        getTokenError: function() {
          return scanError;
        }
      };
    }
    function isWhiteSpace(ch) {
      return ch === 32 || ch === 9 || ch === 11 || ch === 12 || ch === 160 || ch === 5760 || ch >= 8192 && ch <= 8203 || ch === 8239 || ch === 8287 || ch === 12288 || ch === 65279;
    }
    function isLineBreak(ch) {
      return ch === 10 || ch === 13 || ch === 8232 || ch === 8233;
    }
    function isDigit(ch) {
      return ch >= 48 && ch <= 57;
    }
    var ParseOptions;
    (function(ParseOptions2) {
      ParseOptions2.DEFAULT = {
        allowTrailingComma: false
      };
    })(ParseOptions || (ParseOptions = {}));
    function parse$1(text8, errors, options) {
      if (errors === void 0) {
        errors = [];
      }
      if (options === void 0) {
        options = ParseOptions.DEFAULT;
      }
      var currentProperty = null;
      var currentParent = [];
      var previousParents = [];
      function onValue(value) {
        if (Array.isArray(currentParent)) {
          currentParent.push(value);
        } else if (currentProperty !== null) {
          currentParent[currentProperty] = value;
        }
      }
      var visitor = {
        onObjectBegin: function() {
          var object = {};
          onValue(object);
          previousParents.push(currentParent);
          currentParent = object;
          currentProperty = null;
        },
        onObjectProperty: function(name) {
          currentProperty = name;
        },
        onObjectEnd: function() {
          currentParent = previousParents.pop();
        },
        onArrayBegin: function() {
          var array = [];
          onValue(array);
          previousParents.push(currentParent);
          currentParent = array;
          currentProperty = null;
        },
        onArrayEnd: function() {
          currentParent = previousParents.pop();
        },
        onLiteralValue: onValue,
        onError: function(error3, offset2, length) {
          errors.push({ error: error3, offset: offset2, length });
        }
      };
      visit6(text8, visitor, options);
      return currentParent[0];
    }
    function visit6(text8, visitor, options) {
      if (options === void 0) {
        options = ParseOptions.DEFAULT;
      }
      var _scanner = createScanner(text8, false);
      function toNoArgVisit(visitFunction) {
        return visitFunction ? function() {
          return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter());
        } : function() {
          return true;
        };
      }
      function toOneArgVisit(visitFunction) {
        return visitFunction ? function(arg) {
          return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter());
        } : function() {
          return true;
        };
      }
      var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);
      var disallowComments = options && options.disallowComments;
      var allowTrailingComma = options && options.allowTrailingComma;
      function scanNext() {
        while (true) {
          var token = _scanner.scan();
          switch (_scanner.getTokenError()) {
            case 4:
              handleError(14);
              break;
            case 5:
              handleError(15);
              break;
            case 3:
              handleError(13);
              break;
            case 1:
              if (!disallowComments) {
                handleError(11);
              }
              break;
            case 2:
              handleError(12);
              break;
            case 6:
              handleError(16);
              break;
          }
          switch (token) {
            case 12:
            case 13:
              if (disallowComments) {
                handleError(10);
              } else {
                onComment();
              }
              break;
            case 16:
              handleError(1);
              break;
            case 15:
            case 14:
              break;
            default:
              return token;
          }
        }
      }
      function handleError(error3, skipUntilAfter, skipUntil) {
        if (skipUntilAfter === void 0) {
          skipUntilAfter = [];
        }
        if (skipUntil === void 0) {
          skipUntil = [];
        }
        onError(error3);
        if (skipUntilAfter.length + skipUntil.length > 0) {
          var token = _scanner.getToken();
          while (token !== 17) {
            if (skipUntilAfter.indexOf(token) !== -1) {
              scanNext();
              break;
            } else if (skipUntil.indexOf(token) !== -1) {
              break;
            }
            token = scanNext();
          }
        }
      }
      function parseString(isValue) {
        var value = _scanner.getTokenValue();
        if (isValue) {
          onLiteralValue(value);
        } else {
          onObjectProperty(value);
        }
        scanNext();
        return true;
      }
      function parseLiteral() {
        switch (_scanner.getToken()) {
          case 11:
            var tokenValue = _scanner.getTokenValue();
            var value = Number(tokenValue);
            if (isNaN(value)) {
              handleError(2);
              value = 0;
            }
            onLiteralValue(value);
            break;
          case 7:
            onLiteralValue(null);
            break;
          case 8:
            onLiteralValue(true);
            break;
          case 9:
            onLiteralValue(false);
            break;
          default:
            return false;
        }
        scanNext();
        return true;
      }
      function parseProperty() {
        if (_scanner.getToken() !== 10) {
          handleError(3, [], [2, 5]);
          return false;
        }
        parseString(false);
        if (_scanner.getToken() === 6) {
          onSeparator(":");
          scanNext();
          if (!parseValue()) {
            handleError(4, [], [2, 5]);
          }
        } else {
          handleError(5, [], [2, 5]);
        }
        return true;
      }
      function parseObject() {
        onObjectBegin();
        scanNext();
        var needsComma = false;
        while (_scanner.getToken() !== 2 && _scanner.getToken() !== 17) {
          if (_scanner.getToken() === 5) {
            if (!needsComma) {
              handleError(4, [], []);
            }
            onSeparator(",");
            scanNext();
            if (_scanner.getToken() === 2 && allowTrailingComma) {
              break;
            }
          } else if (needsComma) {
            handleError(6, [], []);
          }
          if (!parseProperty()) {
            handleError(4, [], [2, 5]);
          }
          needsComma = true;
        }
        onObjectEnd();
        if (_scanner.getToken() !== 2) {
          handleError(7, [2], []);
        } else {
          scanNext();
        }
        return true;
      }
      function parseArray() {
        onArrayBegin();
        scanNext();
        var needsComma = false;
        while (_scanner.getToken() !== 4 && _scanner.getToken() !== 17) {
          if (_scanner.getToken() === 5) {
            if (!needsComma) {
              handleError(4, [], []);
            }
            onSeparator(",");
            scanNext();
            if (_scanner.getToken() === 4 && allowTrailingComma) {
              break;
            }
          } else if (needsComma) {
            handleError(6, [], []);
          }
          if (!parseValue()) {
            handleError(4, [], [4, 5]);
          }
          needsComma = true;
        }
        onArrayEnd();
        if (_scanner.getToken() !== 4) {
          handleError(8, [4], []);
        } else {
          scanNext();
        }
        return true;
      }
      function parseValue() {
        switch (_scanner.getToken()) {
          case 3:
            return parseArray();
          case 1:
            return parseObject();
          case 10:
            return parseString(true);
          default:
            return parseLiteral();
        }
      }
      scanNext();
      if (_scanner.getToken() === 17) {
        if (options.allowEmptyContent) {
          return true;
        }
        handleError(4, [], []);
        return false;
      }
      if (!parseValue()) {
        handleError(4, [], []);
        return false;
      }
      if (_scanner.getToken() !== 17) {
        handleError(9, [], []);
      }
      return true;
    }
    var parse8 = parse$1;
    var isWebWorker = typeof self !== "undefined" && typeof self.WorkerGlobalScope !== "undefined";
    var isBrowser = isWebWorker || typeof window !== "undefined" && typeof window.document !== "undefined" && typeof fetch !== "undefined";
    var CDN_ROOT = "";
    var WASM = "";
    function setCDN(root5) {
      CDN_ROOT = root5;
    }
    function setWasm(path) {
      WASM = path;
    }
    var _onigurumaPromise = null;
    async function getOniguruma() {
      if (!_onigurumaPromise) {
        let loader;
        if (isBrowser) {
          if (typeof WASM === "string") {
            loader = vscodeOniguruma.loadWASM({
              data: await fetch(_resolvePath("dist/onig.wasm")).then((r3) => r3.arrayBuffer())
            });
          } else {
            loader = vscodeOniguruma.loadWASM(WASM);
          }
        } else {
          const path = require("path");
          const wasmPath = path.join(require.resolve("vscode-oniguruma"), "../onig.wasm");
          const fs2 = require("fs");
          const wasmBin = fs2.readFileSync(wasmPath).buffer;
          loader = vscodeOniguruma.loadWASM(wasmBin);
        }
        _onigurumaPromise = loader.then(() => {
          return {
            createOnigScanner(patterns) {
              return vscodeOniguruma.createOnigScanner(patterns);
            },
            createOnigString(s4) {
              return vscodeOniguruma.createOnigString(s4);
            }
          };
        });
      }
      return _onigurumaPromise;
    }
    function _resolvePath(filepath) {
      if (isBrowser) {
        if (!CDN_ROOT) {
          console.warn("[Shiki] no CDN provider found, use `setCDN()` to specify the CDN for loading the resources before calling `getHighlighter()`");
        }
        return `${CDN_ROOT}${filepath}`;
      } else {
        const path = require("path");
        if (path.isAbsolute(filepath)) {
          return filepath;
        } else {
          return path.resolve(__dirname, "..", filepath);
        }
      }
    }
    async function _fetchAssets(filepath) {
      const path = _resolvePath(filepath);
      if (isBrowser) {
        return await fetch(path).then((r3) => r3.text());
      } else {
        const fs2 = require("fs");
        return await fs2.promises.readFile(path, "utf-8");
      }
    }
    async function _fetchJSONAssets(filepath) {
      const errors = [];
      const rawTheme = parse8(await _fetchAssets(filepath), errors, {
        allowTrailingComma: true
      });
      if (errors.length) {
        throw errors[0];
      }
      return rawTheme;
    }
    async function fetchTheme(themePath) {
      let theme = await _fetchJSONAssets(themePath);
      const shikiTheme = toShikiTheme(theme);
      if (shikiTheme.include) {
        const includedTheme = await fetchTheme(join2(dirname2(themePath), shikiTheme.include));
        if (includedTheme.settings) {
          shikiTheme.settings = includedTheme.settings.concat(shikiTheme.settings);
        }
        if (includedTheme.bg && !shikiTheme.bg) {
          shikiTheme.bg = includedTheme.bg;
        }
        if (includedTheme.colors) {
          shikiTheme.colors = Object.assign(Object.assign({}, includedTheme.colors), shikiTheme.colors);
        }
        delete shikiTheme.include;
      }
      return shikiTheme;
    }
    async function fetchGrammar(filepath) {
      return await _fetchJSONAssets(filepath);
    }
    function repairTheme(theme) {
      if (!theme.settings)
        theme.settings = [];
      if (theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope) {
        return;
      }
      theme.settings.unshift({
        settings: {
          foreground: theme.fg,
          background: theme.bg
        }
      });
    }
    function toShikiTheme(rawTheme) {
      const type = rawTheme.type || "dark";
      const shikiTheme = Object.assign(Object.assign({ name: rawTheme.name, type }, rawTheme), getThemeDefaultColors(rawTheme));
      if (rawTheme.include) {
        shikiTheme.include = rawTheme.include;
      }
      if (rawTheme.tokenColors) {
        shikiTheme.settings = rawTheme.tokenColors;
        delete shikiTheme.tokenColors;
      }
      repairTheme(shikiTheme);
      return shikiTheme;
    }
    var VSCODE_FALLBACK_EDITOR_FG = { light: "#333333", dark: "#bbbbbb" };
    var VSCODE_FALLBACK_EDITOR_BG = { light: "#fffffe", dark: "#1e1e1e" };
    function getThemeDefaultColors(theme) {
      var _a8, _b, _c, _d3, _e, _f;
      let fg, bg;
      let settings = theme.settings ? theme.settings : theme.tokenColors;
      const globalSetting = settings ? settings.find((s4) => {
        return !s4.name && !s4.scope;
      }) : void 0;
      if ((_a8 = globalSetting === null || globalSetting === void 0 ? void 0 : globalSetting.settings) === null || _a8 === void 0 ? void 0 : _a8.foreground) {
        fg = globalSetting.settings.foreground;
      }
      if ((_b = globalSetting === null || globalSetting === void 0 ? void 0 : globalSetting.settings) === null || _b === void 0 ? void 0 : _b.background) {
        bg = globalSetting.settings.background;
      }
      if (!fg && ((_d3 = (_c = theme) === null || _c === void 0 ? void 0 : _c.colors) === null || _d3 === void 0 ? void 0 : _d3["editor.foreground"])) {
        fg = theme.colors["editor.foreground"];
      }
      if (!bg && ((_f = (_e = theme) === null || _e === void 0 ? void 0 : _e.colors) === null || _f === void 0 ? void 0 : _f["editor.background"])) {
        bg = theme.colors["editor.background"];
      }
      if (!fg) {
        fg = theme.type === "light" ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;
      }
      if (!bg) {
        bg = theme.type === "light" ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;
      }
      return {
        fg,
        bg
      };
    }
    var Resolver = class {
      constructor(onigLibPromise, onigLibName) {
        this.languagesPath = "languages/";
        this.languageMap = {};
        this.scopeToLangMap = {};
        this._onigLibPromise = onigLibPromise;
        this._onigLibName = onigLibName;
      }
      get onigLib() {
        return this._onigLibPromise;
      }
      getOnigLibName() {
        return this._onigLibName;
      }
      getLangRegistration(langIdOrAlias) {
        return this.languageMap[langIdOrAlias];
      }
      async loadGrammar(scopeName) {
        const lang = this.scopeToLangMap[scopeName];
        if (!lang) {
          return null;
        }
        if (lang.grammar) {
          return lang.grammar;
        }
        const g3 = await fetchGrammar(languages.includes(lang) ? `${this.languagesPath}${lang.path}` : lang.path);
        lang.grammar = g3;
        return g3;
      }
      addLanguage(l2) {
        this.languageMap[l2.id] = l2;
        if (l2.aliases) {
          l2.aliases.forEach((a2) => {
            this.languageMap[a2] = l2;
          });
        }
        this.scopeToLangMap[l2.scopeName] = l2;
      }
    };
    function tokenizeWithTheme(theme, colorMap, fileContents, grammar, options) {
      let lines = fileContents.split(/\r\n|\r|\n/);
      let ruleStack = vscodeTextmate.INITIAL;
      let actual = [];
      let final = [];
      for (let i3 = 0, len = lines.length; i3 < len; i3++) {
        let line = lines[i3];
        if (line === "") {
          actual = [];
          final.push([]);
          continue;
        }
        let resultWithScopes;
        let tokensWithScopes;
        let tokensWithScopesIndex;
        if (options.includeExplanation) {
          resultWithScopes = grammar.tokenizeLine(line, ruleStack);
          tokensWithScopes = resultWithScopes.tokens;
          tokensWithScopesIndex = 0;
        }
        let result = grammar.tokenizeLine2(line, ruleStack);
        let tokensLength = result.tokens.length / 2;
        for (let j = 0; j < tokensLength; j++) {
          let startIndex = result.tokens[2 * j];
          let nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;
          if (startIndex === nextStartIndex) {
            continue;
          }
          let metadata59 = result.tokens[2 * j + 1];
          let foreground = StackElementMetadata.getForeground(metadata59);
          let foregroundColor = colorMap[foreground];
          let fontStyle = StackElementMetadata.getFontStyle(metadata59);
          let explanation = [];
          if (options.includeExplanation) {
            let offset2 = 0;
            while (startIndex + offset2 < nextStartIndex) {
              let tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];
              let tokenWithScopesText = line.substring(tokenWithScopes.startIndex, tokenWithScopes.endIndex);
              offset2 += tokenWithScopesText.length;
              explanation.push({
                content: tokenWithScopesText,
                scopes: explainThemeScopes(theme, tokenWithScopes.scopes)
              });
              tokensWithScopesIndex++;
            }
          }
          actual.push({
            content: line.substring(startIndex, nextStartIndex),
            color: foregroundColor,
            fontStyle,
            explanation
          });
        }
        final.push(actual);
        actual = [];
        ruleStack = result.ruleStack;
      }
      return final;
    }
    function explainThemeScopes(theme, scopes) {
      let result = [];
      for (let i3 = 0, len = scopes.length; i3 < len; i3++) {
        let parentScopes = scopes.slice(0, i3);
        let scope = scopes[i3];
        result[i3] = {
          scopeName: scope,
          themeMatches: explainThemeScope(theme, scope, parentScopes)
        };
      }
      return result;
    }
    function matchesOne(selector, scope) {
      let selectorPrefix = selector + ".";
      if (selector === scope || scope.substring(0, selectorPrefix.length) === selectorPrefix) {
        return true;
      }
      return false;
    }
    function matches(selector, selectorParentScopes, scope, parentScopes) {
      if (!matchesOne(selector, scope)) {
        return false;
      }
      let selectorParentIndex = selectorParentScopes.length - 1;
      let parentIndex = parentScopes.length - 1;
      while (selectorParentIndex >= 0 && parentIndex >= 0) {
        if (matchesOne(selectorParentScopes[selectorParentIndex], parentScopes[parentIndex])) {
          selectorParentIndex--;
        }
        parentIndex--;
      }
      if (selectorParentIndex === -1) {
        return true;
      }
      return false;
    }
    function explainThemeScope(theme, scope, parentScopes) {
      let result = [], resultLen = 0;
      for (let i3 = 0, len = theme.settings.length; i3 < len; i3++) {
        let setting = theme.settings[i3];
        let selectors;
        if (typeof setting.scope === "string") {
          selectors = setting.scope.split(/,/).map((scope2) => scope2.trim());
        } else if (Array.isArray(setting.scope)) {
          selectors = setting.scope;
        } else {
          continue;
        }
        for (let j = 0, lenJ = selectors.length; j < lenJ; j++) {
          let rawSelector = selectors[j];
          let rawSelectorPieces = rawSelector.split(/ /);
          let selector = rawSelectorPieces[rawSelectorPieces.length - 1];
          let selectorParentScopes = rawSelectorPieces.slice(0, rawSelectorPieces.length - 1);
          if (matches(selector, selectorParentScopes, scope, parentScopes)) {
            result[resultLen++] = setting;
            j = lenJ;
          }
        }
      }
      return result;
    }
    function renderToHtml(lines, options = {}) {
      var _a8;
      const bg = options.bg || "#fff";
      const optionsByLineNumber = groupBy((_a8 = options.lineOptions) !== null && _a8 !== void 0 ? _a8 : [], (option2) => option2.line);
      let html6 = "";
      html6 += `<pre class="shiki" style="background-color: ${bg}">`;
      if (options.langId) {
        html6 += `<div class="language-id">${options.langId}</div>`;
      }
      html6 += `<code>`;
      lines.forEach((l2, lineIndex) => {
        var _a9;
        const lineNumber = lineIndex + 1;
        const lineOptions = (_a9 = optionsByLineNumber.get(lineNumber)) !== null && _a9 !== void 0 ? _a9 : [];
        const lineClasses = getLineClasses(lineOptions).join(" ");
        html6 += `<span class="${lineClasses}">`;
        l2.forEach((token) => {
          const cssDeclarations = [`color: ${token.color || options.fg}`];
          if (token.fontStyle & exports.FontStyle.Italic) {
            cssDeclarations.push("font-style: italic");
          }
          if (token.fontStyle & exports.FontStyle.Bold) {
            cssDeclarations.push("font-weight: bold");
          }
          if (token.fontStyle & exports.FontStyle.Underline) {
            cssDeclarations.push("text-decoration: underline");
          }
          html6 += `<span style="${cssDeclarations.join("; ")}">${escapeHtml(token.content)}</span>`;
        });
        html6 += `</span>
`;
      });
      html6 = html6.replace(/\n*$/, "");
      html6 += `</code></pre>`;
      return html6;
    }
    var htmlEscapes = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;"
    };
    function escapeHtml(html6) {
      return html6.replace(/[&<>"']/g, (chr) => htmlEscapes[chr]);
    }
    function getLineClasses(lineOptions) {
      var _a8;
      const lineClasses = /* @__PURE__ */ new Set(["line"]);
      for (const lineOption of lineOptions) {
        for (const lineClass of (_a8 = lineOption.classes) !== null && _a8 !== void 0 ? _a8 : []) {
          lineClasses.add(lineClass);
        }
      }
      return Array.from(lineClasses);
    }
    var Registry = class extends vscodeTextmate.Registry {
      constructor(_resolver) {
        super(_resolver);
        this._resolver = _resolver;
        this.themesPath = "themes/";
        this._resolvedThemes = {};
        this._resolvedGrammars = {};
      }
      getTheme(theme) {
        if (typeof theme === "string") {
          return this._resolvedThemes[theme];
        } else {
          return theme;
        }
      }
      async loadTheme(theme) {
        if (typeof theme === "string") {
          if (!this._resolvedThemes[theme]) {
            this._resolvedThemes[theme] = await fetchTheme(`${this.themesPath}${theme}.json`);
          }
          return this._resolvedThemes[theme];
        } else {
          theme = toShikiTheme(theme);
          if (theme.name) {
            this._resolvedThemes[theme.name] = theme;
          }
          return theme;
        }
      }
      async loadThemes(themes2) {
        return await Promise.all(themes2.map((theme) => this.loadTheme(theme)));
      }
      getLoadedThemes() {
        return Object.keys(this._resolvedThemes);
      }
      getGrammar(name) {
        return this._resolvedGrammars[name];
      }
      async loadLanguage(lang) {
        const g3 = await this.loadGrammar(lang.scopeName);
        this._resolvedGrammars[lang.id] = g3;
        if (lang.aliases) {
          lang.aliases.forEach((la) => {
            this._resolvedGrammars[la] = g3;
          });
        }
      }
      async loadLanguages(langs) {
        for (const lang of langs) {
          this._resolver.addLanguage(lang);
        }
        for (const lang of langs) {
          await this.loadLanguage(lang);
        }
      }
      getLoadedLanguages() {
        return Object.keys(this._resolvedGrammars);
      }
    };
    function resolveLang(lang) {
      return typeof lang === "string" ? languages.find((l2) => {
        var _a8;
        return l2.id === lang || ((_a8 = l2.aliases) === null || _a8 === void 0 ? void 0 : _a8.includes(lang));
      }) : lang;
    }
    function resolveOptions(options) {
      var _a8;
      let _languages = languages;
      let _themes = options.themes || [];
      if ((_a8 = options.langs) === null || _a8 === void 0 ? void 0 : _a8.length) {
        _languages = options.langs.map(resolveLang);
      }
      if (options.theme) {
        _themes.unshift(options.theme);
      }
      if (!_themes.length) {
        _themes = ["nord"];
      }
      return { _languages, _themes };
    }
    async function getHighlighter2(options) {
      var _a8, _b;
      const { _languages, _themes } = resolveOptions(options);
      const _resolver = new Resolver(getOniguruma(), "vscode-oniguruma");
      const _registry = new Registry(_resolver);
      if ((_a8 = options.paths) === null || _a8 === void 0 ? void 0 : _a8.themes) {
        _registry.themesPath = options.paths.themes;
      }
      if ((_b = options.paths) === null || _b === void 0 ? void 0 : _b.languages) {
        _resolver.languagesPath = options.paths.languages;
      }
      const themes2 = await _registry.loadThemes(_themes);
      const _defaultTheme = themes2[0];
      let _currentTheme;
      await _registry.loadLanguages(_languages);
      const COLOR_REPLACEMENTS = {
        "#000001": "var(--shiki-color-text)",
        "#000002": "var(--shiki-color-background)",
        "#000004": "var(--shiki-token-constant)",
        "#000005": "var(--shiki-token-string)",
        "#000006": "var(--shiki-token-comment)",
        "#000007": "var(--shiki-token-keyword)",
        "#000008": "var(--shiki-token-parameter)",
        "#000009": "var(--shiki-token-function)",
        "#000010": "var(--shiki-token-string-expression)",
        "#000011": "var(--shiki-token-punctuation)",
        "#000012": "var(--shiki-token-link)"
      };
      function fixCssVariablesTheme(theme, colorMap) {
        theme.bg = COLOR_REPLACEMENTS[theme.bg] || theme.bg;
        theme.fg = COLOR_REPLACEMENTS[theme.fg] || theme.fg;
        colorMap.forEach((val, i3) => {
          colorMap[i3] = COLOR_REPLACEMENTS[val] || val;
        });
      }
      function getTheme(theme) {
        const _theme = theme ? _registry.getTheme(theme) : _defaultTheme;
        if (!_theme) {
          throw Error(`No theme registration for ${theme}`);
        }
        if (!_currentTheme || _currentTheme.name !== _theme.name) {
          _registry.setTheme(_theme);
          _currentTheme = _theme;
        }
        const _colorMap = _registry.getColorMap();
        if (_theme.name === "css-variables") {
          fixCssVariablesTheme(_theme, _colorMap);
        }
        return { _theme, _colorMap };
      }
      function getGrammar(lang) {
        const _grammar = _registry.getGrammar(lang);
        if (!_grammar) {
          throw Error(`No language registration for ${lang}`);
        }
        return { _grammar };
      }
      function codeToThemedTokens(code2, lang = "text", theme, options2 = { includeExplanation: true }) {
        if (isPlaintext(lang)) {
          const lines = code2.split(/\r\n|\r|\n/);
          return [...lines.map((line) => [{ content: line }])];
        }
        const { _grammar } = getGrammar(lang);
        const { _theme, _colorMap } = getTheme(theme);
        return tokenizeWithTheme(_theme, _colorMap, code2, _grammar, options2);
      }
      function codeToHtml(code2, arg1 = "text", arg2) {
        let options2;
        if (typeof arg1 === "object") {
          options2 = arg1;
        } else {
          options2 = {
            lang: arg1,
            theme: arg2
          };
        }
        const tokens = codeToThemedTokens(code2, options2.lang, options2.theme, {
          includeExplanation: false
        });
        const { _theme } = getTheme(options2.theme);
        return renderToHtml(tokens, {
          fg: _theme.fg,
          bg: _theme.bg,
          lineOptions: options2 === null || options2 === void 0 ? void 0 : options2.lineOptions
        });
      }
      async function loadTheme(theme) {
        await _registry.loadTheme(theme);
      }
      async function loadLanguage(lang) {
        const _lang = resolveLang(lang);
        _resolver.addLanguage(_lang);
        await _registry.loadLanguage(_lang);
      }
      function getLoadedThemes() {
        return _registry.getLoadedThemes();
      }
      function getLoadedLanguages() {
        return _registry.getLoadedLanguages();
      }
      function getBackgroundColor(theme) {
        const { _theme } = getTheme(theme);
        return _theme.bg;
      }
      function getForegroundColor(theme) {
        const { _theme } = getTheme(theme);
        return _theme.fg;
      }
      return {
        codeToThemedTokens,
        codeToHtml,
        getTheme: (theme) => {
          return getTheme(theme)._theme;
        },
        loadTheme,
        loadLanguage,
        getBackgroundColor,
        getForegroundColor,
        getLoadedThemes,
        getLoadedLanguages
      };
    }
    function isPlaintext(lang) {
      return !lang || ["plaintext", "txt", "text"].includes(lang);
    }
    function setOnigasmWASM(path) {
      setWasm(path);
    }
    exports.BUNDLED_LANGUAGES = languages;
    exports.BUNDLED_THEMES = themes;
    exports.getHighlighter = getHighlighter2;
    exports.loadTheme = fetchTheme;
    exports.renderToHtml = renderToHtml;
    exports.setCDN = setCDN;
    exports.setOnigasmWASM = setOnigasmWASM;
    exports.setWasm = setWasm;
    exports.toShikiTheme = toShikiTheme;
  }
});

// node_modules/@astrojs/markdown-remark/dist/remark-shiki.js
var import_shiki, highlighterCacheAsync, remarkShiki, remark_shiki_default;
var init_remark_shiki = __esm({
  "node_modules/@astrojs/markdown-remark/dist/remark-shiki.js"() {
    import_shiki = __toESM(require_dist(), 1);
    init_unist_util_visit();
    highlighterCacheAsync = /* @__PURE__ */ new Map();
    remarkShiki = async ({ langs = [], theme = "github-dark", wrap: wrap3 = false }, scopedClassName) => {
      const cacheID = typeof theme === "string" ? theme : theme.name;
      let highlighterAsync = highlighterCacheAsync.get(cacheID);
      if (!highlighterAsync) {
        highlighterAsync = (0, import_shiki.getHighlighter)({ theme });
        highlighterCacheAsync.set(cacheID, highlighterAsync);
      }
      const highlighter = await highlighterAsync;
      for (const lang of langs) {
        await highlighter.loadLanguage(lang);
      }
      return () => (tree) => {
        visit(tree, "code", (node) => {
          let html6 = highlighter.codeToHtml(node.value, { lang: node.lang ?? "plaintext" });
          html6 = html6.replace('<pre class="shiki"', `<pre is:raw class="astro-code${scopedClassName ? " " + scopedClassName : ""}"`);
          html6 = html6.replace(/style="(background-)?color: var\(--shiki-/g, 'style="$1color: var(--astro-code-');
          if (node.lang === "diff") {
            html6 = html6.replace(/<span class="line"><span style="(.*?)">([\+|\-])/g, '<span class="line"><span style="$1"><span style="user-select: none;">$2</span>');
          }
          if (wrap3 === false) {
            html6 = html6.replace(/style="(.*?)"/, 'style="$1; overflow-x: auto;"');
          } else if (wrap3 === true) {
            html6 = html6.replace(/style="(.*?)"/, 'style="$1; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;"');
          }
          if (scopedClassName) {
            html6 = html6.replace(/\<span class="line"\>/g, `<span class="line ${scopedClassName}"`);
          }
          node.type = "html";
          node.value = html6;
          node.children = [];
        });
      };
    };
    remark_shiki_default = remarkShiki;
  }
});

// node_modules/@astrojs/markdown-remark/dist/remark-unwrap.js
function remarkUnwrap() {
  const astroRootNodes = /* @__PURE__ */ new Set();
  let insideAstroRoot = false;
  return (tree) => {
    insideAstroRoot = false;
    astroRootNodes.clear();
    visit4(tree, "html", (node) => {
      if (node.value.indexOf("<astro-root") > -1 && !insideAstroRoot) {
        insideAstroRoot = true;
      }
      if (node.value.indexOf("</astro-root") > -1 && insideAstroRoot) {
        insideAstroRoot = false;
      }
      astroRootNodes.add(node);
    });
    visit4(tree, "paragraph", (node, index2, parent) => {
      if (parent && typeof index2 === "number" && containsAstroRootNode(node)) {
        parent.children.splice(index2, 1, ...node.children);
        return [SKIP, index2];
      }
    });
  };
  function containsAstroRootNode(node) {
    return node.children.map((child) => astroRootNodes.has(child)).reduce((all5, v2) => all5 ? all5 : v2, false);
  }
}
var visit4;
var init_remark_unwrap = __esm({
  "node_modules/@astrojs/markdown-remark/dist/remark-unwrap.js"() {
    init_unist_util_visit();
    visit4 = visit;
  }
});

// node_modules/parse5/lib/common/unicode.js
var require_unicode = __commonJS({
  "node_modules/parse5/lib/common/unicode.js"(exports) {
    "use strict";
    var UNDEFINED_CODE_POINTS = [
      65534,
      65535,
      131070,
      131071,
      196606,
      196607,
      262142,
      262143,
      327678,
      327679,
      393214,
      393215,
      458750,
      458751,
      524286,
      524287,
      589822,
      589823,
      655358,
      655359,
      720894,
      720895,
      786430,
      786431,
      851966,
      851967,
      917502,
      917503,
      983038,
      983039,
      1048574,
      1048575,
      1114110,
      1114111
    ];
    exports.REPLACEMENT_CHARACTER = "\uFFFD";
    exports.CODE_POINTS = {
      EOF: -1,
      NULL: 0,
      TABULATION: 9,
      CARRIAGE_RETURN: 13,
      LINE_FEED: 10,
      FORM_FEED: 12,
      SPACE: 32,
      EXCLAMATION_MARK: 33,
      QUOTATION_MARK: 34,
      NUMBER_SIGN: 35,
      AMPERSAND: 38,
      APOSTROPHE: 39,
      HYPHEN_MINUS: 45,
      SOLIDUS: 47,
      DIGIT_0: 48,
      DIGIT_9: 57,
      SEMICOLON: 59,
      LESS_THAN_SIGN: 60,
      EQUALS_SIGN: 61,
      GREATER_THAN_SIGN: 62,
      QUESTION_MARK: 63,
      LATIN_CAPITAL_A: 65,
      LATIN_CAPITAL_F: 70,
      LATIN_CAPITAL_X: 88,
      LATIN_CAPITAL_Z: 90,
      RIGHT_SQUARE_BRACKET: 93,
      GRAVE_ACCENT: 96,
      LATIN_SMALL_A: 97,
      LATIN_SMALL_F: 102,
      LATIN_SMALL_X: 120,
      LATIN_SMALL_Z: 122,
      REPLACEMENT_CHARACTER: 65533
    };
    exports.CODE_POINT_SEQUENCES = {
      DASH_DASH_STRING: [45, 45],
      DOCTYPE_STRING: [68, 79, 67, 84, 89, 80, 69],
      CDATA_START_STRING: [91, 67, 68, 65, 84, 65, 91],
      SCRIPT_STRING: [115, 99, 114, 105, 112, 116],
      PUBLIC_STRING: [80, 85, 66, 76, 73, 67],
      SYSTEM_STRING: [83, 89, 83, 84, 69, 77]
    };
    exports.isSurrogate = function(cp) {
      return cp >= 55296 && cp <= 57343;
    };
    exports.isSurrogatePair = function(cp) {
      return cp >= 56320 && cp <= 57343;
    };
    exports.getSurrogatePairCodePoint = function(cp1, cp2) {
      return (cp1 - 55296) * 1024 + 9216 + cp2;
    };
    exports.isControlCodePoint = function(cp) {
      return cp !== 32 && cp !== 10 && cp !== 13 && cp !== 9 && cp !== 12 && cp >= 1 && cp <= 31 || cp >= 127 && cp <= 159;
    };
    exports.isUndefinedCodePoint = function(cp) {
      return cp >= 64976 && cp <= 65007 || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;
    };
  }
});

// node_modules/parse5/lib/common/error-codes.js
var require_error_codes = __commonJS({
  "node_modules/parse5/lib/common/error-codes.js"(exports, module2) {
    "use strict";
    module2.exports = {
      controlCharacterInInputStream: "control-character-in-input-stream",
      noncharacterInInputStream: "noncharacter-in-input-stream",
      surrogateInInputStream: "surrogate-in-input-stream",
      nonVoidHtmlElementStartTagWithTrailingSolidus: "non-void-html-element-start-tag-with-trailing-solidus",
      endTagWithAttributes: "end-tag-with-attributes",
      endTagWithTrailingSolidus: "end-tag-with-trailing-solidus",
      unexpectedSolidusInTag: "unexpected-solidus-in-tag",
      unexpectedNullCharacter: "unexpected-null-character",
      unexpectedQuestionMarkInsteadOfTagName: "unexpected-question-mark-instead-of-tag-name",
      invalidFirstCharacterOfTagName: "invalid-first-character-of-tag-name",
      unexpectedEqualsSignBeforeAttributeName: "unexpected-equals-sign-before-attribute-name",
      missingEndTagName: "missing-end-tag-name",
      unexpectedCharacterInAttributeName: "unexpected-character-in-attribute-name",
      unknownNamedCharacterReference: "unknown-named-character-reference",
      missingSemicolonAfterCharacterReference: "missing-semicolon-after-character-reference",
      unexpectedCharacterAfterDoctypeSystemIdentifier: "unexpected-character-after-doctype-system-identifier",
      unexpectedCharacterInUnquotedAttributeValue: "unexpected-character-in-unquoted-attribute-value",
      eofBeforeTagName: "eof-before-tag-name",
      eofInTag: "eof-in-tag",
      missingAttributeValue: "missing-attribute-value",
      missingWhitespaceBetweenAttributes: "missing-whitespace-between-attributes",
      missingWhitespaceAfterDoctypePublicKeyword: "missing-whitespace-after-doctype-public-keyword",
      missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: "missing-whitespace-between-doctype-public-and-system-identifiers",
      missingWhitespaceAfterDoctypeSystemKeyword: "missing-whitespace-after-doctype-system-keyword",
      missingQuoteBeforeDoctypePublicIdentifier: "missing-quote-before-doctype-public-identifier",
      missingQuoteBeforeDoctypeSystemIdentifier: "missing-quote-before-doctype-system-identifier",
      missingDoctypePublicIdentifier: "missing-doctype-public-identifier",
      missingDoctypeSystemIdentifier: "missing-doctype-system-identifier",
      abruptDoctypePublicIdentifier: "abrupt-doctype-public-identifier",
      abruptDoctypeSystemIdentifier: "abrupt-doctype-system-identifier",
      cdataInHtmlContent: "cdata-in-html-content",
      incorrectlyOpenedComment: "incorrectly-opened-comment",
      eofInScriptHtmlCommentLikeText: "eof-in-script-html-comment-like-text",
      eofInDoctype: "eof-in-doctype",
      nestedComment: "nested-comment",
      abruptClosingOfEmptyComment: "abrupt-closing-of-empty-comment",
      eofInComment: "eof-in-comment",
      incorrectlyClosedComment: "incorrectly-closed-comment",
      eofInCdata: "eof-in-cdata",
      absenceOfDigitsInNumericCharacterReference: "absence-of-digits-in-numeric-character-reference",
      nullCharacterReference: "null-character-reference",
      surrogateCharacterReference: "surrogate-character-reference",
      characterReferenceOutsideUnicodeRange: "character-reference-outside-unicode-range",
      controlCharacterReference: "control-character-reference",
      noncharacterCharacterReference: "noncharacter-character-reference",
      missingWhitespaceBeforeDoctypeName: "missing-whitespace-before-doctype-name",
      missingDoctypeName: "missing-doctype-name",
      invalidCharacterSequenceAfterDoctypeName: "invalid-character-sequence-after-doctype-name",
      duplicateAttribute: "duplicate-attribute",
      nonConformingDoctype: "non-conforming-doctype",
      missingDoctype: "missing-doctype",
      misplacedDoctype: "misplaced-doctype",
      endTagWithoutMatchingOpenElement: "end-tag-without-matching-open-element",
      closingOfElementWithOpenChildElements: "closing-of-element-with-open-child-elements",
      disallowedContentInNoscriptInHead: "disallowed-content-in-noscript-in-head",
      openElementsLeftAfterEof: "open-elements-left-after-eof",
      abandonedHeadElementChild: "abandoned-head-element-child",
      misplacedStartTagForHeadElement: "misplaced-start-tag-for-head-element",
      nestedNoscriptInHead: "nested-noscript-in-head",
      eofInElementThatCanContainOnlyText: "eof-in-element-that-can-contain-only-text"
    };
  }
});

// node_modules/parse5/lib/tokenizer/preprocessor.js
var require_preprocessor = __commonJS({
  "node_modules/parse5/lib/tokenizer/preprocessor.js"(exports, module2) {
    "use strict";
    var unicode = require_unicode();
    var ERR = require_error_codes();
    var $3 = unicode.CODE_POINTS;
    var DEFAULT_BUFFER_WATERLINE = 1 << 16;
    var Preprocessor = class {
      constructor() {
        this.html = null;
        this.pos = -1;
        this.lastGapPos = -1;
        this.lastCharPos = -1;
        this.gapStack = [];
        this.skipNextNewLine = false;
        this.lastChunkWritten = false;
        this.endOfChunkHit = false;
        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;
      }
      _err() {
      }
      _addGap() {
        this.gapStack.push(this.lastGapPos);
        this.lastGapPos = this.pos;
      }
      _processSurrogate(cp) {
        if (this.pos !== this.lastCharPos) {
          const nextCp = this.html.charCodeAt(this.pos + 1);
          if (unicode.isSurrogatePair(nextCp)) {
            this.pos++;
            this._addGap();
            return unicode.getSurrogatePairCodePoint(cp, nextCp);
          }
        } else if (!this.lastChunkWritten) {
          this.endOfChunkHit = true;
          return $3.EOF;
        }
        this._err(ERR.surrogateInInputStream);
        return cp;
      }
      dropParsedChunk() {
        if (this.pos > this.bufferWaterline) {
          this.lastCharPos -= this.pos;
          this.html = this.html.substring(this.pos);
          this.pos = 0;
          this.lastGapPos = -1;
          this.gapStack = [];
        }
      }
      write(chunk, isLastChunk) {
        if (this.html) {
          this.html += chunk;
        } else {
          this.html = chunk;
        }
        this.lastCharPos = this.html.length - 1;
        this.endOfChunkHit = false;
        this.lastChunkWritten = isLastChunk;
      }
      insertHtmlAtCurrentPos(chunk) {
        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);
        this.lastCharPos = this.html.length - 1;
        this.endOfChunkHit = false;
      }
      advance() {
        this.pos++;
        if (this.pos > this.lastCharPos) {
          this.endOfChunkHit = !this.lastChunkWritten;
          return $3.EOF;
        }
        let cp = this.html.charCodeAt(this.pos);
        if (this.skipNextNewLine && cp === $3.LINE_FEED) {
          this.skipNextNewLine = false;
          this._addGap();
          return this.advance();
        }
        if (cp === $3.CARRIAGE_RETURN) {
          this.skipNextNewLine = true;
          return $3.LINE_FEED;
        }
        this.skipNextNewLine = false;
        if (unicode.isSurrogate(cp)) {
          cp = this._processSurrogate(cp);
        }
        const isCommonValidRange = cp > 31 && cp < 127 || cp === $3.LINE_FEED || cp === $3.CARRIAGE_RETURN || cp > 159 && cp < 64976;
        if (!isCommonValidRange) {
          this._checkForProblematicCharacters(cp);
        }
        return cp;
      }
      _checkForProblematicCharacters(cp) {
        if (unicode.isControlCodePoint(cp)) {
          this._err(ERR.controlCharacterInInputStream);
        } else if (unicode.isUndefinedCodePoint(cp)) {
          this._err(ERR.noncharacterInInputStream);
        }
      }
      retreat() {
        if (this.pos === this.lastGapPos) {
          this.lastGapPos = this.gapStack.pop();
          this.pos--;
        }
        this.pos--;
      }
    };
    module2.exports = Preprocessor;
  }
});

// node_modules/parse5/lib/tokenizer/named-entity-data.js
var require_named_entity_data = __commonJS({
  "node_modules/parse5/lib/tokenizer/named-entity-data.js"(exports, module2) {
    "use strict";
    module2.exports = new Uint16Array([4, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 106, 303, 412, 810, 1432, 1701, 1796, 1987, 2114, 2360, 2420, 2484, 3170, 3251, 4140, 4393, 4575, 4610, 5106, 5512, 5728, 6117, 6274, 6315, 6345, 6427, 6516, 7002, 7910, 8733, 9323, 9870, 10170, 10631, 10893, 11318, 11386, 11467, 12773, 13092, 14474, 14922, 15448, 15542, 16419, 17666, 18166, 18611, 19004, 19095, 19298, 19397, 4, 16, 69, 77, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 140, 150, 158, 169, 176, 194, 199, 210, 216, 222, 226, 242, 256, 266, 283, 294, 108, 105, 103, 5, 198, 1, 59, 148, 1, 198, 80, 5, 38, 1, 59, 156, 1, 38, 99, 117, 116, 101, 5, 193, 1, 59, 167, 1, 193, 114, 101, 118, 101, 59, 1, 258, 4, 2, 105, 121, 182, 191, 114, 99, 5, 194, 1, 59, 189, 1, 194, 59, 1, 1040, 114, 59, 3, 55349, 56580, 114, 97, 118, 101, 5, 192, 1, 59, 208, 1, 192, 112, 104, 97, 59, 1, 913, 97, 99, 114, 59, 1, 256, 100, 59, 1, 10835, 4, 2, 103, 112, 232, 237, 111, 110, 59, 1, 260, 102, 59, 3, 55349, 56632, 112, 108, 121, 70, 117, 110, 99, 116, 105, 111, 110, 59, 1, 8289, 105, 110, 103, 5, 197, 1, 59, 264, 1, 197, 4, 2, 99, 115, 272, 277, 114, 59, 3, 55349, 56476, 105, 103, 110, 59, 1, 8788, 105, 108, 100, 101, 5, 195, 1, 59, 292, 1, 195, 109, 108, 5, 196, 1, 59, 301, 1, 196, 4, 8, 97, 99, 101, 102, 111, 114, 115, 117, 321, 350, 354, 383, 388, 394, 400, 405, 4, 2, 99, 114, 327, 336, 107, 115, 108, 97, 115, 104, 59, 1, 8726, 4, 2, 118, 119, 342, 345, 59, 1, 10983, 101, 100, 59, 1, 8966, 121, 59, 1, 1041, 4, 3, 99, 114, 116, 362, 369, 379, 97, 117, 115, 101, 59, 1, 8757, 110, 111, 117, 108, 108, 105, 115, 59, 1, 8492, 97, 59, 1, 914, 114, 59, 3, 55349, 56581, 112, 102, 59, 3, 55349, 56633, 101, 118, 101, 59, 1, 728, 99, 114, 59, 1, 8492, 109, 112, 101, 113, 59, 1, 8782, 4, 14, 72, 79, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 117, 442, 447, 456, 504, 542, 547, 569, 573, 577, 616, 678, 784, 790, 796, 99, 121, 59, 1, 1063, 80, 89, 5, 169, 1, 59, 454, 1, 169, 4, 3, 99, 112, 121, 464, 470, 497, 117, 116, 101, 59, 1, 262, 4, 2, 59, 105, 476, 478, 1, 8914, 116, 97, 108, 68, 105, 102, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8517, 108, 101, 121, 115, 59, 1, 8493, 4, 4, 97, 101, 105, 111, 514, 520, 530, 535, 114, 111, 110, 59, 1, 268, 100, 105, 108, 5, 199, 1, 59, 528, 1, 199, 114, 99, 59, 1, 264, 110, 105, 110, 116, 59, 1, 8752, 111, 116, 59, 1, 266, 4, 2, 100, 110, 553, 560, 105, 108, 108, 97, 59, 1, 184, 116, 101, 114, 68, 111, 116, 59, 1, 183, 114, 59, 1, 8493, 105, 59, 1, 935, 114, 99, 108, 101, 4, 4, 68, 77, 80, 84, 591, 596, 603, 609, 111, 116, 59, 1, 8857, 105, 110, 117, 115, 59, 1, 8854, 108, 117, 115, 59, 1, 8853, 105, 109, 101, 115, 59, 1, 8855, 111, 4, 2, 99, 115, 623, 646, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8754, 101, 67, 117, 114, 108, 121, 4, 2, 68, 81, 658, 671, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8221, 117, 111, 116, 101, 59, 1, 8217, 4, 4, 108, 110, 112, 117, 688, 701, 736, 753, 111, 110, 4, 2, 59, 101, 696, 698, 1, 8759, 59, 1, 10868, 4, 3, 103, 105, 116, 709, 717, 722, 114, 117, 101, 110, 116, 59, 1, 8801, 110, 116, 59, 1, 8751, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8750, 4, 2, 102, 114, 742, 745, 59, 1, 8450, 111, 100, 117, 99, 116, 59, 1, 8720, 110, 116, 101, 114, 67, 108, 111, 99, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8755, 111, 115, 115, 59, 1, 10799, 99, 114, 59, 3, 55349, 56478, 112, 4, 2, 59, 67, 803, 805, 1, 8915, 97, 112, 59, 1, 8781, 4, 11, 68, 74, 83, 90, 97, 99, 101, 102, 105, 111, 115, 834, 850, 855, 860, 865, 888, 903, 916, 921, 1011, 1415, 4, 2, 59, 111, 840, 842, 1, 8517, 116, 114, 97, 104, 100, 59, 1, 10513, 99, 121, 59, 1, 1026, 99, 121, 59, 1, 1029, 99, 121, 59, 1, 1039, 4, 3, 103, 114, 115, 873, 879, 883, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8609, 104, 118, 59, 1, 10980, 4, 2, 97, 121, 894, 900, 114, 111, 110, 59, 1, 270, 59, 1, 1044, 108, 4, 2, 59, 116, 910, 912, 1, 8711, 97, 59, 1, 916, 114, 59, 3, 55349, 56583, 4, 2, 97, 102, 927, 998, 4, 2, 99, 109, 933, 992, 114, 105, 116, 105, 99, 97, 108, 4, 4, 65, 68, 71, 84, 950, 957, 978, 985, 99, 117, 116, 101, 59, 1, 180, 111, 4, 2, 116, 117, 964, 967, 59, 1, 729, 98, 108, 101, 65, 99, 117, 116, 101, 59, 1, 733, 114, 97, 118, 101, 59, 1, 96, 105, 108, 100, 101, 59, 1, 732, 111, 110, 100, 59, 1, 8900, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8518, 4, 4, 112, 116, 117, 119, 1021, 1026, 1048, 1249, 102, 59, 3, 55349, 56635, 4, 3, 59, 68, 69, 1034, 1036, 1041, 1, 168, 111, 116, 59, 1, 8412, 113, 117, 97, 108, 59, 1, 8784, 98, 108, 101, 4, 6, 67, 68, 76, 82, 85, 86, 1065, 1082, 1101, 1189, 1211, 1236, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8751, 111, 4, 2, 116, 119, 1089, 1092, 59, 1, 168, 110, 65, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 101, 111, 1107, 1141, 102, 116, 4, 3, 65, 82, 84, 1117, 1124, 1136, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8660, 101, 101, 59, 1, 10980, 110, 103, 4, 2, 76, 82, 1149, 1177, 101, 102, 116, 4, 2, 65, 82, 1158, 1165, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10233, 105, 103, 104, 116, 4, 2, 65, 84, 1199, 1206, 114, 114, 111, 119, 59, 1, 8658, 101, 101, 59, 1, 8872, 112, 4, 2, 65, 68, 1218, 1225, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8741, 110, 4, 6, 65, 66, 76, 82, 84, 97, 1264, 1292, 1299, 1352, 1391, 1408, 114, 114, 111, 119, 4, 3, 59, 66, 85, 1276, 1278, 1283, 1, 8595, 97, 114, 59, 1, 10515, 112, 65, 114, 114, 111, 119, 59, 1, 8693, 114, 101, 118, 101, 59, 1, 785, 101, 102, 116, 4, 3, 82, 84, 86, 1310, 1323, 1334, 105, 103, 104, 116, 86, 101, 99, 116, 111, 114, 59, 1, 10576, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10590, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1345, 1347, 1, 8637, 97, 114, 59, 1, 10582, 105, 103, 104, 116, 4, 2, 84, 86, 1362, 1373, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10591, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1384, 1386, 1, 8641, 97, 114, 59, 1, 10583, 101, 101, 4, 2, 59, 65, 1399, 1401, 1, 8868, 114, 114, 111, 119, 59, 1, 8615, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 99, 116, 1421, 1426, 114, 59, 3, 55349, 56479, 114, 111, 107, 59, 1, 272, 4, 16, 78, 84, 97, 99, 100, 102, 103, 108, 109, 111, 112, 113, 115, 116, 117, 120, 1466, 1470, 1478, 1489, 1515, 1520, 1525, 1536, 1544, 1593, 1609, 1617, 1650, 1664, 1668, 1677, 71, 59, 1, 330, 72, 5, 208, 1, 59, 1476, 1, 208, 99, 117, 116, 101, 5, 201, 1, 59, 1487, 1, 201, 4, 3, 97, 105, 121, 1497, 1503, 1512, 114, 111, 110, 59, 1, 282, 114, 99, 5, 202, 1, 59, 1510, 1, 202, 59, 1, 1069, 111, 116, 59, 1, 278, 114, 59, 3, 55349, 56584, 114, 97, 118, 101, 5, 200, 1, 59, 1534, 1, 200, 101, 109, 101, 110, 116, 59, 1, 8712, 4, 2, 97, 112, 1550, 1555, 99, 114, 59, 1, 274, 116, 121, 4, 2, 83, 86, 1563, 1576, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9723, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9643, 4, 2, 103, 112, 1599, 1604, 111, 110, 59, 1, 280, 102, 59, 3, 55349, 56636, 115, 105, 108, 111, 110, 59, 1, 917, 117, 4, 2, 97, 105, 1624, 1640, 108, 4, 2, 59, 84, 1631, 1633, 1, 10869, 105, 108, 100, 101, 59, 1, 8770, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8652, 4, 2, 99, 105, 1656, 1660, 114, 59, 1, 8496, 109, 59, 1, 10867, 97, 59, 1, 919, 109, 108, 5, 203, 1, 59, 1675, 1, 203, 4, 2, 105, 112, 1683, 1689, 115, 116, 115, 59, 1, 8707, 111, 110, 101, 110, 116, 105, 97, 108, 69, 59, 1, 8519, 4, 5, 99, 102, 105, 111, 115, 1713, 1717, 1722, 1762, 1791, 121, 59, 1, 1060, 114, 59, 3, 55349, 56585, 108, 108, 101, 100, 4, 2, 83, 86, 1732, 1745, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9724, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9642, 4, 3, 112, 114, 117, 1770, 1775, 1781, 102, 59, 3, 55349, 56637, 65, 108, 108, 59, 1, 8704, 114, 105, 101, 114, 116, 114, 102, 59, 1, 8497, 99, 114, 59, 1, 8497, 4, 12, 74, 84, 97, 98, 99, 100, 102, 103, 111, 114, 115, 116, 1822, 1827, 1834, 1848, 1855, 1877, 1882, 1887, 1890, 1896, 1978, 1984, 99, 121, 59, 1, 1027, 5, 62, 1, 59, 1832, 1, 62, 109, 109, 97, 4, 2, 59, 100, 1843, 1845, 1, 915, 59, 1, 988, 114, 101, 118, 101, 59, 1, 286, 4, 3, 101, 105, 121, 1863, 1869, 1874, 100, 105, 108, 59, 1, 290, 114, 99, 59, 1, 284, 59, 1, 1043, 111, 116, 59, 1, 288, 114, 59, 3, 55349, 56586, 59, 1, 8921, 112, 102, 59, 3, 55349, 56638, 101, 97, 116, 101, 114, 4, 6, 69, 70, 71, 76, 83, 84, 1915, 1933, 1944, 1953, 1959, 1971, 113, 117, 97, 108, 4, 2, 59, 76, 1925, 1927, 1, 8805, 101, 115, 115, 59, 1, 8923, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8807, 114, 101, 97, 116, 101, 114, 59, 1, 10914, 101, 115, 115, 59, 1, 8823, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10878, 105, 108, 100, 101, 59, 1, 8819, 99, 114, 59, 3, 55349, 56482, 59, 1, 8811, 4, 8, 65, 97, 99, 102, 105, 111, 115, 117, 2005, 2012, 2026, 2032, 2036, 2049, 2073, 2089, 82, 68, 99, 121, 59, 1, 1066, 4, 2, 99, 116, 2018, 2023, 101, 107, 59, 1, 711, 59, 1, 94, 105, 114, 99, 59, 1, 292, 114, 59, 1, 8460, 108, 98, 101, 114, 116, 83, 112, 97, 99, 101, 59, 1, 8459, 4, 2, 112, 114, 2055, 2059, 102, 59, 1, 8461, 105, 122, 111, 110, 116, 97, 108, 76, 105, 110, 101, 59, 1, 9472, 4, 2, 99, 116, 2079, 2083, 114, 59, 1, 8459, 114, 111, 107, 59, 1, 294, 109, 112, 4, 2, 68, 69, 2097, 2107, 111, 119, 110, 72, 117, 109, 112, 59, 1, 8782, 113, 117, 97, 108, 59, 1, 8783, 4, 14, 69, 74, 79, 97, 99, 100, 102, 103, 109, 110, 111, 115, 116, 117, 2144, 2149, 2155, 2160, 2171, 2189, 2194, 2198, 2209, 2245, 2307, 2329, 2334, 2341, 99, 121, 59, 1, 1045, 108, 105, 103, 59, 1, 306, 99, 121, 59, 1, 1025, 99, 117, 116, 101, 5, 205, 1, 59, 2169, 1, 205, 4, 2, 105, 121, 2177, 2186, 114, 99, 5, 206, 1, 59, 2184, 1, 206, 59, 1, 1048, 111, 116, 59, 1, 304, 114, 59, 1, 8465, 114, 97, 118, 101, 5, 204, 1, 59, 2207, 1, 204, 4, 3, 59, 97, 112, 2217, 2219, 2238, 1, 8465, 4, 2, 99, 103, 2225, 2229, 114, 59, 1, 298, 105, 110, 97, 114, 121, 73, 59, 1, 8520, 108, 105, 101, 115, 59, 1, 8658, 4, 2, 116, 118, 2251, 2281, 4, 2, 59, 101, 2257, 2259, 1, 8748, 4, 2, 103, 114, 2265, 2271, 114, 97, 108, 59, 1, 8747, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8898, 105, 115, 105, 98, 108, 101, 4, 2, 67, 84, 2293, 2300, 111, 109, 109, 97, 59, 1, 8291, 105, 109, 101, 115, 59, 1, 8290, 4, 3, 103, 112, 116, 2315, 2320, 2325, 111, 110, 59, 1, 302, 102, 59, 3, 55349, 56640, 97, 59, 1, 921, 99, 114, 59, 1, 8464, 105, 108, 100, 101, 59, 1, 296, 4, 2, 107, 109, 2347, 2352, 99, 121, 59, 1, 1030, 108, 5, 207, 1, 59, 2358, 1, 207, 4, 5, 99, 102, 111, 115, 117, 2372, 2386, 2391, 2397, 2414, 4, 2, 105, 121, 2378, 2383, 114, 99, 59, 1, 308, 59, 1, 1049, 114, 59, 3, 55349, 56589, 112, 102, 59, 3, 55349, 56641, 4, 2, 99, 101, 2403, 2408, 114, 59, 3, 55349, 56485, 114, 99, 121, 59, 1, 1032, 107, 99, 121, 59, 1, 1028, 4, 7, 72, 74, 97, 99, 102, 111, 115, 2436, 2441, 2446, 2452, 2467, 2472, 2478, 99, 121, 59, 1, 1061, 99, 121, 59, 1, 1036, 112, 112, 97, 59, 1, 922, 4, 2, 101, 121, 2458, 2464, 100, 105, 108, 59, 1, 310, 59, 1, 1050, 114, 59, 3, 55349, 56590, 112, 102, 59, 3, 55349, 56642, 99, 114, 59, 3, 55349, 56486, 4, 11, 74, 84, 97, 99, 101, 102, 108, 109, 111, 115, 116, 2508, 2513, 2520, 2562, 2585, 2981, 2986, 3004, 3011, 3146, 3167, 99, 121, 59, 1, 1033, 5, 60, 1, 59, 2518, 1, 60, 4, 5, 99, 109, 110, 112, 114, 2532, 2538, 2544, 2548, 2558, 117, 116, 101, 59, 1, 313, 98, 100, 97, 59, 1, 923, 103, 59, 1, 10218, 108, 97, 99, 101, 116, 114, 102, 59, 1, 8466, 114, 59, 1, 8606, 4, 3, 97, 101, 121, 2570, 2576, 2582, 114, 111, 110, 59, 1, 317, 100, 105, 108, 59, 1, 315, 59, 1, 1051, 4, 2, 102, 115, 2591, 2907, 116, 4, 10, 65, 67, 68, 70, 82, 84, 85, 86, 97, 114, 2614, 2663, 2672, 2728, 2735, 2760, 2820, 2870, 2888, 2895, 4, 2, 110, 114, 2620, 2633, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10216, 114, 111, 119, 4, 3, 59, 66, 82, 2644, 2646, 2651, 1, 8592, 97, 114, 59, 1, 8676, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8646, 101, 105, 108, 105, 110, 103, 59, 1, 8968, 111, 4, 2, 117, 119, 2679, 2692, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10214, 110, 4, 2, 84, 86, 2699, 2710, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10593, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2721, 2723, 1, 8643, 97, 114, 59, 1, 10585, 108, 111, 111, 114, 59, 1, 8970, 105, 103, 104, 116, 4, 2, 65, 86, 2745, 2752, 114, 114, 111, 119, 59, 1, 8596, 101, 99, 116, 111, 114, 59, 1, 10574, 4, 2, 101, 114, 2766, 2792, 101, 4, 3, 59, 65, 86, 2775, 2777, 2784, 1, 8867, 114, 114, 111, 119, 59, 1, 8612, 101, 99, 116, 111, 114, 59, 1, 10586, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 2806, 2808, 2813, 1, 8882, 97, 114, 59, 1, 10703, 113, 117, 97, 108, 59, 1, 8884, 112, 4, 3, 68, 84, 86, 2829, 2841, 2852, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10577, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10592, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2863, 2865, 1, 8639, 97, 114, 59, 1, 10584, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2881, 2883, 1, 8636, 97, 114, 59, 1, 10578, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8660, 115, 4, 6, 69, 70, 71, 76, 83, 84, 2922, 2936, 2947, 2956, 2962, 2974, 113, 117, 97, 108, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8922, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8806, 114, 101, 97, 116, 101, 114, 59, 1, 8822, 101, 115, 115, 59, 1, 10913, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10877, 105, 108, 100, 101, 59, 1, 8818, 114, 59, 3, 55349, 56591, 4, 2, 59, 101, 2992, 2994, 1, 8920, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8666, 105, 100, 111, 116, 59, 1, 319, 4, 3, 110, 112, 119, 3019, 3110, 3115, 103, 4, 4, 76, 82, 108, 114, 3030, 3058, 3070, 3098, 101, 102, 116, 4, 2, 65, 82, 3039, 3046, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10231, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10230, 101, 102, 116, 4, 2, 97, 114, 3079, 3086, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10233, 102, 59, 3, 55349, 56643, 101, 114, 4, 2, 76, 82, 3123, 3134, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8601, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8600, 4, 3, 99, 104, 116, 3154, 3158, 3161, 114, 59, 1, 8466, 59, 1, 8624, 114, 111, 107, 59, 1, 321, 59, 1, 8810, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 3188, 3192, 3196, 3222, 3227, 3237, 3243, 3248, 112, 59, 1, 10501, 121, 59, 1, 1052, 4, 2, 100, 108, 3202, 3213, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8287, 108, 105, 110, 116, 114, 102, 59, 1, 8499, 114, 59, 3, 55349, 56592, 110, 117, 115, 80, 108, 117, 115, 59, 1, 8723, 112, 102, 59, 3, 55349, 56644, 99, 114, 59, 1, 8499, 59, 1, 924, 4, 9, 74, 97, 99, 101, 102, 111, 115, 116, 117, 3271, 3276, 3283, 3306, 3422, 3427, 4120, 4126, 4137, 99, 121, 59, 1, 1034, 99, 117, 116, 101, 59, 1, 323, 4, 3, 97, 101, 121, 3291, 3297, 3303, 114, 111, 110, 59, 1, 327, 100, 105, 108, 59, 1, 325, 59, 1, 1053, 4, 3, 103, 115, 119, 3314, 3380, 3415, 97, 116, 105, 118, 101, 4, 3, 77, 84, 86, 3327, 3340, 3365, 101, 100, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8203, 104, 105, 4, 2, 99, 110, 3348, 3357, 107, 83, 112, 97, 99, 101, 59, 1, 8203, 83, 112, 97, 99, 101, 59, 1, 8203, 101, 114, 121, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8203, 116, 101, 100, 4, 2, 71, 76, 3389, 3405, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8811, 101, 115, 115, 76, 101, 115, 115, 59, 1, 8810, 76, 105, 110, 101, 59, 1, 10, 114, 59, 3, 55349, 56593, 4, 4, 66, 110, 112, 116, 3437, 3444, 3460, 3464, 114, 101, 97, 107, 59, 1, 8288, 66, 114, 101, 97, 107, 105, 110, 103, 83, 112, 97, 99, 101, 59, 1, 160, 102, 59, 1, 8469, 4, 13, 59, 67, 68, 69, 71, 72, 76, 78, 80, 82, 83, 84, 86, 3492, 3494, 3517, 3536, 3578, 3657, 3685, 3784, 3823, 3860, 3915, 4066, 4107, 1, 10988, 4, 2, 111, 117, 3500, 3510, 110, 103, 114, 117, 101, 110, 116, 59, 1, 8802, 112, 67, 97, 112, 59, 1, 8813, 111, 117, 98, 108, 101, 86, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8742, 4, 3, 108, 113, 120, 3544, 3552, 3571, 101, 109, 101, 110, 116, 59, 1, 8713, 117, 97, 108, 4, 2, 59, 84, 3561, 3563, 1, 8800, 105, 108, 100, 101, 59, 3, 8770, 824, 105, 115, 116, 115, 59, 1, 8708, 114, 101, 97, 116, 101, 114, 4, 7, 59, 69, 70, 71, 76, 83, 84, 3600, 3602, 3609, 3621, 3631, 3637, 3650, 1, 8815, 113, 117, 97, 108, 59, 1, 8817, 117, 108, 108, 69, 113, 117, 97, 108, 59, 3, 8807, 824, 114, 101, 97, 116, 101, 114, 59, 3, 8811, 824, 101, 115, 115, 59, 1, 8825, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10878, 824, 105, 108, 100, 101, 59, 1, 8821, 117, 109, 112, 4, 2, 68, 69, 3666, 3677, 111, 119, 110, 72, 117, 109, 112, 59, 3, 8782, 824, 113, 117, 97, 108, 59, 3, 8783, 824, 101, 4, 2, 102, 115, 3692, 3724, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3709, 3711, 3717, 1, 8938, 97, 114, 59, 3, 10703, 824, 113, 117, 97, 108, 59, 1, 8940, 115, 4, 6, 59, 69, 71, 76, 83, 84, 3739, 3741, 3748, 3757, 3764, 3777, 1, 8814, 113, 117, 97, 108, 59, 1, 8816, 114, 101, 97, 116, 101, 114, 59, 1, 8824, 101, 115, 115, 59, 3, 8810, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10877, 824, 105, 108, 100, 101, 59, 1, 8820, 101, 115, 116, 101, 100, 4, 2, 71, 76, 3795, 3812, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 3, 10914, 824, 101, 115, 115, 76, 101, 115, 115, 59, 3, 10913, 824, 114, 101, 99, 101, 100, 101, 115, 4, 3, 59, 69, 83, 3838, 3840, 3848, 1, 8832, 113, 117, 97, 108, 59, 3, 10927, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8928, 4, 2, 101, 105, 3866, 3881, 118, 101, 114, 115, 101, 69, 108, 101, 109, 101, 110, 116, 59, 1, 8716, 103, 104, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3900, 3902, 3908, 1, 8939, 97, 114, 59, 3, 10704, 824, 113, 117, 97, 108, 59, 1, 8941, 4, 2, 113, 117, 3921, 3973, 117, 97, 114, 101, 83, 117, 4, 2, 98, 112, 3933, 3952, 115, 101, 116, 4, 2, 59, 69, 3942, 3945, 3, 8847, 824, 113, 117, 97, 108, 59, 1, 8930, 101, 114, 115, 101, 116, 4, 2, 59, 69, 3963, 3966, 3, 8848, 824, 113, 117, 97, 108, 59, 1, 8931, 4, 3, 98, 99, 112, 3981, 4e3, 4045, 115, 101, 116, 4, 2, 59, 69, 3990, 3993, 3, 8834, 8402, 113, 117, 97, 108, 59, 1, 8840, 99, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 4015, 4017, 4025, 4037, 1, 8833, 113, 117, 97, 108, 59, 3, 10928, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8929, 105, 108, 100, 101, 59, 3, 8831, 824, 101, 114, 115, 101, 116, 4, 2, 59, 69, 4056, 4059, 3, 8835, 8402, 113, 117, 97, 108, 59, 1, 8841, 105, 108, 100, 101, 4, 4, 59, 69, 70, 84, 4080, 4082, 4089, 4100, 1, 8769, 113, 117, 97, 108, 59, 1, 8772, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8775, 105, 108, 100, 101, 59, 1, 8777, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8740, 99, 114, 59, 3, 55349, 56489, 105, 108, 100, 101, 5, 209, 1, 59, 4135, 1, 209, 59, 1, 925, 4, 14, 69, 97, 99, 100, 102, 103, 109, 111, 112, 114, 115, 116, 117, 118, 4170, 4176, 4187, 4205, 4212, 4217, 4228, 4253, 4259, 4292, 4295, 4316, 4337, 4346, 108, 105, 103, 59, 1, 338, 99, 117, 116, 101, 5, 211, 1, 59, 4185, 1, 211, 4, 2, 105, 121, 4193, 4202, 114, 99, 5, 212, 1, 59, 4200, 1, 212, 59, 1, 1054, 98, 108, 97, 99, 59, 1, 336, 114, 59, 3, 55349, 56594, 114, 97, 118, 101, 5, 210, 1, 59, 4226, 1, 210, 4, 3, 97, 101, 105, 4236, 4241, 4246, 99, 114, 59, 1, 332, 103, 97, 59, 1, 937, 99, 114, 111, 110, 59, 1, 927, 112, 102, 59, 3, 55349, 56646, 101, 110, 67, 117, 114, 108, 121, 4, 2, 68, 81, 4272, 4285, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8220, 117, 111, 116, 101, 59, 1, 8216, 59, 1, 10836, 4, 2, 99, 108, 4301, 4306, 114, 59, 3, 55349, 56490, 97, 115, 104, 5, 216, 1, 59, 4314, 1, 216, 105, 4, 2, 108, 109, 4323, 4332, 100, 101, 5, 213, 1, 59, 4330, 1, 213, 101, 115, 59, 1, 10807, 109, 108, 5, 214, 1, 59, 4344, 1, 214, 101, 114, 4, 2, 66, 80, 4354, 4380, 4, 2, 97, 114, 4360, 4364, 114, 59, 1, 8254, 97, 99, 4, 2, 101, 107, 4372, 4375, 59, 1, 9182, 101, 116, 59, 1, 9140, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9180, 4, 9, 97, 99, 102, 104, 105, 108, 111, 114, 115, 4413, 4422, 4426, 4431, 4435, 4438, 4448, 4471, 4561, 114, 116, 105, 97, 108, 68, 59, 1, 8706, 121, 59, 1, 1055, 114, 59, 3, 55349, 56595, 105, 59, 1, 934, 59, 1, 928, 117, 115, 77, 105, 110, 117, 115, 59, 1, 177, 4, 2, 105, 112, 4454, 4467, 110, 99, 97, 114, 101, 112, 108, 97, 110, 101, 59, 1, 8460, 102, 59, 1, 8473, 4, 4, 59, 101, 105, 111, 4481, 4483, 4526, 4531, 1, 10939, 99, 101, 100, 101, 115, 4, 4, 59, 69, 83, 84, 4498, 4500, 4507, 4519, 1, 8826, 113, 117, 97, 108, 59, 1, 10927, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8828, 105, 108, 100, 101, 59, 1, 8830, 109, 101, 59, 1, 8243, 4, 2, 100, 112, 4537, 4543, 117, 99, 116, 59, 1, 8719, 111, 114, 116, 105, 111, 110, 4, 2, 59, 97, 4555, 4557, 1, 8759, 108, 59, 1, 8733, 4, 2, 99, 105, 4567, 4572, 114, 59, 3, 55349, 56491, 59, 1, 936, 4, 4, 85, 102, 111, 115, 4585, 4594, 4599, 4604, 79, 84, 5, 34, 1, 59, 4592, 1, 34, 114, 59, 3, 55349, 56596, 112, 102, 59, 1, 8474, 99, 114, 59, 3, 55349, 56492, 4, 12, 66, 69, 97, 99, 101, 102, 104, 105, 111, 114, 115, 117, 4636, 4642, 4650, 4681, 4704, 4763, 4767, 4771, 5047, 5069, 5081, 5094, 97, 114, 114, 59, 1, 10512, 71, 5, 174, 1, 59, 4648, 1, 174, 4, 3, 99, 110, 114, 4658, 4664, 4668, 117, 116, 101, 59, 1, 340, 103, 59, 1, 10219, 114, 4, 2, 59, 116, 4675, 4677, 1, 8608, 108, 59, 1, 10518, 4, 3, 97, 101, 121, 4689, 4695, 4701, 114, 111, 110, 59, 1, 344, 100, 105, 108, 59, 1, 342, 59, 1, 1056, 4, 2, 59, 118, 4710, 4712, 1, 8476, 101, 114, 115, 101, 4, 2, 69, 85, 4722, 4748, 4, 2, 108, 113, 4728, 4736, 101, 109, 101, 110, 116, 59, 1, 8715, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8651, 112, 69, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10607, 114, 59, 1, 8476, 111, 59, 1, 929, 103, 104, 116, 4, 8, 65, 67, 68, 70, 84, 85, 86, 97, 4792, 4840, 4849, 4905, 4912, 4972, 5022, 5040, 4, 2, 110, 114, 4798, 4811, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10217, 114, 111, 119, 4, 3, 59, 66, 76, 4822, 4824, 4829, 1, 8594, 97, 114, 59, 1, 8677, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8644, 101, 105, 108, 105, 110, 103, 59, 1, 8969, 111, 4, 2, 117, 119, 4856, 4869, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10215, 110, 4, 2, 84, 86, 4876, 4887, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10589, 101, 99, 116, 111, 114, 4, 2, 59, 66, 4898, 4900, 1, 8642, 97, 114, 59, 1, 10581, 108, 111, 111, 114, 59, 1, 8971, 4, 2, 101, 114, 4918, 4944, 101, 4, 3, 59, 65, 86, 4927, 4929, 4936, 1, 8866, 114, 114, 111, 119, 59, 1, 8614, 101, 99, 116, 111, 114, 59, 1, 10587, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 4958, 4960, 4965, 1, 8883, 97, 114, 59, 1, 10704, 113, 117, 97, 108, 59, 1, 8885, 112, 4, 3, 68, 84, 86, 4981, 4993, 5004, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10575, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10588, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5015, 5017, 1, 8638, 97, 114, 59, 1, 10580, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5033, 5035, 1, 8640, 97, 114, 59, 1, 10579, 114, 114, 111, 119, 59, 1, 8658, 4, 2, 112, 117, 5053, 5057, 102, 59, 1, 8477, 110, 100, 73, 109, 112, 108, 105, 101, 115, 59, 1, 10608, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8667, 4, 2, 99, 104, 5087, 5091, 114, 59, 1, 8475, 59, 1, 8625, 108, 101, 68, 101, 108, 97, 121, 101, 100, 59, 1, 10740, 4, 13, 72, 79, 97, 99, 102, 104, 105, 109, 111, 113, 115, 116, 117, 5134, 5150, 5157, 5164, 5198, 5203, 5259, 5265, 5277, 5283, 5374, 5380, 5385, 4, 2, 67, 99, 5140, 5146, 72, 99, 121, 59, 1, 1065, 121, 59, 1, 1064, 70, 84, 99, 121, 59, 1, 1068, 99, 117, 116, 101, 59, 1, 346, 4, 5, 59, 97, 101, 105, 121, 5176, 5178, 5184, 5190, 5195, 1, 10940, 114, 111, 110, 59, 1, 352, 100, 105, 108, 59, 1, 350, 114, 99, 59, 1, 348, 59, 1, 1057, 114, 59, 3, 55349, 56598, 111, 114, 116, 4, 4, 68, 76, 82, 85, 5216, 5227, 5238, 5250, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8595, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8592, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8594, 112, 65, 114, 114, 111, 119, 59, 1, 8593, 103, 109, 97, 59, 1, 931, 97, 108, 108, 67, 105, 114, 99, 108, 101, 59, 1, 8728, 112, 102, 59, 3, 55349, 56650, 4, 2, 114, 117, 5289, 5293, 116, 59, 1, 8730, 97, 114, 101, 4, 4, 59, 73, 83, 85, 5306, 5308, 5322, 5367, 1, 9633, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8851, 117, 4, 2, 98, 112, 5329, 5347, 115, 101, 116, 4, 2, 59, 69, 5338, 5340, 1, 8847, 113, 117, 97, 108, 59, 1, 8849, 101, 114, 115, 101, 116, 4, 2, 59, 69, 5358, 5360, 1, 8848, 113, 117, 97, 108, 59, 1, 8850, 110, 105, 111, 110, 59, 1, 8852, 99, 114, 59, 3, 55349, 56494, 97, 114, 59, 1, 8902, 4, 4, 98, 99, 109, 112, 5395, 5420, 5475, 5478, 4, 2, 59, 115, 5401, 5403, 1, 8912, 101, 116, 4, 2, 59, 69, 5411, 5413, 1, 8912, 113, 117, 97, 108, 59, 1, 8838, 4, 2, 99, 104, 5426, 5468, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 5440, 5442, 5449, 5461, 1, 8827, 113, 117, 97, 108, 59, 1, 10928, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8829, 105, 108, 100, 101, 59, 1, 8831, 84, 104, 97, 116, 59, 1, 8715, 59, 1, 8721, 4, 3, 59, 101, 115, 5486, 5488, 5507, 1, 8913, 114, 115, 101, 116, 4, 2, 59, 69, 5498, 5500, 1, 8835, 113, 117, 97, 108, 59, 1, 8839, 101, 116, 59, 1, 8913, 4, 11, 72, 82, 83, 97, 99, 102, 104, 105, 111, 114, 115, 5536, 5546, 5552, 5567, 5579, 5602, 5607, 5655, 5695, 5701, 5711, 79, 82, 78, 5, 222, 1, 59, 5544, 1, 222, 65, 68, 69, 59, 1, 8482, 4, 2, 72, 99, 5558, 5563, 99, 121, 59, 1, 1035, 121, 59, 1, 1062, 4, 2, 98, 117, 5573, 5576, 59, 1, 9, 59, 1, 932, 4, 3, 97, 101, 121, 5587, 5593, 5599, 114, 111, 110, 59, 1, 356, 100, 105, 108, 59, 1, 354, 59, 1, 1058, 114, 59, 3, 55349, 56599, 4, 2, 101, 105, 5613, 5631, 4, 2, 114, 116, 5619, 5627, 101, 102, 111, 114, 101, 59, 1, 8756, 97, 59, 1, 920, 4, 2, 99, 110, 5637, 5647, 107, 83, 112, 97, 99, 101, 59, 3, 8287, 8202, 83, 112, 97, 99, 101, 59, 1, 8201, 108, 100, 101, 4, 4, 59, 69, 70, 84, 5668, 5670, 5677, 5688, 1, 8764, 113, 117, 97, 108, 59, 1, 8771, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8773, 105, 108, 100, 101, 59, 1, 8776, 112, 102, 59, 3, 55349, 56651, 105, 112, 108, 101, 68, 111, 116, 59, 1, 8411, 4, 2, 99, 116, 5717, 5722, 114, 59, 3, 55349, 56495, 114, 111, 107, 59, 1, 358, 4, 14, 97, 98, 99, 100, 102, 103, 109, 110, 111, 112, 114, 115, 116, 117, 5758, 5789, 5805, 5823, 5830, 5835, 5846, 5852, 5921, 5937, 6089, 6095, 6101, 6108, 4, 2, 99, 114, 5764, 5774, 117, 116, 101, 5, 218, 1, 59, 5772, 1, 218, 114, 4, 2, 59, 111, 5781, 5783, 1, 8607, 99, 105, 114, 59, 1, 10569, 114, 4, 2, 99, 101, 5796, 5800, 121, 59, 1, 1038, 118, 101, 59, 1, 364, 4, 2, 105, 121, 5811, 5820, 114, 99, 5, 219, 1, 59, 5818, 1, 219, 59, 1, 1059, 98, 108, 97, 99, 59, 1, 368, 114, 59, 3, 55349, 56600, 114, 97, 118, 101, 5, 217, 1, 59, 5844, 1, 217, 97, 99, 114, 59, 1, 362, 4, 2, 100, 105, 5858, 5905, 101, 114, 4, 2, 66, 80, 5866, 5892, 4, 2, 97, 114, 5872, 5876, 114, 59, 1, 95, 97, 99, 4, 2, 101, 107, 5884, 5887, 59, 1, 9183, 101, 116, 59, 1, 9141, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9181, 111, 110, 4, 2, 59, 80, 5913, 5915, 1, 8899, 108, 117, 115, 59, 1, 8846, 4, 2, 103, 112, 5927, 5932, 111, 110, 59, 1, 370, 102, 59, 3, 55349, 56652, 4, 8, 65, 68, 69, 84, 97, 100, 112, 115, 5955, 5985, 5996, 6009, 6026, 6033, 6044, 6075, 114, 114, 111, 119, 4, 3, 59, 66, 68, 5967, 5969, 5974, 1, 8593, 97, 114, 59, 1, 10514, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8645, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8597, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10606, 101, 101, 4, 2, 59, 65, 6017, 6019, 1, 8869, 114, 114, 111, 119, 59, 1, 8613, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 4, 2, 76, 82, 6052, 6063, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8598, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8599, 105, 4, 2, 59, 108, 6082, 6084, 1, 978, 111, 110, 59, 1, 933, 105, 110, 103, 59, 1, 366, 99, 114, 59, 3, 55349, 56496, 105, 108, 100, 101, 59, 1, 360, 109, 108, 5, 220, 1, 59, 6115, 1, 220, 4, 9, 68, 98, 99, 100, 101, 102, 111, 115, 118, 6137, 6143, 6148, 6152, 6166, 6250, 6255, 6261, 6267, 97, 115, 104, 59, 1, 8875, 97, 114, 59, 1, 10987, 121, 59, 1, 1042, 97, 115, 104, 4, 2, 59, 108, 6161, 6163, 1, 8873, 59, 1, 10982, 4, 2, 101, 114, 6172, 6175, 59, 1, 8897, 4, 3, 98, 116, 121, 6183, 6188, 6238, 97, 114, 59, 1, 8214, 4, 2, 59, 105, 6194, 6196, 1, 8214, 99, 97, 108, 4, 4, 66, 76, 83, 84, 6209, 6214, 6220, 6231, 97, 114, 59, 1, 8739, 105, 110, 101, 59, 1, 124, 101, 112, 97, 114, 97, 116, 111, 114, 59, 1, 10072, 105, 108, 100, 101, 59, 1, 8768, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8202, 114, 59, 3, 55349, 56601, 112, 102, 59, 3, 55349, 56653, 99, 114, 59, 3, 55349, 56497, 100, 97, 115, 104, 59, 1, 8874, 4, 5, 99, 101, 102, 111, 115, 6286, 6292, 6298, 6303, 6309, 105, 114, 99, 59, 1, 372, 100, 103, 101, 59, 1, 8896, 114, 59, 3, 55349, 56602, 112, 102, 59, 3, 55349, 56654, 99, 114, 59, 3, 55349, 56498, 4, 4, 102, 105, 111, 115, 6325, 6330, 6333, 6339, 114, 59, 3, 55349, 56603, 59, 1, 926, 112, 102, 59, 3, 55349, 56655, 99, 114, 59, 3, 55349, 56499, 4, 9, 65, 73, 85, 97, 99, 102, 111, 115, 117, 6365, 6370, 6375, 6380, 6391, 6405, 6410, 6416, 6422, 99, 121, 59, 1, 1071, 99, 121, 59, 1, 1031, 99, 121, 59, 1, 1070, 99, 117, 116, 101, 5, 221, 1, 59, 6389, 1, 221, 4, 2, 105, 121, 6397, 6402, 114, 99, 59, 1, 374, 59, 1, 1067, 114, 59, 3, 55349, 56604, 112, 102, 59, 3, 55349, 56656, 99, 114, 59, 3, 55349, 56500, 109, 108, 59, 1, 376, 4, 8, 72, 97, 99, 100, 101, 102, 111, 115, 6445, 6450, 6457, 6472, 6477, 6501, 6505, 6510, 99, 121, 59, 1, 1046, 99, 117, 116, 101, 59, 1, 377, 4, 2, 97, 121, 6463, 6469, 114, 111, 110, 59, 1, 381, 59, 1, 1047, 111, 116, 59, 1, 379, 4, 2, 114, 116, 6483, 6497, 111, 87, 105, 100, 116, 104, 83, 112, 97, 99, 101, 59, 1, 8203, 97, 59, 1, 918, 114, 59, 1, 8488, 112, 102, 59, 1, 8484, 99, 114, 59, 3, 55349, 56501, 4, 16, 97, 98, 99, 101, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 6550, 6561, 6568, 6612, 6622, 6634, 6645, 6672, 6699, 6854, 6870, 6923, 6933, 6963, 6974, 6983, 99, 117, 116, 101, 5, 225, 1, 59, 6559, 1, 225, 114, 101, 118, 101, 59, 1, 259, 4, 6, 59, 69, 100, 105, 117, 121, 6582, 6584, 6588, 6591, 6600, 6609, 1, 8766, 59, 3, 8766, 819, 59, 1, 8767, 114, 99, 5, 226, 1, 59, 6598, 1, 226, 116, 101, 5, 180, 1, 59, 6607, 1, 180, 59, 1, 1072, 108, 105, 103, 5, 230, 1, 59, 6620, 1, 230, 4, 2, 59, 114, 6628, 6630, 1, 8289, 59, 3, 55349, 56606, 114, 97, 118, 101, 5, 224, 1, 59, 6643, 1, 224, 4, 2, 101, 112, 6651, 6667, 4, 2, 102, 112, 6657, 6663, 115, 121, 109, 59, 1, 8501, 104, 59, 1, 8501, 104, 97, 59, 1, 945, 4, 2, 97, 112, 6678, 6692, 4, 2, 99, 108, 6684, 6688, 114, 59, 1, 257, 103, 59, 1, 10815, 5, 38, 1, 59, 6697, 1, 38, 4, 2, 100, 103, 6705, 6737, 4, 5, 59, 97, 100, 115, 118, 6717, 6719, 6724, 6727, 6734, 1, 8743, 110, 100, 59, 1, 10837, 59, 1, 10844, 108, 111, 112, 101, 59, 1, 10840, 59, 1, 10842, 4, 7, 59, 101, 108, 109, 114, 115, 122, 6753, 6755, 6758, 6762, 6814, 6835, 6848, 1, 8736, 59, 1, 10660, 101, 59, 1, 8736, 115, 100, 4, 2, 59, 97, 6770, 6772, 1, 8737, 4, 8, 97, 98, 99, 100, 101, 102, 103, 104, 6790, 6793, 6796, 6799, 6802, 6805, 6808, 6811, 59, 1, 10664, 59, 1, 10665, 59, 1, 10666, 59, 1, 10667, 59, 1, 10668, 59, 1, 10669, 59, 1, 10670, 59, 1, 10671, 116, 4, 2, 59, 118, 6821, 6823, 1, 8735, 98, 4, 2, 59, 100, 6830, 6832, 1, 8894, 59, 1, 10653, 4, 2, 112, 116, 6841, 6845, 104, 59, 1, 8738, 59, 1, 197, 97, 114, 114, 59, 1, 9084, 4, 2, 103, 112, 6860, 6865, 111, 110, 59, 1, 261, 102, 59, 3, 55349, 56658, 4, 7, 59, 69, 97, 101, 105, 111, 112, 6886, 6888, 6891, 6897, 6900, 6904, 6908, 1, 8776, 59, 1, 10864, 99, 105, 114, 59, 1, 10863, 59, 1, 8778, 100, 59, 1, 8779, 115, 59, 1, 39, 114, 111, 120, 4, 2, 59, 101, 6917, 6919, 1, 8776, 113, 59, 1, 8778, 105, 110, 103, 5, 229, 1, 59, 6931, 1, 229, 4, 3, 99, 116, 121, 6941, 6946, 6949, 114, 59, 3, 55349, 56502, 59, 1, 42, 109, 112, 4, 2, 59, 101, 6957, 6959, 1, 8776, 113, 59, 1, 8781, 105, 108, 100, 101, 5, 227, 1, 59, 6972, 1, 227, 109, 108, 5, 228, 1, 59, 6981, 1, 228, 4, 2, 99, 105, 6989, 6997, 111, 110, 105, 110, 116, 59, 1, 8755, 110, 116, 59, 1, 10769, 4, 16, 78, 97, 98, 99, 100, 101, 102, 105, 107, 108, 110, 111, 112, 114, 115, 117, 7036, 7041, 7119, 7135, 7149, 7155, 7219, 7224, 7347, 7354, 7463, 7489, 7786, 7793, 7814, 7866, 111, 116, 59, 1, 10989, 4, 2, 99, 114, 7047, 7094, 107, 4, 4, 99, 101, 112, 115, 7058, 7064, 7073, 7080, 111, 110, 103, 59, 1, 8780, 112, 115, 105, 108, 111, 110, 59, 1, 1014, 114, 105, 109, 101, 59, 1, 8245, 105, 109, 4, 2, 59, 101, 7088, 7090, 1, 8765, 113, 59, 1, 8909, 4, 2, 118, 119, 7100, 7105, 101, 101, 59, 1, 8893, 101, 100, 4, 2, 59, 103, 7113, 7115, 1, 8965, 101, 59, 1, 8965, 114, 107, 4, 2, 59, 116, 7127, 7129, 1, 9141, 98, 114, 107, 59, 1, 9142, 4, 2, 111, 121, 7141, 7146, 110, 103, 59, 1, 8780, 59, 1, 1073, 113, 117, 111, 59, 1, 8222, 4, 5, 99, 109, 112, 114, 116, 7167, 7181, 7188, 7193, 7199, 97, 117, 115, 4, 2, 59, 101, 7176, 7178, 1, 8757, 59, 1, 8757, 112, 116, 121, 118, 59, 1, 10672, 115, 105, 59, 1, 1014, 110, 111, 117, 59, 1, 8492, 4, 3, 97, 104, 119, 7207, 7210, 7213, 59, 1, 946, 59, 1, 8502, 101, 101, 110, 59, 1, 8812, 114, 59, 3, 55349, 56607, 103, 4, 7, 99, 111, 115, 116, 117, 118, 119, 7241, 7262, 7288, 7305, 7328, 7335, 7340, 4, 3, 97, 105, 117, 7249, 7253, 7258, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 4, 3, 100, 112, 116, 7270, 7275, 7281, 111, 116, 59, 1, 10752, 108, 117, 115, 59, 1, 10753, 105, 109, 101, 115, 59, 1, 10754, 4, 2, 113, 116, 7294, 7300, 99, 117, 112, 59, 1, 10758, 97, 114, 59, 1, 9733, 114, 105, 97, 110, 103, 108, 101, 4, 2, 100, 117, 7318, 7324, 111, 119, 110, 59, 1, 9661, 112, 59, 1, 9651, 112, 108, 117, 115, 59, 1, 10756, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 97, 114, 111, 119, 59, 1, 10509, 4, 3, 97, 107, 111, 7362, 7436, 7458, 4, 2, 99, 110, 7368, 7432, 107, 4, 3, 108, 115, 116, 7377, 7386, 7394, 111, 122, 101, 110, 103, 101, 59, 1, 10731, 113, 117, 97, 114, 101, 59, 1, 9642, 114, 105, 97, 110, 103, 108, 101, 4, 4, 59, 100, 108, 114, 7411, 7413, 7419, 7425, 1, 9652, 111, 119, 110, 59, 1, 9662, 101, 102, 116, 59, 1, 9666, 105, 103, 104, 116, 59, 1, 9656, 107, 59, 1, 9251, 4, 2, 49, 51, 7442, 7454, 4, 2, 50, 52, 7448, 7451, 59, 1, 9618, 59, 1, 9617, 52, 59, 1, 9619, 99, 107, 59, 1, 9608, 4, 2, 101, 111, 7469, 7485, 4, 2, 59, 113, 7475, 7478, 3, 61, 8421, 117, 105, 118, 59, 3, 8801, 8421, 116, 59, 1, 8976, 4, 4, 112, 116, 119, 120, 7499, 7504, 7517, 7523, 102, 59, 3, 55349, 56659, 4, 2, 59, 116, 7510, 7512, 1, 8869, 111, 109, 59, 1, 8869, 116, 105, 101, 59, 1, 8904, 4, 12, 68, 72, 85, 86, 98, 100, 104, 109, 112, 116, 117, 118, 7549, 7571, 7597, 7619, 7655, 7660, 7682, 7708, 7715, 7721, 7728, 7750, 4, 4, 76, 82, 108, 114, 7559, 7562, 7565, 7568, 59, 1, 9559, 59, 1, 9556, 59, 1, 9558, 59, 1, 9555, 4, 5, 59, 68, 85, 100, 117, 7583, 7585, 7588, 7591, 7594, 1, 9552, 59, 1, 9574, 59, 1, 9577, 59, 1, 9572, 59, 1, 9575, 4, 4, 76, 82, 108, 114, 7607, 7610, 7613, 7616, 59, 1, 9565, 59, 1, 9562, 59, 1, 9564, 59, 1, 9561, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7635, 7637, 7640, 7643, 7646, 7649, 7652, 1, 9553, 59, 1, 9580, 59, 1, 9571, 59, 1, 9568, 59, 1, 9579, 59, 1, 9570, 59, 1, 9567, 111, 120, 59, 1, 10697, 4, 4, 76, 82, 108, 114, 7670, 7673, 7676, 7679, 59, 1, 9557, 59, 1, 9554, 59, 1, 9488, 59, 1, 9484, 4, 5, 59, 68, 85, 100, 117, 7694, 7696, 7699, 7702, 7705, 1, 9472, 59, 1, 9573, 59, 1, 9576, 59, 1, 9516, 59, 1, 9524, 105, 110, 117, 115, 59, 1, 8863, 108, 117, 115, 59, 1, 8862, 105, 109, 101, 115, 59, 1, 8864, 4, 4, 76, 82, 108, 114, 7738, 7741, 7744, 7747, 59, 1, 9563, 59, 1, 9560, 59, 1, 9496, 59, 1, 9492, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7766, 7768, 7771, 7774, 7777, 7780, 7783, 1, 9474, 59, 1, 9578, 59, 1, 9569, 59, 1, 9566, 59, 1, 9532, 59, 1, 9508, 59, 1, 9500, 114, 105, 109, 101, 59, 1, 8245, 4, 2, 101, 118, 7799, 7804, 118, 101, 59, 1, 728, 98, 97, 114, 5, 166, 1, 59, 7812, 1, 166, 4, 4, 99, 101, 105, 111, 7824, 7829, 7834, 7846, 114, 59, 3, 55349, 56503, 109, 105, 59, 1, 8271, 109, 4, 2, 59, 101, 7841, 7843, 1, 8765, 59, 1, 8909, 108, 4, 3, 59, 98, 104, 7855, 7857, 7860, 1, 92, 59, 1, 10693, 115, 117, 98, 59, 1, 10184, 4, 2, 108, 109, 7872, 7885, 108, 4, 2, 59, 101, 7879, 7881, 1, 8226, 116, 59, 1, 8226, 112, 4, 3, 59, 69, 101, 7894, 7896, 7899, 1, 8782, 59, 1, 10926, 4, 2, 59, 113, 7905, 7907, 1, 8783, 59, 1, 8783, 4, 15, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 116, 117, 119, 121, 7942, 8021, 8075, 8080, 8121, 8126, 8157, 8279, 8295, 8430, 8446, 8485, 8491, 8707, 8726, 4, 3, 99, 112, 114, 7950, 7956, 8007, 117, 116, 101, 59, 1, 263, 4, 6, 59, 97, 98, 99, 100, 115, 7970, 7972, 7977, 7984, 7998, 8003, 1, 8745, 110, 100, 59, 1, 10820, 114, 99, 117, 112, 59, 1, 10825, 4, 2, 97, 117, 7990, 7994, 112, 59, 1, 10827, 112, 59, 1, 10823, 111, 116, 59, 1, 10816, 59, 3, 8745, 65024, 4, 2, 101, 111, 8013, 8017, 116, 59, 1, 8257, 110, 59, 1, 711, 4, 4, 97, 101, 105, 117, 8031, 8046, 8056, 8061, 4, 2, 112, 114, 8037, 8041, 115, 59, 1, 10829, 111, 110, 59, 1, 269, 100, 105, 108, 5, 231, 1, 59, 8054, 1, 231, 114, 99, 59, 1, 265, 112, 115, 4, 2, 59, 115, 8069, 8071, 1, 10828, 109, 59, 1, 10832, 111, 116, 59, 1, 267, 4, 3, 100, 109, 110, 8088, 8097, 8104, 105, 108, 5, 184, 1, 59, 8095, 1, 184, 112, 116, 121, 118, 59, 1, 10674, 116, 5, 162, 2, 59, 101, 8112, 8114, 1, 162, 114, 100, 111, 116, 59, 1, 183, 114, 59, 3, 55349, 56608, 4, 3, 99, 101, 105, 8134, 8138, 8154, 121, 59, 1, 1095, 99, 107, 4, 2, 59, 109, 8146, 8148, 1, 10003, 97, 114, 107, 59, 1, 10003, 59, 1, 967, 114, 4, 7, 59, 69, 99, 101, 102, 109, 115, 8174, 8176, 8179, 8258, 8261, 8268, 8273, 1, 9675, 59, 1, 10691, 4, 3, 59, 101, 108, 8187, 8189, 8193, 1, 710, 113, 59, 1, 8791, 101, 4, 2, 97, 100, 8200, 8223, 114, 114, 111, 119, 4, 2, 108, 114, 8210, 8216, 101, 102, 116, 59, 1, 8634, 105, 103, 104, 116, 59, 1, 8635, 4, 5, 82, 83, 97, 99, 100, 8235, 8238, 8241, 8246, 8252, 59, 1, 174, 59, 1, 9416, 115, 116, 59, 1, 8859, 105, 114, 99, 59, 1, 8858, 97, 115, 104, 59, 1, 8861, 59, 1, 8791, 110, 105, 110, 116, 59, 1, 10768, 105, 100, 59, 1, 10991, 99, 105, 114, 59, 1, 10690, 117, 98, 115, 4, 2, 59, 117, 8288, 8290, 1, 9827, 105, 116, 59, 1, 9827, 4, 4, 108, 109, 110, 112, 8305, 8326, 8376, 8400, 111, 110, 4, 2, 59, 101, 8313, 8315, 1, 58, 4, 2, 59, 113, 8321, 8323, 1, 8788, 59, 1, 8788, 4, 2, 109, 112, 8332, 8344, 97, 4, 2, 59, 116, 8339, 8341, 1, 44, 59, 1, 64, 4, 3, 59, 102, 108, 8352, 8354, 8358, 1, 8705, 110, 59, 1, 8728, 101, 4, 2, 109, 120, 8365, 8371, 101, 110, 116, 59, 1, 8705, 101, 115, 59, 1, 8450, 4, 2, 103, 105, 8382, 8395, 4, 2, 59, 100, 8388, 8390, 1, 8773, 111, 116, 59, 1, 10861, 110, 116, 59, 1, 8750, 4, 3, 102, 114, 121, 8408, 8412, 8417, 59, 3, 55349, 56660, 111, 100, 59, 1, 8720, 5, 169, 2, 59, 115, 8424, 8426, 1, 169, 114, 59, 1, 8471, 4, 2, 97, 111, 8436, 8441, 114, 114, 59, 1, 8629, 115, 115, 59, 1, 10007, 4, 2, 99, 117, 8452, 8457, 114, 59, 3, 55349, 56504, 4, 2, 98, 112, 8463, 8474, 4, 2, 59, 101, 8469, 8471, 1, 10959, 59, 1, 10961, 4, 2, 59, 101, 8480, 8482, 1, 10960, 59, 1, 10962, 100, 111, 116, 59, 1, 8943, 4, 7, 100, 101, 108, 112, 114, 118, 119, 8507, 8522, 8536, 8550, 8600, 8697, 8702, 97, 114, 114, 4, 2, 108, 114, 8516, 8519, 59, 1, 10552, 59, 1, 10549, 4, 2, 112, 115, 8528, 8532, 114, 59, 1, 8926, 99, 59, 1, 8927, 97, 114, 114, 4, 2, 59, 112, 8545, 8547, 1, 8630, 59, 1, 10557, 4, 6, 59, 98, 99, 100, 111, 115, 8564, 8566, 8573, 8587, 8592, 8596, 1, 8746, 114, 99, 97, 112, 59, 1, 10824, 4, 2, 97, 117, 8579, 8583, 112, 59, 1, 10822, 112, 59, 1, 10826, 111, 116, 59, 1, 8845, 114, 59, 1, 10821, 59, 3, 8746, 65024, 4, 4, 97, 108, 114, 118, 8610, 8623, 8663, 8672, 114, 114, 4, 2, 59, 109, 8618, 8620, 1, 8631, 59, 1, 10556, 121, 4, 3, 101, 118, 119, 8632, 8651, 8656, 113, 4, 2, 112, 115, 8639, 8645, 114, 101, 99, 59, 1, 8926, 117, 99, 99, 59, 1, 8927, 101, 101, 59, 1, 8910, 101, 100, 103, 101, 59, 1, 8911, 101, 110, 5, 164, 1, 59, 8670, 1, 164, 101, 97, 114, 114, 111, 119, 4, 2, 108, 114, 8684, 8690, 101, 102, 116, 59, 1, 8630, 105, 103, 104, 116, 59, 1, 8631, 101, 101, 59, 1, 8910, 101, 100, 59, 1, 8911, 4, 2, 99, 105, 8713, 8721, 111, 110, 105, 110, 116, 59, 1, 8754, 110, 116, 59, 1, 8753, 108, 99, 116, 121, 59, 1, 9005, 4, 19, 65, 72, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 114, 115, 116, 117, 119, 122, 8773, 8778, 8783, 8821, 8839, 8854, 8887, 8914, 8930, 8944, 9036, 9041, 9058, 9197, 9227, 9258, 9281, 9297, 9305, 114, 114, 59, 1, 8659, 97, 114, 59, 1, 10597, 4, 4, 103, 108, 114, 115, 8793, 8799, 8805, 8809, 103, 101, 114, 59, 1, 8224, 101, 116, 104, 59, 1, 8504, 114, 59, 1, 8595, 104, 4, 2, 59, 118, 8816, 8818, 1, 8208, 59, 1, 8867, 4, 2, 107, 108, 8827, 8834, 97, 114, 111, 119, 59, 1, 10511, 97, 99, 59, 1, 733, 4, 2, 97, 121, 8845, 8851, 114, 111, 110, 59, 1, 271, 59, 1, 1076, 4, 3, 59, 97, 111, 8862, 8864, 8880, 1, 8518, 4, 2, 103, 114, 8870, 8876, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8650, 116, 115, 101, 113, 59, 1, 10871, 4, 3, 103, 108, 109, 8895, 8902, 8907, 5, 176, 1, 59, 8900, 1, 176, 116, 97, 59, 1, 948, 112, 116, 121, 118, 59, 1, 10673, 4, 2, 105, 114, 8920, 8926, 115, 104, 116, 59, 1, 10623, 59, 3, 55349, 56609, 97, 114, 4, 2, 108, 114, 8938, 8941, 59, 1, 8643, 59, 1, 8642, 4, 5, 97, 101, 103, 115, 118, 8956, 8986, 8989, 8996, 9001, 109, 4, 3, 59, 111, 115, 8965, 8967, 8983, 1, 8900, 110, 100, 4, 2, 59, 115, 8975, 8977, 1, 8900, 117, 105, 116, 59, 1, 9830, 59, 1, 9830, 59, 1, 168, 97, 109, 109, 97, 59, 1, 989, 105, 110, 59, 1, 8946, 4, 3, 59, 105, 111, 9009, 9011, 9031, 1, 247, 100, 101, 5, 247, 2, 59, 111, 9020, 9022, 1, 247, 110, 116, 105, 109, 101, 115, 59, 1, 8903, 110, 120, 59, 1, 8903, 99, 121, 59, 1, 1106, 99, 4, 2, 111, 114, 9048, 9053, 114, 110, 59, 1, 8990, 111, 112, 59, 1, 8973, 4, 5, 108, 112, 116, 117, 119, 9070, 9076, 9081, 9130, 9144, 108, 97, 114, 59, 1, 36, 102, 59, 3, 55349, 56661, 4, 5, 59, 101, 109, 112, 115, 9093, 9095, 9109, 9116, 9122, 1, 729, 113, 4, 2, 59, 100, 9102, 9104, 1, 8784, 111, 116, 59, 1, 8785, 105, 110, 117, 115, 59, 1, 8760, 108, 117, 115, 59, 1, 8724, 113, 117, 97, 114, 101, 59, 1, 8865, 98, 108, 101, 98, 97, 114, 119, 101, 100, 103, 101, 59, 1, 8966, 110, 4, 3, 97, 100, 104, 9153, 9160, 9172, 114, 114, 111, 119, 59, 1, 8595, 111, 119, 110, 97, 114, 114, 111, 119, 115, 59, 1, 8650, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 9184, 9190, 101, 102, 116, 59, 1, 8643, 105, 103, 104, 116, 59, 1, 8642, 4, 2, 98, 99, 9203, 9211, 107, 97, 114, 111, 119, 59, 1, 10512, 4, 2, 111, 114, 9217, 9222, 114, 110, 59, 1, 8991, 111, 112, 59, 1, 8972, 4, 3, 99, 111, 116, 9235, 9248, 9252, 4, 2, 114, 121, 9241, 9245, 59, 3, 55349, 56505, 59, 1, 1109, 108, 59, 1, 10742, 114, 111, 107, 59, 1, 273, 4, 2, 100, 114, 9264, 9269, 111, 116, 59, 1, 8945, 105, 4, 2, 59, 102, 9276, 9278, 1, 9663, 59, 1, 9662, 4, 2, 97, 104, 9287, 9292, 114, 114, 59, 1, 8693, 97, 114, 59, 1, 10607, 97, 110, 103, 108, 101, 59, 1, 10662, 4, 2, 99, 105, 9311, 9315, 121, 59, 1, 1119, 103, 114, 97, 114, 114, 59, 1, 10239, 4, 18, 68, 97, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 9361, 9376, 9398, 9439, 9444, 9447, 9462, 9495, 9531, 9585, 9598, 9614, 9659, 9755, 9771, 9792, 9808, 9826, 4, 2, 68, 111, 9367, 9372, 111, 116, 59, 1, 10871, 116, 59, 1, 8785, 4, 2, 99, 115, 9382, 9392, 117, 116, 101, 5, 233, 1, 59, 9390, 1, 233, 116, 101, 114, 59, 1, 10862, 4, 4, 97, 105, 111, 121, 9408, 9414, 9430, 9436, 114, 111, 110, 59, 1, 283, 114, 4, 2, 59, 99, 9421, 9423, 1, 8790, 5, 234, 1, 59, 9428, 1, 234, 108, 111, 110, 59, 1, 8789, 59, 1, 1101, 111, 116, 59, 1, 279, 59, 1, 8519, 4, 2, 68, 114, 9453, 9458, 111, 116, 59, 1, 8786, 59, 3, 55349, 56610, 4, 3, 59, 114, 115, 9470, 9472, 9482, 1, 10906, 97, 118, 101, 5, 232, 1, 59, 9480, 1, 232, 4, 2, 59, 100, 9488, 9490, 1, 10902, 111, 116, 59, 1, 10904, 4, 4, 59, 105, 108, 115, 9505, 9507, 9515, 9518, 1, 10905, 110, 116, 101, 114, 115, 59, 1, 9191, 59, 1, 8467, 4, 2, 59, 100, 9524, 9526, 1, 10901, 111, 116, 59, 1, 10903, 4, 3, 97, 112, 115, 9539, 9544, 9564, 99, 114, 59, 1, 275, 116, 121, 4, 3, 59, 115, 118, 9554, 9556, 9561, 1, 8709, 101, 116, 59, 1, 8709, 59, 1, 8709, 112, 4, 2, 49, 59, 9571, 9583, 4, 2, 51, 52, 9577, 9580, 59, 1, 8196, 59, 1, 8197, 1, 8195, 4, 2, 103, 115, 9591, 9594, 59, 1, 331, 112, 59, 1, 8194, 4, 2, 103, 112, 9604, 9609, 111, 110, 59, 1, 281, 102, 59, 3, 55349, 56662, 4, 3, 97, 108, 115, 9622, 9635, 9640, 114, 4, 2, 59, 115, 9629, 9631, 1, 8917, 108, 59, 1, 10723, 117, 115, 59, 1, 10865, 105, 4, 3, 59, 108, 118, 9649, 9651, 9656, 1, 949, 111, 110, 59, 1, 949, 59, 1, 1013, 4, 4, 99, 115, 117, 118, 9669, 9686, 9716, 9747, 4, 2, 105, 111, 9675, 9680, 114, 99, 59, 1, 8790, 108, 111, 110, 59, 1, 8789, 4, 2, 105, 108, 9692, 9696, 109, 59, 1, 8770, 97, 110, 116, 4, 2, 103, 108, 9705, 9710, 116, 114, 59, 1, 10902, 101, 115, 115, 59, 1, 10901, 4, 3, 97, 101, 105, 9724, 9729, 9734, 108, 115, 59, 1, 61, 115, 116, 59, 1, 8799, 118, 4, 2, 59, 68, 9741, 9743, 1, 8801, 68, 59, 1, 10872, 112, 97, 114, 115, 108, 59, 1, 10725, 4, 2, 68, 97, 9761, 9766, 111, 116, 59, 1, 8787, 114, 114, 59, 1, 10609, 4, 3, 99, 100, 105, 9779, 9783, 9788, 114, 59, 1, 8495, 111, 116, 59, 1, 8784, 109, 59, 1, 8770, 4, 2, 97, 104, 9798, 9801, 59, 1, 951, 5, 240, 1, 59, 9806, 1, 240, 4, 2, 109, 114, 9814, 9822, 108, 5, 235, 1, 59, 9820, 1, 235, 111, 59, 1, 8364, 4, 3, 99, 105, 112, 9834, 9838, 9843, 108, 59, 1, 33, 115, 116, 59, 1, 8707, 4, 2, 101, 111, 9849, 9859, 99, 116, 97, 116, 105, 111, 110, 59, 1, 8496, 110, 101, 110, 116, 105, 97, 108, 101, 59, 1, 8519, 4, 12, 97, 99, 101, 102, 105, 106, 108, 110, 111, 112, 114, 115, 9896, 9910, 9914, 9921, 9954, 9960, 9967, 9989, 9994, 10027, 10036, 10164, 108, 108, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8786, 121, 59, 1, 1092, 109, 97, 108, 101, 59, 1, 9792, 4, 3, 105, 108, 114, 9929, 9935, 9950, 108, 105, 103, 59, 1, 64259, 4, 2, 105, 108, 9941, 9945, 103, 59, 1, 64256, 105, 103, 59, 1, 64260, 59, 3, 55349, 56611, 108, 105, 103, 59, 1, 64257, 108, 105, 103, 59, 3, 102, 106, 4, 3, 97, 108, 116, 9975, 9979, 9984, 116, 59, 1, 9837, 105, 103, 59, 1, 64258, 110, 115, 59, 1, 9649, 111, 102, 59, 1, 402, 4, 2, 112, 114, 1e4, 10005, 102, 59, 3, 55349, 56663, 4, 2, 97, 107, 10011, 10016, 108, 108, 59, 1, 8704, 4, 2, 59, 118, 10022, 10024, 1, 8916, 59, 1, 10969, 97, 114, 116, 105, 110, 116, 59, 1, 10765, 4, 2, 97, 111, 10042, 10159, 4, 2, 99, 115, 10048, 10155, 4, 6, 49, 50, 51, 52, 53, 55, 10062, 10102, 10114, 10135, 10139, 10151, 4, 6, 50, 51, 52, 53, 54, 56, 10076, 10083, 10086, 10093, 10096, 10099, 5, 189, 1, 59, 10081, 1, 189, 59, 1, 8531, 5, 188, 1, 59, 10091, 1, 188, 59, 1, 8533, 59, 1, 8537, 59, 1, 8539, 4, 2, 51, 53, 10108, 10111, 59, 1, 8532, 59, 1, 8534, 4, 3, 52, 53, 56, 10122, 10129, 10132, 5, 190, 1, 59, 10127, 1, 190, 59, 1, 8535, 59, 1, 8540, 53, 59, 1, 8536, 4, 2, 54, 56, 10145, 10148, 59, 1, 8538, 59, 1, 8541, 56, 59, 1, 8542, 108, 59, 1, 8260, 119, 110, 59, 1, 8994, 99, 114, 59, 3, 55349, 56507, 4, 17, 69, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 114, 115, 116, 118, 10206, 10217, 10247, 10254, 10268, 10273, 10358, 10363, 10374, 10380, 10385, 10406, 10458, 10464, 10470, 10497, 10610, 4, 2, 59, 108, 10212, 10214, 1, 8807, 59, 1, 10892, 4, 3, 99, 109, 112, 10225, 10231, 10244, 117, 116, 101, 59, 1, 501, 109, 97, 4, 2, 59, 100, 10239, 10241, 1, 947, 59, 1, 989, 59, 1, 10886, 114, 101, 118, 101, 59, 1, 287, 4, 2, 105, 121, 10260, 10265, 114, 99, 59, 1, 285, 59, 1, 1075, 111, 116, 59, 1, 289, 4, 4, 59, 108, 113, 115, 10283, 10285, 10288, 10308, 1, 8805, 59, 1, 8923, 4, 3, 59, 113, 115, 10296, 10298, 10301, 1, 8805, 59, 1, 8807, 108, 97, 110, 116, 59, 1, 10878, 4, 4, 59, 99, 100, 108, 10318, 10320, 10324, 10345, 1, 10878, 99, 59, 1, 10921, 111, 116, 4, 2, 59, 111, 10332, 10334, 1, 10880, 4, 2, 59, 108, 10340, 10342, 1, 10882, 59, 1, 10884, 4, 2, 59, 101, 10351, 10354, 3, 8923, 65024, 115, 59, 1, 10900, 114, 59, 3, 55349, 56612, 4, 2, 59, 103, 10369, 10371, 1, 8811, 59, 1, 8921, 109, 101, 108, 59, 1, 8503, 99, 121, 59, 1, 1107, 4, 4, 59, 69, 97, 106, 10395, 10397, 10400, 10403, 1, 8823, 59, 1, 10898, 59, 1, 10917, 59, 1, 10916, 4, 4, 69, 97, 101, 115, 10416, 10419, 10434, 10453, 59, 1, 8809, 112, 4, 2, 59, 112, 10426, 10428, 1, 10890, 114, 111, 120, 59, 1, 10890, 4, 2, 59, 113, 10440, 10442, 1, 10888, 4, 2, 59, 113, 10448, 10450, 1, 10888, 59, 1, 8809, 105, 109, 59, 1, 8935, 112, 102, 59, 3, 55349, 56664, 97, 118, 101, 59, 1, 96, 4, 2, 99, 105, 10476, 10480, 114, 59, 1, 8458, 109, 4, 3, 59, 101, 108, 10489, 10491, 10494, 1, 8819, 59, 1, 10894, 59, 1, 10896, 5, 62, 6, 59, 99, 100, 108, 113, 114, 10512, 10514, 10527, 10532, 10538, 10545, 1, 62, 4, 2, 99, 105, 10520, 10523, 59, 1, 10919, 114, 59, 1, 10874, 111, 116, 59, 1, 8919, 80, 97, 114, 59, 1, 10645, 117, 101, 115, 116, 59, 1, 10876, 4, 5, 97, 100, 101, 108, 115, 10557, 10574, 10579, 10599, 10605, 4, 2, 112, 114, 10563, 10570, 112, 114, 111, 120, 59, 1, 10886, 114, 59, 1, 10616, 111, 116, 59, 1, 8919, 113, 4, 2, 108, 113, 10586, 10592, 101, 115, 115, 59, 1, 8923, 108, 101, 115, 115, 59, 1, 10892, 101, 115, 115, 59, 1, 8823, 105, 109, 59, 1, 8819, 4, 2, 101, 110, 10616, 10626, 114, 116, 110, 101, 113, 113, 59, 3, 8809, 65024, 69, 59, 3, 8809, 65024, 4, 10, 65, 97, 98, 99, 101, 102, 107, 111, 115, 121, 10653, 10658, 10713, 10718, 10724, 10760, 10765, 10786, 10850, 10875, 114, 114, 59, 1, 8660, 4, 4, 105, 108, 109, 114, 10668, 10674, 10678, 10684, 114, 115, 112, 59, 1, 8202, 102, 59, 1, 189, 105, 108, 116, 59, 1, 8459, 4, 2, 100, 114, 10690, 10695, 99, 121, 59, 1, 1098, 4, 3, 59, 99, 119, 10703, 10705, 10710, 1, 8596, 105, 114, 59, 1, 10568, 59, 1, 8621, 97, 114, 59, 1, 8463, 105, 114, 99, 59, 1, 293, 4, 3, 97, 108, 114, 10732, 10748, 10754, 114, 116, 115, 4, 2, 59, 117, 10741, 10743, 1, 9829, 105, 116, 59, 1, 9829, 108, 105, 112, 59, 1, 8230, 99, 111, 110, 59, 1, 8889, 114, 59, 3, 55349, 56613, 115, 4, 2, 101, 119, 10772, 10779, 97, 114, 111, 119, 59, 1, 10533, 97, 114, 111, 119, 59, 1, 10534, 4, 5, 97, 109, 111, 112, 114, 10798, 10803, 10809, 10839, 10844, 114, 114, 59, 1, 8703, 116, 104, 116, 59, 1, 8763, 107, 4, 2, 108, 114, 10816, 10827, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8617, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8618, 102, 59, 3, 55349, 56665, 98, 97, 114, 59, 1, 8213, 4, 3, 99, 108, 116, 10858, 10863, 10869, 114, 59, 3, 55349, 56509, 97, 115, 104, 59, 1, 8463, 114, 111, 107, 59, 1, 295, 4, 2, 98, 112, 10881, 10887, 117, 108, 108, 59, 1, 8259, 104, 101, 110, 59, 1, 8208, 4, 15, 97, 99, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 10925, 10936, 10958, 10977, 10990, 11001, 11039, 11045, 11101, 11192, 11220, 11226, 11237, 11285, 11299, 99, 117, 116, 101, 5, 237, 1, 59, 10934, 1, 237, 4, 3, 59, 105, 121, 10944, 10946, 10955, 1, 8291, 114, 99, 5, 238, 1, 59, 10953, 1, 238, 59, 1, 1080, 4, 2, 99, 120, 10964, 10968, 121, 59, 1, 1077, 99, 108, 5, 161, 1, 59, 10975, 1, 161, 4, 2, 102, 114, 10983, 10986, 59, 1, 8660, 59, 3, 55349, 56614, 114, 97, 118, 101, 5, 236, 1, 59, 10999, 1, 236, 4, 4, 59, 105, 110, 111, 11011, 11013, 11028, 11034, 1, 8520, 4, 2, 105, 110, 11019, 11024, 110, 116, 59, 1, 10764, 116, 59, 1, 8749, 102, 105, 110, 59, 1, 10716, 116, 97, 59, 1, 8489, 108, 105, 103, 59, 1, 307, 4, 3, 97, 111, 112, 11053, 11092, 11096, 4, 3, 99, 103, 116, 11061, 11065, 11088, 114, 59, 1, 299, 4, 3, 101, 108, 112, 11073, 11076, 11082, 59, 1, 8465, 105, 110, 101, 59, 1, 8464, 97, 114, 116, 59, 1, 8465, 104, 59, 1, 305, 102, 59, 1, 8887, 101, 100, 59, 1, 437, 4, 5, 59, 99, 102, 111, 116, 11113, 11115, 11121, 11136, 11142, 1, 8712, 97, 114, 101, 59, 1, 8453, 105, 110, 4, 2, 59, 116, 11129, 11131, 1, 8734, 105, 101, 59, 1, 10717, 100, 111, 116, 59, 1, 305, 4, 5, 59, 99, 101, 108, 112, 11154, 11156, 11161, 11179, 11186, 1, 8747, 97, 108, 59, 1, 8890, 4, 2, 103, 114, 11167, 11173, 101, 114, 115, 59, 1, 8484, 99, 97, 108, 59, 1, 8890, 97, 114, 104, 107, 59, 1, 10775, 114, 111, 100, 59, 1, 10812, 4, 4, 99, 103, 112, 116, 11202, 11206, 11211, 11216, 121, 59, 1, 1105, 111, 110, 59, 1, 303, 102, 59, 3, 55349, 56666, 97, 59, 1, 953, 114, 111, 100, 59, 1, 10812, 117, 101, 115, 116, 5, 191, 1, 59, 11235, 1, 191, 4, 2, 99, 105, 11243, 11248, 114, 59, 3, 55349, 56510, 110, 4, 5, 59, 69, 100, 115, 118, 11261, 11263, 11266, 11271, 11282, 1, 8712, 59, 1, 8953, 111, 116, 59, 1, 8949, 4, 2, 59, 118, 11277, 11279, 1, 8948, 59, 1, 8947, 59, 1, 8712, 4, 2, 59, 105, 11291, 11293, 1, 8290, 108, 100, 101, 59, 1, 297, 4, 2, 107, 109, 11305, 11310, 99, 121, 59, 1, 1110, 108, 5, 239, 1, 59, 11316, 1, 239, 4, 6, 99, 102, 109, 111, 115, 117, 11332, 11346, 11351, 11357, 11363, 11380, 4, 2, 105, 121, 11338, 11343, 114, 99, 59, 1, 309, 59, 1, 1081, 114, 59, 3, 55349, 56615, 97, 116, 104, 59, 1, 567, 112, 102, 59, 3, 55349, 56667, 4, 2, 99, 101, 11369, 11374, 114, 59, 3, 55349, 56511, 114, 99, 121, 59, 1, 1112, 107, 99, 121, 59, 1, 1108, 4, 8, 97, 99, 102, 103, 104, 106, 111, 115, 11404, 11418, 11433, 11438, 11445, 11450, 11455, 11461, 112, 112, 97, 4, 2, 59, 118, 11413, 11415, 1, 954, 59, 1, 1008, 4, 2, 101, 121, 11424, 11430, 100, 105, 108, 59, 1, 311, 59, 1, 1082, 114, 59, 3, 55349, 56616, 114, 101, 101, 110, 59, 1, 312, 99, 121, 59, 1, 1093, 99, 121, 59, 1, 1116, 112, 102, 59, 3, 55349, 56668, 99, 114, 59, 3, 55349, 56512, 4, 23, 65, 66, 69, 72, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 11515, 11538, 11544, 11555, 11560, 11721, 11780, 11818, 11868, 12136, 12160, 12171, 12203, 12208, 12246, 12275, 12327, 12509, 12523, 12569, 12641, 12732, 12752, 4, 3, 97, 114, 116, 11523, 11528, 11532, 114, 114, 59, 1, 8666, 114, 59, 1, 8656, 97, 105, 108, 59, 1, 10523, 97, 114, 114, 59, 1, 10510, 4, 2, 59, 103, 11550, 11552, 1, 8806, 59, 1, 10891, 97, 114, 59, 1, 10594, 4, 9, 99, 101, 103, 109, 110, 112, 113, 114, 116, 11580, 11586, 11594, 11600, 11606, 11624, 11627, 11636, 11694, 117, 116, 101, 59, 1, 314, 109, 112, 116, 121, 118, 59, 1, 10676, 114, 97, 110, 59, 1, 8466, 98, 100, 97, 59, 1, 955, 103, 4, 3, 59, 100, 108, 11615, 11617, 11620, 1, 10216, 59, 1, 10641, 101, 59, 1, 10216, 59, 1, 10885, 117, 111, 5, 171, 1, 59, 11634, 1, 171, 114, 4, 8, 59, 98, 102, 104, 108, 112, 115, 116, 11655, 11657, 11669, 11673, 11677, 11681, 11685, 11690, 1, 8592, 4, 2, 59, 102, 11663, 11665, 1, 8676, 115, 59, 1, 10527, 115, 59, 1, 10525, 107, 59, 1, 8617, 112, 59, 1, 8619, 108, 59, 1, 10553, 105, 109, 59, 1, 10611, 108, 59, 1, 8610, 4, 3, 59, 97, 101, 11702, 11704, 11709, 1, 10923, 105, 108, 59, 1, 10521, 4, 2, 59, 115, 11715, 11717, 1, 10925, 59, 3, 10925, 65024, 4, 3, 97, 98, 114, 11729, 11734, 11739, 114, 114, 59, 1, 10508, 114, 107, 59, 1, 10098, 4, 2, 97, 107, 11745, 11758, 99, 4, 2, 101, 107, 11752, 11755, 59, 1, 123, 59, 1, 91, 4, 2, 101, 115, 11764, 11767, 59, 1, 10635, 108, 4, 2, 100, 117, 11774, 11777, 59, 1, 10639, 59, 1, 10637, 4, 4, 97, 101, 117, 121, 11790, 11796, 11811, 11815, 114, 111, 110, 59, 1, 318, 4, 2, 100, 105, 11802, 11807, 105, 108, 59, 1, 316, 108, 59, 1, 8968, 98, 59, 1, 123, 59, 1, 1083, 4, 4, 99, 113, 114, 115, 11828, 11832, 11845, 11864, 97, 59, 1, 10550, 117, 111, 4, 2, 59, 114, 11840, 11842, 1, 8220, 59, 1, 8222, 4, 2, 100, 117, 11851, 11857, 104, 97, 114, 59, 1, 10599, 115, 104, 97, 114, 59, 1, 10571, 104, 59, 1, 8626, 4, 5, 59, 102, 103, 113, 115, 11880, 11882, 12008, 12011, 12031, 1, 8804, 116, 4, 5, 97, 104, 108, 114, 116, 11895, 11913, 11935, 11947, 11996, 114, 114, 111, 119, 4, 2, 59, 116, 11905, 11907, 1, 8592, 97, 105, 108, 59, 1, 8610, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 11925, 11931, 111, 119, 110, 59, 1, 8637, 112, 59, 1, 8636, 101, 102, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8647, 105, 103, 104, 116, 4, 3, 97, 104, 115, 11959, 11974, 11984, 114, 114, 111, 119, 4, 2, 59, 115, 11969, 11971, 1, 8596, 59, 1, 8646, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8651, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8621, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8907, 59, 1, 8922, 4, 3, 59, 113, 115, 12019, 12021, 12024, 1, 8804, 59, 1, 8806, 108, 97, 110, 116, 59, 1, 10877, 4, 5, 59, 99, 100, 103, 115, 12043, 12045, 12049, 12070, 12083, 1, 10877, 99, 59, 1, 10920, 111, 116, 4, 2, 59, 111, 12057, 12059, 1, 10879, 4, 2, 59, 114, 12065, 12067, 1, 10881, 59, 1, 10883, 4, 2, 59, 101, 12076, 12079, 3, 8922, 65024, 115, 59, 1, 10899, 4, 5, 97, 100, 101, 103, 115, 12095, 12103, 12108, 12126, 12131, 112, 112, 114, 111, 120, 59, 1, 10885, 111, 116, 59, 1, 8918, 113, 4, 2, 103, 113, 12115, 12120, 116, 114, 59, 1, 8922, 103, 116, 114, 59, 1, 10891, 116, 114, 59, 1, 8822, 105, 109, 59, 1, 8818, 4, 3, 105, 108, 114, 12144, 12150, 12156, 115, 104, 116, 59, 1, 10620, 111, 111, 114, 59, 1, 8970, 59, 3, 55349, 56617, 4, 2, 59, 69, 12166, 12168, 1, 8822, 59, 1, 10897, 4, 2, 97, 98, 12177, 12198, 114, 4, 2, 100, 117, 12184, 12187, 59, 1, 8637, 4, 2, 59, 108, 12193, 12195, 1, 8636, 59, 1, 10602, 108, 107, 59, 1, 9604, 99, 121, 59, 1, 1113, 4, 5, 59, 97, 99, 104, 116, 12220, 12222, 12227, 12235, 12241, 1, 8810, 114, 114, 59, 1, 8647, 111, 114, 110, 101, 114, 59, 1, 8990, 97, 114, 100, 59, 1, 10603, 114, 105, 59, 1, 9722, 4, 2, 105, 111, 12252, 12258, 100, 111, 116, 59, 1, 320, 117, 115, 116, 4, 2, 59, 97, 12267, 12269, 1, 9136, 99, 104, 101, 59, 1, 9136, 4, 4, 69, 97, 101, 115, 12285, 12288, 12303, 12322, 59, 1, 8808, 112, 4, 2, 59, 112, 12295, 12297, 1, 10889, 114, 111, 120, 59, 1, 10889, 4, 2, 59, 113, 12309, 12311, 1, 10887, 4, 2, 59, 113, 12317, 12319, 1, 10887, 59, 1, 8808, 105, 109, 59, 1, 8934, 4, 8, 97, 98, 110, 111, 112, 116, 119, 122, 12345, 12359, 12364, 12421, 12446, 12467, 12474, 12490, 4, 2, 110, 114, 12351, 12355, 103, 59, 1, 10220, 114, 59, 1, 8701, 114, 107, 59, 1, 10214, 103, 4, 3, 108, 109, 114, 12373, 12401, 12409, 101, 102, 116, 4, 2, 97, 114, 12382, 12389, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10231, 97, 112, 115, 116, 111, 59, 1, 10236, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10230, 112, 97, 114, 114, 111, 119, 4, 2, 108, 114, 12433, 12439, 101, 102, 116, 59, 1, 8619, 105, 103, 104, 116, 59, 1, 8620, 4, 3, 97, 102, 108, 12454, 12458, 12462, 114, 59, 1, 10629, 59, 3, 55349, 56669, 117, 115, 59, 1, 10797, 105, 109, 101, 115, 59, 1, 10804, 4, 2, 97, 98, 12480, 12485, 115, 116, 59, 1, 8727, 97, 114, 59, 1, 95, 4, 3, 59, 101, 102, 12498, 12500, 12506, 1, 9674, 110, 103, 101, 59, 1, 9674, 59, 1, 10731, 97, 114, 4, 2, 59, 108, 12517, 12519, 1, 40, 116, 59, 1, 10643, 4, 5, 97, 99, 104, 109, 116, 12535, 12540, 12548, 12561, 12564, 114, 114, 59, 1, 8646, 111, 114, 110, 101, 114, 59, 1, 8991, 97, 114, 4, 2, 59, 100, 12556, 12558, 1, 8651, 59, 1, 10605, 59, 1, 8206, 114, 105, 59, 1, 8895, 4, 6, 97, 99, 104, 105, 113, 116, 12583, 12589, 12594, 12597, 12614, 12635, 113, 117, 111, 59, 1, 8249, 114, 59, 3, 55349, 56513, 59, 1, 8624, 109, 4, 3, 59, 101, 103, 12606, 12608, 12611, 1, 8818, 59, 1, 10893, 59, 1, 10895, 4, 2, 98, 117, 12620, 12623, 59, 1, 91, 111, 4, 2, 59, 114, 12630, 12632, 1, 8216, 59, 1, 8218, 114, 111, 107, 59, 1, 322, 5, 60, 8, 59, 99, 100, 104, 105, 108, 113, 114, 12660, 12662, 12675, 12680, 12686, 12692, 12698, 12705, 1, 60, 4, 2, 99, 105, 12668, 12671, 59, 1, 10918, 114, 59, 1, 10873, 111, 116, 59, 1, 8918, 114, 101, 101, 59, 1, 8907, 109, 101, 115, 59, 1, 8905, 97, 114, 114, 59, 1, 10614, 117, 101, 115, 116, 59, 1, 10875, 4, 2, 80, 105, 12711, 12716, 97, 114, 59, 1, 10646, 4, 3, 59, 101, 102, 12724, 12726, 12729, 1, 9667, 59, 1, 8884, 59, 1, 9666, 114, 4, 2, 100, 117, 12739, 12746, 115, 104, 97, 114, 59, 1, 10570, 104, 97, 114, 59, 1, 10598, 4, 2, 101, 110, 12758, 12768, 114, 116, 110, 101, 113, 113, 59, 3, 8808, 65024, 69, 59, 3, 8808, 65024, 4, 14, 68, 97, 99, 100, 101, 102, 104, 105, 108, 110, 111, 112, 115, 117, 12803, 12809, 12893, 12908, 12914, 12928, 12933, 12937, 13011, 13025, 13032, 13049, 13052, 13069, 68, 111, 116, 59, 1, 8762, 4, 4, 99, 108, 112, 114, 12819, 12827, 12849, 12887, 114, 5, 175, 1, 59, 12825, 1, 175, 4, 2, 101, 116, 12833, 12836, 59, 1, 9794, 4, 2, 59, 101, 12842, 12844, 1, 10016, 115, 101, 59, 1, 10016, 4, 2, 59, 115, 12855, 12857, 1, 8614, 116, 111, 4, 4, 59, 100, 108, 117, 12869, 12871, 12877, 12883, 1, 8614, 111, 119, 110, 59, 1, 8615, 101, 102, 116, 59, 1, 8612, 112, 59, 1, 8613, 107, 101, 114, 59, 1, 9646, 4, 2, 111, 121, 12899, 12905, 109, 109, 97, 59, 1, 10793, 59, 1, 1084, 97, 115, 104, 59, 1, 8212, 97, 115, 117, 114, 101, 100, 97, 110, 103, 108, 101, 59, 1, 8737, 114, 59, 3, 55349, 56618, 111, 59, 1, 8487, 4, 3, 99, 100, 110, 12945, 12954, 12985, 114, 111, 5, 181, 1, 59, 12952, 1, 181, 4, 4, 59, 97, 99, 100, 12964, 12966, 12971, 12976, 1, 8739, 115, 116, 59, 1, 42, 105, 114, 59, 1, 10992, 111, 116, 5, 183, 1, 59, 12983, 1, 183, 117, 115, 4, 3, 59, 98, 100, 12995, 12997, 13e3, 1, 8722, 59, 1, 8863, 4, 2, 59, 117, 13006, 13008, 1, 8760, 59, 1, 10794, 4, 2, 99, 100, 13017, 13021, 112, 59, 1, 10971, 114, 59, 1, 8230, 112, 108, 117, 115, 59, 1, 8723, 4, 2, 100, 112, 13038, 13044, 101, 108, 115, 59, 1, 8871, 102, 59, 3, 55349, 56670, 59, 1, 8723, 4, 2, 99, 116, 13058, 13063, 114, 59, 3, 55349, 56514, 112, 111, 115, 59, 1, 8766, 4, 3, 59, 108, 109, 13077, 13079, 13087, 1, 956, 116, 105, 109, 97, 112, 59, 1, 8888, 97, 112, 59, 1, 8888, 4, 24, 71, 76, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 13142, 13165, 13217, 13229, 13247, 13330, 13359, 13414, 13420, 13508, 13513, 13579, 13602, 13626, 13631, 13762, 13767, 13855, 13936, 13995, 14214, 14285, 14312, 14432, 4, 2, 103, 116, 13148, 13152, 59, 3, 8921, 824, 4, 2, 59, 118, 13158, 13161, 3, 8811, 8402, 59, 3, 8811, 824, 4, 3, 101, 108, 116, 13173, 13200, 13204, 102, 116, 4, 2, 97, 114, 13181, 13188, 114, 114, 111, 119, 59, 1, 8653, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8654, 59, 3, 8920, 824, 4, 2, 59, 118, 13210, 13213, 3, 8810, 8402, 59, 3, 8810, 824, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8655, 4, 2, 68, 100, 13235, 13241, 97, 115, 104, 59, 1, 8879, 97, 115, 104, 59, 1, 8878, 4, 5, 98, 99, 110, 112, 116, 13259, 13264, 13270, 13275, 13308, 108, 97, 59, 1, 8711, 117, 116, 101, 59, 1, 324, 103, 59, 3, 8736, 8402, 4, 5, 59, 69, 105, 111, 112, 13287, 13289, 13293, 13298, 13302, 1, 8777, 59, 3, 10864, 824, 100, 59, 3, 8779, 824, 115, 59, 1, 329, 114, 111, 120, 59, 1, 8777, 117, 114, 4, 2, 59, 97, 13316, 13318, 1, 9838, 108, 4, 2, 59, 115, 13325, 13327, 1, 9838, 59, 1, 8469, 4, 2, 115, 117, 13336, 13344, 112, 5, 160, 1, 59, 13342, 1, 160, 109, 112, 4, 2, 59, 101, 13352, 13355, 3, 8782, 824, 59, 3, 8783, 824, 4, 5, 97, 101, 111, 117, 121, 13371, 13385, 13391, 13407, 13411, 4, 2, 112, 114, 13377, 13380, 59, 1, 10819, 111, 110, 59, 1, 328, 100, 105, 108, 59, 1, 326, 110, 103, 4, 2, 59, 100, 13399, 13401, 1, 8775, 111, 116, 59, 3, 10861, 824, 112, 59, 1, 10818, 59, 1, 1085, 97, 115, 104, 59, 1, 8211, 4, 7, 59, 65, 97, 100, 113, 115, 120, 13436, 13438, 13443, 13466, 13472, 13478, 13494, 1, 8800, 114, 114, 59, 1, 8663, 114, 4, 2, 104, 114, 13450, 13454, 107, 59, 1, 10532, 4, 2, 59, 111, 13460, 13462, 1, 8599, 119, 59, 1, 8599, 111, 116, 59, 3, 8784, 824, 117, 105, 118, 59, 1, 8802, 4, 2, 101, 105, 13484, 13489, 97, 114, 59, 1, 10536, 109, 59, 3, 8770, 824, 105, 115, 116, 4, 2, 59, 115, 13503, 13505, 1, 8708, 59, 1, 8708, 114, 59, 3, 55349, 56619, 4, 4, 69, 101, 115, 116, 13523, 13527, 13563, 13568, 59, 3, 8807, 824, 4, 3, 59, 113, 115, 13535, 13537, 13559, 1, 8817, 4, 3, 59, 113, 115, 13545, 13547, 13551, 1, 8817, 59, 3, 8807, 824, 108, 97, 110, 116, 59, 3, 10878, 824, 59, 3, 10878, 824, 105, 109, 59, 1, 8821, 4, 2, 59, 114, 13574, 13576, 1, 8815, 59, 1, 8815, 4, 3, 65, 97, 112, 13587, 13592, 13597, 114, 114, 59, 1, 8654, 114, 114, 59, 1, 8622, 97, 114, 59, 1, 10994, 4, 3, 59, 115, 118, 13610, 13612, 13623, 1, 8715, 4, 2, 59, 100, 13618, 13620, 1, 8956, 59, 1, 8954, 59, 1, 8715, 99, 121, 59, 1, 1114, 4, 7, 65, 69, 97, 100, 101, 115, 116, 13647, 13652, 13656, 13661, 13665, 13737, 13742, 114, 114, 59, 1, 8653, 59, 3, 8806, 824, 114, 114, 59, 1, 8602, 114, 59, 1, 8229, 4, 4, 59, 102, 113, 115, 13675, 13677, 13703, 13725, 1, 8816, 116, 4, 2, 97, 114, 13684, 13691, 114, 114, 111, 119, 59, 1, 8602, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8622, 4, 3, 59, 113, 115, 13711, 13713, 13717, 1, 8816, 59, 3, 8806, 824, 108, 97, 110, 116, 59, 3, 10877, 824, 4, 2, 59, 115, 13731, 13734, 3, 10877, 824, 59, 1, 8814, 105, 109, 59, 1, 8820, 4, 2, 59, 114, 13748, 13750, 1, 8814, 105, 4, 2, 59, 101, 13757, 13759, 1, 8938, 59, 1, 8940, 105, 100, 59, 1, 8740, 4, 2, 112, 116, 13773, 13778, 102, 59, 3, 55349, 56671, 5, 172, 3, 59, 105, 110, 13787, 13789, 13829, 1, 172, 110, 4, 4, 59, 69, 100, 118, 13800, 13802, 13806, 13812, 1, 8713, 59, 3, 8953, 824, 111, 116, 59, 3, 8949, 824, 4, 3, 97, 98, 99, 13820, 13823, 13826, 59, 1, 8713, 59, 1, 8951, 59, 1, 8950, 105, 4, 2, 59, 118, 13836, 13838, 1, 8716, 4, 3, 97, 98, 99, 13846, 13849, 13852, 59, 1, 8716, 59, 1, 8958, 59, 1, 8957, 4, 3, 97, 111, 114, 13863, 13892, 13899, 114, 4, 4, 59, 97, 115, 116, 13874, 13876, 13883, 13888, 1, 8742, 108, 108, 101, 108, 59, 1, 8742, 108, 59, 3, 11005, 8421, 59, 3, 8706, 824, 108, 105, 110, 116, 59, 1, 10772, 4, 3, 59, 99, 101, 13907, 13909, 13914, 1, 8832, 117, 101, 59, 1, 8928, 4, 2, 59, 99, 13920, 13923, 3, 10927, 824, 4, 2, 59, 101, 13929, 13931, 1, 8832, 113, 59, 3, 10927, 824, 4, 4, 65, 97, 105, 116, 13946, 13951, 13971, 13982, 114, 114, 59, 1, 8655, 114, 114, 4, 3, 59, 99, 119, 13961, 13963, 13967, 1, 8603, 59, 3, 10547, 824, 59, 3, 8605, 824, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8603, 114, 105, 4, 2, 59, 101, 13990, 13992, 1, 8939, 59, 1, 8941, 4, 7, 99, 104, 105, 109, 112, 113, 117, 14011, 14036, 14060, 14080, 14085, 14090, 14106, 4, 4, 59, 99, 101, 114, 14021, 14023, 14028, 14032, 1, 8833, 117, 101, 59, 1, 8929, 59, 3, 10928, 824, 59, 3, 55349, 56515, 111, 114, 116, 4, 2, 109, 112, 14045, 14050, 105, 100, 59, 1, 8740, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8742, 109, 4, 2, 59, 101, 14067, 14069, 1, 8769, 4, 2, 59, 113, 14075, 14077, 1, 8772, 59, 1, 8772, 105, 100, 59, 1, 8740, 97, 114, 59, 1, 8742, 115, 117, 4, 2, 98, 112, 14098, 14102, 101, 59, 1, 8930, 101, 59, 1, 8931, 4, 3, 98, 99, 112, 14114, 14157, 14171, 4, 4, 59, 69, 101, 115, 14124, 14126, 14130, 14133, 1, 8836, 59, 3, 10949, 824, 59, 1, 8840, 101, 116, 4, 2, 59, 101, 14141, 14144, 3, 8834, 8402, 113, 4, 2, 59, 113, 14151, 14153, 1, 8840, 59, 3, 10949, 824, 99, 4, 2, 59, 101, 14164, 14166, 1, 8833, 113, 59, 3, 10928, 824, 4, 4, 59, 69, 101, 115, 14181, 14183, 14187, 14190, 1, 8837, 59, 3, 10950, 824, 59, 1, 8841, 101, 116, 4, 2, 59, 101, 14198, 14201, 3, 8835, 8402, 113, 4, 2, 59, 113, 14208, 14210, 1, 8841, 59, 3, 10950, 824, 4, 4, 103, 105, 108, 114, 14224, 14228, 14238, 14242, 108, 59, 1, 8825, 108, 100, 101, 5, 241, 1, 59, 14236, 1, 241, 103, 59, 1, 8824, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 14254, 14269, 101, 102, 116, 4, 2, 59, 101, 14263, 14265, 1, 8938, 113, 59, 1, 8940, 105, 103, 104, 116, 4, 2, 59, 101, 14279, 14281, 1, 8939, 113, 59, 1, 8941, 4, 2, 59, 109, 14291, 14293, 1, 957, 4, 3, 59, 101, 115, 14301, 14303, 14308, 1, 35, 114, 111, 59, 1, 8470, 112, 59, 1, 8199, 4, 9, 68, 72, 97, 100, 103, 105, 108, 114, 115, 14332, 14338, 14344, 14349, 14355, 14369, 14376, 14408, 14426, 97, 115, 104, 59, 1, 8877, 97, 114, 114, 59, 1, 10500, 112, 59, 3, 8781, 8402, 97, 115, 104, 59, 1, 8876, 4, 2, 101, 116, 14361, 14365, 59, 3, 8805, 8402, 59, 3, 62, 8402, 110, 102, 105, 110, 59, 1, 10718, 4, 3, 65, 101, 116, 14384, 14389, 14393, 114, 114, 59, 1, 10498, 59, 3, 8804, 8402, 4, 2, 59, 114, 14399, 14402, 3, 60, 8402, 105, 101, 59, 3, 8884, 8402, 4, 2, 65, 116, 14414, 14419, 114, 114, 59, 1, 10499, 114, 105, 101, 59, 3, 8885, 8402, 105, 109, 59, 3, 8764, 8402, 4, 3, 65, 97, 110, 14440, 14445, 14468, 114, 114, 59, 1, 8662, 114, 4, 2, 104, 114, 14452, 14456, 107, 59, 1, 10531, 4, 2, 59, 111, 14462, 14464, 1, 8598, 119, 59, 1, 8598, 101, 97, 114, 59, 1, 10535, 4, 18, 83, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 14512, 14515, 14535, 14560, 14597, 14603, 14618, 14643, 14657, 14662, 14701, 14741, 14747, 14769, 14851, 14877, 14907, 14916, 59, 1, 9416, 4, 2, 99, 115, 14521, 14531, 117, 116, 101, 5, 243, 1, 59, 14529, 1, 243, 116, 59, 1, 8859, 4, 2, 105, 121, 14541, 14557, 114, 4, 2, 59, 99, 14548, 14550, 1, 8858, 5, 244, 1, 59, 14555, 1, 244, 59, 1, 1086, 4, 5, 97, 98, 105, 111, 115, 14572, 14577, 14583, 14587, 14591, 115, 104, 59, 1, 8861, 108, 97, 99, 59, 1, 337, 118, 59, 1, 10808, 116, 59, 1, 8857, 111, 108, 100, 59, 1, 10684, 108, 105, 103, 59, 1, 339, 4, 2, 99, 114, 14609, 14614, 105, 114, 59, 1, 10687, 59, 3, 55349, 56620, 4, 3, 111, 114, 116, 14626, 14630, 14640, 110, 59, 1, 731, 97, 118, 101, 5, 242, 1, 59, 14638, 1, 242, 59, 1, 10689, 4, 2, 98, 109, 14649, 14654, 97, 114, 59, 1, 10677, 59, 1, 937, 110, 116, 59, 1, 8750, 4, 4, 97, 99, 105, 116, 14672, 14677, 14693, 14698, 114, 114, 59, 1, 8634, 4, 2, 105, 114, 14683, 14687, 114, 59, 1, 10686, 111, 115, 115, 59, 1, 10683, 110, 101, 59, 1, 8254, 59, 1, 10688, 4, 3, 97, 101, 105, 14709, 14714, 14719, 99, 114, 59, 1, 333, 103, 97, 59, 1, 969, 4, 3, 99, 100, 110, 14727, 14733, 14736, 114, 111, 110, 59, 1, 959, 59, 1, 10678, 117, 115, 59, 1, 8854, 112, 102, 59, 3, 55349, 56672, 4, 3, 97, 101, 108, 14755, 14759, 14764, 114, 59, 1, 10679, 114, 112, 59, 1, 10681, 117, 115, 59, 1, 8853, 4, 7, 59, 97, 100, 105, 111, 115, 118, 14785, 14787, 14792, 14831, 14837, 14841, 14848, 1, 8744, 114, 114, 59, 1, 8635, 4, 4, 59, 101, 102, 109, 14802, 14804, 14817, 14824, 1, 10845, 114, 4, 2, 59, 111, 14811, 14813, 1, 8500, 102, 59, 1, 8500, 5, 170, 1, 59, 14822, 1, 170, 5, 186, 1, 59, 14829, 1, 186, 103, 111, 102, 59, 1, 8886, 114, 59, 1, 10838, 108, 111, 112, 101, 59, 1, 10839, 59, 1, 10843, 4, 3, 99, 108, 111, 14859, 14863, 14873, 114, 59, 1, 8500, 97, 115, 104, 5, 248, 1, 59, 14871, 1, 248, 108, 59, 1, 8856, 105, 4, 2, 108, 109, 14884, 14893, 100, 101, 5, 245, 1, 59, 14891, 1, 245, 101, 115, 4, 2, 59, 97, 14901, 14903, 1, 8855, 115, 59, 1, 10806, 109, 108, 5, 246, 1, 59, 14914, 1, 246, 98, 97, 114, 59, 1, 9021, 4, 12, 97, 99, 101, 102, 104, 105, 108, 109, 111, 114, 115, 117, 14948, 14992, 14996, 15033, 15038, 15068, 15090, 15189, 15192, 15222, 15427, 15441, 114, 4, 4, 59, 97, 115, 116, 14959, 14961, 14976, 14989, 1, 8741, 5, 182, 2, 59, 108, 14968, 14970, 1, 182, 108, 101, 108, 59, 1, 8741, 4, 2, 105, 108, 14982, 14986, 109, 59, 1, 10995, 59, 1, 11005, 59, 1, 8706, 121, 59, 1, 1087, 114, 4, 5, 99, 105, 109, 112, 116, 15009, 15014, 15019, 15024, 15027, 110, 116, 59, 1, 37, 111, 100, 59, 1, 46, 105, 108, 59, 1, 8240, 59, 1, 8869, 101, 110, 107, 59, 1, 8241, 114, 59, 3, 55349, 56621, 4, 3, 105, 109, 111, 15046, 15057, 15063, 4, 2, 59, 118, 15052, 15054, 1, 966, 59, 1, 981, 109, 97, 116, 59, 1, 8499, 110, 101, 59, 1, 9742, 4, 3, 59, 116, 118, 15076, 15078, 15087, 1, 960, 99, 104, 102, 111, 114, 107, 59, 1, 8916, 59, 1, 982, 4, 2, 97, 117, 15096, 15119, 110, 4, 2, 99, 107, 15103, 15115, 107, 4, 2, 59, 104, 15110, 15112, 1, 8463, 59, 1, 8462, 118, 59, 1, 8463, 115, 4, 9, 59, 97, 98, 99, 100, 101, 109, 115, 116, 15140, 15142, 15148, 15151, 15156, 15168, 15171, 15179, 15184, 1, 43, 99, 105, 114, 59, 1, 10787, 59, 1, 8862, 105, 114, 59, 1, 10786, 4, 2, 111, 117, 15162, 15165, 59, 1, 8724, 59, 1, 10789, 59, 1, 10866, 110, 5, 177, 1, 59, 15177, 1, 177, 105, 109, 59, 1, 10790, 119, 111, 59, 1, 10791, 59, 1, 177, 4, 3, 105, 112, 117, 15200, 15208, 15213, 110, 116, 105, 110, 116, 59, 1, 10773, 102, 59, 3, 55349, 56673, 110, 100, 5, 163, 1, 59, 15220, 1, 163, 4, 10, 59, 69, 97, 99, 101, 105, 110, 111, 115, 117, 15244, 15246, 15249, 15253, 15258, 15334, 15347, 15367, 15416, 15421, 1, 8826, 59, 1, 10931, 112, 59, 1, 10935, 117, 101, 59, 1, 8828, 4, 2, 59, 99, 15264, 15266, 1, 10927, 4, 6, 59, 97, 99, 101, 110, 115, 15280, 15282, 15290, 15299, 15303, 15329, 1, 8826, 112, 112, 114, 111, 120, 59, 1, 10935, 117, 114, 108, 121, 101, 113, 59, 1, 8828, 113, 59, 1, 10927, 4, 3, 97, 101, 115, 15311, 15319, 15324, 112, 112, 114, 111, 120, 59, 1, 10937, 113, 113, 59, 1, 10933, 105, 109, 59, 1, 8936, 105, 109, 59, 1, 8830, 109, 101, 4, 2, 59, 115, 15342, 15344, 1, 8242, 59, 1, 8473, 4, 3, 69, 97, 115, 15355, 15358, 15362, 59, 1, 10933, 112, 59, 1, 10937, 105, 109, 59, 1, 8936, 4, 3, 100, 102, 112, 15375, 15378, 15404, 59, 1, 8719, 4, 3, 97, 108, 115, 15386, 15392, 15398, 108, 97, 114, 59, 1, 9006, 105, 110, 101, 59, 1, 8978, 117, 114, 102, 59, 1, 8979, 4, 2, 59, 116, 15410, 15412, 1, 8733, 111, 59, 1, 8733, 105, 109, 59, 1, 8830, 114, 101, 108, 59, 1, 8880, 4, 2, 99, 105, 15433, 15438, 114, 59, 3, 55349, 56517, 59, 1, 968, 110, 99, 115, 112, 59, 1, 8200, 4, 6, 102, 105, 111, 112, 115, 117, 15462, 15467, 15472, 15478, 15485, 15491, 114, 59, 3, 55349, 56622, 110, 116, 59, 1, 10764, 112, 102, 59, 3, 55349, 56674, 114, 105, 109, 101, 59, 1, 8279, 99, 114, 59, 3, 55349, 56518, 4, 3, 97, 101, 111, 15499, 15520, 15534, 116, 4, 2, 101, 105, 15506, 15515, 114, 110, 105, 111, 110, 115, 59, 1, 8461, 110, 116, 59, 1, 10774, 115, 116, 4, 2, 59, 101, 15528, 15530, 1, 63, 113, 59, 1, 8799, 116, 5, 34, 1, 59, 15540, 1, 34, 4, 21, 65, 66, 72, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 15586, 15609, 15615, 15620, 15796, 15855, 15893, 15931, 15977, 16001, 16039, 16183, 16204, 16222, 16228, 16285, 16312, 16318, 16363, 16408, 16416, 4, 3, 97, 114, 116, 15594, 15599, 15603, 114, 114, 59, 1, 8667, 114, 59, 1, 8658, 97, 105, 108, 59, 1, 10524, 97, 114, 114, 59, 1, 10511, 97, 114, 59, 1, 10596, 4, 7, 99, 100, 101, 110, 113, 114, 116, 15636, 15651, 15656, 15664, 15687, 15696, 15770, 4, 2, 101, 117, 15642, 15646, 59, 3, 8765, 817, 116, 101, 59, 1, 341, 105, 99, 59, 1, 8730, 109, 112, 116, 121, 118, 59, 1, 10675, 103, 4, 4, 59, 100, 101, 108, 15675, 15677, 15680, 15683, 1, 10217, 59, 1, 10642, 59, 1, 10661, 101, 59, 1, 10217, 117, 111, 5, 187, 1, 59, 15694, 1, 187, 114, 4, 11, 59, 97, 98, 99, 102, 104, 108, 112, 115, 116, 119, 15721, 15723, 15727, 15739, 15742, 15746, 15750, 15754, 15758, 15763, 15767, 1, 8594, 112, 59, 1, 10613, 4, 2, 59, 102, 15733, 15735, 1, 8677, 115, 59, 1, 10528, 59, 1, 10547, 115, 59, 1, 10526, 107, 59, 1, 8618, 112, 59, 1, 8620, 108, 59, 1, 10565, 105, 109, 59, 1, 10612, 108, 59, 1, 8611, 59, 1, 8605, 4, 2, 97, 105, 15776, 15781, 105, 108, 59, 1, 10522, 111, 4, 2, 59, 110, 15788, 15790, 1, 8758, 97, 108, 115, 59, 1, 8474, 4, 3, 97, 98, 114, 15804, 15809, 15814, 114, 114, 59, 1, 10509, 114, 107, 59, 1, 10099, 4, 2, 97, 107, 15820, 15833, 99, 4, 2, 101, 107, 15827, 15830, 59, 1, 125, 59, 1, 93, 4, 2, 101, 115, 15839, 15842, 59, 1, 10636, 108, 4, 2, 100, 117, 15849, 15852, 59, 1, 10638, 59, 1, 10640, 4, 4, 97, 101, 117, 121, 15865, 15871, 15886, 15890, 114, 111, 110, 59, 1, 345, 4, 2, 100, 105, 15877, 15882, 105, 108, 59, 1, 343, 108, 59, 1, 8969, 98, 59, 1, 125, 59, 1, 1088, 4, 4, 99, 108, 113, 115, 15903, 15907, 15914, 15927, 97, 59, 1, 10551, 100, 104, 97, 114, 59, 1, 10601, 117, 111, 4, 2, 59, 114, 15922, 15924, 1, 8221, 59, 1, 8221, 104, 59, 1, 8627, 4, 3, 97, 99, 103, 15939, 15966, 15970, 108, 4, 4, 59, 105, 112, 115, 15950, 15952, 15957, 15963, 1, 8476, 110, 101, 59, 1, 8475, 97, 114, 116, 59, 1, 8476, 59, 1, 8477, 116, 59, 1, 9645, 5, 174, 1, 59, 15975, 1, 174, 4, 3, 105, 108, 114, 15985, 15991, 15997, 115, 104, 116, 59, 1, 10621, 111, 111, 114, 59, 1, 8971, 59, 3, 55349, 56623, 4, 2, 97, 111, 16007, 16028, 114, 4, 2, 100, 117, 16014, 16017, 59, 1, 8641, 4, 2, 59, 108, 16023, 16025, 1, 8640, 59, 1, 10604, 4, 2, 59, 118, 16034, 16036, 1, 961, 59, 1, 1009, 4, 3, 103, 110, 115, 16047, 16167, 16171, 104, 116, 4, 6, 97, 104, 108, 114, 115, 116, 16063, 16081, 16103, 16130, 16143, 16155, 114, 114, 111, 119, 4, 2, 59, 116, 16073, 16075, 1, 8594, 97, 105, 108, 59, 1, 8611, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 16093, 16099, 111, 119, 110, 59, 1, 8641, 112, 59, 1, 8640, 101, 102, 116, 4, 2, 97, 104, 16112, 16120, 114, 114, 111, 119, 115, 59, 1, 8644, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8652, 105, 103, 104, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8649, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8605, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8908, 103, 59, 1, 730, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8787, 4, 3, 97, 104, 109, 16191, 16196, 16201, 114, 114, 59, 1, 8644, 97, 114, 59, 1, 8652, 59, 1, 8207, 111, 117, 115, 116, 4, 2, 59, 97, 16214, 16216, 1, 9137, 99, 104, 101, 59, 1, 9137, 109, 105, 100, 59, 1, 10990, 4, 4, 97, 98, 112, 116, 16238, 16252, 16257, 16278, 4, 2, 110, 114, 16244, 16248, 103, 59, 1, 10221, 114, 59, 1, 8702, 114, 107, 59, 1, 10215, 4, 3, 97, 102, 108, 16265, 16269, 16273, 114, 59, 1, 10630, 59, 3, 55349, 56675, 117, 115, 59, 1, 10798, 105, 109, 101, 115, 59, 1, 10805, 4, 2, 97, 112, 16291, 16304, 114, 4, 2, 59, 103, 16298, 16300, 1, 41, 116, 59, 1, 10644, 111, 108, 105, 110, 116, 59, 1, 10770, 97, 114, 114, 59, 1, 8649, 4, 4, 97, 99, 104, 113, 16328, 16334, 16339, 16342, 113, 117, 111, 59, 1, 8250, 114, 59, 3, 55349, 56519, 59, 1, 8625, 4, 2, 98, 117, 16348, 16351, 59, 1, 93, 111, 4, 2, 59, 114, 16358, 16360, 1, 8217, 59, 1, 8217, 4, 3, 104, 105, 114, 16371, 16377, 16383, 114, 101, 101, 59, 1, 8908, 109, 101, 115, 59, 1, 8906, 105, 4, 4, 59, 101, 102, 108, 16394, 16396, 16399, 16402, 1, 9657, 59, 1, 8885, 59, 1, 9656, 116, 114, 105, 59, 1, 10702, 108, 117, 104, 97, 114, 59, 1, 10600, 59, 1, 8478, 4, 19, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 16459, 16466, 16472, 16572, 16590, 16672, 16687, 16746, 16844, 16850, 16924, 16963, 16988, 17115, 17121, 17154, 17206, 17614, 17656, 99, 117, 116, 101, 59, 1, 347, 113, 117, 111, 59, 1, 8218, 4, 10, 59, 69, 97, 99, 101, 105, 110, 112, 115, 121, 16494, 16496, 16499, 16513, 16518, 16531, 16536, 16556, 16564, 16569, 1, 8827, 59, 1, 10932, 4, 2, 112, 114, 16505, 16508, 59, 1, 10936, 111, 110, 59, 1, 353, 117, 101, 59, 1, 8829, 4, 2, 59, 100, 16524, 16526, 1, 10928, 105, 108, 59, 1, 351, 114, 99, 59, 1, 349, 4, 3, 69, 97, 115, 16544, 16547, 16551, 59, 1, 10934, 112, 59, 1, 10938, 105, 109, 59, 1, 8937, 111, 108, 105, 110, 116, 59, 1, 10771, 105, 109, 59, 1, 8831, 59, 1, 1089, 111, 116, 4, 3, 59, 98, 101, 16582, 16584, 16587, 1, 8901, 59, 1, 8865, 59, 1, 10854, 4, 7, 65, 97, 99, 109, 115, 116, 120, 16606, 16611, 16634, 16642, 16646, 16652, 16668, 114, 114, 59, 1, 8664, 114, 4, 2, 104, 114, 16618, 16622, 107, 59, 1, 10533, 4, 2, 59, 111, 16628, 16630, 1, 8600, 119, 59, 1, 8600, 116, 5, 167, 1, 59, 16640, 1, 167, 105, 59, 1, 59, 119, 97, 114, 59, 1, 10537, 109, 4, 2, 105, 110, 16659, 16665, 110, 117, 115, 59, 1, 8726, 59, 1, 8726, 116, 59, 1, 10038, 114, 4, 2, 59, 111, 16679, 16682, 3, 55349, 56624, 119, 110, 59, 1, 8994, 4, 4, 97, 99, 111, 121, 16697, 16702, 16716, 16739, 114, 112, 59, 1, 9839, 4, 2, 104, 121, 16708, 16713, 99, 121, 59, 1, 1097, 59, 1, 1096, 114, 116, 4, 2, 109, 112, 16724, 16729, 105, 100, 59, 1, 8739, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8741, 5, 173, 1, 59, 16744, 1, 173, 4, 2, 103, 109, 16752, 16770, 109, 97, 4, 3, 59, 102, 118, 16762, 16764, 16767, 1, 963, 59, 1, 962, 59, 1, 962, 4, 8, 59, 100, 101, 103, 108, 110, 112, 114, 16788, 16790, 16795, 16806, 16817, 16828, 16832, 16838, 1, 8764, 111, 116, 59, 1, 10858, 4, 2, 59, 113, 16801, 16803, 1, 8771, 59, 1, 8771, 4, 2, 59, 69, 16812, 16814, 1, 10910, 59, 1, 10912, 4, 2, 59, 69, 16823, 16825, 1, 10909, 59, 1, 10911, 101, 59, 1, 8774, 108, 117, 115, 59, 1, 10788, 97, 114, 114, 59, 1, 10610, 97, 114, 114, 59, 1, 8592, 4, 4, 97, 101, 105, 116, 16860, 16883, 16891, 16904, 4, 2, 108, 115, 16866, 16878, 108, 115, 101, 116, 109, 105, 110, 117, 115, 59, 1, 8726, 104, 112, 59, 1, 10803, 112, 97, 114, 115, 108, 59, 1, 10724, 4, 2, 100, 108, 16897, 16900, 59, 1, 8739, 101, 59, 1, 8995, 4, 2, 59, 101, 16910, 16912, 1, 10922, 4, 2, 59, 115, 16918, 16920, 1, 10924, 59, 3, 10924, 65024, 4, 3, 102, 108, 112, 16932, 16938, 16958, 116, 99, 121, 59, 1, 1100, 4, 2, 59, 98, 16944, 16946, 1, 47, 4, 2, 59, 97, 16952, 16954, 1, 10692, 114, 59, 1, 9023, 102, 59, 3, 55349, 56676, 97, 4, 2, 100, 114, 16970, 16985, 101, 115, 4, 2, 59, 117, 16978, 16980, 1, 9824, 105, 116, 59, 1, 9824, 59, 1, 8741, 4, 3, 99, 115, 117, 16996, 17028, 17089, 4, 2, 97, 117, 17002, 17015, 112, 4, 2, 59, 115, 17009, 17011, 1, 8851, 59, 3, 8851, 65024, 112, 4, 2, 59, 115, 17022, 17024, 1, 8852, 59, 3, 8852, 65024, 117, 4, 2, 98, 112, 17035, 17062, 4, 3, 59, 101, 115, 17043, 17045, 17048, 1, 8847, 59, 1, 8849, 101, 116, 4, 2, 59, 101, 17056, 17058, 1, 8847, 113, 59, 1, 8849, 4, 3, 59, 101, 115, 17070, 17072, 17075, 1, 8848, 59, 1, 8850, 101, 116, 4, 2, 59, 101, 17083, 17085, 1, 8848, 113, 59, 1, 8850, 4, 3, 59, 97, 102, 17097, 17099, 17112, 1, 9633, 114, 4, 2, 101, 102, 17106, 17109, 59, 1, 9633, 59, 1, 9642, 59, 1, 9642, 97, 114, 114, 59, 1, 8594, 4, 4, 99, 101, 109, 116, 17131, 17136, 17142, 17148, 114, 59, 3, 55349, 56520, 116, 109, 110, 59, 1, 8726, 105, 108, 101, 59, 1, 8995, 97, 114, 102, 59, 1, 8902, 4, 2, 97, 114, 17160, 17172, 114, 4, 2, 59, 102, 17167, 17169, 1, 9734, 59, 1, 9733, 4, 2, 97, 110, 17178, 17202, 105, 103, 104, 116, 4, 2, 101, 112, 17188, 17197, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 104, 105, 59, 1, 981, 115, 59, 1, 175, 4, 5, 98, 99, 109, 110, 112, 17218, 17351, 17420, 17423, 17427, 4, 9, 59, 69, 100, 101, 109, 110, 112, 114, 115, 17238, 17240, 17243, 17248, 17261, 17267, 17279, 17285, 17291, 1, 8834, 59, 1, 10949, 111, 116, 59, 1, 10941, 4, 2, 59, 100, 17254, 17256, 1, 8838, 111, 116, 59, 1, 10947, 117, 108, 116, 59, 1, 10945, 4, 2, 69, 101, 17273, 17276, 59, 1, 10955, 59, 1, 8842, 108, 117, 115, 59, 1, 10943, 97, 114, 114, 59, 1, 10617, 4, 3, 101, 105, 117, 17299, 17335, 17339, 116, 4, 3, 59, 101, 110, 17308, 17310, 17322, 1, 8834, 113, 4, 2, 59, 113, 17317, 17319, 1, 8838, 59, 1, 10949, 101, 113, 4, 2, 59, 113, 17330, 17332, 1, 8842, 59, 1, 10955, 109, 59, 1, 10951, 4, 2, 98, 112, 17345, 17348, 59, 1, 10965, 59, 1, 10963, 99, 4, 6, 59, 97, 99, 101, 110, 115, 17366, 17368, 17376, 17385, 17389, 17415, 1, 8827, 112, 112, 114, 111, 120, 59, 1, 10936, 117, 114, 108, 121, 101, 113, 59, 1, 8829, 113, 59, 1, 10928, 4, 3, 97, 101, 115, 17397, 17405, 17410, 112, 112, 114, 111, 120, 59, 1, 10938, 113, 113, 59, 1, 10934, 105, 109, 59, 1, 8937, 105, 109, 59, 1, 8831, 59, 1, 8721, 103, 59, 1, 9834, 4, 13, 49, 50, 51, 59, 69, 100, 101, 104, 108, 109, 110, 112, 115, 17455, 17462, 17469, 17476, 17478, 17481, 17496, 17509, 17524, 17530, 17536, 17548, 17554, 5, 185, 1, 59, 17460, 1, 185, 5, 178, 1, 59, 17467, 1, 178, 5, 179, 1, 59, 17474, 1, 179, 1, 8835, 59, 1, 10950, 4, 2, 111, 115, 17487, 17491, 116, 59, 1, 10942, 117, 98, 59, 1, 10968, 4, 2, 59, 100, 17502, 17504, 1, 8839, 111, 116, 59, 1, 10948, 115, 4, 2, 111, 117, 17516, 17520, 108, 59, 1, 10185, 98, 59, 1, 10967, 97, 114, 114, 59, 1, 10619, 117, 108, 116, 59, 1, 10946, 4, 2, 69, 101, 17542, 17545, 59, 1, 10956, 59, 1, 8843, 108, 117, 115, 59, 1, 10944, 4, 3, 101, 105, 117, 17562, 17598, 17602, 116, 4, 3, 59, 101, 110, 17571, 17573, 17585, 1, 8835, 113, 4, 2, 59, 113, 17580, 17582, 1, 8839, 59, 1, 10950, 101, 113, 4, 2, 59, 113, 17593, 17595, 1, 8843, 59, 1, 10956, 109, 59, 1, 10952, 4, 2, 98, 112, 17608, 17611, 59, 1, 10964, 59, 1, 10966, 4, 3, 65, 97, 110, 17622, 17627, 17650, 114, 114, 59, 1, 8665, 114, 4, 2, 104, 114, 17634, 17638, 107, 59, 1, 10534, 4, 2, 59, 111, 17644, 17646, 1, 8601, 119, 59, 1, 8601, 119, 97, 114, 59, 1, 10538, 108, 105, 103, 5, 223, 1, 59, 17664, 1, 223, 4, 13, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 114, 115, 119, 17694, 17709, 17714, 17737, 17742, 17749, 17754, 17860, 17905, 17957, 17964, 18090, 18122, 4, 2, 114, 117, 17700, 17706, 103, 101, 116, 59, 1, 8982, 59, 1, 964, 114, 107, 59, 1, 9140, 4, 3, 97, 101, 121, 17722, 17728, 17734, 114, 111, 110, 59, 1, 357, 100, 105, 108, 59, 1, 355, 59, 1, 1090, 111, 116, 59, 1, 8411, 108, 114, 101, 99, 59, 1, 8981, 114, 59, 3, 55349, 56625, 4, 4, 101, 105, 107, 111, 17764, 17805, 17836, 17851, 4, 2, 114, 116, 17770, 17786, 101, 4, 2, 52, 102, 17777, 17780, 59, 1, 8756, 111, 114, 101, 59, 1, 8756, 97, 4, 3, 59, 115, 118, 17795, 17797, 17802, 1, 952, 121, 109, 59, 1, 977, 59, 1, 977, 4, 2, 99, 110, 17811, 17831, 107, 4, 2, 97, 115, 17818, 17826, 112, 112, 114, 111, 120, 59, 1, 8776, 105, 109, 59, 1, 8764, 115, 112, 59, 1, 8201, 4, 2, 97, 115, 17842, 17846, 112, 59, 1, 8776, 105, 109, 59, 1, 8764, 114, 110, 5, 254, 1, 59, 17858, 1, 254, 4, 3, 108, 109, 110, 17868, 17873, 17901, 100, 101, 59, 1, 732, 101, 115, 5, 215, 3, 59, 98, 100, 17884, 17886, 17898, 1, 215, 4, 2, 59, 97, 17892, 17894, 1, 8864, 114, 59, 1, 10801, 59, 1, 10800, 116, 59, 1, 8749, 4, 3, 101, 112, 115, 17913, 17917, 17953, 97, 59, 1, 10536, 4, 4, 59, 98, 99, 102, 17927, 17929, 17934, 17939, 1, 8868, 111, 116, 59, 1, 9014, 105, 114, 59, 1, 10993, 4, 2, 59, 111, 17945, 17948, 3, 55349, 56677, 114, 107, 59, 1, 10970, 97, 59, 1, 10537, 114, 105, 109, 101, 59, 1, 8244, 4, 3, 97, 105, 112, 17972, 17977, 18082, 100, 101, 59, 1, 8482, 4, 7, 97, 100, 101, 109, 112, 115, 116, 17993, 18051, 18056, 18059, 18066, 18072, 18076, 110, 103, 108, 101, 4, 5, 59, 100, 108, 113, 114, 18009, 18011, 18017, 18032, 18035, 1, 9653, 111, 119, 110, 59, 1, 9663, 101, 102, 116, 4, 2, 59, 101, 18026, 18028, 1, 9667, 113, 59, 1, 8884, 59, 1, 8796, 105, 103, 104, 116, 4, 2, 59, 101, 18045, 18047, 1, 9657, 113, 59, 1, 8885, 111, 116, 59, 1, 9708, 59, 1, 8796, 105, 110, 117, 115, 59, 1, 10810, 108, 117, 115, 59, 1, 10809, 98, 59, 1, 10701, 105, 109, 101, 59, 1, 10811, 101, 122, 105, 117, 109, 59, 1, 9186, 4, 3, 99, 104, 116, 18098, 18111, 18116, 4, 2, 114, 121, 18104, 18108, 59, 3, 55349, 56521, 59, 1, 1094, 99, 121, 59, 1, 1115, 114, 111, 107, 59, 1, 359, 4, 2, 105, 111, 18128, 18133, 120, 116, 59, 1, 8812, 104, 101, 97, 100, 4, 2, 108, 114, 18143, 18154, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8606, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8608, 4, 18, 65, 72, 97, 98, 99, 100, 102, 103, 104, 108, 109, 111, 112, 114, 115, 116, 117, 119, 18204, 18209, 18214, 18234, 18250, 18268, 18292, 18308, 18319, 18343, 18379, 18397, 18413, 18504, 18547, 18553, 18584, 18603, 114, 114, 59, 1, 8657, 97, 114, 59, 1, 10595, 4, 2, 99, 114, 18220, 18230, 117, 116, 101, 5, 250, 1, 59, 18228, 1, 250, 114, 59, 1, 8593, 114, 4, 2, 99, 101, 18241, 18245, 121, 59, 1, 1118, 118, 101, 59, 1, 365, 4, 2, 105, 121, 18256, 18265, 114, 99, 5, 251, 1, 59, 18263, 1, 251, 59, 1, 1091, 4, 3, 97, 98, 104, 18276, 18281, 18287, 114, 114, 59, 1, 8645, 108, 97, 99, 59, 1, 369, 97, 114, 59, 1, 10606, 4, 2, 105, 114, 18298, 18304, 115, 104, 116, 59, 1, 10622, 59, 3, 55349, 56626, 114, 97, 118, 101, 5, 249, 1, 59, 18317, 1, 249, 4, 2, 97, 98, 18325, 18338, 114, 4, 2, 108, 114, 18332, 18335, 59, 1, 8639, 59, 1, 8638, 108, 107, 59, 1, 9600, 4, 2, 99, 116, 18349, 18374, 4, 2, 111, 114, 18355, 18369, 114, 110, 4, 2, 59, 101, 18363, 18365, 1, 8988, 114, 59, 1, 8988, 111, 112, 59, 1, 8975, 114, 105, 59, 1, 9720, 4, 2, 97, 108, 18385, 18390, 99, 114, 59, 1, 363, 5, 168, 1, 59, 18395, 1, 168, 4, 2, 103, 112, 18403, 18408, 111, 110, 59, 1, 371, 102, 59, 3, 55349, 56678, 4, 6, 97, 100, 104, 108, 115, 117, 18427, 18434, 18445, 18470, 18475, 18494, 114, 114, 111, 119, 59, 1, 8593, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8597, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 18457, 18463, 101, 102, 116, 59, 1, 8639, 105, 103, 104, 116, 59, 1, 8638, 117, 115, 59, 1, 8846, 105, 4, 3, 59, 104, 108, 18484, 18486, 18489, 1, 965, 59, 1, 978, 111, 110, 59, 1, 965, 112, 97, 114, 114, 111, 119, 115, 59, 1, 8648, 4, 3, 99, 105, 116, 18512, 18537, 18542, 4, 2, 111, 114, 18518, 18532, 114, 110, 4, 2, 59, 101, 18526, 18528, 1, 8989, 114, 59, 1, 8989, 111, 112, 59, 1, 8974, 110, 103, 59, 1, 367, 114, 105, 59, 1, 9721, 99, 114, 59, 3, 55349, 56522, 4, 3, 100, 105, 114, 18561, 18566, 18572, 111, 116, 59, 1, 8944, 108, 100, 101, 59, 1, 361, 105, 4, 2, 59, 102, 18579, 18581, 1, 9653, 59, 1, 9652, 4, 2, 97, 109, 18590, 18595, 114, 114, 59, 1, 8648, 108, 5, 252, 1, 59, 18601, 1, 252, 97, 110, 103, 108, 101, 59, 1, 10663, 4, 15, 65, 66, 68, 97, 99, 100, 101, 102, 108, 110, 111, 112, 114, 115, 122, 18643, 18648, 18661, 18667, 18847, 18851, 18857, 18904, 18909, 18915, 18931, 18937, 18943, 18949, 18996, 114, 114, 59, 1, 8661, 97, 114, 4, 2, 59, 118, 18656, 18658, 1, 10984, 59, 1, 10985, 97, 115, 104, 59, 1, 8872, 4, 2, 110, 114, 18673, 18679, 103, 114, 116, 59, 1, 10652, 4, 7, 101, 107, 110, 112, 114, 115, 116, 18695, 18704, 18711, 18720, 18742, 18754, 18810, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 97, 112, 112, 97, 59, 1, 1008, 111, 116, 104, 105, 110, 103, 59, 1, 8709, 4, 3, 104, 105, 114, 18728, 18732, 18735, 105, 59, 1, 981, 59, 1, 982, 111, 112, 116, 111, 59, 1, 8733, 4, 2, 59, 104, 18748, 18750, 1, 8597, 111, 59, 1, 1009, 4, 2, 105, 117, 18760, 18766, 103, 109, 97, 59, 1, 962, 4, 2, 98, 112, 18772, 18791, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18784, 18787, 3, 8842, 65024, 59, 3, 10955, 65024, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18803, 18806, 3, 8843, 65024, 59, 3, 10956, 65024, 4, 2, 104, 114, 18816, 18822, 101, 116, 97, 59, 1, 977, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 18834, 18840, 101, 102, 116, 59, 1, 8882, 105, 103, 104, 116, 59, 1, 8883, 121, 59, 1, 1074, 97, 115, 104, 59, 1, 8866, 4, 3, 101, 108, 114, 18865, 18884, 18890, 4, 3, 59, 98, 101, 18873, 18875, 18880, 1, 8744, 97, 114, 59, 1, 8891, 113, 59, 1, 8794, 108, 105, 112, 59, 1, 8942, 4, 2, 98, 116, 18896, 18901, 97, 114, 59, 1, 124, 59, 1, 124, 114, 59, 3, 55349, 56627, 116, 114, 105, 59, 1, 8882, 115, 117, 4, 2, 98, 112, 18923, 18927, 59, 3, 8834, 8402, 59, 3, 8835, 8402, 112, 102, 59, 3, 55349, 56679, 114, 111, 112, 59, 1, 8733, 116, 114, 105, 59, 1, 8883, 4, 2, 99, 117, 18955, 18960, 114, 59, 3, 55349, 56523, 4, 2, 98, 112, 18966, 18981, 110, 4, 2, 69, 101, 18973, 18977, 59, 3, 10955, 65024, 59, 3, 8842, 65024, 110, 4, 2, 69, 101, 18988, 18992, 59, 3, 10956, 65024, 59, 3, 8843, 65024, 105, 103, 122, 97, 103, 59, 1, 10650, 4, 7, 99, 101, 102, 111, 112, 114, 115, 19020, 19026, 19061, 19066, 19072, 19075, 19089, 105, 114, 99, 59, 1, 373, 4, 2, 100, 105, 19032, 19055, 4, 2, 98, 103, 19038, 19043, 97, 114, 59, 1, 10847, 101, 4, 2, 59, 113, 19050, 19052, 1, 8743, 59, 1, 8793, 101, 114, 112, 59, 1, 8472, 114, 59, 3, 55349, 56628, 112, 102, 59, 3, 55349, 56680, 59, 1, 8472, 4, 2, 59, 101, 19081, 19083, 1, 8768, 97, 116, 104, 59, 1, 8768, 99, 114, 59, 3, 55349, 56524, 4, 14, 99, 100, 102, 104, 105, 108, 109, 110, 111, 114, 115, 117, 118, 119, 19125, 19146, 19152, 19157, 19173, 19176, 19192, 19197, 19202, 19236, 19252, 19269, 19286, 19291, 4, 3, 97, 105, 117, 19133, 19137, 19142, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 116, 114, 105, 59, 1, 9661, 114, 59, 3, 55349, 56629, 4, 2, 65, 97, 19163, 19168, 114, 114, 59, 1, 10234, 114, 114, 59, 1, 10231, 59, 1, 958, 4, 2, 65, 97, 19182, 19187, 114, 114, 59, 1, 10232, 114, 114, 59, 1, 10229, 97, 112, 59, 1, 10236, 105, 115, 59, 1, 8955, 4, 3, 100, 112, 116, 19210, 19215, 19230, 111, 116, 59, 1, 10752, 4, 2, 102, 108, 19221, 19225, 59, 3, 55349, 56681, 117, 115, 59, 1, 10753, 105, 109, 101, 59, 1, 10754, 4, 2, 65, 97, 19242, 19247, 114, 114, 59, 1, 10233, 114, 114, 59, 1, 10230, 4, 2, 99, 113, 19258, 19263, 114, 59, 3, 55349, 56525, 99, 117, 112, 59, 1, 10758, 4, 2, 112, 116, 19275, 19281, 108, 117, 115, 59, 1, 10756, 114, 105, 59, 1, 9651, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 19316, 19335, 19349, 19357, 19362, 19367, 19373, 19379, 99, 4, 2, 117, 121, 19323, 19332, 116, 101, 5, 253, 1, 59, 19330, 1, 253, 59, 1, 1103, 4, 2, 105, 121, 19341, 19346, 114, 99, 59, 1, 375, 59, 1, 1099, 110, 5, 165, 1, 59, 19355, 1, 165, 114, 59, 3, 55349, 56630, 99, 121, 59, 1, 1111, 112, 102, 59, 3, 55349, 56682, 99, 114, 59, 3, 55349, 56526, 4, 2, 99, 109, 19385, 19389, 121, 59, 1, 1102, 108, 5, 255, 1, 59, 19395, 1, 255, 4, 10, 97, 99, 100, 101, 102, 104, 105, 111, 115, 119, 19419, 19426, 19441, 19446, 19462, 19467, 19472, 19480, 19486, 19492, 99, 117, 116, 101, 59, 1, 378, 4, 2, 97, 121, 19432, 19438, 114, 111, 110, 59, 1, 382, 59, 1, 1079, 111, 116, 59, 1, 380, 4, 2, 101, 116, 19452, 19458, 116, 114, 102, 59, 1, 8488, 97, 59, 1, 950, 114, 59, 3, 55349, 56631, 99, 121, 59, 1, 1078, 103, 114, 97, 114, 114, 59, 1, 8669, 112, 102, 59, 3, 55349, 56683, 99, 114, 59, 3, 55349, 56527, 4, 2, 106, 110, 19498, 19501, 59, 1, 8205, 106, 59, 1, 8204]);
  }
});

// node_modules/parse5/lib/tokenizer/index.js
var require_tokenizer = __commonJS({
  "node_modules/parse5/lib/tokenizer/index.js"(exports, module2) {
    "use strict";
    var Preprocessor = require_preprocessor();
    var unicode = require_unicode();
    var neTree = require_named_entity_data();
    var ERR = require_error_codes();
    var $3 = unicode.CODE_POINTS;
    var $$ = unicode.CODE_POINT_SEQUENCES;
    var C1_CONTROLS_REFERENCE_REPLACEMENTS = {
      128: 8364,
      130: 8218,
      131: 402,
      132: 8222,
      133: 8230,
      134: 8224,
      135: 8225,
      136: 710,
      137: 8240,
      138: 352,
      139: 8249,
      140: 338,
      142: 381,
      145: 8216,
      146: 8217,
      147: 8220,
      148: 8221,
      149: 8226,
      150: 8211,
      151: 8212,
      152: 732,
      153: 8482,
      154: 353,
      155: 8250,
      156: 339,
      158: 382,
      159: 376
    };
    var HAS_DATA_FLAG = 1 << 0;
    var DATA_DUPLET_FLAG = 1 << 1;
    var HAS_BRANCHES_FLAG = 1 << 2;
    var MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;
    var DATA_STATE = "DATA_STATE";
    var RCDATA_STATE = "RCDATA_STATE";
    var RAWTEXT_STATE = "RAWTEXT_STATE";
    var SCRIPT_DATA_STATE = "SCRIPT_DATA_STATE";
    var PLAINTEXT_STATE = "PLAINTEXT_STATE";
    var TAG_OPEN_STATE = "TAG_OPEN_STATE";
    var END_TAG_OPEN_STATE = "END_TAG_OPEN_STATE";
    var TAG_NAME_STATE = "TAG_NAME_STATE";
    var RCDATA_LESS_THAN_SIGN_STATE = "RCDATA_LESS_THAN_SIGN_STATE";
    var RCDATA_END_TAG_OPEN_STATE = "RCDATA_END_TAG_OPEN_STATE";
    var RCDATA_END_TAG_NAME_STATE = "RCDATA_END_TAG_NAME_STATE";
    var RAWTEXT_LESS_THAN_SIGN_STATE = "RAWTEXT_LESS_THAN_SIGN_STATE";
    var RAWTEXT_END_TAG_OPEN_STATE = "RAWTEXT_END_TAG_OPEN_STATE";
    var RAWTEXT_END_TAG_NAME_STATE = "RAWTEXT_END_TAG_NAME_STATE";
    var SCRIPT_DATA_LESS_THAN_SIGN_STATE = "SCRIPT_DATA_LESS_THAN_SIGN_STATE";
    var SCRIPT_DATA_END_TAG_OPEN_STATE = "SCRIPT_DATA_END_TAG_OPEN_STATE";
    var SCRIPT_DATA_END_TAG_NAME_STATE = "SCRIPT_DATA_END_TAG_NAME_STATE";
    var SCRIPT_DATA_ESCAPE_START_STATE = "SCRIPT_DATA_ESCAPE_START_STATE";
    var SCRIPT_DATA_ESCAPE_START_DASH_STATE = "SCRIPT_DATA_ESCAPE_START_DASH_STATE";
    var SCRIPT_DATA_ESCAPED_STATE = "SCRIPT_DATA_ESCAPED_STATE";
    var SCRIPT_DATA_ESCAPED_DASH_STATE = "SCRIPT_DATA_ESCAPED_DASH_STATE";
    var SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = "SCRIPT_DATA_ESCAPED_DASH_DASH_STATE";
    var SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE";
    var SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE";
    var SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = "SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE";
    var SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = "SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE";
    var SCRIPT_DATA_DOUBLE_ESCAPED_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_STATE";
    var SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE";
    var SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE";
    var SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE";
    var SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = "SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE";
    var BEFORE_ATTRIBUTE_NAME_STATE = "BEFORE_ATTRIBUTE_NAME_STATE";
    var ATTRIBUTE_NAME_STATE = "ATTRIBUTE_NAME_STATE";
    var AFTER_ATTRIBUTE_NAME_STATE = "AFTER_ATTRIBUTE_NAME_STATE";
    var BEFORE_ATTRIBUTE_VALUE_STATE = "BEFORE_ATTRIBUTE_VALUE_STATE";
    var ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = "ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE";
    var ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = "ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE";
    var ATTRIBUTE_VALUE_UNQUOTED_STATE = "ATTRIBUTE_VALUE_UNQUOTED_STATE";
    var AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = "AFTER_ATTRIBUTE_VALUE_QUOTED_STATE";
    var SELF_CLOSING_START_TAG_STATE = "SELF_CLOSING_START_TAG_STATE";
    var BOGUS_COMMENT_STATE = "BOGUS_COMMENT_STATE";
    var MARKUP_DECLARATION_OPEN_STATE = "MARKUP_DECLARATION_OPEN_STATE";
    var COMMENT_START_STATE = "COMMENT_START_STATE";
    var COMMENT_START_DASH_STATE = "COMMENT_START_DASH_STATE";
    var COMMENT_STATE = "COMMENT_STATE";
    var COMMENT_LESS_THAN_SIGN_STATE = "COMMENT_LESS_THAN_SIGN_STATE";
    var COMMENT_LESS_THAN_SIGN_BANG_STATE = "COMMENT_LESS_THAN_SIGN_BANG_STATE";
    var COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = "COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE";
    var COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE";
    var COMMENT_END_DASH_STATE = "COMMENT_END_DASH_STATE";
    var COMMENT_END_STATE = "COMMENT_END_STATE";
    var COMMENT_END_BANG_STATE = "COMMENT_END_BANG_STATE";
    var DOCTYPE_STATE = "DOCTYPE_STATE";
    var BEFORE_DOCTYPE_NAME_STATE = "BEFORE_DOCTYPE_NAME_STATE";
    var DOCTYPE_NAME_STATE = "DOCTYPE_NAME_STATE";
    var AFTER_DOCTYPE_NAME_STATE = "AFTER_DOCTYPE_NAME_STATE";
    var AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = "AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE";
    var BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE";
    var DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE";
    var DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE";
    var AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE";
    var BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE";
    var AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = "AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE";
    var BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE";
    var DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE";
    var DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE";
    var AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE";
    var BOGUS_DOCTYPE_STATE = "BOGUS_DOCTYPE_STATE";
    var CDATA_SECTION_STATE = "CDATA_SECTION_STATE";
    var CDATA_SECTION_BRACKET_STATE = "CDATA_SECTION_BRACKET_STATE";
    var CDATA_SECTION_END_STATE = "CDATA_SECTION_END_STATE";
    var CHARACTER_REFERENCE_STATE = "CHARACTER_REFERENCE_STATE";
    var NAMED_CHARACTER_REFERENCE_STATE = "NAMED_CHARACTER_REFERENCE_STATE";
    var AMBIGUOUS_AMPERSAND_STATE = "AMBIGUOS_AMPERSAND_STATE";
    var NUMERIC_CHARACTER_REFERENCE_STATE = "NUMERIC_CHARACTER_REFERENCE_STATE";
    var HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = "HEXADEMICAL_CHARACTER_REFERENCE_START_STATE";
    var DECIMAL_CHARACTER_REFERENCE_START_STATE = "DECIMAL_CHARACTER_REFERENCE_START_STATE";
    var HEXADEMICAL_CHARACTER_REFERENCE_STATE = "HEXADEMICAL_CHARACTER_REFERENCE_STATE";
    var DECIMAL_CHARACTER_REFERENCE_STATE = "DECIMAL_CHARACTER_REFERENCE_STATE";
    var NUMERIC_CHARACTER_REFERENCE_END_STATE = "NUMERIC_CHARACTER_REFERENCE_END_STATE";
    function isWhitespace(cp) {
      return cp === $3.SPACE || cp === $3.LINE_FEED || cp === $3.TABULATION || cp === $3.FORM_FEED;
    }
    function isAsciiDigit(cp) {
      return cp >= $3.DIGIT_0 && cp <= $3.DIGIT_9;
    }
    function isAsciiUpper(cp) {
      return cp >= $3.LATIN_CAPITAL_A && cp <= $3.LATIN_CAPITAL_Z;
    }
    function isAsciiLower(cp) {
      return cp >= $3.LATIN_SMALL_A && cp <= $3.LATIN_SMALL_Z;
    }
    function isAsciiLetter(cp) {
      return isAsciiLower(cp) || isAsciiUpper(cp);
    }
    function isAsciiAlphaNumeric(cp) {
      return isAsciiLetter(cp) || isAsciiDigit(cp);
    }
    function isAsciiUpperHexDigit(cp) {
      return cp >= $3.LATIN_CAPITAL_A && cp <= $3.LATIN_CAPITAL_F;
    }
    function isAsciiLowerHexDigit(cp) {
      return cp >= $3.LATIN_SMALL_A && cp <= $3.LATIN_SMALL_F;
    }
    function isAsciiHexDigit(cp) {
      return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);
    }
    function toAsciiLowerCodePoint(cp) {
      return cp + 32;
    }
    function toChar(cp) {
      if (cp <= 65535) {
        return String.fromCharCode(cp);
      }
      cp -= 65536;
      return String.fromCharCode(cp >>> 10 & 1023 | 55296) + String.fromCharCode(56320 | cp & 1023);
    }
    function toAsciiLowerChar(cp) {
      return String.fromCharCode(toAsciiLowerCodePoint(cp));
    }
    function findNamedEntityTreeBranch(nodeIx, cp) {
      const branchCount = neTree[++nodeIx];
      let lo = ++nodeIx;
      let hi = lo + branchCount - 1;
      while (lo <= hi) {
        const mid = lo + hi >>> 1;
        const midCp = neTree[mid];
        if (midCp < cp) {
          lo = mid + 1;
        } else if (midCp > cp) {
          hi = mid - 1;
        } else {
          return neTree[mid + branchCount];
        }
      }
      return -1;
    }
    var Tokenizer = class {
      constructor() {
        this.preprocessor = new Preprocessor();
        this.tokenQueue = [];
        this.allowCDATA = false;
        this.state = DATA_STATE;
        this.returnState = "";
        this.charRefCode = -1;
        this.tempBuff = [];
        this.lastStartTagName = "";
        this.consumedAfterSnapshot = -1;
        this.active = false;
        this.currentCharacterToken = null;
        this.currentToken = null;
        this.currentAttr = null;
      }
      _err() {
      }
      _errOnNextCodePoint(err) {
        this._consume();
        this._err(err);
        this._unconsume();
      }
      getNextToken() {
        while (!this.tokenQueue.length && this.active) {
          this.consumedAfterSnapshot = 0;
          const cp = this._consume();
          if (!this._ensureHibernation()) {
            this[this.state](cp);
          }
        }
        return this.tokenQueue.shift();
      }
      write(chunk, isLastChunk) {
        this.active = true;
        this.preprocessor.write(chunk, isLastChunk);
      }
      insertHtmlAtCurrentPos(chunk) {
        this.active = true;
        this.preprocessor.insertHtmlAtCurrentPos(chunk);
      }
      _ensureHibernation() {
        if (this.preprocessor.endOfChunkHit) {
          for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {
            this.preprocessor.retreat();
          }
          this.active = false;
          this.tokenQueue.push({ type: Tokenizer.HIBERNATION_TOKEN });
          return true;
        }
        return false;
      }
      _consume() {
        this.consumedAfterSnapshot++;
        return this.preprocessor.advance();
      }
      _unconsume() {
        this.consumedAfterSnapshot--;
        this.preprocessor.retreat();
      }
      _reconsumeInState(state) {
        this.state = state;
        this._unconsume();
      }
      _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {
        let consumedCount = 0;
        let isMatch = true;
        const patternLength = pattern.length;
        let patternPos = 0;
        let cp = startCp;
        let patternCp = void 0;
        for (; patternPos < patternLength; patternPos++) {
          if (patternPos > 0) {
            cp = this._consume();
            consumedCount++;
          }
          if (cp === $3.EOF) {
            isMatch = false;
            break;
          }
          patternCp = pattern[patternPos];
          if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {
            isMatch = false;
            break;
          }
        }
        if (!isMatch) {
          while (consumedCount--) {
            this._unconsume();
          }
        }
        return isMatch;
      }
      _isTempBufferEqualToScriptString() {
        if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {
          return false;
        }
        for (let i3 = 0; i3 < this.tempBuff.length; i3++) {
          if (this.tempBuff[i3] !== $$.SCRIPT_STRING[i3]) {
            return false;
          }
        }
        return true;
      }
      _createStartTagToken() {
        this.currentToken = {
          type: Tokenizer.START_TAG_TOKEN,
          tagName: "",
          selfClosing: false,
          ackSelfClosing: false,
          attrs: []
        };
      }
      _createEndTagToken() {
        this.currentToken = {
          type: Tokenizer.END_TAG_TOKEN,
          tagName: "",
          selfClosing: false,
          attrs: []
        };
      }
      _createCommentToken() {
        this.currentToken = {
          type: Tokenizer.COMMENT_TOKEN,
          data: ""
        };
      }
      _createDoctypeToken(initialName) {
        this.currentToken = {
          type: Tokenizer.DOCTYPE_TOKEN,
          name: initialName,
          forceQuirks: false,
          publicId: null,
          systemId: null
        };
      }
      _createCharacterToken(type, ch) {
        this.currentCharacterToken = {
          type,
          chars: ch
        };
      }
      _createEOFToken() {
        this.currentToken = { type: Tokenizer.EOF_TOKEN };
      }
      _createAttr(attrNameFirstCh) {
        this.currentAttr = {
          name: attrNameFirstCh,
          value: ""
        };
      }
      _leaveAttrName(toState) {
        if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {
          this.currentToken.attrs.push(this.currentAttr);
        } else {
          this._err(ERR.duplicateAttribute);
        }
        this.state = toState;
      }
      _leaveAttrValue(toState) {
        this.state = toState;
      }
      _emitCurrentToken() {
        this._emitCurrentCharacterToken();
        const ct = this.currentToken;
        this.currentToken = null;
        if (ct.type === Tokenizer.START_TAG_TOKEN) {
          this.lastStartTagName = ct.tagName;
        } else if (ct.type === Tokenizer.END_TAG_TOKEN) {
          if (ct.attrs.length > 0) {
            this._err(ERR.endTagWithAttributes);
          }
          if (ct.selfClosing) {
            this._err(ERR.endTagWithTrailingSolidus);
          }
        }
        this.tokenQueue.push(ct);
      }
      _emitCurrentCharacterToken() {
        if (this.currentCharacterToken) {
          this.tokenQueue.push(this.currentCharacterToken);
          this.currentCharacterToken = null;
        }
      }
      _emitEOFToken() {
        this._createEOFToken();
        this._emitCurrentToken();
      }
      _appendCharToCurrentCharacterToken(type, ch) {
        if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {
          this._emitCurrentCharacterToken();
        }
        if (this.currentCharacterToken) {
          this.currentCharacterToken.chars += ch;
        } else {
          this._createCharacterToken(type, ch);
        }
      }
      _emitCodePoint(cp) {
        let type = Tokenizer.CHARACTER_TOKEN;
        if (isWhitespace(cp)) {
          type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;
        } else if (cp === $3.NULL) {
          type = Tokenizer.NULL_CHARACTER_TOKEN;
        }
        this._appendCharToCurrentCharacterToken(type, toChar(cp));
      }
      _emitSeveralCodePoints(codePoints) {
        for (let i3 = 0; i3 < codePoints.length; i3++) {
          this._emitCodePoint(codePoints[i3]);
        }
      }
      _emitChars(ch) {
        this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);
      }
      _matchNamedCharacterReference(startCp) {
        let result = null;
        let excess = 1;
        let i3 = findNamedEntityTreeBranch(0, startCp);
        this.tempBuff.push(startCp);
        while (i3 > -1) {
          const current2 = neTree[i3];
          const inNode = current2 < MAX_BRANCH_MARKER_VALUE;
          const nodeWithData = inNode && current2 & HAS_DATA_FLAG;
          if (nodeWithData) {
            result = current2 & DATA_DUPLET_FLAG ? [neTree[++i3], neTree[++i3]] : [neTree[++i3]];
            excess = 0;
          }
          const cp = this._consume();
          this.tempBuff.push(cp);
          excess++;
          if (cp === $3.EOF) {
            break;
          }
          if (inNode) {
            i3 = current2 & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i3, cp) : -1;
          } else {
            i3 = cp === current2 ? ++i3 : -1;
          }
        }
        while (excess--) {
          this.tempBuff.pop();
          this._unconsume();
        }
        return result;
      }
      _isCharacterReferenceInAttribute() {
        return this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE || this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE || this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE;
      }
      _isCharacterReferenceAttributeQuirk(withSemicolon) {
        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {
          const nextCp = this._consume();
          this._unconsume();
          return nextCp === $3.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);
        }
        return false;
      }
      _flushCodePointsConsumedAsCharacterReference() {
        if (this._isCharacterReferenceInAttribute()) {
          for (let i3 = 0; i3 < this.tempBuff.length; i3++) {
            this.currentAttr.value += toChar(this.tempBuff[i3]);
          }
        } else {
          this._emitSeveralCodePoints(this.tempBuff);
        }
        this.tempBuff = [];
      }
      [DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk();
        if (cp === $3.LESS_THAN_SIGN) {
          this.state = TAG_OPEN_STATE;
        } else if (cp === $3.AMPERSAND) {
          this.returnState = DATA_STATE;
          this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this._emitCodePoint(cp);
        } else if (cp === $3.EOF) {
          this._emitEOFToken();
        } else {
          this._emitCodePoint(cp);
        }
      }
      [RCDATA_STATE](cp) {
        this.preprocessor.dropParsedChunk();
        if (cp === $3.AMPERSAND) {
          this.returnState = RCDATA_STATE;
          this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $3.LESS_THAN_SIGN) {
          this.state = RCDATA_LESS_THAN_SIGN_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._emitEOFToken();
        } else {
          this._emitCodePoint(cp);
        }
      }
      [RAWTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk();
        if (cp === $3.LESS_THAN_SIGN) {
          this.state = RAWTEXT_LESS_THAN_SIGN_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._emitEOFToken();
        } else {
          this._emitCodePoint(cp);
        }
      }
      [SCRIPT_DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk();
        if (cp === $3.LESS_THAN_SIGN) {
          this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._emitEOFToken();
        } else {
          this._emitCodePoint(cp);
        }
      }
      [PLAINTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk();
        if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._emitEOFToken();
        } else {
          this._emitCodePoint(cp);
        }
      }
      [TAG_OPEN_STATE](cp) {
        if (cp === $3.EXCLAMATION_MARK) {
          this.state = MARKUP_DECLARATION_OPEN_STATE;
        } else if (cp === $3.SOLIDUS) {
          this.state = END_TAG_OPEN_STATE;
        } else if (isAsciiLetter(cp)) {
          this._createStartTagToken();
          this._reconsumeInState(TAG_NAME_STATE);
        } else if (cp === $3.QUESTION_MARK) {
          this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);
          this._createCommentToken();
          this._reconsumeInState(BOGUS_COMMENT_STATE);
        } else if (cp === $3.EOF) {
          this._err(ERR.eofBeforeTagName);
          this._emitChars("<");
          this._emitEOFToken();
        } else {
          this._err(ERR.invalidFirstCharacterOfTagName);
          this._emitChars("<");
          this._reconsumeInState(DATA_STATE);
        }
      }
      [END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
          this._createEndTagToken();
          this._reconsumeInState(TAG_NAME_STATE);
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.missingEndTagName);
          this.state = DATA_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofBeforeTagName);
          this._emitChars("</");
          this._emitEOFToken();
        } else {
          this._err(ERR.invalidFirstCharacterOfTagName);
          this._createCommentToken();
          this._reconsumeInState(BOGUS_COMMENT_STATE);
        }
      }
      [TAG_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
          this.state = BEFORE_ATTRIBUTE_NAME_STATE;
        } else if (cp === $3.SOLIDUS) {
          this.state = SELF_CLOSING_START_TAG_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (isAsciiUpper(cp)) {
          this.currentToken.tagName += toAsciiLowerChar(cp);
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInTag);
          this._emitEOFToken();
        } else {
          this.currentToken.tagName += toChar(cp);
        }
      }
      [RCDATA_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $3.SOLIDUS) {
          this.tempBuff = [];
          this.state = RCDATA_END_TAG_OPEN_STATE;
        } else {
          this._emitChars("<");
          this._reconsumeInState(RCDATA_STATE);
        }
      }
      [RCDATA_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
          this._createEndTagToken();
          this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);
        } else {
          this._emitChars("</");
          this._reconsumeInState(RCDATA_STATE);
        }
      }
      [RCDATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
          this.currentToken.tagName += toAsciiLowerChar(cp);
          this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
          this.currentToken.tagName += toChar(cp);
          this.tempBuff.push(cp);
        } else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            }
            if (cp === $3.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            }
            if (cp === $3.GREATER_THAN_SIGN) {
              this.state = DATA_STATE;
              this._emitCurrentToken();
              return;
            }
          }
          this._emitChars("</");
          this._emitSeveralCodePoints(this.tempBuff);
          this._reconsumeInState(RCDATA_STATE);
        }
      }
      [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $3.SOLIDUS) {
          this.tempBuff = [];
          this.state = RAWTEXT_END_TAG_OPEN_STATE;
        } else {
          this._emitChars("<");
          this._reconsumeInState(RAWTEXT_STATE);
        }
      }
      [RAWTEXT_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
          this._createEndTagToken();
          this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);
        } else {
          this._emitChars("</");
          this._reconsumeInState(RAWTEXT_STATE);
        }
      }
      [RAWTEXT_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
          this.currentToken.tagName += toAsciiLowerChar(cp);
          this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
          this.currentToken.tagName += toChar(cp);
          this.tempBuff.push(cp);
        } else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            }
            if (cp === $3.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            }
            if (cp === $3.GREATER_THAN_SIGN) {
              this._emitCurrentToken();
              this.state = DATA_STATE;
              return;
            }
          }
          this._emitChars("</");
          this._emitSeveralCodePoints(this.tempBuff);
          this._reconsumeInState(RAWTEXT_STATE);
        }
      }
      [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $3.SOLIDUS) {
          this.tempBuff = [];
          this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;
        } else if (cp === $3.EXCLAMATION_MARK) {
          this.state = SCRIPT_DATA_ESCAPE_START_STATE;
          this._emitChars("<!");
        } else {
          this._emitChars("<");
          this._reconsumeInState(SCRIPT_DATA_STATE);
        }
      }
      [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
          this._createEndTagToken();
          this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);
        } else {
          this._emitChars("</");
          this._reconsumeInState(SCRIPT_DATA_STATE);
        }
      }
      [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
          this.currentToken.tagName += toAsciiLowerChar(cp);
          this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
          this.currentToken.tagName += toChar(cp);
          this.tempBuff.push(cp);
        } else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            } else if (cp === $3.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            } else if (cp === $3.GREATER_THAN_SIGN) {
              this._emitCurrentToken();
              this.state = DATA_STATE;
              return;
            }
          }
          this._emitChars("</");
          this._emitSeveralCodePoints(this.tempBuff);
          this._reconsumeInState(SCRIPT_DATA_STATE);
        }
      }
      [SCRIPT_DATA_ESCAPE_START_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;
          this._emitChars("-");
        } else {
          this._reconsumeInState(SCRIPT_DATA_STATE);
        }
      }
      [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
          this._emitChars("-");
        } else {
          this._reconsumeInState(SCRIPT_DATA_STATE);
        }
      }
      [SCRIPT_DATA_ESCAPED_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;
          this._emitChars("-");
        } else if (cp === $3.LESS_THAN_SIGN) {
          this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInScriptHtmlCommentLikeText);
          this._emitEOFToken();
        } else {
          this._emitCodePoint(cp);
        }
      }
      [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
          this._emitChars("-");
        } else if (cp === $3.LESS_THAN_SIGN) {
          this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.state = SCRIPT_DATA_ESCAPED_STATE;
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInScriptHtmlCommentLikeText);
          this._emitEOFToken();
        } else {
          this.state = SCRIPT_DATA_ESCAPED_STATE;
          this._emitCodePoint(cp);
        }
      }
      [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this._emitChars("-");
        } else if (cp === $3.LESS_THAN_SIGN) {
          this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this.state = SCRIPT_DATA_STATE;
          this._emitChars(">");
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.state = SCRIPT_DATA_ESCAPED_STATE;
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInScriptHtmlCommentLikeText);
          this._emitEOFToken();
        } else {
          this.state = SCRIPT_DATA_ESCAPED_STATE;
          this._emitCodePoint(cp);
        }
      }
      [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $3.SOLIDUS) {
          this.tempBuff = [];
          this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;
        } else if (isAsciiLetter(cp)) {
          this.tempBuff = [];
          this._emitChars("<");
          this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);
        } else {
          this._emitChars("<");
          this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
      }
      [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
          this._createEndTagToken();
          this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);
        } else {
          this._emitChars("</");
          this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
      }
      [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
          this.currentToken.tagName += toAsciiLowerChar(cp);
          this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
          this.currentToken.tagName += toChar(cp);
          this.tempBuff.push(cp);
        } else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            }
            if (cp === $3.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            }
            if (cp === $3.GREATER_THAN_SIGN) {
              this._emitCurrentToken();
              this.state = DATA_STATE;
              return;
            }
          }
          this._emitChars("</");
          this._emitSeveralCodePoints(this.tempBuff);
          this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
      }
      [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {
        if (isWhitespace(cp) || cp === $3.SOLIDUS || cp === $3.GREATER_THAN_SIGN) {
          this.state = this._isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;
          this._emitCodePoint(cp);
        } else if (isAsciiUpper(cp)) {
          this.tempBuff.push(toAsciiLowerCodePoint(cp));
          this._emitCodePoint(cp);
        } else if (isAsciiLower(cp)) {
          this.tempBuff.push(cp);
          this._emitCodePoint(cp);
        } else {
          this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;
          this._emitChars("-");
        } else if (cp === $3.LESS_THAN_SIGN) {
          this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
          this._emitChars("<");
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInScriptHtmlCommentLikeText);
          this._emitEOFToken();
        } else {
          this._emitCodePoint(cp);
        }
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;
          this._emitChars("-");
        } else if (cp === $3.LESS_THAN_SIGN) {
          this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
          this._emitChars("<");
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInScriptHtmlCommentLikeText);
          this._emitEOFToken();
        } else {
          this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
          this._emitCodePoint(cp);
        }
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this._emitChars("-");
        } else if (cp === $3.LESS_THAN_SIGN) {
          this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
          this._emitChars("<");
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this.state = SCRIPT_DATA_STATE;
          this._emitChars(">");
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
          this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInScriptHtmlCommentLikeText);
          this._emitEOFToken();
        } else {
          this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
          this._emitCodePoint(cp);
        }
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $3.SOLIDUS) {
          this.tempBuff = [];
          this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;
          this._emitChars("/");
        } else {
          this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
        }
      }
      [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {
        if (isWhitespace(cp) || cp === $3.SOLIDUS || cp === $3.GREATER_THAN_SIGN) {
          this.state = this._isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
          this._emitCodePoint(cp);
        } else if (isAsciiUpper(cp)) {
          this.tempBuff.push(toAsciiLowerCodePoint(cp));
          this._emitCodePoint(cp);
        } else if (isAsciiLower(cp)) {
          this.tempBuff.push(cp);
          this._emitCodePoint(cp);
        } else {
          this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
        }
      }
      [BEFORE_ATTRIBUTE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
          return;
        }
        if (cp === $3.SOLIDUS || cp === $3.GREATER_THAN_SIGN || cp === $3.EOF) {
          this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);
        } else if (cp === $3.EQUALS_SIGN) {
          this._err(ERR.unexpectedEqualsSignBeforeAttributeName);
          this._createAttr("=");
          this.state = ATTRIBUTE_NAME_STATE;
        } else {
          this._createAttr("");
          this._reconsumeInState(ATTRIBUTE_NAME_STATE);
        }
      }
      [ATTRIBUTE_NAME_STATE](cp) {
        if (isWhitespace(cp) || cp === $3.SOLIDUS || cp === $3.GREATER_THAN_SIGN || cp === $3.EOF) {
          this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);
          this._unconsume();
        } else if (cp === $3.EQUALS_SIGN) {
          this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);
        } else if (isAsciiUpper(cp)) {
          this.currentAttr.name += toAsciiLowerChar(cp);
        } else if (cp === $3.QUOTATION_MARK || cp === $3.APOSTROPHE || cp === $3.LESS_THAN_SIGN) {
          this._err(ERR.unexpectedCharacterInAttributeName);
          this.currentAttr.name += toChar(cp);
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;
        } else {
          this.currentAttr.name += toChar(cp);
        }
      }
      [AFTER_ATTRIBUTE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
          return;
        }
        if (cp === $3.SOLIDUS) {
          this.state = SELF_CLOSING_START_TAG_STATE;
        } else if (cp === $3.EQUALS_SIGN) {
          this.state = BEFORE_ATTRIBUTE_VALUE_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInTag);
          this._emitEOFToken();
        } else {
          this._createAttr("");
          this._reconsumeInState(ATTRIBUTE_NAME_STATE);
        }
      }
      [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {
        if (isWhitespace(cp)) {
          return;
        }
        if (cp === $3.QUOTATION_MARK) {
          this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;
        } else if (cp === $3.APOSTROPHE) {
          this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.missingAttributeValue);
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else {
          this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);
        }
      }
      [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {
        if (cp === $3.QUOTATION_MARK) {
          this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
        } else if (cp === $3.AMPERSAND) {
          this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;
          this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInTag);
          this._emitEOFToken();
        } else {
          this.currentAttr.value += toChar(cp);
        }
      }
      [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {
        if (cp === $3.APOSTROPHE) {
          this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
        } else if (cp === $3.AMPERSAND) {
          this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;
          this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInTag);
          this._emitEOFToken();
        } else {
          this.currentAttr.value += toChar(cp);
        }
      }
      [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {
        if (isWhitespace(cp)) {
          this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
        } else if (cp === $3.AMPERSAND) {
          this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;
          this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._leaveAttrValue(DATA_STATE);
          this._emitCurrentToken();
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.QUOTATION_MARK || cp === $3.APOSTROPHE || cp === $3.LESS_THAN_SIGN || cp === $3.EQUALS_SIGN || cp === $3.GRAVE_ACCENT) {
          this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);
          this.currentAttr.value += toChar(cp);
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInTag);
          this._emitEOFToken();
        } else {
          this.currentAttr.value += toChar(cp);
        }
      }
      [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {
        if (isWhitespace(cp)) {
          this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
        } else if (cp === $3.SOLIDUS) {
          this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._leaveAttrValue(DATA_STATE);
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInTag);
          this._emitEOFToken();
        } else {
          this._err(ERR.missingWhitespaceBetweenAttributes);
          this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
        }
      }
      [SELF_CLOSING_START_TAG_STATE](cp) {
        if (cp === $3.GREATER_THAN_SIGN) {
          this.currentToken.selfClosing = true;
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInTag);
          this._emitEOFToken();
        } else {
          this._err(ERR.unexpectedSolidusInTag);
          this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
        }
      }
      [BOGUS_COMMENT_STATE](cp) {
        if (cp === $3.GREATER_THAN_SIGN) {
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._emitCurrentToken();
          this._emitEOFToken();
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentToken.data += unicode.REPLACEMENT_CHARACTER;
        } else {
          this.currentToken.data += toChar(cp);
        }
      }
      [MARKUP_DECLARATION_OPEN_STATE](cp) {
        if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {
          this._createCommentToken();
          this.state = COMMENT_START_STATE;
        } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {
          this.state = DOCTYPE_STATE;
        } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {
          if (this.allowCDATA) {
            this.state = CDATA_SECTION_STATE;
          } else {
            this._err(ERR.cdataInHtmlContent);
            this._createCommentToken();
            this.currentToken.data = "[CDATA[";
            this.state = BOGUS_COMMENT_STATE;
          }
        } else if (!this._ensureHibernation()) {
          this._err(ERR.incorrectlyOpenedComment);
          this._createCommentToken();
          this._reconsumeInState(BOGUS_COMMENT_STATE);
        }
      }
      [COMMENT_START_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = COMMENT_START_DASH_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.abruptClosingOfEmptyComment);
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else {
          this._reconsumeInState(COMMENT_STATE);
        }
      }
      [COMMENT_START_DASH_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = COMMENT_END_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.abruptClosingOfEmptyComment);
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInComment);
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.data += "-";
          this._reconsumeInState(COMMENT_STATE);
        }
      }
      [COMMENT_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = COMMENT_END_DASH_STATE;
        } else if (cp === $3.LESS_THAN_SIGN) {
          this.currentToken.data += "<";
          this.state = COMMENT_LESS_THAN_SIGN_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentToken.data += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInComment);
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.data += toChar(cp);
        }
      }
      [COMMENT_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $3.EXCLAMATION_MARK) {
          this.currentToken.data += "!";
          this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;
        } else if (cp === $3.LESS_THAN_SIGN) {
          this.currentToken.data += "!";
        } else {
          this._reconsumeInState(COMMENT_STATE);
        }
      }
      [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;
        } else {
          this._reconsumeInState(COMMENT_STATE);
        }
      }
      [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;
        } else {
          this._reconsumeInState(COMMENT_END_DASH_STATE);
        }
      }
      [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {
        if (cp !== $3.GREATER_THAN_SIGN && cp !== $3.EOF) {
          this._err(ERR.nestedComment);
        }
        this._reconsumeInState(COMMENT_END_STATE);
      }
      [COMMENT_END_DASH_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.state = COMMENT_END_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInComment);
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.data += "-";
          this._reconsumeInState(COMMENT_STATE);
        }
      }
      [COMMENT_END_STATE](cp) {
        if (cp === $3.GREATER_THAN_SIGN) {
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EXCLAMATION_MARK) {
          this.state = COMMENT_END_BANG_STATE;
        } else if (cp === $3.HYPHEN_MINUS) {
          this.currentToken.data += "-";
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInComment);
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.data += "--";
          this._reconsumeInState(COMMENT_STATE);
        }
      }
      [COMMENT_END_BANG_STATE](cp) {
        if (cp === $3.HYPHEN_MINUS) {
          this.currentToken.data += "--!";
          this.state = COMMENT_END_DASH_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.incorrectlyClosedComment);
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInComment);
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.data += "--!";
          this._reconsumeInState(COMMENT_STATE);
        }
      }
      [DOCTYPE_STATE](cp) {
        if (isWhitespace(cp)) {
          this.state = BEFORE_DOCTYPE_NAME_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this._createDoctypeToken(null);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this._err(ERR.missingWhitespaceBeforeDoctypeName);
          this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);
        }
      }
      [BEFORE_DOCTYPE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
          return;
        }
        if (isAsciiUpper(cp)) {
          this._createDoctypeToken(toAsciiLowerChar(cp));
          this.state = DOCTYPE_NAME_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);
          this.state = DOCTYPE_NAME_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.missingDoctypeName);
          this._createDoctypeToken(null);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this.state = DATA_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this._createDoctypeToken(null);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this._createDoctypeToken(toChar(cp));
          this.state = DOCTYPE_NAME_STATE;
        }
      }
      [DOCTYPE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
          this.state = AFTER_DOCTYPE_NAME_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (isAsciiUpper(cp)) {
          this.currentToken.name += toAsciiLowerChar(cp);
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentToken.name += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.name += toChar(cp);
        }
      }
      [AFTER_DOCTYPE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
          return;
        }
        if (cp === $3.GREATER_THAN_SIGN) {
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {
          this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;
        } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {
          this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;
        } else if (!this._ensureHibernation()) {
          this._err(ERR.invalidCharacterSequenceAfterDoctypeName);
          this.currentToken.forceQuirks = true;
          this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
      }
      [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {
        if (isWhitespace(cp)) {
          this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
        } else if (cp === $3.QUOTATION_MARK) {
          this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
          this.currentToken.publicId = "";
          this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $3.APOSTROPHE) {
          this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
          this.currentToken.publicId = "";
          this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.missingDoctypePublicIdentifier);
          this.currentToken.forceQuirks = true;
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
          this.currentToken.forceQuirks = true;
          this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
      }
      [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
          return;
        }
        if (cp === $3.QUOTATION_MARK) {
          this.currentToken.publicId = "";
          this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $3.APOSTROPHE) {
          this.currentToken.publicId = "";
          this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.missingDoctypePublicIdentifier);
          this.currentToken.forceQuirks = true;
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
          this.currentToken.forceQuirks = true;
          this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
      }
      [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        if (cp === $3.QUOTATION_MARK) {
          this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.abruptDoctypePublicIdentifier);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this.state = DATA_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.publicId += toChar(cp);
        }
      }
      [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        if (cp === $3.APOSTROPHE) {
          this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.abruptDoctypePublicIdentifier);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this.state = DATA_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.publicId += toChar(cp);
        }
      }
      [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
          this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.QUOTATION_MARK) {
          this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
          this.currentToken.systemId = "";
          this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $3.APOSTROPHE) {
          this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
          this.currentToken.systemId = "";
          this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
          this.currentToken.forceQuirks = true;
          this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
      }
      [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {
        if (isWhitespace(cp)) {
          return;
        }
        if (cp === $3.GREATER_THAN_SIGN) {
          this._emitCurrentToken();
          this.state = DATA_STATE;
        } else if (cp === $3.QUOTATION_MARK) {
          this.currentToken.systemId = "";
          this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $3.APOSTROPHE) {
          this.currentToken.systemId = "";
          this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
          this.currentToken.forceQuirks = true;
          this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
      }
      [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {
        if (isWhitespace(cp)) {
          this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
        } else if (cp === $3.QUOTATION_MARK) {
          this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
          this.currentToken.systemId = "";
          this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $3.APOSTROPHE) {
          this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
          this.currentToken.systemId = "";
          this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.missingDoctypeSystemIdentifier);
          this.currentToken.forceQuirks = true;
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
          this.currentToken.forceQuirks = true;
          this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
      }
      [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
          return;
        }
        if (cp === $3.QUOTATION_MARK) {
          this.currentToken.systemId = "";
          this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $3.APOSTROPHE) {
          this.currentToken.systemId = "";
          this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.missingDoctypeSystemIdentifier);
          this.currentToken.forceQuirks = true;
          this.state = DATA_STATE;
          this._emitCurrentToken();
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
          this.currentToken.forceQuirks = true;
          this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
      }
      [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        if (cp === $3.QUOTATION_MARK) {
          this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.abruptDoctypeSystemIdentifier);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this.state = DATA_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.systemId += toChar(cp);
        }
      }
      [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        if (cp === $3.APOSTROPHE) {
          this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
          this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $3.GREATER_THAN_SIGN) {
          this._err(ERR.abruptDoctypeSystemIdentifier);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this.state = DATA_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this.currentToken.systemId += toChar(cp);
        }
      }
      [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
          return;
        }
        if (cp === $3.GREATER_THAN_SIGN) {
          this._emitCurrentToken();
          this.state = DATA_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInDoctype);
          this.currentToken.forceQuirks = true;
          this._emitCurrentToken();
          this._emitEOFToken();
        } else {
          this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);
          this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
      }
      [BOGUS_DOCTYPE_STATE](cp) {
        if (cp === $3.GREATER_THAN_SIGN) {
          this._emitCurrentToken();
          this.state = DATA_STATE;
        } else if (cp === $3.NULL) {
          this._err(ERR.unexpectedNullCharacter);
        } else if (cp === $3.EOF) {
          this._emitCurrentToken();
          this._emitEOFToken();
        }
      }
      [CDATA_SECTION_STATE](cp) {
        if (cp === $3.RIGHT_SQUARE_BRACKET) {
          this.state = CDATA_SECTION_BRACKET_STATE;
        } else if (cp === $3.EOF) {
          this._err(ERR.eofInCdata);
          this._emitEOFToken();
        } else {
          this._emitCodePoint(cp);
        }
      }
      [CDATA_SECTION_BRACKET_STATE](cp) {
        if (cp === $3.RIGHT_SQUARE_BRACKET) {
          this.state = CDATA_SECTION_END_STATE;
        } else {
          this._emitChars("]");
          this._reconsumeInState(CDATA_SECTION_STATE);
        }
      }
      [CDATA_SECTION_END_STATE](cp) {
        if (cp === $3.GREATER_THAN_SIGN) {
          this.state = DATA_STATE;
        } else if (cp === $3.RIGHT_SQUARE_BRACKET) {
          this._emitChars("]");
        } else {
          this._emitChars("]]");
          this._reconsumeInState(CDATA_SECTION_STATE);
        }
      }
      [CHARACTER_REFERENCE_STATE](cp) {
        this.tempBuff = [$3.AMPERSAND];
        if (cp === $3.NUMBER_SIGN) {
          this.tempBuff.push(cp);
          this.state = NUMERIC_CHARACTER_REFERENCE_STATE;
        } else if (isAsciiAlphaNumeric(cp)) {
          this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);
        } else {
          this._flushCodePointsConsumedAsCharacterReference();
          this._reconsumeInState(this.returnState);
        }
      }
      [NAMED_CHARACTER_REFERENCE_STATE](cp) {
        const matchResult = this._matchNamedCharacterReference(cp);
        if (this._ensureHibernation()) {
          this.tempBuff = [$3.AMPERSAND];
        } else if (matchResult) {
          const withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $3.SEMICOLON;
          if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {
            if (!withSemicolon) {
              this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);
            }
            this.tempBuff = matchResult;
          }
          this._flushCodePointsConsumedAsCharacterReference();
          this.state = this.returnState;
        } else {
          this._flushCodePointsConsumedAsCharacterReference();
          this.state = AMBIGUOUS_AMPERSAND_STATE;
        }
      }
      [AMBIGUOUS_AMPERSAND_STATE](cp) {
        if (isAsciiAlphaNumeric(cp)) {
          if (this._isCharacterReferenceInAttribute()) {
            this.currentAttr.value += toChar(cp);
          } else {
            this._emitCodePoint(cp);
          }
        } else {
          if (cp === $3.SEMICOLON) {
            this._err(ERR.unknownNamedCharacterReference);
          }
          this._reconsumeInState(this.returnState);
        }
      }
      [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {
        this.charRefCode = 0;
        if (cp === $3.LATIN_SMALL_X || cp === $3.LATIN_CAPITAL_X) {
          this.tempBuff.push(cp);
          this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;
        } else {
          this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);
        }
      }
      [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {
        if (isAsciiHexDigit(cp)) {
          this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);
        } else {
          this._err(ERR.absenceOfDigitsInNumericCharacterReference);
          this._flushCodePointsConsumedAsCharacterReference();
          this._reconsumeInState(this.returnState);
        }
      }
      [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {
        if (isAsciiDigit(cp)) {
          this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);
        } else {
          this._err(ERR.absenceOfDigitsInNumericCharacterReference);
          this._flushCodePointsConsumedAsCharacterReference();
          this._reconsumeInState(this.returnState);
        }
      }
      [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {
        if (isAsciiUpperHexDigit(cp)) {
          this.charRefCode = this.charRefCode * 16 + cp - 55;
        } else if (isAsciiLowerHexDigit(cp)) {
          this.charRefCode = this.charRefCode * 16 + cp - 87;
        } else if (isAsciiDigit(cp)) {
          this.charRefCode = this.charRefCode * 16 + cp - 48;
        } else if (cp === $3.SEMICOLON) {
          this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;
        } else {
          this._err(ERR.missingSemicolonAfterCharacterReference);
          this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);
        }
      }
      [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {
        if (isAsciiDigit(cp)) {
          this.charRefCode = this.charRefCode * 10 + cp - 48;
        } else if (cp === $3.SEMICOLON) {
          this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;
        } else {
          this._err(ERR.missingSemicolonAfterCharacterReference);
          this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);
        }
      }
      [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {
        if (this.charRefCode === $3.NULL) {
          this._err(ERR.nullCharacterReference);
          this.charRefCode = $3.REPLACEMENT_CHARACTER;
        } else if (this.charRefCode > 1114111) {
          this._err(ERR.characterReferenceOutsideUnicodeRange);
          this.charRefCode = $3.REPLACEMENT_CHARACTER;
        } else if (unicode.isSurrogate(this.charRefCode)) {
          this._err(ERR.surrogateCharacterReference);
          this.charRefCode = $3.REPLACEMENT_CHARACTER;
        } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {
          this._err(ERR.noncharacterCharacterReference);
        } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $3.CARRIAGE_RETURN) {
          this._err(ERR.controlCharacterReference);
          const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];
          if (replacement) {
            this.charRefCode = replacement;
          }
        }
        this.tempBuff = [this.charRefCode];
        this._flushCodePointsConsumedAsCharacterReference();
        this._reconsumeInState(this.returnState);
      }
    };
    Tokenizer.CHARACTER_TOKEN = "CHARACTER_TOKEN";
    Tokenizer.NULL_CHARACTER_TOKEN = "NULL_CHARACTER_TOKEN";
    Tokenizer.WHITESPACE_CHARACTER_TOKEN = "WHITESPACE_CHARACTER_TOKEN";
    Tokenizer.START_TAG_TOKEN = "START_TAG_TOKEN";
    Tokenizer.END_TAG_TOKEN = "END_TAG_TOKEN";
    Tokenizer.COMMENT_TOKEN = "COMMENT_TOKEN";
    Tokenizer.DOCTYPE_TOKEN = "DOCTYPE_TOKEN";
    Tokenizer.EOF_TOKEN = "EOF_TOKEN";
    Tokenizer.HIBERNATION_TOKEN = "HIBERNATION_TOKEN";
    Tokenizer.MODE = {
      DATA: DATA_STATE,
      RCDATA: RCDATA_STATE,
      RAWTEXT: RAWTEXT_STATE,
      SCRIPT_DATA: SCRIPT_DATA_STATE,
      PLAINTEXT: PLAINTEXT_STATE
    };
    Tokenizer.getTokenAttr = function(token, attrName) {
      for (let i3 = token.attrs.length - 1; i3 >= 0; i3--) {
        if (token.attrs[i3].name === attrName) {
          return token.attrs[i3].value;
        }
      }
      return null;
    };
    module2.exports = Tokenizer;
  }
});

// node_modules/parse5/lib/common/html.js
var require_html = __commonJS({
  "node_modules/parse5/lib/common/html.js"(exports) {
    "use strict";
    var NS = exports.NAMESPACES = {
      HTML: "http://www.w3.org/1999/xhtml",
      MATHML: "http://www.w3.org/1998/Math/MathML",
      SVG: "http://www.w3.org/2000/svg",
      XLINK: "http://www.w3.org/1999/xlink",
      XML: "http://www.w3.org/XML/1998/namespace",
      XMLNS: "http://www.w3.org/2000/xmlns/"
    };
    exports.ATTRS = {
      TYPE: "type",
      ACTION: "action",
      ENCODING: "encoding",
      PROMPT: "prompt",
      NAME: "name",
      COLOR: "color",
      FACE: "face",
      SIZE: "size"
    };
    exports.DOCUMENT_MODE = {
      NO_QUIRKS: "no-quirks",
      QUIRKS: "quirks",
      LIMITED_QUIRKS: "limited-quirks"
    };
    var $3 = exports.TAG_NAMES = {
      A: "a",
      ADDRESS: "address",
      ANNOTATION_XML: "annotation-xml",
      APPLET: "applet",
      AREA: "area",
      ARTICLE: "article",
      ASIDE: "aside",
      B: "b",
      BASE: "base",
      BASEFONT: "basefont",
      BGSOUND: "bgsound",
      BIG: "big",
      BLOCKQUOTE: "blockquote",
      BODY: "body",
      BR: "br",
      BUTTON: "button",
      CAPTION: "caption",
      CENTER: "center",
      CODE: "code",
      COL: "col",
      COLGROUP: "colgroup",
      DD: "dd",
      DESC: "desc",
      DETAILS: "details",
      DIALOG: "dialog",
      DIR: "dir",
      DIV: "div",
      DL: "dl",
      DT: "dt",
      EM: "em",
      EMBED: "embed",
      FIELDSET: "fieldset",
      FIGCAPTION: "figcaption",
      FIGURE: "figure",
      FONT: "font",
      FOOTER: "footer",
      FOREIGN_OBJECT: "foreignObject",
      FORM: "form",
      FRAME: "frame",
      FRAMESET: "frameset",
      H1: "h1",
      H2: "h2",
      H3: "h3",
      H4: "h4",
      H5: "h5",
      H6: "h6",
      HEAD: "head",
      HEADER: "header",
      HGROUP: "hgroup",
      HR: "hr",
      HTML: "html",
      I: "i",
      IMG: "img",
      IMAGE: "image",
      INPUT: "input",
      IFRAME: "iframe",
      KEYGEN: "keygen",
      LABEL: "label",
      LI: "li",
      LINK: "link",
      LISTING: "listing",
      MAIN: "main",
      MALIGNMARK: "malignmark",
      MARQUEE: "marquee",
      MATH: "math",
      MENU: "menu",
      META: "meta",
      MGLYPH: "mglyph",
      MI: "mi",
      MO: "mo",
      MN: "mn",
      MS: "ms",
      MTEXT: "mtext",
      NAV: "nav",
      NOBR: "nobr",
      NOFRAMES: "noframes",
      NOEMBED: "noembed",
      NOSCRIPT: "noscript",
      OBJECT: "object",
      OL: "ol",
      OPTGROUP: "optgroup",
      OPTION: "option",
      P: "p",
      PARAM: "param",
      PLAINTEXT: "plaintext",
      PRE: "pre",
      RB: "rb",
      RP: "rp",
      RT: "rt",
      RTC: "rtc",
      RUBY: "ruby",
      S: "s",
      SCRIPT: "script",
      SECTION: "section",
      SELECT: "select",
      SOURCE: "source",
      SMALL: "small",
      SPAN: "span",
      STRIKE: "strike",
      STRONG: "strong",
      STYLE: "style",
      SUB: "sub",
      SUMMARY: "summary",
      SUP: "sup",
      TABLE: "table",
      TBODY: "tbody",
      TEMPLATE: "template",
      TEXTAREA: "textarea",
      TFOOT: "tfoot",
      TD: "td",
      TH: "th",
      THEAD: "thead",
      TITLE: "title",
      TR: "tr",
      TRACK: "track",
      TT: "tt",
      U: "u",
      UL: "ul",
      SVG: "svg",
      VAR: "var",
      WBR: "wbr",
      XMP: "xmp"
    };
    exports.SPECIAL_ELEMENTS = {
      [NS.HTML]: {
        [$3.ADDRESS]: true,
        [$3.APPLET]: true,
        [$3.AREA]: true,
        [$3.ARTICLE]: true,
        [$3.ASIDE]: true,
        [$3.BASE]: true,
        [$3.BASEFONT]: true,
        [$3.BGSOUND]: true,
        [$3.BLOCKQUOTE]: true,
        [$3.BODY]: true,
        [$3.BR]: true,
        [$3.BUTTON]: true,
        [$3.CAPTION]: true,
        [$3.CENTER]: true,
        [$3.COL]: true,
        [$3.COLGROUP]: true,
        [$3.DD]: true,
        [$3.DETAILS]: true,
        [$3.DIR]: true,
        [$3.DIV]: true,
        [$3.DL]: true,
        [$3.DT]: true,
        [$3.EMBED]: true,
        [$3.FIELDSET]: true,
        [$3.FIGCAPTION]: true,
        [$3.FIGURE]: true,
        [$3.FOOTER]: true,
        [$3.FORM]: true,
        [$3.FRAME]: true,
        [$3.FRAMESET]: true,
        [$3.H1]: true,
        [$3.H2]: true,
        [$3.H3]: true,
        [$3.H4]: true,
        [$3.H5]: true,
        [$3.H6]: true,
        [$3.HEAD]: true,
        [$3.HEADER]: true,
        [$3.HGROUP]: true,
        [$3.HR]: true,
        [$3.HTML]: true,
        [$3.IFRAME]: true,
        [$3.IMG]: true,
        [$3.INPUT]: true,
        [$3.LI]: true,
        [$3.LINK]: true,
        [$3.LISTING]: true,
        [$3.MAIN]: true,
        [$3.MARQUEE]: true,
        [$3.MENU]: true,
        [$3.META]: true,
        [$3.NAV]: true,
        [$3.NOEMBED]: true,
        [$3.NOFRAMES]: true,
        [$3.NOSCRIPT]: true,
        [$3.OBJECT]: true,
        [$3.OL]: true,
        [$3.P]: true,
        [$3.PARAM]: true,
        [$3.PLAINTEXT]: true,
        [$3.PRE]: true,
        [$3.SCRIPT]: true,
        [$3.SECTION]: true,
        [$3.SELECT]: true,
        [$3.SOURCE]: true,
        [$3.STYLE]: true,
        [$3.SUMMARY]: true,
        [$3.TABLE]: true,
        [$3.TBODY]: true,
        [$3.TD]: true,
        [$3.TEMPLATE]: true,
        [$3.TEXTAREA]: true,
        [$3.TFOOT]: true,
        [$3.TH]: true,
        [$3.THEAD]: true,
        [$3.TITLE]: true,
        [$3.TR]: true,
        [$3.TRACK]: true,
        [$3.UL]: true,
        [$3.WBR]: true,
        [$3.XMP]: true
      },
      [NS.MATHML]: {
        [$3.MI]: true,
        [$3.MO]: true,
        [$3.MN]: true,
        [$3.MS]: true,
        [$3.MTEXT]: true,
        [$3.ANNOTATION_XML]: true
      },
      [NS.SVG]: {
        [$3.TITLE]: true,
        [$3.FOREIGN_OBJECT]: true,
        [$3.DESC]: true
      }
    };
  }
});

// node_modules/parse5/lib/parser/open-element-stack.js
var require_open_element_stack = __commonJS({
  "node_modules/parse5/lib/parser/open-element-stack.js"(exports, module2) {
    "use strict";
    var HTML = require_html();
    var $3 = HTML.TAG_NAMES;
    var NS = HTML.NAMESPACES;
    function isImpliedEndTagRequired(tn) {
      switch (tn.length) {
        case 1:
          return tn === $3.P;
        case 2:
          return tn === $3.RB || tn === $3.RP || tn === $3.RT || tn === $3.DD || tn === $3.DT || tn === $3.LI;
        case 3:
          return tn === $3.RTC;
        case 6:
          return tn === $3.OPTION;
        case 8:
          return tn === $3.OPTGROUP;
      }
      return false;
    }
    function isImpliedEndTagRequiredThoroughly(tn) {
      switch (tn.length) {
        case 1:
          return tn === $3.P;
        case 2:
          return tn === $3.RB || tn === $3.RP || tn === $3.RT || tn === $3.DD || tn === $3.DT || tn === $3.LI || tn === $3.TD || tn === $3.TH || tn === $3.TR;
        case 3:
          return tn === $3.RTC;
        case 5:
          return tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD;
        case 6:
          return tn === $3.OPTION;
        case 7:
          return tn === $3.CAPTION;
        case 8:
          return tn === $3.OPTGROUP || tn === $3.COLGROUP;
      }
      return false;
    }
    function isScopingElement(tn, ns2) {
      switch (tn.length) {
        case 2:
          if (tn === $3.TD || tn === $3.TH) {
            return ns2 === NS.HTML;
          } else if (tn === $3.MI || tn === $3.MO || tn === $3.MN || tn === $3.MS) {
            return ns2 === NS.MATHML;
          }
          break;
        case 4:
          if (tn === $3.HTML) {
            return ns2 === NS.HTML;
          } else if (tn === $3.DESC) {
            return ns2 === NS.SVG;
          }
          break;
        case 5:
          if (tn === $3.TABLE) {
            return ns2 === NS.HTML;
          } else if (tn === $3.MTEXT) {
            return ns2 === NS.MATHML;
          } else if (tn === $3.TITLE) {
            return ns2 === NS.SVG;
          }
          break;
        case 6:
          return (tn === $3.APPLET || tn === $3.OBJECT) && ns2 === NS.HTML;
        case 7:
          return (tn === $3.CAPTION || tn === $3.MARQUEE) && ns2 === NS.HTML;
        case 8:
          return tn === $3.TEMPLATE && ns2 === NS.HTML;
        case 13:
          return tn === $3.FOREIGN_OBJECT && ns2 === NS.SVG;
        case 14:
          return tn === $3.ANNOTATION_XML && ns2 === NS.MATHML;
      }
      return false;
    }
    var OpenElementStack = class {
      constructor(document4, treeAdapter) {
        this.stackTop = -1;
        this.items = [];
        this.current = document4;
        this.currentTagName = null;
        this.currentTmplContent = null;
        this.tmplCount = 0;
        this.treeAdapter = treeAdapter;
      }
      _indexOf(element6) {
        let idx = -1;
        for (let i3 = this.stackTop; i3 >= 0; i3--) {
          if (this.items[i3] === element6) {
            idx = i3;
            break;
          }
        }
        return idx;
      }
      _isInTemplate() {
        return this.currentTagName === $3.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;
      }
      _updateCurrentElement() {
        this.current = this.items[this.stackTop];
        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);
        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;
      }
      push(element6) {
        this.items[++this.stackTop] = element6;
        this._updateCurrentElement();
        if (this._isInTemplate()) {
          this.tmplCount++;
        }
      }
      pop() {
        this.stackTop--;
        if (this.tmplCount > 0 && this._isInTemplate()) {
          this.tmplCount--;
        }
        this._updateCurrentElement();
      }
      replace(oldElement, newElement) {
        const idx = this._indexOf(oldElement);
        this.items[idx] = newElement;
        if (idx === this.stackTop) {
          this._updateCurrentElement();
        }
      }
      insertAfter(referenceElement, newElement) {
        const insertionIdx = this._indexOf(referenceElement) + 1;
        this.items.splice(insertionIdx, 0, newElement);
        if (insertionIdx === ++this.stackTop) {
          this._updateCurrentElement();
        }
      }
      popUntilTagNamePopped(tagName) {
        while (this.stackTop > -1) {
          const tn = this.currentTagName;
          const ns2 = this.treeAdapter.getNamespaceURI(this.current);
          this.pop();
          if (tn === tagName && ns2 === NS.HTML) {
            break;
          }
        }
      }
      popUntilElementPopped(element6) {
        while (this.stackTop > -1) {
          const poppedElement = this.current;
          this.pop();
          if (poppedElement === element6) {
            break;
          }
        }
      }
      popUntilNumberedHeaderPopped() {
        while (this.stackTop > -1) {
          const tn = this.currentTagName;
          const ns2 = this.treeAdapter.getNamespaceURI(this.current);
          this.pop();
          if (tn === $3.H1 || tn === $3.H2 || tn === $3.H3 || tn === $3.H4 || tn === $3.H5 || tn === $3.H6 && ns2 === NS.HTML) {
            break;
          }
        }
      }
      popUntilTableCellPopped() {
        while (this.stackTop > -1) {
          const tn = this.currentTagName;
          const ns2 = this.treeAdapter.getNamespaceURI(this.current);
          this.pop();
          if (tn === $3.TD || tn === $3.TH && ns2 === NS.HTML) {
            break;
          }
        }
      }
      popAllUpToHtmlElement() {
        this.stackTop = 0;
        this._updateCurrentElement();
      }
      clearBackToTableContext() {
        while (this.currentTagName !== $3.TABLE && this.currentTagName !== $3.TEMPLATE && this.currentTagName !== $3.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {
          this.pop();
        }
      }
      clearBackToTableBodyContext() {
        while (this.currentTagName !== $3.TBODY && this.currentTagName !== $3.TFOOT && this.currentTagName !== $3.THEAD && this.currentTagName !== $3.TEMPLATE && this.currentTagName !== $3.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {
          this.pop();
        }
      }
      clearBackToTableRowContext() {
        while (this.currentTagName !== $3.TR && this.currentTagName !== $3.TEMPLATE && this.currentTagName !== $3.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {
          this.pop();
        }
      }
      remove(element6) {
        for (let i3 = this.stackTop; i3 >= 0; i3--) {
          if (this.items[i3] === element6) {
            this.items.splice(i3, 1);
            this.stackTop--;
            this._updateCurrentElement();
            break;
          }
        }
      }
      tryPeekProperlyNestedBodyElement() {
        const element6 = this.items[1];
        return element6 && this.treeAdapter.getTagName(element6) === $3.BODY ? element6 : null;
      }
      contains(element6) {
        return this._indexOf(element6) > -1;
      }
      getCommonAncestor(element6) {
        let elementIdx = this._indexOf(element6);
        return --elementIdx >= 0 ? this.items[elementIdx] : null;
      }
      isRootHtmlElementCurrent() {
        return this.stackTop === 0 && this.currentTagName === $3.HTML;
      }
      hasInScope(tagName) {
        for (let i3 = this.stackTop; i3 >= 0; i3--) {
          const tn = this.treeAdapter.getTagName(this.items[i3]);
          const ns2 = this.treeAdapter.getNamespaceURI(this.items[i3]);
          if (tn === tagName && ns2 === NS.HTML) {
            return true;
          }
          if (isScopingElement(tn, ns2)) {
            return false;
          }
        }
        return true;
      }
      hasNumberedHeaderInScope() {
        for (let i3 = this.stackTop; i3 >= 0; i3--) {
          const tn = this.treeAdapter.getTagName(this.items[i3]);
          const ns2 = this.treeAdapter.getNamespaceURI(this.items[i3]);
          if ((tn === $3.H1 || tn === $3.H2 || tn === $3.H3 || tn === $3.H4 || tn === $3.H5 || tn === $3.H6) && ns2 === NS.HTML) {
            return true;
          }
          if (isScopingElement(tn, ns2)) {
            return false;
          }
        }
        return true;
      }
      hasInListItemScope(tagName) {
        for (let i3 = this.stackTop; i3 >= 0; i3--) {
          const tn = this.treeAdapter.getTagName(this.items[i3]);
          const ns2 = this.treeAdapter.getNamespaceURI(this.items[i3]);
          if (tn === tagName && ns2 === NS.HTML) {
            return true;
          }
          if ((tn === $3.UL || tn === $3.OL) && ns2 === NS.HTML || isScopingElement(tn, ns2)) {
            return false;
          }
        }
        return true;
      }
      hasInButtonScope(tagName) {
        for (let i3 = this.stackTop; i3 >= 0; i3--) {
          const tn = this.treeAdapter.getTagName(this.items[i3]);
          const ns2 = this.treeAdapter.getNamespaceURI(this.items[i3]);
          if (tn === tagName && ns2 === NS.HTML) {
            return true;
          }
          if (tn === $3.BUTTON && ns2 === NS.HTML || isScopingElement(tn, ns2)) {
            return false;
          }
        }
        return true;
      }
      hasInTableScope(tagName) {
        for (let i3 = this.stackTop; i3 >= 0; i3--) {
          const tn = this.treeAdapter.getTagName(this.items[i3]);
          const ns2 = this.treeAdapter.getNamespaceURI(this.items[i3]);
          if (ns2 !== NS.HTML) {
            continue;
          }
          if (tn === tagName) {
            return true;
          }
          if (tn === $3.TABLE || tn === $3.TEMPLATE || tn === $3.HTML) {
            return false;
          }
        }
        return true;
      }
      hasTableBodyContextInTableScope() {
        for (let i3 = this.stackTop; i3 >= 0; i3--) {
          const tn = this.treeAdapter.getTagName(this.items[i3]);
          const ns2 = this.treeAdapter.getNamespaceURI(this.items[i3]);
          if (ns2 !== NS.HTML) {
            continue;
          }
          if (tn === $3.TBODY || tn === $3.THEAD || tn === $3.TFOOT) {
            return true;
          }
          if (tn === $3.TABLE || tn === $3.HTML) {
            return false;
          }
        }
        return true;
      }
      hasInSelectScope(tagName) {
        for (let i3 = this.stackTop; i3 >= 0; i3--) {
          const tn = this.treeAdapter.getTagName(this.items[i3]);
          const ns2 = this.treeAdapter.getNamespaceURI(this.items[i3]);
          if (ns2 !== NS.HTML) {
            continue;
          }
          if (tn === tagName) {
            return true;
          }
          if (tn !== $3.OPTION && tn !== $3.OPTGROUP) {
            return false;
          }
        }
        return true;
      }
      generateImpliedEndTags() {
        while (isImpliedEndTagRequired(this.currentTagName)) {
          this.pop();
        }
      }
      generateImpliedEndTagsThoroughly() {
        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {
          this.pop();
        }
      }
      generateImpliedEndTagsWithExclusion(exclusionTagName) {
        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {
          this.pop();
        }
      }
    };
    module2.exports = OpenElementStack;
  }
});

// node_modules/parse5/lib/parser/formatting-element-list.js
var require_formatting_element_list = __commonJS({
  "node_modules/parse5/lib/parser/formatting-element-list.js"(exports, module2) {
    "use strict";
    var NOAH_ARK_CAPACITY = 3;
    var FormattingElementList = class {
      constructor(treeAdapter) {
        this.length = 0;
        this.entries = [];
        this.treeAdapter = treeAdapter;
        this.bookmark = null;
      }
      _getNoahArkConditionCandidates(newElement) {
        const candidates = [];
        if (this.length >= NOAH_ARK_CAPACITY) {
          const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;
          const neTagName = this.treeAdapter.getTagName(newElement);
          const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);
          for (let i3 = this.length - 1; i3 >= 0; i3--) {
            const entry = this.entries[i3];
            if (entry.type === FormattingElementList.MARKER_ENTRY) {
              break;
            }
            const element6 = entry.element;
            const elementAttrs = this.treeAdapter.getAttrList(element6);
            const isCandidate = this.treeAdapter.getTagName(element6) === neTagName && this.treeAdapter.getNamespaceURI(element6) === neNamespaceURI && elementAttrs.length === neAttrsLength;
            if (isCandidate) {
              candidates.push({ idx: i3, attrs: elementAttrs });
            }
          }
        }
        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;
      }
      _ensureNoahArkCondition(newElement) {
        const candidates = this._getNoahArkConditionCandidates(newElement);
        let cLength = candidates.length;
        if (cLength) {
          const neAttrs = this.treeAdapter.getAttrList(newElement);
          const neAttrsLength = neAttrs.length;
          const neAttrsMap = /* @__PURE__ */ Object.create(null);
          for (let i3 = 0; i3 < neAttrsLength; i3++) {
            const neAttr = neAttrs[i3];
            neAttrsMap[neAttr.name] = neAttr.value;
          }
          for (let i3 = 0; i3 < neAttrsLength; i3++) {
            for (let j = 0; j < cLength; j++) {
              const cAttr = candidates[j].attrs[i3];
              if (neAttrsMap[cAttr.name] !== cAttr.value) {
                candidates.splice(j, 1);
                cLength--;
              }
              if (candidates.length < NOAH_ARK_CAPACITY) {
                return;
              }
            }
          }
          for (let i3 = cLength - 1; i3 >= NOAH_ARK_CAPACITY - 1; i3--) {
            this.entries.splice(candidates[i3].idx, 1);
            this.length--;
          }
        }
      }
      insertMarker() {
        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });
        this.length++;
      }
      pushElement(element6, token) {
        this._ensureNoahArkCondition(element6);
        this.entries.push({
          type: FormattingElementList.ELEMENT_ENTRY,
          element: element6,
          token
        });
        this.length++;
      }
      insertElementAfterBookmark(element6, token) {
        let bookmarkIdx = this.length - 1;
        for (; bookmarkIdx >= 0; bookmarkIdx--) {
          if (this.entries[bookmarkIdx] === this.bookmark) {
            break;
          }
        }
        this.entries.splice(bookmarkIdx + 1, 0, {
          type: FormattingElementList.ELEMENT_ENTRY,
          element: element6,
          token
        });
        this.length++;
      }
      removeEntry(entry) {
        for (let i3 = this.length - 1; i3 >= 0; i3--) {
          if (this.entries[i3] === entry) {
            this.entries.splice(i3, 1);
            this.length--;
            break;
          }
        }
      }
      clearToLastMarker() {
        while (this.length) {
          const entry = this.entries.pop();
          this.length--;
          if (entry.type === FormattingElementList.MARKER_ENTRY) {
            break;
          }
        }
      }
      getElementEntryInScopeWithTagName(tagName) {
        for (let i3 = this.length - 1; i3 >= 0; i3--) {
          const entry = this.entries[i3];
          if (entry.type === FormattingElementList.MARKER_ENTRY) {
            return null;
          }
          if (this.treeAdapter.getTagName(entry.element) === tagName) {
            return entry;
          }
        }
        return null;
      }
      getElementEntry(element6) {
        for (let i3 = this.length - 1; i3 >= 0; i3--) {
          const entry = this.entries[i3];
          if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element6) {
            return entry;
          }
        }
        return null;
      }
    };
    FormattingElementList.MARKER_ENTRY = "MARKER_ENTRY";
    FormattingElementList.ELEMENT_ENTRY = "ELEMENT_ENTRY";
    module2.exports = FormattingElementList;
  }
});

// node_modules/parse5/lib/utils/mixin.js
var require_mixin = __commonJS({
  "node_modules/parse5/lib/utils/mixin.js"(exports, module2) {
    "use strict";
    var Mixin = class {
      constructor(host) {
        const originalMethods = {};
        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);
        for (const key2 of Object.keys(overriddenMethods)) {
          if (typeof overriddenMethods[key2] === "function") {
            originalMethods[key2] = host[key2];
            host[key2] = overriddenMethods[key2];
          }
        }
      }
      _getOverriddenMethods() {
        throw new Error("Not implemented");
      }
    };
    Mixin.install = function(host, Ctor, opts) {
      if (!host.__mixins) {
        host.__mixins = [];
      }
      for (let i3 = 0; i3 < host.__mixins.length; i3++) {
        if (host.__mixins[i3].constructor === Ctor) {
          return host.__mixins[i3];
        }
      }
      const mixin = new Ctor(host, opts);
      host.__mixins.push(mixin);
      return mixin;
    };
    module2.exports = Mixin;
  }
});

// node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js
var require_preprocessor_mixin = __commonJS({
  "node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js"(exports, module2) {
    "use strict";
    var Mixin = require_mixin();
    var PositionTrackingPreprocessorMixin = class extends Mixin {
      constructor(preprocessor) {
        super(preprocessor);
        this.preprocessor = preprocessor;
        this.isEol = false;
        this.lineStartPos = 0;
        this.droppedBufferSize = 0;
        this.offset = 0;
        this.col = 0;
        this.line = 1;
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          advance() {
            const pos = this.pos + 1;
            const ch = this.html[pos];
            if (mxn.isEol) {
              mxn.isEol = false;
              mxn.line++;
              mxn.lineStartPos = pos;
            }
            if (ch === "\n" || ch === "\r" && this.html[pos + 1] !== "\n") {
              mxn.isEol = true;
            }
            mxn.col = pos - mxn.lineStartPos + 1;
            mxn.offset = mxn.droppedBufferSize + pos;
            return orig.advance.call(this);
          },
          retreat() {
            orig.retreat.call(this);
            mxn.isEol = false;
            mxn.col = this.pos - mxn.lineStartPos + 1;
          },
          dropParsedChunk() {
            const prevPos = this.pos;
            orig.dropParsedChunk.call(this);
            const reduction = prevPos - this.pos;
            mxn.lineStartPos -= reduction;
            mxn.droppedBufferSize += reduction;
            mxn.offset = mxn.droppedBufferSize + this.pos;
          }
        };
      }
    };
    module2.exports = PositionTrackingPreprocessorMixin;
  }
});

// node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js
var require_tokenizer_mixin = __commonJS({
  "node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js"(exports, module2) {
    "use strict";
    var Mixin = require_mixin();
    var Tokenizer = require_tokenizer();
    var PositionTrackingPreprocessorMixin = require_preprocessor_mixin();
    var LocationInfoTokenizerMixin = class extends Mixin {
      constructor(tokenizer2) {
        super(tokenizer2);
        this.tokenizer = tokenizer2;
        this.posTracker = Mixin.install(tokenizer2.preprocessor, PositionTrackingPreprocessorMixin);
        this.currentAttrLocation = null;
        this.ctLoc = null;
      }
      _getCurrentLocation() {
        return {
          startLine: this.posTracker.line,
          startCol: this.posTracker.col,
          startOffset: this.posTracker.offset,
          endLine: -1,
          endCol: -1,
          endOffset: -1
        };
      }
      _attachCurrentAttrLocationInfo() {
        this.currentAttrLocation.endLine = this.posTracker.line;
        this.currentAttrLocation.endCol = this.posTracker.col;
        this.currentAttrLocation.endOffset = this.posTracker.offset;
        const currentToken = this.tokenizer.currentToken;
        const currentAttr = this.tokenizer.currentAttr;
        if (!currentToken.location.attrs) {
          currentToken.location.attrs = /* @__PURE__ */ Object.create(null);
        }
        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;
      }
      _getOverriddenMethods(mxn, orig) {
        const methods = {
          _createStartTagToken() {
            orig._createStartTagToken.call(this);
            this.currentToken.location = mxn.ctLoc;
          },
          _createEndTagToken() {
            orig._createEndTagToken.call(this);
            this.currentToken.location = mxn.ctLoc;
          },
          _createCommentToken() {
            orig._createCommentToken.call(this);
            this.currentToken.location = mxn.ctLoc;
          },
          _createDoctypeToken(initialName) {
            orig._createDoctypeToken.call(this, initialName);
            this.currentToken.location = mxn.ctLoc;
          },
          _createCharacterToken(type, ch) {
            orig._createCharacterToken.call(this, type, ch);
            this.currentCharacterToken.location = mxn.ctLoc;
          },
          _createEOFToken() {
            orig._createEOFToken.call(this);
            this.currentToken.location = mxn._getCurrentLocation();
          },
          _createAttr(attrNameFirstCh) {
            orig._createAttr.call(this, attrNameFirstCh);
            mxn.currentAttrLocation = mxn._getCurrentLocation();
          },
          _leaveAttrName(toState) {
            orig._leaveAttrName.call(this, toState);
            mxn._attachCurrentAttrLocationInfo();
          },
          _leaveAttrValue(toState) {
            orig._leaveAttrValue.call(this, toState);
            mxn._attachCurrentAttrLocationInfo();
          },
          _emitCurrentToken() {
            const ctLoc = this.currentToken.location;
            if (this.currentCharacterToken) {
              this.currentCharacterToken.location.endLine = ctLoc.startLine;
              this.currentCharacterToken.location.endCol = ctLoc.startCol;
              this.currentCharacterToken.location.endOffset = ctLoc.startOffset;
            }
            if (this.currentToken.type === Tokenizer.EOF_TOKEN) {
              ctLoc.endLine = ctLoc.startLine;
              ctLoc.endCol = ctLoc.startCol;
              ctLoc.endOffset = ctLoc.startOffset;
            } else {
              ctLoc.endLine = mxn.posTracker.line;
              ctLoc.endCol = mxn.posTracker.col + 1;
              ctLoc.endOffset = mxn.posTracker.offset + 1;
            }
            orig._emitCurrentToken.call(this);
          },
          _emitCurrentCharacterToken() {
            const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;
            if (ctLoc && ctLoc.endOffset === -1) {
              ctLoc.endLine = mxn.posTracker.line;
              ctLoc.endCol = mxn.posTracker.col;
              ctLoc.endOffset = mxn.posTracker.offset;
            }
            orig._emitCurrentCharacterToken.call(this);
          }
        };
        Object.keys(Tokenizer.MODE).forEach((modeName) => {
          const state = Tokenizer.MODE[modeName];
          methods[state] = function(cp) {
            mxn.ctLoc = mxn._getCurrentLocation();
            orig[state].call(this, cp);
          };
        });
        return methods;
      }
    };
    module2.exports = LocationInfoTokenizerMixin;
  }
});

// node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js
var require_open_element_stack_mixin = __commonJS({
  "node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js"(exports, module2) {
    "use strict";
    var Mixin = require_mixin();
    var LocationInfoOpenElementStackMixin = class extends Mixin {
      constructor(stack, opts) {
        super(stack);
        this.onItemPop = opts.onItemPop;
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          pop() {
            mxn.onItemPop(this.current);
            orig.pop.call(this);
          },
          popAllUpToHtmlElement() {
            for (let i3 = this.stackTop; i3 > 0; i3--) {
              mxn.onItemPop(this.items[i3]);
            }
            orig.popAllUpToHtmlElement.call(this);
          },
          remove(element6) {
            mxn.onItemPop(this.current);
            orig.remove.call(this, element6);
          }
        };
      }
    };
    module2.exports = LocationInfoOpenElementStackMixin;
  }
});

// node_modules/parse5/lib/extensions/location-info/parser-mixin.js
var require_parser_mixin = __commonJS({
  "node_modules/parse5/lib/extensions/location-info/parser-mixin.js"(exports, module2) {
    "use strict";
    var Mixin = require_mixin();
    var Tokenizer = require_tokenizer();
    var LocationInfoTokenizerMixin = require_tokenizer_mixin();
    var LocationInfoOpenElementStackMixin = require_open_element_stack_mixin();
    var HTML = require_html();
    var $3 = HTML.TAG_NAMES;
    var LocationInfoParserMixin = class extends Mixin {
      constructor(parser) {
        super(parser);
        this.parser = parser;
        this.treeAdapter = this.parser.treeAdapter;
        this.posTracker = null;
        this.lastStartTagToken = null;
        this.lastFosterParentingLocation = null;
        this.currentToken = null;
      }
      _setStartLocation(element6) {
        let loc = null;
        if (this.lastStartTagToken) {
          loc = Object.assign({}, this.lastStartTagToken.location);
          loc.startTag = this.lastStartTagToken.location;
        }
        this.treeAdapter.setNodeSourceCodeLocation(element6, loc);
      }
      _setEndLocation(element6, closingToken) {
        const loc = this.treeAdapter.getNodeSourceCodeLocation(element6);
        if (loc) {
          if (closingToken.location) {
            const ctLoc = closingToken.location;
            const tn = this.treeAdapter.getTagName(element6);
            const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;
            const endLoc = {};
            if (isClosingEndTag) {
              endLoc.endTag = Object.assign({}, ctLoc);
              endLoc.endLine = ctLoc.endLine;
              endLoc.endCol = ctLoc.endCol;
              endLoc.endOffset = ctLoc.endOffset;
            } else {
              endLoc.endLine = ctLoc.startLine;
              endLoc.endCol = ctLoc.startCol;
              endLoc.endOffset = ctLoc.startOffset;
            }
            this.treeAdapter.updateNodeSourceCodeLocation(element6, endLoc);
          }
        }
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          _bootstrap(document4, fragmentContext) {
            orig._bootstrap.call(this, document4, fragmentContext);
            mxn.lastStartTagToken = null;
            mxn.lastFosterParentingLocation = null;
            mxn.currentToken = null;
            const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
            mxn.posTracker = tokenizerMixin.posTracker;
            Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {
              onItemPop: function(element6) {
                mxn._setEndLocation(element6, mxn.currentToken);
              }
            });
          },
          _runParsingLoop(scriptHandler) {
            orig._runParsingLoop.call(this, scriptHandler);
            for (let i3 = this.openElements.stackTop; i3 >= 0; i3--) {
              mxn._setEndLocation(this.openElements.items[i3], mxn.currentToken);
            }
          },
          _processTokenInForeignContent(token) {
            mxn.currentToken = token;
            orig._processTokenInForeignContent.call(this, token);
          },
          _processToken(token) {
            mxn.currentToken = token;
            orig._processToken.call(this, token);
            const requireExplicitUpdate = token.type === Tokenizer.END_TAG_TOKEN && (token.tagName === $3.HTML || token.tagName === $3.BODY && this.openElements.hasInScope($3.BODY));
            if (requireExplicitUpdate) {
              for (let i3 = this.openElements.stackTop; i3 >= 0; i3--) {
                const element6 = this.openElements.items[i3];
                if (this.treeAdapter.getTagName(element6) === token.tagName) {
                  mxn._setEndLocation(element6, token);
                  break;
                }
              }
            }
          },
          _setDocumentType(token) {
            orig._setDocumentType.call(this, token);
            const documentChildren = this.treeAdapter.getChildNodes(this.document);
            const cnLength = documentChildren.length;
            for (let i3 = 0; i3 < cnLength; i3++) {
              const node = documentChildren[i3];
              if (this.treeAdapter.isDocumentTypeNode(node)) {
                this.treeAdapter.setNodeSourceCodeLocation(node, token.location);
                break;
              }
            }
          },
          _attachElementToTree(element6) {
            mxn._setStartLocation(element6);
            mxn.lastStartTagToken = null;
            orig._attachElementToTree.call(this, element6);
          },
          _appendElement(token, namespaceURI) {
            mxn.lastStartTagToken = token;
            orig._appendElement.call(this, token, namespaceURI);
          },
          _insertElement(token, namespaceURI) {
            mxn.lastStartTagToken = token;
            orig._insertElement.call(this, token, namespaceURI);
          },
          _insertTemplate(token) {
            mxn.lastStartTagToken = token;
            orig._insertTemplate.call(this, token);
            const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);
            this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);
          },
          _insertFakeRootElement() {
            orig._insertFakeRootElement.call(this);
            this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);
          },
          _appendCommentNode(token, parent) {
            orig._appendCommentNode.call(this, token, parent);
            const children2 = this.treeAdapter.getChildNodes(parent);
            const commentNode = children2[children2.length - 1];
            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);
          },
          _findFosterParentingLocation() {
            mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);
            return mxn.lastFosterParentingLocation;
          },
          _insertCharacters(token) {
            orig._insertCharacters.call(this, token);
            const hasFosterParent = this._shouldFosterParentOnInsertion();
            const parent = hasFosterParent && mxn.lastFosterParentingLocation.parent || this.openElements.currentTmplContent || this.openElements.current;
            const siblings2 = this.treeAdapter.getChildNodes(parent);
            const textNodeIdx = hasFosterParent && mxn.lastFosterParentingLocation.beforeElement ? siblings2.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1 : siblings2.length - 1;
            const textNode = siblings2[textNodeIdx];
            const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);
            if (tnLoc) {
              const { endLine, endCol, endOffset } = token.location;
              this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });
            } else {
              this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);
            }
          }
        };
      }
    };
    module2.exports = LocationInfoParserMixin;
  }
});

// node_modules/parse5/lib/extensions/error-reporting/mixin-base.js
var require_mixin_base = __commonJS({
  "node_modules/parse5/lib/extensions/error-reporting/mixin-base.js"(exports, module2) {
    "use strict";
    var Mixin = require_mixin();
    var ErrorReportingMixinBase = class extends Mixin {
      constructor(host, opts) {
        super(host);
        this.posTracker = null;
        this.onParseError = opts.onParseError;
      }
      _setErrorLocation(err) {
        err.startLine = err.endLine = this.posTracker.line;
        err.startCol = err.endCol = this.posTracker.col;
        err.startOffset = err.endOffset = this.posTracker.offset;
      }
      _reportError(code2) {
        const err = {
          code: code2,
          startLine: -1,
          startCol: -1,
          startOffset: -1,
          endLine: -1,
          endCol: -1,
          endOffset: -1
        };
        this._setErrorLocation(err);
        this.onParseError(err);
      }
      _getOverriddenMethods(mxn) {
        return {
          _err(code2) {
            mxn._reportError(code2);
          }
        };
      }
    };
    module2.exports = ErrorReportingMixinBase;
  }
});

// node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js
var require_preprocessor_mixin2 = __commonJS({
  "node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js"(exports, module2) {
    "use strict";
    var ErrorReportingMixinBase = require_mixin_base();
    var PositionTrackingPreprocessorMixin = require_preprocessor_mixin();
    var Mixin = require_mixin();
    var ErrorReportingPreprocessorMixin = class extends ErrorReportingMixinBase {
      constructor(preprocessor, opts) {
        super(preprocessor, opts);
        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);
        this.lastErrOffset = -1;
      }
      _reportError(code2) {
        if (this.lastErrOffset !== this.posTracker.offset) {
          this.lastErrOffset = this.posTracker.offset;
          super._reportError(code2);
        }
      }
    };
    module2.exports = ErrorReportingPreprocessorMixin;
  }
});

// node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js
var require_tokenizer_mixin2 = __commonJS({
  "node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js"(exports, module2) {
    "use strict";
    var ErrorReportingMixinBase = require_mixin_base();
    var ErrorReportingPreprocessorMixin = require_preprocessor_mixin2();
    var Mixin = require_mixin();
    var ErrorReportingTokenizerMixin = class extends ErrorReportingMixinBase {
      constructor(tokenizer2, opts) {
        super(tokenizer2, opts);
        const preprocessorMixin = Mixin.install(tokenizer2.preprocessor, ErrorReportingPreprocessorMixin, opts);
        this.posTracker = preprocessorMixin.posTracker;
      }
    };
    module2.exports = ErrorReportingTokenizerMixin;
  }
});

// node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js
var require_parser_mixin2 = __commonJS({
  "node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js"(exports, module2) {
    "use strict";
    var ErrorReportingMixinBase = require_mixin_base();
    var ErrorReportingTokenizerMixin = require_tokenizer_mixin2();
    var LocationInfoTokenizerMixin = require_tokenizer_mixin();
    var Mixin = require_mixin();
    var ErrorReportingParserMixin = class extends ErrorReportingMixinBase {
      constructor(parser, opts) {
        super(parser, opts);
        this.opts = opts;
        this.ctLoc = null;
        this.locBeforeToken = false;
      }
      _setErrorLocation(err) {
        if (this.ctLoc) {
          err.startLine = this.ctLoc.startLine;
          err.startCol = this.ctLoc.startCol;
          err.startOffset = this.ctLoc.startOffset;
          err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;
          err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;
          err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;
        }
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          _bootstrap(document4, fragmentContext) {
            orig._bootstrap.call(this, document4, fragmentContext);
            Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);
            Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
          },
          _processInputToken(token) {
            mxn.ctLoc = token.location;
            orig._processInputToken.call(this, token);
          },
          _err(code2, options) {
            mxn.locBeforeToken = options && options.beforeToken;
            mxn._reportError(code2);
          }
        };
      }
    };
    module2.exports = ErrorReportingParserMixin;
  }
});

// node_modules/parse5/lib/tree-adapters/default.js
var require_default = __commonJS({
  "node_modules/parse5/lib/tree-adapters/default.js"(exports) {
    "use strict";
    var { DOCUMENT_MODE } = require_html();
    exports.createDocument = function() {
      return {
        nodeName: "#document",
        mode: DOCUMENT_MODE.NO_QUIRKS,
        childNodes: []
      };
    };
    exports.createDocumentFragment = function() {
      return {
        nodeName: "#document-fragment",
        childNodes: []
      };
    };
    exports.createElement = function(tagName, namespaceURI, attrs) {
      return {
        nodeName: tagName,
        tagName,
        attrs,
        namespaceURI,
        childNodes: [],
        parentNode: null
      };
    };
    exports.createCommentNode = function(data3) {
      return {
        nodeName: "#comment",
        data: data3,
        parentNode: null
      };
    };
    var createTextNode = function(value) {
      return {
        nodeName: "#text",
        value,
        parentNode: null
      };
    };
    var appendChild = exports.appendChild = function(parentNode, newNode) {
      parentNode.childNodes.push(newNode);
      newNode.parentNode = parentNode;
    };
    var insertBefore = exports.insertBefore = function(parentNode, newNode, referenceNode) {
      const insertionIdx = parentNode.childNodes.indexOf(referenceNode);
      parentNode.childNodes.splice(insertionIdx, 0, newNode);
      newNode.parentNode = parentNode;
    };
    exports.setTemplateContent = function(templateElement, contentElement) {
      templateElement.content = contentElement;
    };
    exports.getTemplateContent = function(templateElement) {
      return templateElement.content;
    };
    exports.setDocumentType = function(document4, name, publicId, systemId) {
      let doctypeNode = null;
      for (let i3 = 0; i3 < document4.childNodes.length; i3++) {
        if (document4.childNodes[i3].nodeName === "#documentType") {
          doctypeNode = document4.childNodes[i3];
          break;
        }
      }
      if (doctypeNode) {
        doctypeNode.name = name;
        doctypeNode.publicId = publicId;
        doctypeNode.systemId = systemId;
      } else {
        appendChild(document4, {
          nodeName: "#documentType",
          name,
          publicId,
          systemId
        });
      }
    };
    exports.setDocumentMode = function(document4, mode) {
      document4.mode = mode;
    };
    exports.getDocumentMode = function(document4) {
      return document4.mode;
    };
    exports.detachNode = function(node) {
      if (node.parentNode) {
        const idx = node.parentNode.childNodes.indexOf(node);
        node.parentNode.childNodes.splice(idx, 1);
        node.parentNode = null;
      }
    };
    exports.insertText = function(parentNode, text8) {
      if (parentNode.childNodes.length) {
        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];
        if (prevNode.nodeName === "#text") {
          prevNode.value += text8;
          return;
        }
      }
      appendChild(parentNode, createTextNode(text8));
    };
    exports.insertTextBefore = function(parentNode, text8, referenceNode) {
      const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
      if (prevNode && prevNode.nodeName === "#text") {
        prevNode.value += text8;
      } else {
        insertBefore(parentNode, createTextNode(text8), referenceNode);
      }
    };
    exports.adoptAttributes = function(recipient, attrs) {
      const recipientAttrsMap = [];
      for (let i3 = 0; i3 < recipient.attrs.length; i3++) {
        recipientAttrsMap.push(recipient.attrs[i3].name);
      }
      for (let j = 0; j < attrs.length; j++) {
        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {
          recipient.attrs.push(attrs[j]);
        }
      }
    };
    exports.getFirstChild = function(node) {
      return node.childNodes[0];
    };
    exports.getChildNodes = function(node) {
      return node.childNodes;
    };
    exports.getParentNode = function(node) {
      return node.parentNode;
    };
    exports.getAttrList = function(element6) {
      return element6.attrs;
    };
    exports.getTagName = function(element6) {
      return element6.tagName;
    };
    exports.getNamespaceURI = function(element6) {
      return element6.namespaceURI;
    };
    exports.getTextNodeContent = function(textNode) {
      return textNode.value;
    };
    exports.getCommentNodeContent = function(commentNode) {
      return commentNode.data;
    };
    exports.getDocumentTypeNodeName = function(doctypeNode) {
      return doctypeNode.name;
    };
    exports.getDocumentTypeNodePublicId = function(doctypeNode) {
      return doctypeNode.publicId;
    };
    exports.getDocumentTypeNodeSystemId = function(doctypeNode) {
      return doctypeNode.systemId;
    };
    exports.isTextNode = function(node) {
      return node.nodeName === "#text";
    };
    exports.isCommentNode = function(node) {
      return node.nodeName === "#comment";
    };
    exports.isDocumentTypeNode = function(node) {
      return node.nodeName === "#documentType";
    };
    exports.isElementNode = function(node) {
      return !!node.tagName;
    };
    exports.setNodeSourceCodeLocation = function(node, location2) {
      node.sourceCodeLocation = location2;
    };
    exports.getNodeSourceCodeLocation = function(node) {
      return node.sourceCodeLocation;
    };
    exports.updateNodeSourceCodeLocation = function(node, endLocation) {
      node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);
    };
  }
});

// node_modules/parse5/lib/utils/merge-options.js
var require_merge_options = __commonJS({
  "node_modules/parse5/lib/utils/merge-options.js"(exports, module2) {
    "use strict";
    module2.exports = function mergeOptions(defaults, options) {
      options = options || /* @__PURE__ */ Object.create(null);
      return [defaults, options].reduce((merged, optObj) => {
        Object.keys(optObj).forEach((key2) => {
          merged[key2] = optObj[key2];
        });
        return merged;
      }, /* @__PURE__ */ Object.create(null));
    };
  }
});

// node_modules/parse5/lib/common/doctype.js
var require_doctype = __commonJS({
  "node_modules/parse5/lib/common/doctype.js"(exports) {
    "use strict";
    var { DOCUMENT_MODE } = require_html();
    var VALID_DOCTYPE_NAME = "html";
    var VALID_SYSTEM_ID = "about:legacy-compat";
    var QUIRKS_MODE_SYSTEM_ID = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd";
    var QUIRKS_MODE_PUBLIC_ID_PREFIXES = [
      "+//silmaril//dtd html pro v0r11 19970101//",
      "-//as//dtd html 3.0 aswedit + extensions//",
      "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
      "-//ietf//dtd html 2.0 level 1//",
      "-//ietf//dtd html 2.0 level 2//",
      "-//ietf//dtd html 2.0 strict level 1//",
      "-//ietf//dtd html 2.0 strict level 2//",
      "-//ietf//dtd html 2.0 strict//",
      "-//ietf//dtd html 2.0//",
      "-//ietf//dtd html 2.1e//",
      "-//ietf//dtd html 3.0//",
      "-//ietf//dtd html 3.2 final//",
      "-//ietf//dtd html 3.2//",
      "-//ietf//dtd html 3//",
      "-//ietf//dtd html level 0//",
      "-//ietf//dtd html level 1//",
      "-//ietf//dtd html level 2//",
      "-//ietf//dtd html level 3//",
      "-//ietf//dtd html strict level 0//",
      "-//ietf//dtd html strict level 1//",
      "-//ietf//dtd html strict level 2//",
      "-//ietf//dtd html strict level 3//",
      "-//ietf//dtd html strict//",
      "-//ietf//dtd html//",
      "-//metrius//dtd metrius presentational//",
      "-//microsoft//dtd internet explorer 2.0 html strict//",
      "-//microsoft//dtd internet explorer 2.0 html//",
      "-//microsoft//dtd internet explorer 2.0 tables//",
      "-//microsoft//dtd internet explorer 3.0 html strict//",
      "-//microsoft//dtd internet explorer 3.0 html//",
      "-//microsoft//dtd internet explorer 3.0 tables//",
      "-//netscape comm. corp.//dtd html//",
      "-//netscape comm. corp.//dtd strict html//",
      "-//o'reilly and associates//dtd html 2.0//",
      "-//o'reilly and associates//dtd html extended 1.0//",
      "-//o'reilly and associates//dtd html extended relaxed 1.0//",
      "-//sq//dtd html 2.0 hotmetal + extensions//",
      "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
      "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
      "-//spyglass//dtd html 2.0 extended//",
      "-//sun microsystems corp.//dtd hotjava html//",
      "-//sun microsystems corp.//dtd hotjava strict html//",
      "-//w3c//dtd html 3 1995-03-24//",
      "-//w3c//dtd html 3.2 draft//",
      "-//w3c//dtd html 3.2 final//",
      "-//w3c//dtd html 3.2//",
      "-//w3c//dtd html 3.2s draft//",
      "-//w3c//dtd html 4.0 frameset//",
      "-//w3c//dtd html 4.0 transitional//",
      "-//w3c//dtd html experimental 19960712//",
      "-//w3c//dtd html experimental 970421//",
      "-//w3c//dtd w3 html//",
      "-//w3o//dtd w3 html 3.0//",
      "-//webtechs//dtd mozilla html 2.0//",
      "-//webtechs//dtd mozilla html//"
    ];
    var QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([
      "-//w3c//dtd html 4.01 frameset//",
      "-//w3c//dtd html 4.01 transitional//"
    ]);
    var QUIRKS_MODE_PUBLIC_IDS = ["-//w3o//dtd w3 html strict 3.0//en//", "-/w3c/dtd html 4.0 transitional/en", "html"];
    var LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"];
    var LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([
      "-//w3c//dtd html 4.01 frameset//",
      "-//w3c//dtd html 4.01 transitional//"
    ]);
    function enquoteDoctypeId(id) {
      const quote = id.indexOf('"') !== -1 ? "'" : '"';
      return quote + id + quote;
    }
    function hasPrefix(publicId, prefixes) {
      for (let i3 = 0; i3 < prefixes.length; i3++) {
        if (publicId.indexOf(prefixes[i3]) === 0) {
          return true;
        }
      }
      return false;
    }
    exports.isConforming = function(token) {
      return token.name === VALID_DOCTYPE_NAME && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID);
    };
    exports.getDocumentMode = function(token) {
      if (token.name !== VALID_DOCTYPE_NAME) {
        return DOCUMENT_MODE.QUIRKS;
      }
      const systemId = token.systemId;
      if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {
        return DOCUMENT_MODE.QUIRKS;
      }
      let publicId = token.publicId;
      if (publicId !== null) {
        publicId = publicId.toLowerCase();
        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {
          return DOCUMENT_MODE.QUIRKS;
        }
        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;
        if (hasPrefix(publicId, prefixes)) {
          return DOCUMENT_MODE.QUIRKS;
        }
        prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;
        if (hasPrefix(publicId, prefixes)) {
          return DOCUMENT_MODE.LIMITED_QUIRKS;
        }
      }
      return DOCUMENT_MODE.NO_QUIRKS;
    };
    exports.serializeContent = function(name, publicId, systemId) {
      let str = "!DOCTYPE ";
      if (name) {
        str += name;
      }
      if (publicId) {
        str += " PUBLIC " + enquoteDoctypeId(publicId);
      } else if (systemId) {
        str += " SYSTEM";
      }
      if (systemId !== null) {
        str += " " + enquoteDoctypeId(systemId);
      }
      return str;
    };
  }
});

// node_modules/parse5/lib/common/foreign-content.js
var require_foreign_content = __commonJS({
  "node_modules/parse5/lib/common/foreign-content.js"(exports) {
    "use strict";
    var Tokenizer = require_tokenizer();
    var HTML = require_html();
    var $3 = HTML.TAG_NAMES;
    var NS = HTML.NAMESPACES;
    var ATTRS = HTML.ATTRS;
    var MIME_TYPES = {
      TEXT_HTML: "text/html",
      APPLICATION_XML: "application/xhtml+xml"
    };
    var DEFINITION_URL_ATTR = "definitionurl";
    var ADJUSTED_DEFINITION_URL_ATTR = "definitionURL";
    var SVG_ATTRS_ADJUSTMENT_MAP = {
      attributename: "attributeName",
      attributetype: "attributeType",
      basefrequency: "baseFrequency",
      baseprofile: "baseProfile",
      calcmode: "calcMode",
      clippathunits: "clipPathUnits",
      diffuseconstant: "diffuseConstant",
      edgemode: "edgeMode",
      filterunits: "filterUnits",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      limitingconeangle: "limitingConeAngle",
      markerheight: "markerHeight",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      numoctaves: "numOctaves",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      refx: "refX",
      refy: "refY",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stitchtiles: "stitchTiles",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textlength: "textLength",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      xchannelselector: "xChannelSelector",
      ychannelselector: "yChannelSelector",
      zoomandpan: "zoomAndPan"
    };
    var XML_ATTRS_ADJUSTMENT_MAP = {
      "xlink:actuate": { prefix: "xlink", name: "actuate", namespace: NS.XLINK },
      "xlink:arcrole": { prefix: "xlink", name: "arcrole", namespace: NS.XLINK },
      "xlink:href": { prefix: "xlink", name: "href", namespace: NS.XLINK },
      "xlink:role": { prefix: "xlink", name: "role", namespace: NS.XLINK },
      "xlink:show": { prefix: "xlink", name: "show", namespace: NS.XLINK },
      "xlink:title": { prefix: "xlink", name: "title", namespace: NS.XLINK },
      "xlink:type": { prefix: "xlink", name: "type", namespace: NS.XLINK },
      "xml:base": { prefix: "xml", name: "base", namespace: NS.XML },
      "xml:lang": { prefix: "xml", name: "lang", namespace: NS.XML },
      "xml:space": { prefix: "xml", name: "space", namespace: NS.XML },
      xmlns: { prefix: "", name: "xmlns", namespace: NS.XMLNS },
      "xmlns:xlink": { prefix: "xmlns", name: "xlink", namespace: NS.XMLNS }
    };
    var SVG_TAG_NAMES_ADJUSTMENT_MAP = exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
      altglyph: "altGlyph",
      altglyphdef: "altGlyphDef",
      altglyphitem: "altGlyphItem",
      animatecolor: "animateColor",
      animatemotion: "animateMotion",
      animatetransform: "animateTransform",
      clippath: "clipPath",
      feblend: "feBlend",
      fecolormatrix: "feColorMatrix",
      fecomponenttransfer: "feComponentTransfer",
      fecomposite: "feComposite",
      feconvolvematrix: "feConvolveMatrix",
      fediffuselighting: "feDiffuseLighting",
      fedisplacementmap: "feDisplacementMap",
      fedistantlight: "feDistantLight",
      feflood: "feFlood",
      fefunca: "feFuncA",
      fefuncb: "feFuncB",
      fefuncg: "feFuncG",
      fefuncr: "feFuncR",
      fegaussianblur: "feGaussianBlur",
      feimage: "feImage",
      femerge: "feMerge",
      femergenode: "feMergeNode",
      femorphology: "feMorphology",
      feoffset: "feOffset",
      fepointlight: "fePointLight",
      fespecularlighting: "feSpecularLighting",
      fespotlight: "feSpotLight",
      fetile: "feTile",
      feturbulence: "feTurbulence",
      foreignobject: "foreignObject",
      glyphref: "glyphRef",
      lineargradient: "linearGradient",
      radialgradient: "radialGradient",
      textpath: "textPath"
    };
    var EXITS_FOREIGN_CONTENT = {
      [$3.B]: true,
      [$3.BIG]: true,
      [$3.BLOCKQUOTE]: true,
      [$3.BODY]: true,
      [$3.BR]: true,
      [$3.CENTER]: true,
      [$3.CODE]: true,
      [$3.DD]: true,
      [$3.DIV]: true,
      [$3.DL]: true,
      [$3.DT]: true,
      [$3.EM]: true,
      [$3.EMBED]: true,
      [$3.H1]: true,
      [$3.H2]: true,
      [$3.H3]: true,
      [$3.H4]: true,
      [$3.H5]: true,
      [$3.H6]: true,
      [$3.HEAD]: true,
      [$3.HR]: true,
      [$3.I]: true,
      [$3.IMG]: true,
      [$3.LI]: true,
      [$3.LISTING]: true,
      [$3.MENU]: true,
      [$3.META]: true,
      [$3.NOBR]: true,
      [$3.OL]: true,
      [$3.P]: true,
      [$3.PRE]: true,
      [$3.RUBY]: true,
      [$3.S]: true,
      [$3.SMALL]: true,
      [$3.SPAN]: true,
      [$3.STRONG]: true,
      [$3.STRIKE]: true,
      [$3.SUB]: true,
      [$3.SUP]: true,
      [$3.TABLE]: true,
      [$3.TT]: true,
      [$3.U]: true,
      [$3.UL]: true,
      [$3.VAR]: true
    };
    exports.causesExit = function(startTagToken2) {
      const tn = startTagToken2.tagName;
      const isFontWithAttrs = tn === $3.FONT && (Tokenizer.getTokenAttr(startTagToken2, ATTRS.COLOR) !== null || Tokenizer.getTokenAttr(startTagToken2, ATTRS.SIZE) !== null || Tokenizer.getTokenAttr(startTagToken2, ATTRS.FACE) !== null);
      return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];
    };
    exports.adjustTokenMathMLAttrs = function(token) {
      for (let i3 = 0; i3 < token.attrs.length; i3++) {
        if (token.attrs[i3].name === DEFINITION_URL_ATTR) {
          token.attrs[i3].name = ADJUSTED_DEFINITION_URL_ATTR;
          break;
        }
      }
    };
    exports.adjustTokenSVGAttrs = function(token) {
      for (let i3 = 0; i3 < token.attrs.length; i3++) {
        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i3].name];
        if (adjustedAttrName) {
          token.attrs[i3].name = adjustedAttrName;
        }
      }
    };
    exports.adjustTokenXMLAttrs = function(token) {
      for (let i3 = 0; i3 < token.attrs.length; i3++) {
        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i3].name];
        if (adjustedAttrEntry) {
          token.attrs[i3].prefix = adjustedAttrEntry.prefix;
          token.attrs[i3].name = adjustedAttrEntry.name;
          token.attrs[i3].namespace = adjustedAttrEntry.namespace;
        }
      }
    };
    exports.adjustTokenSVGTagName = function(token) {
      const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];
      if (adjustedTagName) {
        token.tagName = adjustedTagName;
      }
    };
    function isMathMLTextIntegrationPoint(tn, ns2) {
      return ns2 === NS.MATHML && (tn === $3.MI || tn === $3.MO || tn === $3.MN || tn === $3.MS || tn === $3.MTEXT);
    }
    function isHtmlIntegrationPoint(tn, ns2, attrs) {
      if (ns2 === NS.MATHML && tn === $3.ANNOTATION_XML) {
        for (let i3 = 0; i3 < attrs.length; i3++) {
          if (attrs[i3].name === ATTRS.ENCODING) {
            const value = attrs[i3].value.toLowerCase();
            return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;
          }
        }
      }
      return ns2 === NS.SVG && (tn === $3.FOREIGN_OBJECT || tn === $3.DESC || tn === $3.TITLE);
    }
    exports.isIntegrationPoint = function(tn, ns2, attrs, foreignNS) {
      if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns2, attrs)) {
        return true;
      }
      if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns2)) {
        return true;
      }
      return false;
    };
  }
});

// node_modules/parse5/lib/parser/index.js
var require_parser = __commonJS({
  "node_modules/parse5/lib/parser/index.js"(exports, module2) {
    "use strict";
    var Tokenizer = require_tokenizer();
    var OpenElementStack = require_open_element_stack();
    var FormattingElementList = require_formatting_element_list();
    var LocationInfoParserMixin = require_parser_mixin();
    var ErrorReportingParserMixin = require_parser_mixin2();
    var Mixin = require_mixin();
    var defaultTreeAdapter = require_default();
    var mergeOptions = require_merge_options();
    var doctype4 = require_doctype();
    var foreignContent = require_foreign_content();
    var ERR = require_error_codes();
    var unicode = require_unicode();
    var HTML = require_html();
    var $3 = HTML.TAG_NAMES;
    var NS = HTML.NAMESPACES;
    var ATTRS = HTML.ATTRS;
    var DEFAULT_OPTIONS = {
      scriptingEnabled: true,
      sourceCodeLocationInfo: false,
      onParseError: null,
      treeAdapter: defaultTreeAdapter
    };
    var HIDDEN_INPUT_TYPE = "hidden";
    var AA_OUTER_LOOP_ITER = 8;
    var AA_INNER_LOOP_ITER = 3;
    var INITIAL_MODE = "INITIAL_MODE";
    var BEFORE_HTML_MODE = "BEFORE_HTML_MODE";
    var BEFORE_HEAD_MODE = "BEFORE_HEAD_MODE";
    var IN_HEAD_MODE = "IN_HEAD_MODE";
    var IN_HEAD_NO_SCRIPT_MODE = "IN_HEAD_NO_SCRIPT_MODE";
    var AFTER_HEAD_MODE = "AFTER_HEAD_MODE";
    var IN_BODY_MODE = "IN_BODY_MODE";
    var TEXT_MODE = "TEXT_MODE";
    var IN_TABLE_MODE = "IN_TABLE_MODE";
    var IN_TABLE_TEXT_MODE = "IN_TABLE_TEXT_MODE";
    var IN_CAPTION_MODE = "IN_CAPTION_MODE";
    var IN_COLUMN_GROUP_MODE = "IN_COLUMN_GROUP_MODE";
    var IN_TABLE_BODY_MODE = "IN_TABLE_BODY_MODE";
    var IN_ROW_MODE = "IN_ROW_MODE";
    var IN_CELL_MODE = "IN_CELL_MODE";
    var IN_SELECT_MODE = "IN_SELECT_MODE";
    var IN_SELECT_IN_TABLE_MODE = "IN_SELECT_IN_TABLE_MODE";
    var IN_TEMPLATE_MODE = "IN_TEMPLATE_MODE";
    var AFTER_BODY_MODE = "AFTER_BODY_MODE";
    var IN_FRAMESET_MODE = "IN_FRAMESET_MODE";
    var AFTER_FRAMESET_MODE = "AFTER_FRAMESET_MODE";
    var AFTER_AFTER_BODY_MODE = "AFTER_AFTER_BODY_MODE";
    var AFTER_AFTER_FRAMESET_MODE = "AFTER_AFTER_FRAMESET_MODE";
    var INSERTION_MODE_RESET_MAP = {
      [$3.TR]: IN_ROW_MODE,
      [$3.TBODY]: IN_TABLE_BODY_MODE,
      [$3.THEAD]: IN_TABLE_BODY_MODE,
      [$3.TFOOT]: IN_TABLE_BODY_MODE,
      [$3.CAPTION]: IN_CAPTION_MODE,
      [$3.COLGROUP]: IN_COLUMN_GROUP_MODE,
      [$3.TABLE]: IN_TABLE_MODE,
      [$3.BODY]: IN_BODY_MODE,
      [$3.FRAMESET]: IN_FRAMESET_MODE
    };
    var TEMPLATE_INSERTION_MODE_SWITCH_MAP = {
      [$3.CAPTION]: IN_TABLE_MODE,
      [$3.COLGROUP]: IN_TABLE_MODE,
      [$3.TBODY]: IN_TABLE_MODE,
      [$3.TFOOT]: IN_TABLE_MODE,
      [$3.THEAD]: IN_TABLE_MODE,
      [$3.COL]: IN_COLUMN_GROUP_MODE,
      [$3.TR]: IN_TABLE_BODY_MODE,
      [$3.TD]: IN_ROW_MODE,
      [$3.TH]: IN_ROW_MODE
    };
    var TOKEN_HANDLERS = {
      [INITIAL_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInInitialMode,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInInitialMode,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: doctypeInInitialMode,
        [Tokenizer.START_TAG_TOKEN]: tokenInInitialMode,
        [Tokenizer.END_TAG_TOKEN]: tokenInInitialMode,
        [Tokenizer.EOF_TOKEN]: tokenInInitialMode
      },
      [BEFORE_HTML_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHtml,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHtml,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHtml,
        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHtml,
        [Tokenizer.EOF_TOKEN]: tokenBeforeHtml
      },
      [BEFORE_HEAD_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHead,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHead,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHead,
        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHead,
        [Tokenizer.EOF_TOKEN]: tokenBeforeHead
      },
      [IN_HEAD_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInHead,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHead,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagInHead,
        [Tokenizer.END_TAG_TOKEN]: endTagInHead,
        [Tokenizer.EOF_TOKEN]: tokenInHead
      },
      [IN_HEAD_NO_SCRIPT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInHeadNoScript,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagInHeadNoScript,
        [Tokenizer.END_TAG_TOKEN]: endTagInHeadNoScript,
        [Tokenizer.EOF_TOKEN]: tokenInHeadNoScript
      },
      [AFTER_HEAD_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenAfterHead,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterHead,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterHead,
        [Tokenizer.END_TAG_TOKEN]: endTagAfterHead,
        [Tokenizer.EOF_TOKEN]: tokenAfterHead
      },
      [IN_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInBody,
        [Tokenizer.END_TAG_TOKEN]: endTagInBody,
        [Tokenizer.EOF_TOKEN]: eofInBody
      },
      [TEXT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.NULL_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: ignoreToken,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: ignoreToken,
        [Tokenizer.END_TAG_TOKEN]: endTagInText,
        [Tokenizer.EOF_TOKEN]: eofInText
      },
      [IN_TABLE_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInTable,
        [Tokenizer.END_TAG_TOKEN]: endTagInTable,
        [Tokenizer.EOF_TOKEN]: eofInBody
      },
      [IN_TABLE_TEXT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTableText,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText,
        [Tokenizer.COMMENT_TOKEN]: tokenInTableText,
        [Tokenizer.DOCTYPE_TOKEN]: tokenInTableText,
        [Tokenizer.START_TAG_TOKEN]: tokenInTableText,
        [Tokenizer.END_TAG_TOKEN]: tokenInTableText,
        [Tokenizer.EOF_TOKEN]: tokenInTableText
      },
      [IN_CAPTION_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInCaption,
        [Tokenizer.END_TAG_TOKEN]: endTagInCaption,
        [Tokenizer.EOF_TOKEN]: eofInBody
      },
      [IN_COLUMN_GROUP_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInColumnGroup,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInColumnGroup,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInColumnGroup,
        [Tokenizer.END_TAG_TOKEN]: endTagInColumnGroup,
        [Tokenizer.EOF_TOKEN]: eofInBody
      },
      [IN_TABLE_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInTableBody,
        [Tokenizer.END_TAG_TOKEN]: endTagInTableBody,
        [Tokenizer.EOF_TOKEN]: eofInBody
      },
      [IN_ROW_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInRow,
        [Tokenizer.END_TAG_TOKEN]: endTagInRow,
        [Tokenizer.EOF_TOKEN]: eofInBody
      },
      [IN_CELL_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInCell,
        [Tokenizer.END_TAG_TOKEN]: endTagInCell,
        [Tokenizer.EOF_TOKEN]: eofInBody
      },
      [IN_SELECT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInSelect,
        [Tokenizer.END_TAG_TOKEN]: endTagInSelect,
        [Tokenizer.EOF_TOKEN]: eofInBody
      },
      [IN_SELECT_IN_TABLE_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInSelectInTable,
        [Tokenizer.END_TAG_TOKEN]: endTagInSelectInTable,
        [Tokenizer.EOF_TOKEN]: eofInBody
      },
      [IN_TEMPLATE_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInTemplate,
        [Tokenizer.END_TAG_TOKEN]: endTagInTemplate,
        [Tokenizer.EOF_TOKEN]: eofInTemplate
      },
      [AFTER_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenAfterBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterBody,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendCommentToRootHtmlElement,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterBody,
        [Tokenizer.END_TAG_TOKEN]: endTagAfterBody,
        [Tokenizer.EOF_TOKEN]: stopParsing
      },
      [IN_FRAMESET_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInFrameset,
        [Tokenizer.END_TAG_TOKEN]: endTagInFrameset,
        [Tokenizer.EOF_TOKEN]: stopParsing
      },
      [AFTER_FRAMESET_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterFrameset,
        [Tokenizer.END_TAG_TOKEN]: endTagAfterFrameset,
        [Tokenizer.EOF_TOKEN]: stopParsing
      },
      [AFTER_AFTER_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenAfterAfterBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterBody,
        [Tokenizer.END_TAG_TOKEN]: tokenAfterAfterBody,
        [Tokenizer.EOF_TOKEN]: stopParsing
      },
      [AFTER_AFTER_FRAMESET_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterFrameset,
        [Tokenizer.END_TAG_TOKEN]: ignoreToken,
        [Tokenizer.EOF_TOKEN]: stopParsing
      }
    };
    var Parser4 = class {
      constructor(options) {
        this.options = mergeOptions(DEFAULT_OPTIONS, options);
        this.treeAdapter = this.options.treeAdapter;
        this.pendingScript = null;
        if (this.options.sourceCodeLocationInfo) {
          Mixin.install(this, LocationInfoParserMixin);
        }
        if (this.options.onParseError) {
          Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });
        }
      }
      parse(html6) {
        const document4 = this.treeAdapter.createDocument();
        this._bootstrap(document4, null);
        this.tokenizer.write(html6, true);
        this._runParsingLoop(null);
        return document4;
      }
      parseFragment(html6, fragmentContext) {
        if (!fragmentContext) {
          fragmentContext = this.treeAdapter.createElement($3.TEMPLATE, NS.HTML, []);
        }
        const documentMock = this.treeAdapter.createElement("documentmock", NS.HTML, []);
        this._bootstrap(documentMock, fragmentContext);
        if (this.treeAdapter.getTagName(fragmentContext) === $3.TEMPLATE) {
          this._pushTmplInsertionMode(IN_TEMPLATE_MODE);
        }
        this._initTokenizerForFragmentParsing();
        this._insertFakeRootElement();
        this._resetInsertionMode();
        this._findFormInFragmentContext();
        this.tokenizer.write(html6, true);
        this._runParsingLoop(null);
        const rootElement = this.treeAdapter.getFirstChild(documentMock);
        const fragment2 = this.treeAdapter.createDocumentFragment();
        this._adoptNodes(rootElement, fragment2);
        return fragment2;
      }
      _bootstrap(document4, fragmentContext) {
        this.tokenizer = new Tokenizer(this.options);
        this.stopped = false;
        this.insertionMode = INITIAL_MODE;
        this.originalInsertionMode = "";
        this.document = document4;
        this.fragmentContext = fragmentContext;
        this.headElement = null;
        this.formElement = null;
        this.openElements = new OpenElementStack(this.document, this.treeAdapter);
        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);
        this.tmplInsertionModeStack = [];
        this.tmplInsertionModeStackTop = -1;
        this.currentTmplInsertionMode = null;
        this.pendingCharacterTokens = [];
        this.hasNonWhitespacePendingCharacterToken = false;
        this.framesetOk = true;
        this.skipNextNewLine = false;
        this.fosterParentingEnabled = false;
      }
      _err() {
      }
      _runParsingLoop(scriptHandler) {
        while (!this.stopped) {
          this._setupTokenizerCDATAMode();
          const token = this.tokenizer.getNextToken();
          if (token.type === Tokenizer.HIBERNATION_TOKEN) {
            break;
          }
          if (this.skipNextNewLine) {
            this.skipNextNewLine = false;
            if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === "\n") {
              if (token.chars.length === 1) {
                continue;
              }
              token.chars = token.chars.substr(1);
            }
          }
          this._processInputToken(token);
          if (scriptHandler && this.pendingScript) {
            break;
          }
        }
      }
      runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {
        this._runParsingLoop(scriptHandler);
        if (scriptHandler && this.pendingScript) {
          const script = this.pendingScript;
          this.pendingScript = null;
          scriptHandler(script);
          return;
        }
        if (writeCallback) {
          writeCallback();
        }
      }
      _setupTokenizerCDATAMode() {
        const current2 = this._getAdjustedCurrentElement();
        this.tokenizer.allowCDATA = current2 && current2 !== this.document && this.treeAdapter.getNamespaceURI(current2) !== NS.HTML && !this._isIntegrationPoint(current2);
      }
      _switchToTextParsing(currentToken, nextTokenizerState) {
        this._insertElement(currentToken, NS.HTML);
        this.tokenizer.state = nextTokenizerState;
        this.originalInsertionMode = this.insertionMode;
        this.insertionMode = TEXT_MODE;
      }
      switchToPlaintextParsing() {
        this.insertionMode = TEXT_MODE;
        this.originalInsertionMode = IN_BODY_MODE;
        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
      }
      _getAdjustedCurrentElement() {
        return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
      }
      _findFormInFragmentContext() {
        let node = this.fragmentContext;
        do {
          if (this.treeAdapter.getTagName(node) === $3.FORM) {
            this.formElement = node;
            break;
          }
          node = this.treeAdapter.getParentNode(node);
        } while (node);
      }
      _initTokenizerForFragmentParsing() {
        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {
          const tn = this.treeAdapter.getTagName(this.fragmentContext);
          if (tn === $3.TITLE || tn === $3.TEXTAREA) {
            this.tokenizer.state = Tokenizer.MODE.RCDATA;
          } else if (tn === $3.STYLE || tn === $3.XMP || tn === $3.IFRAME || tn === $3.NOEMBED || tn === $3.NOFRAMES || tn === $3.NOSCRIPT) {
            this.tokenizer.state = Tokenizer.MODE.RAWTEXT;
          } else if (tn === $3.SCRIPT) {
            this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;
          } else if (tn === $3.PLAINTEXT) {
            this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
          }
        }
      }
      _setDocumentType(token) {
        const name = token.name || "";
        const publicId = token.publicId || "";
        const systemId = token.systemId || "";
        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);
      }
      _attachElementToTree(element6) {
        if (this._shouldFosterParentOnInsertion()) {
          this._fosterParentElement(element6);
        } else {
          const parent = this.openElements.currentTmplContent || this.openElements.current;
          this.treeAdapter.appendChild(parent, element6);
        }
      }
      _appendElement(token, namespaceURI) {
        const element6 = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element6);
      }
      _insertElement(token, namespaceURI) {
        const element6 = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element6);
        this.openElements.push(element6);
      }
      _insertFakeElement(tagName) {
        const element6 = this.treeAdapter.createElement(tagName, NS.HTML, []);
        this._attachElementToTree(element6);
        this.openElements.push(element6);
      }
      _insertTemplate(token) {
        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);
        const content3 = this.treeAdapter.createDocumentFragment();
        this.treeAdapter.setTemplateContent(tmpl, content3);
        this._attachElementToTree(tmpl);
        this.openElements.push(tmpl);
      }
      _insertFakeRootElement() {
        const element6 = this.treeAdapter.createElement($3.HTML, NS.HTML, []);
        this.treeAdapter.appendChild(this.openElements.current, element6);
        this.openElements.push(element6);
      }
      _appendCommentNode(token, parent) {
        const commentNode = this.treeAdapter.createCommentNode(token.data);
        this.treeAdapter.appendChild(parent, commentNode);
      }
      _insertCharacters(token) {
        if (this._shouldFosterParentOnInsertion()) {
          this._fosterParentText(token.chars);
        } else {
          const parent = this.openElements.currentTmplContent || this.openElements.current;
          this.treeAdapter.insertText(parent, token.chars);
        }
      }
      _adoptNodes(donor, recipient) {
        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {
          this.treeAdapter.detachNode(child);
          this.treeAdapter.appendChild(recipient, child);
        }
      }
      _shouldProcessTokenInForeignContent(token) {
        const current2 = this._getAdjustedCurrentElement();
        if (!current2 || current2 === this.document) {
          return false;
        }
        const ns2 = this.treeAdapter.getNamespaceURI(current2);
        if (ns2 === NS.HTML) {
          return false;
        }
        if (this.treeAdapter.getTagName(current2) === $3.ANNOTATION_XML && ns2 === NS.MATHML && token.type === Tokenizer.START_TAG_TOKEN && token.tagName === $3.SVG) {
          return false;
        }
        const isCharacterToken = token.type === Tokenizer.CHARACTER_TOKEN || token.type === Tokenizer.NULL_CHARACTER_TOKEN || token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;
        const isMathMLTextStartTag = token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $3.MGLYPH && token.tagName !== $3.MALIGNMARK;
        if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current2, NS.MATHML)) {
          return false;
        }
        if ((token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) && this._isIntegrationPoint(current2, NS.HTML)) {
          return false;
        }
        return token.type !== Tokenizer.EOF_TOKEN;
      }
      _processToken(token) {
        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);
      }
      _processTokenInBodyMode(token) {
        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);
      }
      _processTokenInForeignContent(token) {
        if (token.type === Tokenizer.CHARACTER_TOKEN) {
          characterInForeignContent(this, token);
        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {
          nullCharacterInForeignContent(this, token);
        } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {
          insertCharacters(this, token);
        } else if (token.type === Tokenizer.COMMENT_TOKEN) {
          appendComment(this, token);
        } else if (token.type === Tokenizer.START_TAG_TOKEN) {
          startTagInForeignContent(this, token);
        } else if (token.type === Tokenizer.END_TAG_TOKEN) {
          endTagInForeignContent(this, token);
        }
      }
      _processInputToken(token) {
        if (this._shouldProcessTokenInForeignContent(token)) {
          this._processTokenInForeignContent(token);
        } else {
          this._processToken(token);
        }
        if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {
          this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);
        }
      }
      _isIntegrationPoint(element6, foreignNS) {
        const tn = this.treeAdapter.getTagName(element6);
        const ns2 = this.treeAdapter.getNamespaceURI(element6);
        const attrs = this.treeAdapter.getAttrList(element6);
        return foreignContent.isIntegrationPoint(tn, ns2, attrs, foreignNS);
      }
      _reconstructActiveFormattingElements() {
        const listLength = this.activeFormattingElements.length;
        if (listLength) {
          let unopenIdx = listLength;
          let entry = null;
          do {
            unopenIdx--;
            entry = this.activeFormattingElements.entries[unopenIdx];
            if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {
              unopenIdx++;
              break;
            }
          } while (unopenIdx > 0);
          for (let i3 = unopenIdx; i3 < listLength; i3++) {
            entry = this.activeFormattingElements.entries[i3];
            this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));
            entry.element = this.openElements.current;
          }
        }
      }
      _closeTableCell() {
        this.openElements.generateImpliedEndTags();
        this.openElements.popUntilTableCellPopped();
        this.activeFormattingElements.clearToLastMarker();
        this.insertionMode = IN_ROW_MODE;
      }
      _closePElement() {
        this.openElements.generateImpliedEndTagsWithExclusion($3.P);
        this.openElements.popUntilTagNamePopped($3.P);
      }
      _resetInsertionMode() {
        for (let i3 = this.openElements.stackTop, last = false; i3 >= 0; i3--) {
          let element6 = this.openElements.items[i3];
          if (i3 === 0) {
            last = true;
            if (this.fragmentContext) {
              element6 = this.fragmentContext;
            }
          }
          const tn = this.treeAdapter.getTagName(element6);
          const newInsertionMode = INSERTION_MODE_RESET_MAP[tn];
          if (newInsertionMode) {
            this.insertionMode = newInsertionMode;
            break;
          } else if (!last && (tn === $3.TD || tn === $3.TH)) {
            this.insertionMode = IN_CELL_MODE;
            break;
          } else if (!last && tn === $3.HEAD) {
            this.insertionMode = IN_HEAD_MODE;
            break;
          } else if (tn === $3.SELECT) {
            this._resetInsertionModeForSelect(i3);
            break;
          } else if (tn === $3.TEMPLATE) {
            this.insertionMode = this.currentTmplInsertionMode;
            break;
          } else if (tn === $3.HTML) {
            this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;
            break;
          } else if (last) {
            this.insertionMode = IN_BODY_MODE;
            break;
          }
        }
      }
      _resetInsertionModeForSelect(selectIdx) {
        if (selectIdx > 0) {
          for (let i3 = selectIdx - 1; i3 > 0; i3--) {
            const ancestor = this.openElements.items[i3];
            const tn = this.treeAdapter.getTagName(ancestor);
            if (tn === $3.TEMPLATE) {
              break;
            } else if (tn === $3.TABLE) {
              this.insertionMode = IN_SELECT_IN_TABLE_MODE;
              return;
            }
          }
        }
        this.insertionMode = IN_SELECT_MODE;
      }
      _pushTmplInsertionMode(mode) {
        this.tmplInsertionModeStack.push(mode);
        this.tmplInsertionModeStackTop++;
        this.currentTmplInsertionMode = mode;
      }
      _popTmplInsertionMode() {
        this.tmplInsertionModeStack.pop();
        this.tmplInsertionModeStackTop--;
        this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
      }
      _isElementCausesFosterParenting(element6) {
        const tn = this.treeAdapter.getTagName(element6);
        return tn === $3.TABLE || tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD || tn === $3.TR;
      }
      _shouldFosterParentOnInsertion() {
        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
      }
      _findFosterParentingLocation() {
        const location2 = {
          parent: null,
          beforeElement: null
        };
        for (let i3 = this.openElements.stackTop; i3 >= 0; i3--) {
          const openElement = this.openElements.items[i3];
          const tn = this.treeAdapter.getTagName(openElement);
          const ns2 = this.treeAdapter.getNamespaceURI(openElement);
          if (tn === $3.TEMPLATE && ns2 === NS.HTML) {
            location2.parent = this.treeAdapter.getTemplateContent(openElement);
            break;
          } else if (tn === $3.TABLE) {
            location2.parent = this.treeAdapter.getParentNode(openElement);
            if (location2.parent) {
              location2.beforeElement = openElement;
            } else {
              location2.parent = this.openElements.items[i3 - 1];
            }
            break;
          }
        }
        if (!location2.parent) {
          location2.parent = this.openElements.items[0];
        }
        return location2;
      }
      _fosterParentElement(element6) {
        const location2 = this._findFosterParentingLocation();
        if (location2.beforeElement) {
          this.treeAdapter.insertBefore(location2.parent, element6, location2.beforeElement);
        } else {
          this.treeAdapter.appendChild(location2.parent, element6);
        }
      }
      _fosterParentText(chars2) {
        const location2 = this._findFosterParentingLocation();
        if (location2.beforeElement) {
          this.treeAdapter.insertTextBefore(location2.parent, chars2, location2.beforeElement);
        } else {
          this.treeAdapter.insertText(location2.parent, chars2);
        }
      }
      _isSpecialElement(element6) {
        const tn = this.treeAdapter.getTagName(element6);
        const ns2 = this.treeAdapter.getNamespaceURI(element6);
        return HTML.SPECIAL_ELEMENTS[ns2][tn];
      }
    };
    module2.exports = Parser4;
    function aaObtainFormattingElementEntry(p3, token) {
      let formattingElementEntry = p3.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);
      if (formattingElementEntry) {
        if (!p3.openElements.contains(formattingElementEntry.element)) {
          p3.activeFormattingElements.removeEntry(formattingElementEntry);
          formattingElementEntry = null;
        } else if (!p3.openElements.hasInScope(token.tagName)) {
          formattingElementEntry = null;
        }
      } else {
        genericEndTagInBody(p3, token);
      }
      return formattingElementEntry;
    }
    function aaObtainFurthestBlock(p3, formattingElementEntry) {
      let furthestBlock = null;
      for (let i3 = p3.openElements.stackTop; i3 >= 0; i3--) {
        const element6 = p3.openElements.items[i3];
        if (element6 === formattingElementEntry.element) {
          break;
        }
        if (p3._isSpecialElement(element6)) {
          furthestBlock = element6;
        }
      }
      if (!furthestBlock) {
        p3.openElements.popUntilElementPopped(formattingElementEntry.element);
        p3.activeFormattingElements.removeEntry(formattingElementEntry);
      }
      return furthestBlock;
    }
    function aaInnerLoop(p3, furthestBlock, formattingElement) {
      let lastElement = furthestBlock;
      let nextElement = p3.openElements.getCommonAncestor(furthestBlock);
      for (let i3 = 0, element6 = nextElement; element6 !== formattingElement; i3++, element6 = nextElement) {
        nextElement = p3.openElements.getCommonAncestor(element6);
        const elementEntry = p3.activeFormattingElements.getElementEntry(element6);
        const counterOverflow = elementEntry && i3 >= AA_INNER_LOOP_ITER;
        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;
        if (shouldRemoveFromOpenElements) {
          if (counterOverflow) {
            p3.activeFormattingElements.removeEntry(elementEntry);
          }
          p3.openElements.remove(element6);
        } else {
          element6 = aaRecreateElementFromEntry(p3, elementEntry);
          if (lastElement === furthestBlock) {
            p3.activeFormattingElements.bookmark = elementEntry;
          }
          p3.treeAdapter.detachNode(lastElement);
          p3.treeAdapter.appendChild(element6, lastElement);
          lastElement = element6;
        }
      }
      return lastElement;
    }
    function aaRecreateElementFromEntry(p3, elementEntry) {
      const ns2 = p3.treeAdapter.getNamespaceURI(elementEntry.element);
      const newElement = p3.treeAdapter.createElement(elementEntry.token.tagName, ns2, elementEntry.token.attrs);
      p3.openElements.replace(elementEntry.element, newElement);
      elementEntry.element = newElement;
      return newElement;
    }
    function aaInsertLastNodeInCommonAncestor(p3, commonAncestor, lastElement) {
      if (p3._isElementCausesFosterParenting(commonAncestor)) {
        p3._fosterParentElement(lastElement);
      } else {
        const tn = p3.treeAdapter.getTagName(commonAncestor);
        const ns2 = p3.treeAdapter.getNamespaceURI(commonAncestor);
        if (tn === $3.TEMPLATE && ns2 === NS.HTML) {
          commonAncestor = p3.treeAdapter.getTemplateContent(commonAncestor);
        }
        p3.treeAdapter.appendChild(commonAncestor, lastElement);
      }
    }
    function aaReplaceFormattingElement(p3, furthestBlock, formattingElementEntry) {
      const ns2 = p3.treeAdapter.getNamespaceURI(formattingElementEntry.element);
      const token = formattingElementEntry.token;
      const newElement = p3.treeAdapter.createElement(token.tagName, ns2, token.attrs);
      p3._adoptNodes(furthestBlock, newElement);
      p3.treeAdapter.appendChild(furthestBlock, newElement);
      p3.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);
      p3.activeFormattingElements.removeEntry(formattingElementEntry);
      p3.openElements.remove(formattingElementEntry.element);
      p3.openElements.insertAfter(furthestBlock, newElement);
    }
    function callAdoptionAgency(p3, token) {
      let formattingElementEntry;
      for (let i3 = 0; i3 < AA_OUTER_LOOP_ITER; i3++) {
        formattingElementEntry = aaObtainFormattingElementEntry(p3, token, formattingElementEntry);
        if (!formattingElementEntry) {
          break;
        }
        const furthestBlock = aaObtainFurthestBlock(p3, formattingElementEntry);
        if (!furthestBlock) {
          break;
        }
        p3.activeFormattingElements.bookmark = formattingElementEntry;
        const lastElement = aaInnerLoop(p3, furthestBlock, formattingElementEntry.element);
        const commonAncestor = p3.openElements.getCommonAncestor(formattingElementEntry.element);
        p3.treeAdapter.detachNode(lastElement);
        aaInsertLastNodeInCommonAncestor(p3, commonAncestor, lastElement);
        aaReplaceFormattingElement(p3, furthestBlock, formattingElementEntry);
      }
    }
    function ignoreToken() {
    }
    function misplacedDoctype(p3) {
      p3._err(ERR.misplacedDoctype);
    }
    function appendComment(p3, token) {
      p3._appendCommentNode(token, p3.openElements.currentTmplContent || p3.openElements.current);
    }
    function appendCommentToRootHtmlElement(p3, token) {
      p3._appendCommentNode(token, p3.openElements.items[0]);
    }
    function appendCommentToDocument(p3, token) {
      p3._appendCommentNode(token, p3.document);
    }
    function insertCharacters(p3, token) {
      p3._insertCharacters(token);
    }
    function stopParsing(p3) {
      p3.stopped = true;
    }
    function doctypeInInitialMode(p3, token) {
      p3._setDocumentType(token);
      const mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype4.getDocumentMode(token);
      if (!doctype4.isConforming(token)) {
        p3._err(ERR.nonConformingDoctype);
      }
      p3.treeAdapter.setDocumentMode(p3.document, mode);
      p3.insertionMode = BEFORE_HTML_MODE;
    }
    function tokenInInitialMode(p3, token) {
      p3._err(ERR.missingDoctype, { beforeToken: true });
      p3.treeAdapter.setDocumentMode(p3.document, HTML.DOCUMENT_MODE.QUIRKS);
      p3.insertionMode = BEFORE_HTML_MODE;
      p3._processToken(token);
    }
    function startTagBeforeHtml(p3, token) {
      if (token.tagName === $3.HTML) {
        p3._insertElement(token, NS.HTML);
        p3.insertionMode = BEFORE_HEAD_MODE;
      } else {
        tokenBeforeHtml(p3, token);
      }
    }
    function endTagBeforeHtml(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML || tn === $3.HEAD || tn === $3.BODY || tn === $3.BR) {
        tokenBeforeHtml(p3, token);
      }
    }
    function tokenBeforeHtml(p3, token) {
      p3._insertFakeRootElement();
      p3.insertionMode = BEFORE_HEAD_MODE;
      p3._processToken(token);
    }
    function startTagBeforeHead(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML) {
        startTagInBody(p3, token);
      } else if (tn === $3.HEAD) {
        p3._insertElement(token, NS.HTML);
        p3.headElement = p3.openElements.current;
        p3.insertionMode = IN_HEAD_MODE;
      } else {
        tokenBeforeHead(p3, token);
      }
    }
    function endTagBeforeHead(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HEAD || tn === $3.BODY || tn === $3.HTML || tn === $3.BR) {
        tokenBeforeHead(p3, token);
      } else {
        p3._err(ERR.endTagWithoutMatchingOpenElement);
      }
    }
    function tokenBeforeHead(p3, token) {
      p3._insertFakeElement($3.HEAD);
      p3.headElement = p3.openElements.current;
      p3.insertionMode = IN_HEAD_MODE;
      p3._processToken(token);
    }
    function startTagInHead(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML) {
        startTagInBody(p3, token);
      } else if (tn === $3.BASE || tn === $3.BASEFONT || tn === $3.BGSOUND || tn === $3.LINK || tn === $3.META) {
        p3._appendElement(token, NS.HTML);
        token.ackSelfClosing = true;
      } else if (tn === $3.TITLE) {
        p3._switchToTextParsing(token, Tokenizer.MODE.RCDATA);
      } else if (tn === $3.NOSCRIPT) {
        if (p3.options.scriptingEnabled) {
          p3._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
        } else {
          p3._insertElement(token, NS.HTML);
          p3.insertionMode = IN_HEAD_NO_SCRIPT_MODE;
        }
      } else if (tn === $3.NOFRAMES || tn === $3.STYLE) {
        p3._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
      } else if (tn === $3.SCRIPT) {
        p3._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);
      } else if (tn === $3.TEMPLATE) {
        p3._insertTemplate(token, NS.HTML);
        p3.activeFormattingElements.insertMarker();
        p3.framesetOk = false;
        p3.insertionMode = IN_TEMPLATE_MODE;
        p3._pushTmplInsertionMode(IN_TEMPLATE_MODE);
      } else if (tn === $3.HEAD) {
        p3._err(ERR.misplacedStartTagForHeadElement);
      } else {
        tokenInHead(p3, token);
      }
    }
    function endTagInHead(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HEAD) {
        p3.openElements.pop();
        p3.insertionMode = AFTER_HEAD_MODE;
      } else if (tn === $3.BODY || tn === $3.BR || tn === $3.HTML) {
        tokenInHead(p3, token);
      } else if (tn === $3.TEMPLATE) {
        if (p3.openElements.tmplCount > 0) {
          p3.openElements.generateImpliedEndTagsThoroughly();
          if (p3.openElements.currentTagName !== $3.TEMPLATE) {
            p3._err(ERR.closingOfElementWithOpenChildElements);
          }
          p3.openElements.popUntilTagNamePopped($3.TEMPLATE);
          p3.activeFormattingElements.clearToLastMarker();
          p3._popTmplInsertionMode();
          p3._resetInsertionMode();
        } else {
          p3._err(ERR.endTagWithoutMatchingOpenElement);
        }
      } else {
        p3._err(ERR.endTagWithoutMatchingOpenElement);
      }
    }
    function tokenInHead(p3, token) {
      p3.openElements.pop();
      p3.insertionMode = AFTER_HEAD_MODE;
      p3._processToken(token);
    }
    function startTagInHeadNoScript(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML) {
        startTagInBody(p3, token);
      } else if (tn === $3.BASEFONT || tn === $3.BGSOUND || tn === $3.HEAD || tn === $3.LINK || tn === $3.META || tn === $3.NOFRAMES || tn === $3.STYLE) {
        startTagInHead(p3, token);
      } else if (tn === $3.NOSCRIPT) {
        p3._err(ERR.nestedNoscriptInHead);
      } else {
        tokenInHeadNoScript(p3, token);
      }
    }
    function endTagInHeadNoScript(p3, token) {
      const tn = token.tagName;
      if (tn === $3.NOSCRIPT) {
        p3.openElements.pop();
        p3.insertionMode = IN_HEAD_MODE;
      } else if (tn === $3.BR) {
        tokenInHeadNoScript(p3, token);
      } else {
        p3._err(ERR.endTagWithoutMatchingOpenElement);
      }
    }
    function tokenInHeadNoScript(p3, token) {
      const errCode = token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;
      p3._err(errCode);
      p3.openElements.pop();
      p3.insertionMode = IN_HEAD_MODE;
      p3._processToken(token);
    }
    function startTagAfterHead(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML) {
        startTagInBody(p3, token);
      } else if (tn === $3.BODY) {
        p3._insertElement(token, NS.HTML);
        p3.framesetOk = false;
        p3.insertionMode = IN_BODY_MODE;
      } else if (tn === $3.FRAMESET) {
        p3._insertElement(token, NS.HTML);
        p3.insertionMode = IN_FRAMESET_MODE;
      } else if (tn === $3.BASE || tn === $3.BASEFONT || tn === $3.BGSOUND || tn === $3.LINK || tn === $3.META || tn === $3.NOFRAMES || tn === $3.SCRIPT || tn === $3.STYLE || tn === $3.TEMPLATE || tn === $3.TITLE) {
        p3._err(ERR.abandonedHeadElementChild);
        p3.openElements.push(p3.headElement);
        startTagInHead(p3, token);
        p3.openElements.remove(p3.headElement);
      } else if (tn === $3.HEAD) {
        p3._err(ERR.misplacedStartTagForHeadElement);
      } else {
        tokenAfterHead(p3, token);
      }
    }
    function endTagAfterHead(p3, token) {
      const tn = token.tagName;
      if (tn === $3.BODY || tn === $3.HTML || tn === $3.BR) {
        tokenAfterHead(p3, token);
      } else if (tn === $3.TEMPLATE) {
        endTagInHead(p3, token);
      } else {
        p3._err(ERR.endTagWithoutMatchingOpenElement);
      }
    }
    function tokenAfterHead(p3, token) {
      p3._insertFakeElement($3.BODY);
      p3.insertionMode = IN_BODY_MODE;
      p3._processToken(token);
    }
    function whitespaceCharacterInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      p3._insertCharacters(token);
    }
    function characterInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      p3._insertCharacters(token);
      p3.framesetOk = false;
    }
    function htmlStartTagInBody(p3, token) {
      if (p3.openElements.tmplCount === 0) {
        p3.treeAdapter.adoptAttributes(p3.openElements.items[0], token.attrs);
      }
    }
    function bodyStartTagInBody(p3, token) {
      const bodyElement = p3.openElements.tryPeekProperlyNestedBodyElement();
      if (bodyElement && p3.openElements.tmplCount === 0) {
        p3.framesetOk = false;
        p3.treeAdapter.adoptAttributes(bodyElement, token.attrs);
      }
    }
    function framesetStartTagInBody(p3, token) {
      const bodyElement = p3.openElements.tryPeekProperlyNestedBodyElement();
      if (p3.framesetOk && bodyElement) {
        p3.treeAdapter.detachNode(bodyElement);
        p3.openElements.popAllUpToHtmlElement();
        p3._insertElement(token, NS.HTML);
        p3.insertionMode = IN_FRAMESET_MODE;
      }
    }
    function addressStartTagInBody(p3, token) {
      if (p3.openElements.hasInButtonScope($3.P)) {
        p3._closePElement();
      }
      p3._insertElement(token, NS.HTML);
    }
    function numberedHeaderStartTagInBody(p3, token) {
      if (p3.openElements.hasInButtonScope($3.P)) {
        p3._closePElement();
      }
      const tn = p3.openElements.currentTagName;
      if (tn === $3.H1 || tn === $3.H2 || tn === $3.H3 || tn === $3.H4 || tn === $3.H5 || tn === $3.H6) {
        p3.openElements.pop();
      }
      p3._insertElement(token, NS.HTML);
    }
    function preStartTagInBody(p3, token) {
      if (p3.openElements.hasInButtonScope($3.P)) {
        p3._closePElement();
      }
      p3._insertElement(token, NS.HTML);
      p3.skipNextNewLine = true;
      p3.framesetOk = false;
    }
    function formStartTagInBody(p3, token) {
      const inTemplate = p3.openElements.tmplCount > 0;
      if (!p3.formElement || inTemplate) {
        if (p3.openElements.hasInButtonScope($3.P)) {
          p3._closePElement();
        }
        p3._insertElement(token, NS.HTML);
        if (!inTemplate) {
          p3.formElement = p3.openElements.current;
        }
      }
    }
    function listItemStartTagInBody(p3, token) {
      p3.framesetOk = false;
      const tn = token.tagName;
      for (let i3 = p3.openElements.stackTop; i3 >= 0; i3--) {
        const element6 = p3.openElements.items[i3];
        const elementTn = p3.treeAdapter.getTagName(element6);
        let closeTn = null;
        if (tn === $3.LI && elementTn === $3.LI) {
          closeTn = $3.LI;
        } else if ((tn === $3.DD || tn === $3.DT) && (elementTn === $3.DD || elementTn === $3.DT)) {
          closeTn = elementTn;
        }
        if (closeTn) {
          p3.openElements.generateImpliedEndTagsWithExclusion(closeTn);
          p3.openElements.popUntilTagNamePopped(closeTn);
          break;
        }
        if (elementTn !== $3.ADDRESS && elementTn !== $3.DIV && elementTn !== $3.P && p3._isSpecialElement(element6)) {
          break;
        }
      }
      if (p3.openElements.hasInButtonScope($3.P)) {
        p3._closePElement();
      }
      p3._insertElement(token, NS.HTML);
    }
    function plaintextStartTagInBody(p3, token) {
      if (p3.openElements.hasInButtonScope($3.P)) {
        p3._closePElement();
      }
      p3._insertElement(token, NS.HTML);
      p3.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
    }
    function buttonStartTagInBody(p3, token) {
      if (p3.openElements.hasInScope($3.BUTTON)) {
        p3.openElements.generateImpliedEndTags();
        p3.openElements.popUntilTagNamePopped($3.BUTTON);
      }
      p3._reconstructActiveFormattingElements();
      p3._insertElement(token, NS.HTML);
      p3.framesetOk = false;
    }
    function aStartTagInBody(p3, token) {
      const activeElementEntry = p3.activeFormattingElements.getElementEntryInScopeWithTagName($3.A);
      if (activeElementEntry) {
        callAdoptionAgency(p3, token);
        p3.openElements.remove(activeElementEntry.element);
        p3.activeFormattingElements.removeEntry(activeElementEntry);
      }
      p3._reconstructActiveFormattingElements();
      p3._insertElement(token, NS.HTML);
      p3.activeFormattingElements.pushElement(p3.openElements.current, token);
    }
    function bStartTagInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      p3._insertElement(token, NS.HTML);
      p3.activeFormattingElements.pushElement(p3.openElements.current, token);
    }
    function nobrStartTagInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      if (p3.openElements.hasInScope($3.NOBR)) {
        callAdoptionAgency(p3, token);
        p3._reconstructActiveFormattingElements();
      }
      p3._insertElement(token, NS.HTML);
      p3.activeFormattingElements.pushElement(p3.openElements.current, token);
    }
    function appletStartTagInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      p3._insertElement(token, NS.HTML);
      p3.activeFormattingElements.insertMarker();
      p3.framesetOk = false;
    }
    function tableStartTagInBody(p3, token) {
      if (p3.treeAdapter.getDocumentMode(p3.document) !== HTML.DOCUMENT_MODE.QUIRKS && p3.openElements.hasInButtonScope($3.P)) {
        p3._closePElement();
      }
      p3._insertElement(token, NS.HTML);
      p3.framesetOk = false;
      p3.insertionMode = IN_TABLE_MODE;
    }
    function areaStartTagInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      p3._appendElement(token, NS.HTML);
      p3.framesetOk = false;
      token.ackSelfClosing = true;
    }
    function inputStartTagInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      p3._appendElement(token, NS.HTML);
      const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);
      if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {
        p3.framesetOk = false;
      }
      token.ackSelfClosing = true;
    }
    function paramStartTagInBody(p3, token) {
      p3._appendElement(token, NS.HTML);
      token.ackSelfClosing = true;
    }
    function hrStartTagInBody(p3, token) {
      if (p3.openElements.hasInButtonScope($3.P)) {
        p3._closePElement();
      }
      p3._appendElement(token, NS.HTML);
      p3.framesetOk = false;
      token.ackSelfClosing = true;
    }
    function imageStartTagInBody(p3, token) {
      token.tagName = $3.IMG;
      areaStartTagInBody(p3, token);
    }
    function textareaStartTagInBody(p3, token) {
      p3._insertElement(token, NS.HTML);
      p3.skipNextNewLine = true;
      p3.tokenizer.state = Tokenizer.MODE.RCDATA;
      p3.originalInsertionMode = p3.insertionMode;
      p3.framesetOk = false;
      p3.insertionMode = TEXT_MODE;
    }
    function xmpStartTagInBody(p3, token) {
      if (p3.openElements.hasInButtonScope($3.P)) {
        p3._closePElement();
      }
      p3._reconstructActiveFormattingElements();
      p3.framesetOk = false;
      p3._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
    }
    function iframeStartTagInBody(p3, token) {
      p3.framesetOk = false;
      p3._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
    }
    function noembedStartTagInBody(p3, token) {
      p3._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
    }
    function selectStartTagInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      p3._insertElement(token, NS.HTML);
      p3.framesetOk = false;
      if (p3.insertionMode === IN_TABLE_MODE || p3.insertionMode === IN_CAPTION_MODE || p3.insertionMode === IN_TABLE_BODY_MODE || p3.insertionMode === IN_ROW_MODE || p3.insertionMode === IN_CELL_MODE) {
        p3.insertionMode = IN_SELECT_IN_TABLE_MODE;
      } else {
        p3.insertionMode = IN_SELECT_MODE;
      }
    }
    function optgroupStartTagInBody(p3, token) {
      if (p3.openElements.currentTagName === $3.OPTION) {
        p3.openElements.pop();
      }
      p3._reconstructActiveFormattingElements();
      p3._insertElement(token, NS.HTML);
    }
    function rbStartTagInBody(p3, token) {
      if (p3.openElements.hasInScope($3.RUBY)) {
        p3.openElements.generateImpliedEndTags();
      }
      p3._insertElement(token, NS.HTML);
    }
    function rtStartTagInBody(p3, token) {
      if (p3.openElements.hasInScope($3.RUBY)) {
        p3.openElements.generateImpliedEndTagsWithExclusion($3.RTC);
      }
      p3._insertElement(token, NS.HTML);
    }
    function menuStartTagInBody(p3, token) {
      if (p3.openElements.hasInButtonScope($3.P)) {
        p3._closePElement();
      }
      p3._insertElement(token, NS.HTML);
    }
    function mathStartTagInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      foreignContent.adjustTokenMathMLAttrs(token);
      foreignContent.adjustTokenXMLAttrs(token);
      if (token.selfClosing) {
        p3._appendElement(token, NS.MATHML);
      } else {
        p3._insertElement(token, NS.MATHML);
      }
      token.ackSelfClosing = true;
    }
    function svgStartTagInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      foreignContent.adjustTokenSVGAttrs(token);
      foreignContent.adjustTokenXMLAttrs(token);
      if (token.selfClosing) {
        p3._appendElement(token, NS.SVG);
      } else {
        p3._insertElement(token, NS.SVG);
      }
      token.ackSelfClosing = true;
    }
    function genericStartTagInBody(p3, token) {
      p3._reconstructActiveFormattingElements();
      p3._insertElement(token, NS.HTML);
    }
    function startTagInBody(p3, token) {
      const tn = token.tagName;
      switch (tn.length) {
        case 1:
          if (tn === $3.I || tn === $3.S || tn === $3.B || tn === $3.U) {
            bStartTagInBody(p3, token);
          } else if (tn === $3.P) {
            addressStartTagInBody(p3, token);
          } else if (tn === $3.A) {
            aStartTagInBody(p3, token);
          } else {
            genericStartTagInBody(p3, token);
          }
          break;
        case 2:
          if (tn === $3.DL || tn === $3.OL || tn === $3.UL) {
            addressStartTagInBody(p3, token);
          } else if (tn === $3.H1 || tn === $3.H2 || tn === $3.H3 || tn === $3.H4 || tn === $3.H5 || tn === $3.H6) {
            numberedHeaderStartTagInBody(p3, token);
          } else if (tn === $3.LI || tn === $3.DD || tn === $3.DT) {
            listItemStartTagInBody(p3, token);
          } else if (tn === $3.EM || tn === $3.TT) {
            bStartTagInBody(p3, token);
          } else if (tn === $3.BR) {
            areaStartTagInBody(p3, token);
          } else if (tn === $3.HR) {
            hrStartTagInBody(p3, token);
          } else if (tn === $3.RB) {
            rbStartTagInBody(p3, token);
          } else if (tn === $3.RT || tn === $3.RP) {
            rtStartTagInBody(p3, token);
          } else if (tn !== $3.TH && tn !== $3.TD && tn !== $3.TR) {
            genericStartTagInBody(p3, token);
          }
          break;
        case 3:
          if (tn === $3.DIV || tn === $3.DIR || tn === $3.NAV) {
            addressStartTagInBody(p3, token);
          } else if (tn === $3.PRE) {
            preStartTagInBody(p3, token);
          } else if (tn === $3.BIG) {
            bStartTagInBody(p3, token);
          } else if (tn === $3.IMG || tn === $3.WBR) {
            areaStartTagInBody(p3, token);
          } else if (tn === $3.XMP) {
            xmpStartTagInBody(p3, token);
          } else if (tn === $3.SVG) {
            svgStartTagInBody(p3, token);
          } else if (tn === $3.RTC) {
            rbStartTagInBody(p3, token);
          } else if (tn !== $3.COL) {
            genericStartTagInBody(p3, token);
          }
          break;
        case 4:
          if (tn === $3.HTML) {
            htmlStartTagInBody(p3, token);
          } else if (tn === $3.BASE || tn === $3.LINK || tn === $3.META) {
            startTagInHead(p3, token);
          } else if (tn === $3.BODY) {
            bodyStartTagInBody(p3, token);
          } else if (tn === $3.MAIN || tn === $3.MENU) {
            addressStartTagInBody(p3, token);
          } else if (tn === $3.FORM) {
            formStartTagInBody(p3, token);
          } else if (tn === $3.CODE || tn === $3.FONT) {
            bStartTagInBody(p3, token);
          } else if (tn === $3.NOBR) {
            nobrStartTagInBody(p3, token);
          } else if (tn === $3.AREA) {
            areaStartTagInBody(p3, token);
          } else if (tn === $3.MATH) {
            mathStartTagInBody(p3, token);
          } else if (tn === $3.MENU) {
            menuStartTagInBody(p3, token);
          } else if (tn !== $3.HEAD) {
            genericStartTagInBody(p3, token);
          }
          break;
        case 5:
          if (tn === $3.STYLE || tn === $3.TITLE) {
            startTagInHead(p3, token);
          } else if (tn === $3.ASIDE) {
            addressStartTagInBody(p3, token);
          } else if (tn === $3.SMALL) {
            bStartTagInBody(p3, token);
          } else if (tn === $3.TABLE) {
            tableStartTagInBody(p3, token);
          } else if (tn === $3.EMBED) {
            areaStartTagInBody(p3, token);
          } else if (tn === $3.INPUT) {
            inputStartTagInBody(p3, token);
          } else if (tn === $3.PARAM || tn === $3.TRACK) {
            paramStartTagInBody(p3, token);
          } else if (tn === $3.IMAGE) {
            imageStartTagInBody(p3, token);
          } else if (tn !== $3.FRAME && tn !== $3.TBODY && tn !== $3.TFOOT && tn !== $3.THEAD) {
            genericStartTagInBody(p3, token);
          }
          break;
        case 6:
          if (tn === $3.SCRIPT) {
            startTagInHead(p3, token);
          } else if (tn === $3.CENTER || tn === $3.FIGURE || tn === $3.FOOTER || tn === $3.HEADER || tn === $3.HGROUP || tn === $3.DIALOG) {
            addressStartTagInBody(p3, token);
          } else if (tn === $3.BUTTON) {
            buttonStartTagInBody(p3, token);
          } else if (tn === $3.STRIKE || tn === $3.STRONG) {
            bStartTagInBody(p3, token);
          } else if (tn === $3.APPLET || tn === $3.OBJECT) {
            appletStartTagInBody(p3, token);
          } else if (tn === $3.KEYGEN) {
            areaStartTagInBody(p3, token);
          } else if (tn === $3.SOURCE) {
            paramStartTagInBody(p3, token);
          } else if (tn === $3.IFRAME) {
            iframeStartTagInBody(p3, token);
          } else if (tn === $3.SELECT) {
            selectStartTagInBody(p3, token);
          } else if (tn === $3.OPTION) {
            optgroupStartTagInBody(p3, token);
          } else {
            genericStartTagInBody(p3, token);
          }
          break;
        case 7:
          if (tn === $3.BGSOUND) {
            startTagInHead(p3, token);
          } else if (tn === $3.DETAILS || tn === $3.ADDRESS || tn === $3.ARTICLE || tn === $3.SECTION || tn === $3.SUMMARY) {
            addressStartTagInBody(p3, token);
          } else if (tn === $3.LISTING) {
            preStartTagInBody(p3, token);
          } else if (tn === $3.MARQUEE) {
            appletStartTagInBody(p3, token);
          } else if (tn === $3.NOEMBED) {
            noembedStartTagInBody(p3, token);
          } else if (tn !== $3.CAPTION) {
            genericStartTagInBody(p3, token);
          }
          break;
        case 8:
          if (tn === $3.BASEFONT) {
            startTagInHead(p3, token);
          } else if (tn === $3.FRAMESET) {
            framesetStartTagInBody(p3, token);
          } else if (tn === $3.FIELDSET) {
            addressStartTagInBody(p3, token);
          } else if (tn === $3.TEXTAREA) {
            textareaStartTagInBody(p3, token);
          } else if (tn === $3.TEMPLATE) {
            startTagInHead(p3, token);
          } else if (tn === $3.NOSCRIPT) {
            if (p3.options.scriptingEnabled) {
              noembedStartTagInBody(p3, token);
            } else {
              genericStartTagInBody(p3, token);
            }
          } else if (tn === $3.OPTGROUP) {
            optgroupStartTagInBody(p3, token);
          } else if (tn !== $3.COLGROUP) {
            genericStartTagInBody(p3, token);
          }
          break;
        case 9:
          if (tn === $3.PLAINTEXT) {
            plaintextStartTagInBody(p3, token);
          } else {
            genericStartTagInBody(p3, token);
          }
          break;
        case 10:
          if (tn === $3.BLOCKQUOTE || tn === $3.FIGCAPTION) {
            addressStartTagInBody(p3, token);
          } else {
            genericStartTagInBody(p3, token);
          }
          break;
        default:
          genericStartTagInBody(p3, token);
      }
    }
    function bodyEndTagInBody(p3) {
      if (p3.openElements.hasInScope($3.BODY)) {
        p3.insertionMode = AFTER_BODY_MODE;
      }
    }
    function htmlEndTagInBody(p3, token) {
      if (p3.openElements.hasInScope($3.BODY)) {
        p3.insertionMode = AFTER_BODY_MODE;
        p3._processToken(token);
      }
    }
    function addressEndTagInBody(p3, token) {
      const tn = token.tagName;
      if (p3.openElements.hasInScope(tn)) {
        p3.openElements.generateImpliedEndTags();
        p3.openElements.popUntilTagNamePopped(tn);
      }
    }
    function formEndTagInBody(p3) {
      const inTemplate = p3.openElements.tmplCount > 0;
      const formElement = p3.formElement;
      if (!inTemplate) {
        p3.formElement = null;
      }
      if ((formElement || inTemplate) && p3.openElements.hasInScope($3.FORM)) {
        p3.openElements.generateImpliedEndTags();
        if (inTemplate) {
          p3.openElements.popUntilTagNamePopped($3.FORM);
        } else {
          p3.openElements.remove(formElement);
        }
      }
    }
    function pEndTagInBody(p3) {
      if (!p3.openElements.hasInButtonScope($3.P)) {
        p3._insertFakeElement($3.P);
      }
      p3._closePElement();
    }
    function liEndTagInBody(p3) {
      if (p3.openElements.hasInListItemScope($3.LI)) {
        p3.openElements.generateImpliedEndTagsWithExclusion($3.LI);
        p3.openElements.popUntilTagNamePopped($3.LI);
      }
    }
    function ddEndTagInBody(p3, token) {
      const tn = token.tagName;
      if (p3.openElements.hasInScope(tn)) {
        p3.openElements.generateImpliedEndTagsWithExclusion(tn);
        p3.openElements.popUntilTagNamePopped(tn);
      }
    }
    function numberedHeaderEndTagInBody(p3) {
      if (p3.openElements.hasNumberedHeaderInScope()) {
        p3.openElements.generateImpliedEndTags();
        p3.openElements.popUntilNumberedHeaderPopped();
      }
    }
    function appletEndTagInBody(p3, token) {
      const tn = token.tagName;
      if (p3.openElements.hasInScope(tn)) {
        p3.openElements.generateImpliedEndTags();
        p3.openElements.popUntilTagNamePopped(tn);
        p3.activeFormattingElements.clearToLastMarker();
      }
    }
    function brEndTagInBody(p3) {
      p3._reconstructActiveFormattingElements();
      p3._insertFakeElement($3.BR);
      p3.openElements.pop();
      p3.framesetOk = false;
    }
    function genericEndTagInBody(p3, token) {
      const tn = token.tagName;
      for (let i3 = p3.openElements.stackTop; i3 > 0; i3--) {
        const element6 = p3.openElements.items[i3];
        if (p3.treeAdapter.getTagName(element6) === tn) {
          p3.openElements.generateImpliedEndTagsWithExclusion(tn);
          p3.openElements.popUntilElementPopped(element6);
          break;
        }
        if (p3._isSpecialElement(element6)) {
          break;
        }
      }
    }
    function endTagInBody(p3, token) {
      const tn = token.tagName;
      switch (tn.length) {
        case 1:
          if (tn === $3.A || tn === $3.B || tn === $3.I || tn === $3.S || tn === $3.U) {
            callAdoptionAgency(p3, token);
          } else if (tn === $3.P) {
            pEndTagInBody(p3, token);
          } else {
            genericEndTagInBody(p3, token);
          }
          break;
        case 2:
          if (tn === $3.DL || tn === $3.UL || tn === $3.OL) {
            addressEndTagInBody(p3, token);
          } else if (tn === $3.LI) {
            liEndTagInBody(p3, token);
          } else if (tn === $3.DD || tn === $3.DT) {
            ddEndTagInBody(p3, token);
          } else if (tn === $3.H1 || tn === $3.H2 || tn === $3.H3 || tn === $3.H4 || tn === $3.H5 || tn === $3.H6) {
            numberedHeaderEndTagInBody(p3, token);
          } else if (tn === $3.BR) {
            brEndTagInBody(p3, token);
          } else if (tn === $3.EM || tn === $3.TT) {
            callAdoptionAgency(p3, token);
          } else {
            genericEndTagInBody(p3, token);
          }
          break;
        case 3:
          if (tn === $3.BIG) {
            callAdoptionAgency(p3, token);
          } else if (tn === $3.DIR || tn === $3.DIV || tn === $3.NAV || tn === $3.PRE) {
            addressEndTagInBody(p3, token);
          } else {
            genericEndTagInBody(p3, token);
          }
          break;
        case 4:
          if (tn === $3.BODY) {
            bodyEndTagInBody(p3, token);
          } else if (tn === $3.HTML) {
            htmlEndTagInBody(p3, token);
          } else if (tn === $3.FORM) {
            formEndTagInBody(p3, token);
          } else if (tn === $3.CODE || tn === $3.FONT || tn === $3.NOBR) {
            callAdoptionAgency(p3, token);
          } else if (tn === $3.MAIN || tn === $3.MENU) {
            addressEndTagInBody(p3, token);
          } else {
            genericEndTagInBody(p3, token);
          }
          break;
        case 5:
          if (tn === $3.ASIDE) {
            addressEndTagInBody(p3, token);
          } else if (tn === $3.SMALL) {
            callAdoptionAgency(p3, token);
          } else {
            genericEndTagInBody(p3, token);
          }
          break;
        case 6:
          if (tn === $3.CENTER || tn === $3.FIGURE || tn === $3.FOOTER || tn === $3.HEADER || tn === $3.HGROUP || tn === $3.DIALOG) {
            addressEndTagInBody(p3, token);
          } else if (tn === $3.APPLET || tn === $3.OBJECT) {
            appletEndTagInBody(p3, token);
          } else if (tn === $3.STRIKE || tn === $3.STRONG) {
            callAdoptionAgency(p3, token);
          } else {
            genericEndTagInBody(p3, token);
          }
          break;
        case 7:
          if (tn === $3.ADDRESS || tn === $3.ARTICLE || tn === $3.DETAILS || tn === $3.SECTION || tn === $3.SUMMARY || tn === $3.LISTING) {
            addressEndTagInBody(p3, token);
          } else if (tn === $3.MARQUEE) {
            appletEndTagInBody(p3, token);
          } else {
            genericEndTagInBody(p3, token);
          }
          break;
        case 8:
          if (tn === $3.FIELDSET) {
            addressEndTagInBody(p3, token);
          } else if (tn === $3.TEMPLATE) {
            endTagInHead(p3, token);
          } else {
            genericEndTagInBody(p3, token);
          }
          break;
        case 10:
          if (tn === $3.BLOCKQUOTE || tn === $3.FIGCAPTION) {
            addressEndTagInBody(p3, token);
          } else {
            genericEndTagInBody(p3, token);
          }
          break;
        default:
          genericEndTagInBody(p3, token);
      }
    }
    function eofInBody(p3, token) {
      if (p3.tmplInsertionModeStackTop > -1) {
        eofInTemplate(p3, token);
      } else {
        p3.stopped = true;
      }
    }
    function endTagInText(p3, token) {
      if (token.tagName === $3.SCRIPT) {
        p3.pendingScript = p3.openElements.current;
      }
      p3.openElements.pop();
      p3.insertionMode = p3.originalInsertionMode;
    }
    function eofInText(p3, token) {
      p3._err(ERR.eofInElementThatCanContainOnlyText);
      p3.openElements.pop();
      p3.insertionMode = p3.originalInsertionMode;
      p3._processToken(token);
    }
    function characterInTable(p3, token) {
      const curTn = p3.openElements.currentTagName;
      if (curTn === $3.TABLE || curTn === $3.TBODY || curTn === $3.TFOOT || curTn === $3.THEAD || curTn === $3.TR) {
        p3.pendingCharacterTokens = [];
        p3.hasNonWhitespacePendingCharacterToken = false;
        p3.originalInsertionMode = p3.insertionMode;
        p3.insertionMode = IN_TABLE_TEXT_MODE;
        p3._processToken(token);
      } else {
        tokenInTable(p3, token);
      }
    }
    function captionStartTagInTable(p3, token) {
      p3.openElements.clearBackToTableContext();
      p3.activeFormattingElements.insertMarker();
      p3._insertElement(token, NS.HTML);
      p3.insertionMode = IN_CAPTION_MODE;
    }
    function colgroupStartTagInTable(p3, token) {
      p3.openElements.clearBackToTableContext();
      p3._insertElement(token, NS.HTML);
      p3.insertionMode = IN_COLUMN_GROUP_MODE;
    }
    function colStartTagInTable(p3, token) {
      p3.openElements.clearBackToTableContext();
      p3._insertFakeElement($3.COLGROUP);
      p3.insertionMode = IN_COLUMN_GROUP_MODE;
      p3._processToken(token);
    }
    function tbodyStartTagInTable(p3, token) {
      p3.openElements.clearBackToTableContext();
      p3._insertElement(token, NS.HTML);
      p3.insertionMode = IN_TABLE_BODY_MODE;
    }
    function tdStartTagInTable(p3, token) {
      p3.openElements.clearBackToTableContext();
      p3._insertFakeElement($3.TBODY);
      p3.insertionMode = IN_TABLE_BODY_MODE;
      p3._processToken(token);
    }
    function tableStartTagInTable(p3, token) {
      if (p3.openElements.hasInTableScope($3.TABLE)) {
        p3.openElements.popUntilTagNamePopped($3.TABLE);
        p3._resetInsertionMode();
        p3._processToken(token);
      }
    }
    function inputStartTagInTable(p3, token) {
      const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);
      if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {
        p3._appendElement(token, NS.HTML);
      } else {
        tokenInTable(p3, token);
      }
      token.ackSelfClosing = true;
    }
    function formStartTagInTable(p3, token) {
      if (!p3.formElement && p3.openElements.tmplCount === 0) {
        p3._insertElement(token, NS.HTML);
        p3.formElement = p3.openElements.current;
        p3.openElements.pop();
      }
    }
    function startTagInTable(p3, token) {
      const tn = token.tagName;
      switch (tn.length) {
        case 2:
          if (tn === $3.TD || tn === $3.TH || tn === $3.TR) {
            tdStartTagInTable(p3, token);
          } else {
            tokenInTable(p3, token);
          }
          break;
        case 3:
          if (tn === $3.COL) {
            colStartTagInTable(p3, token);
          } else {
            tokenInTable(p3, token);
          }
          break;
        case 4:
          if (tn === $3.FORM) {
            formStartTagInTable(p3, token);
          } else {
            tokenInTable(p3, token);
          }
          break;
        case 5:
          if (tn === $3.TABLE) {
            tableStartTagInTable(p3, token);
          } else if (tn === $3.STYLE) {
            startTagInHead(p3, token);
          } else if (tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD) {
            tbodyStartTagInTable(p3, token);
          } else if (tn === $3.INPUT) {
            inputStartTagInTable(p3, token);
          } else {
            tokenInTable(p3, token);
          }
          break;
        case 6:
          if (tn === $3.SCRIPT) {
            startTagInHead(p3, token);
          } else {
            tokenInTable(p3, token);
          }
          break;
        case 7:
          if (tn === $3.CAPTION) {
            captionStartTagInTable(p3, token);
          } else {
            tokenInTable(p3, token);
          }
          break;
        case 8:
          if (tn === $3.COLGROUP) {
            colgroupStartTagInTable(p3, token);
          } else if (tn === $3.TEMPLATE) {
            startTagInHead(p3, token);
          } else {
            tokenInTable(p3, token);
          }
          break;
        default:
          tokenInTable(p3, token);
      }
    }
    function endTagInTable(p3, token) {
      const tn = token.tagName;
      if (tn === $3.TABLE) {
        if (p3.openElements.hasInTableScope($3.TABLE)) {
          p3.openElements.popUntilTagNamePopped($3.TABLE);
          p3._resetInsertionMode();
        }
      } else if (tn === $3.TEMPLATE) {
        endTagInHead(p3, token);
      } else if (tn !== $3.BODY && tn !== $3.CAPTION && tn !== $3.COL && tn !== $3.COLGROUP && tn !== $3.HTML && tn !== $3.TBODY && tn !== $3.TD && tn !== $3.TFOOT && tn !== $3.TH && tn !== $3.THEAD && tn !== $3.TR) {
        tokenInTable(p3, token);
      }
    }
    function tokenInTable(p3, token) {
      const savedFosterParentingState = p3.fosterParentingEnabled;
      p3.fosterParentingEnabled = true;
      p3._processTokenInBodyMode(token);
      p3.fosterParentingEnabled = savedFosterParentingState;
    }
    function whitespaceCharacterInTableText(p3, token) {
      p3.pendingCharacterTokens.push(token);
    }
    function characterInTableText(p3, token) {
      p3.pendingCharacterTokens.push(token);
      p3.hasNonWhitespacePendingCharacterToken = true;
    }
    function tokenInTableText(p3, token) {
      let i3 = 0;
      if (p3.hasNonWhitespacePendingCharacterToken) {
        for (; i3 < p3.pendingCharacterTokens.length; i3++) {
          tokenInTable(p3, p3.pendingCharacterTokens[i3]);
        }
      } else {
        for (; i3 < p3.pendingCharacterTokens.length; i3++) {
          p3._insertCharacters(p3.pendingCharacterTokens[i3]);
        }
      }
      p3.insertionMode = p3.originalInsertionMode;
      p3._processToken(token);
    }
    function startTagInCaption(p3, token) {
      const tn = token.tagName;
      if (tn === $3.CAPTION || tn === $3.COL || tn === $3.COLGROUP || tn === $3.TBODY || tn === $3.TD || tn === $3.TFOOT || tn === $3.TH || tn === $3.THEAD || tn === $3.TR) {
        if (p3.openElements.hasInTableScope($3.CAPTION)) {
          p3.openElements.generateImpliedEndTags();
          p3.openElements.popUntilTagNamePopped($3.CAPTION);
          p3.activeFormattingElements.clearToLastMarker();
          p3.insertionMode = IN_TABLE_MODE;
          p3._processToken(token);
        }
      } else {
        startTagInBody(p3, token);
      }
    }
    function endTagInCaption(p3, token) {
      const tn = token.tagName;
      if (tn === $3.CAPTION || tn === $3.TABLE) {
        if (p3.openElements.hasInTableScope($3.CAPTION)) {
          p3.openElements.generateImpliedEndTags();
          p3.openElements.popUntilTagNamePopped($3.CAPTION);
          p3.activeFormattingElements.clearToLastMarker();
          p3.insertionMode = IN_TABLE_MODE;
          if (tn === $3.TABLE) {
            p3._processToken(token);
          }
        }
      } else if (tn !== $3.BODY && tn !== $3.COL && tn !== $3.COLGROUP && tn !== $3.HTML && tn !== $3.TBODY && tn !== $3.TD && tn !== $3.TFOOT && tn !== $3.TH && tn !== $3.THEAD && tn !== $3.TR) {
        endTagInBody(p3, token);
      }
    }
    function startTagInColumnGroup(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML) {
        startTagInBody(p3, token);
      } else if (tn === $3.COL) {
        p3._appendElement(token, NS.HTML);
        token.ackSelfClosing = true;
      } else if (tn === $3.TEMPLATE) {
        startTagInHead(p3, token);
      } else {
        tokenInColumnGroup(p3, token);
      }
    }
    function endTagInColumnGroup(p3, token) {
      const tn = token.tagName;
      if (tn === $3.COLGROUP) {
        if (p3.openElements.currentTagName === $3.COLGROUP) {
          p3.openElements.pop();
          p3.insertionMode = IN_TABLE_MODE;
        }
      } else if (tn === $3.TEMPLATE) {
        endTagInHead(p3, token);
      } else if (tn !== $3.COL) {
        tokenInColumnGroup(p3, token);
      }
    }
    function tokenInColumnGroup(p3, token) {
      if (p3.openElements.currentTagName === $3.COLGROUP) {
        p3.openElements.pop();
        p3.insertionMode = IN_TABLE_MODE;
        p3._processToken(token);
      }
    }
    function startTagInTableBody(p3, token) {
      const tn = token.tagName;
      if (tn === $3.TR) {
        p3.openElements.clearBackToTableBodyContext();
        p3._insertElement(token, NS.HTML);
        p3.insertionMode = IN_ROW_MODE;
      } else if (tn === $3.TH || tn === $3.TD) {
        p3.openElements.clearBackToTableBodyContext();
        p3._insertFakeElement($3.TR);
        p3.insertionMode = IN_ROW_MODE;
        p3._processToken(token);
      } else if (tn === $3.CAPTION || tn === $3.COL || tn === $3.COLGROUP || tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD) {
        if (p3.openElements.hasTableBodyContextInTableScope()) {
          p3.openElements.clearBackToTableBodyContext();
          p3.openElements.pop();
          p3.insertionMode = IN_TABLE_MODE;
          p3._processToken(token);
        }
      } else {
        startTagInTable(p3, token);
      }
    }
    function endTagInTableBody(p3, token) {
      const tn = token.tagName;
      if (tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD) {
        if (p3.openElements.hasInTableScope(tn)) {
          p3.openElements.clearBackToTableBodyContext();
          p3.openElements.pop();
          p3.insertionMode = IN_TABLE_MODE;
        }
      } else if (tn === $3.TABLE) {
        if (p3.openElements.hasTableBodyContextInTableScope()) {
          p3.openElements.clearBackToTableBodyContext();
          p3.openElements.pop();
          p3.insertionMode = IN_TABLE_MODE;
          p3._processToken(token);
        }
      } else if (tn !== $3.BODY && tn !== $3.CAPTION && tn !== $3.COL && tn !== $3.COLGROUP || tn !== $3.HTML && tn !== $3.TD && tn !== $3.TH && tn !== $3.TR) {
        endTagInTable(p3, token);
      }
    }
    function startTagInRow(p3, token) {
      const tn = token.tagName;
      if (tn === $3.TH || tn === $3.TD) {
        p3.openElements.clearBackToTableRowContext();
        p3._insertElement(token, NS.HTML);
        p3.insertionMode = IN_CELL_MODE;
        p3.activeFormattingElements.insertMarker();
      } else if (tn === $3.CAPTION || tn === $3.COL || tn === $3.COLGROUP || tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD || tn === $3.TR) {
        if (p3.openElements.hasInTableScope($3.TR)) {
          p3.openElements.clearBackToTableRowContext();
          p3.openElements.pop();
          p3.insertionMode = IN_TABLE_BODY_MODE;
          p3._processToken(token);
        }
      } else {
        startTagInTable(p3, token);
      }
    }
    function endTagInRow(p3, token) {
      const tn = token.tagName;
      if (tn === $3.TR) {
        if (p3.openElements.hasInTableScope($3.TR)) {
          p3.openElements.clearBackToTableRowContext();
          p3.openElements.pop();
          p3.insertionMode = IN_TABLE_BODY_MODE;
        }
      } else if (tn === $3.TABLE) {
        if (p3.openElements.hasInTableScope($3.TR)) {
          p3.openElements.clearBackToTableRowContext();
          p3.openElements.pop();
          p3.insertionMode = IN_TABLE_BODY_MODE;
          p3._processToken(token);
        }
      } else if (tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD) {
        if (p3.openElements.hasInTableScope(tn) || p3.openElements.hasInTableScope($3.TR)) {
          p3.openElements.clearBackToTableRowContext();
          p3.openElements.pop();
          p3.insertionMode = IN_TABLE_BODY_MODE;
          p3._processToken(token);
        }
      } else if (tn !== $3.BODY && tn !== $3.CAPTION && tn !== $3.COL && tn !== $3.COLGROUP || tn !== $3.HTML && tn !== $3.TD && tn !== $3.TH) {
        endTagInTable(p3, token);
      }
    }
    function startTagInCell(p3, token) {
      const tn = token.tagName;
      if (tn === $3.CAPTION || tn === $3.COL || tn === $3.COLGROUP || tn === $3.TBODY || tn === $3.TD || tn === $3.TFOOT || tn === $3.TH || tn === $3.THEAD || tn === $3.TR) {
        if (p3.openElements.hasInTableScope($3.TD) || p3.openElements.hasInTableScope($3.TH)) {
          p3._closeTableCell();
          p3._processToken(token);
        }
      } else {
        startTagInBody(p3, token);
      }
    }
    function endTagInCell(p3, token) {
      const tn = token.tagName;
      if (tn === $3.TD || tn === $3.TH) {
        if (p3.openElements.hasInTableScope(tn)) {
          p3.openElements.generateImpliedEndTags();
          p3.openElements.popUntilTagNamePopped(tn);
          p3.activeFormattingElements.clearToLastMarker();
          p3.insertionMode = IN_ROW_MODE;
        }
      } else if (tn === $3.TABLE || tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD || tn === $3.TR) {
        if (p3.openElements.hasInTableScope(tn)) {
          p3._closeTableCell();
          p3._processToken(token);
        }
      } else if (tn !== $3.BODY && tn !== $3.CAPTION && tn !== $3.COL && tn !== $3.COLGROUP && tn !== $3.HTML) {
        endTagInBody(p3, token);
      }
    }
    function startTagInSelect(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML) {
        startTagInBody(p3, token);
      } else if (tn === $3.OPTION) {
        if (p3.openElements.currentTagName === $3.OPTION) {
          p3.openElements.pop();
        }
        p3._insertElement(token, NS.HTML);
      } else if (tn === $3.OPTGROUP) {
        if (p3.openElements.currentTagName === $3.OPTION) {
          p3.openElements.pop();
        }
        if (p3.openElements.currentTagName === $3.OPTGROUP) {
          p3.openElements.pop();
        }
        p3._insertElement(token, NS.HTML);
      } else if (tn === $3.INPUT || tn === $3.KEYGEN || tn === $3.TEXTAREA || tn === $3.SELECT) {
        if (p3.openElements.hasInSelectScope($3.SELECT)) {
          p3.openElements.popUntilTagNamePopped($3.SELECT);
          p3._resetInsertionMode();
          if (tn !== $3.SELECT) {
            p3._processToken(token);
          }
        }
      } else if (tn === $3.SCRIPT || tn === $3.TEMPLATE) {
        startTagInHead(p3, token);
      }
    }
    function endTagInSelect(p3, token) {
      const tn = token.tagName;
      if (tn === $3.OPTGROUP) {
        const prevOpenElement = p3.openElements.items[p3.openElements.stackTop - 1];
        const prevOpenElementTn = prevOpenElement && p3.treeAdapter.getTagName(prevOpenElement);
        if (p3.openElements.currentTagName === $3.OPTION && prevOpenElementTn === $3.OPTGROUP) {
          p3.openElements.pop();
        }
        if (p3.openElements.currentTagName === $3.OPTGROUP) {
          p3.openElements.pop();
        }
      } else if (tn === $3.OPTION) {
        if (p3.openElements.currentTagName === $3.OPTION) {
          p3.openElements.pop();
        }
      } else if (tn === $3.SELECT && p3.openElements.hasInSelectScope($3.SELECT)) {
        p3.openElements.popUntilTagNamePopped($3.SELECT);
        p3._resetInsertionMode();
      } else if (tn === $3.TEMPLATE) {
        endTagInHead(p3, token);
      }
    }
    function startTagInSelectInTable(p3, token) {
      const tn = token.tagName;
      if (tn === $3.CAPTION || tn === $3.TABLE || tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD || tn === $3.TR || tn === $3.TD || tn === $3.TH) {
        p3.openElements.popUntilTagNamePopped($3.SELECT);
        p3._resetInsertionMode();
        p3._processToken(token);
      } else {
        startTagInSelect(p3, token);
      }
    }
    function endTagInSelectInTable(p3, token) {
      const tn = token.tagName;
      if (tn === $3.CAPTION || tn === $3.TABLE || tn === $3.TBODY || tn === $3.TFOOT || tn === $3.THEAD || tn === $3.TR || tn === $3.TD || tn === $3.TH) {
        if (p3.openElements.hasInTableScope(tn)) {
          p3.openElements.popUntilTagNamePopped($3.SELECT);
          p3._resetInsertionMode();
          p3._processToken(token);
        }
      } else {
        endTagInSelect(p3, token);
      }
    }
    function startTagInTemplate(p3, token) {
      const tn = token.tagName;
      if (tn === $3.BASE || tn === $3.BASEFONT || tn === $3.BGSOUND || tn === $3.LINK || tn === $3.META || tn === $3.NOFRAMES || tn === $3.SCRIPT || tn === $3.STYLE || tn === $3.TEMPLATE || tn === $3.TITLE) {
        startTagInHead(p3, token);
      } else {
        const newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;
        p3._popTmplInsertionMode();
        p3._pushTmplInsertionMode(newInsertionMode);
        p3.insertionMode = newInsertionMode;
        p3._processToken(token);
      }
    }
    function endTagInTemplate(p3, token) {
      if (token.tagName === $3.TEMPLATE) {
        endTagInHead(p3, token);
      }
    }
    function eofInTemplate(p3, token) {
      if (p3.openElements.tmplCount > 0) {
        p3.openElements.popUntilTagNamePopped($3.TEMPLATE);
        p3.activeFormattingElements.clearToLastMarker();
        p3._popTmplInsertionMode();
        p3._resetInsertionMode();
        p3._processToken(token);
      } else {
        p3.stopped = true;
      }
    }
    function startTagAfterBody(p3, token) {
      if (token.tagName === $3.HTML) {
        startTagInBody(p3, token);
      } else {
        tokenAfterBody(p3, token);
      }
    }
    function endTagAfterBody(p3, token) {
      if (token.tagName === $3.HTML) {
        if (!p3.fragmentContext) {
          p3.insertionMode = AFTER_AFTER_BODY_MODE;
        }
      } else {
        tokenAfterBody(p3, token);
      }
    }
    function tokenAfterBody(p3, token) {
      p3.insertionMode = IN_BODY_MODE;
      p3._processToken(token);
    }
    function startTagInFrameset(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML) {
        startTagInBody(p3, token);
      } else if (tn === $3.FRAMESET) {
        p3._insertElement(token, NS.HTML);
      } else if (tn === $3.FRAME) {
        p3._appendElement(token, NS.HTML);
        token.ackSelfClosing = true;
      } else if (tn === $3.NOFRAMES) {
        startTagInHead(p3, token);
      }
    }
    function endTagInFrameset(p3, token) {
      if (token.tagName === $3.FRAMESET && !p3.openElements.isRootHtmlElementCurrent()) {
        p3.openElements.pop();
        if (!p3.fragmentContext && p3.openElements.currentTagName !== $3.FRAMESET) {
          p3.insertionMode = AFTER_FRAMESET_MODE;
        }
      }
    }
    function startTagAfterFrameset(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML) {
        startTagInBody(p3, token);
      } else if (tn === $3.NOFRAMES) {
        startTagInHead(p3, token);
      }
    }
    function endTagAfterFrameset(p3, token) {
      if (token.tagName === $3.HTML) {
        p3.insertionMode = AFTER_AFTER_FRAMESET_MODE;
      }
    }
    function startTagAfterAfterBody(p3, token) {
      if (token.tagName === $3.HTML) {
        startTagInBody(p3, token);
      } else {
        tokenAfterAfterBody(p3, token);
      }
    }
    function tokenAfterAfterBody(p3, token) {
      p3.insertionMode = IN_BODY_MODE;
      p3._processToken(token);
    }
    function startTagAfterAfterFrameset(p3, token) {
      const tn = token.tagName;
      if (tn === $3.HTML) {
        startTagInBody(p3, token);
      } else if (tn === $3.NOFRAMES) {
        startTagInHead(p3, token);
      }
    }
    function nullCharacterInForeignContent(p3, token) {
      token.chars = unicode.REPLACEMENT_CHARACTER;
      p3._insertCharacters(token);
    }
    function characterInForeignContent(p3, token) {
      p3._insertCharacters(token);
      p3.framesetOk = false;
    }
    function startTagInForeignContent(p3, token) {
      if (foreignContent.causesExit(token) && !p3.fragmentContext) {
        while (p3.treeAdapter.getNamespaceURI(p3.openElements.current) !== NS.HTML && !p3._isIntegrationPoint(p3.openElements.current)) {
          p3.openElements.pop();
        }
        p3._processToken(token);
      } else {
        const current2 = p3._getAdjustedCurrentElement();
        const currentNs = p3.treeAdapter.getNamespaceURI(current2);
        if (currentNs === NS.MATHML) {
          foreignContent.adjustTokenMathMLAttrs(token);
        } else if (currentNs === NS.SVG) {
          foreignContent.adjustTokenSVGTagName(token);
          foreignContent.adjustTokenSVGAttrs(token);
        }
        foreignContent.adjustTokenXMLAttrs(token);
        if (token.selfClosing) {
          p3._appendElement(token, currentNs);
        } else {
          p3._insertElement(token, currentNs);
        }
        token.ackSelfClosing = true;
      }
    }
    function endTagInForeignContent(p3, token) {
      for (let i3 = p3.openElements.stackTop; i3 > 0; i3--) {
        const element6 = p3.openElements.items[i3];
        if (p3.treeAdapter.getNamespaceURI(element6) === NS.HTML) {
          p3._processToken(token);
          break;
        }
        if (p3.treeAdapter.getTagName(element6).toLowerCase() === token.tagName) {
          p3.openElements.popUntilElementPopped(element6);
          break;
        }
      }
    }
  }
});

// node_modules/unist-util-position/index.js
function point2(type) {
  return point4;
  function point4(node) {
    const point5 = node && node.position && node.position[type] || {};
    return {
      line: point5.line || null,
      column: point5.column || null,
      offset: point5.offset > -1 ? point5.offset : null
    };
  }
}
var pointStart, pointEnd;
var init_unist_util_position = __esm({
  "node_modules/unist-util-position/index.js"() {
    pointStart = point2("start");
    pointEnd = point2("end");
  }
});

// node_modules/hast-util-parse-selector/index.js
var search, parseSelector;
var init_hast_util_parse_selector = __esm({
  "node_modules/hast-util-parse-selector/index.js"() {
    search = /[#.]/g;
    parseSelector = function(selector, defaultTagName = "div") {
      var value = selector || "";
      var props = {};
      var start3 = 0;
      var subvalue;
      var previous2;
      var match;
      while (start3 < value.length) {
        search.lastIndex = start3;
        match = search.exec(value);
        subvalue = value.slice(start3, match ? match.index : value.length);
        if (subvalue) {
          if (!previous2) {
            defaultTagName = subvalue;
          } else if (previous2 === "#") {
            props.id = subvalue;
          } else if (Array.isArray(props.className)) {
            props.className.push(subvalue);
          } else {
            props.className = [subvalue];
          }
          start3 += subvalue.length;
        }
        if (match) {
          previous2 = match[0];
          start3++;
        }
      }
      return {
        type: "element",
        tagName: defaultTagName,
        properties: props,
        children: []
      };
    };
  }
});

// node_modules/hastscript/lib/core.js
function core2(schema, defaultTagName, caseSensitive) {
  const adjust = caseSensitive && createAdjustMap(caseSensitive);
  const h4 = function(selector, properties, ...children2) {
    let index2 = -1;
    let node;
    if (selector === void 0 || selector === null) {
      node = { type: "root", children: [] };
      children2.unshift(properties);
    } else {
      node = parseSelector(selector, defaultTagName);
      node.tagName = node.tagName.toLowerCase();
      if (adjust && own7.call(adjust, node.tagName)) {
        node.tagName = adjust[node.tagName];
      }
      if (isProperties(properties, node.tagName)) {
        let key2;
        for (key2 in properties) {
          if (own7.call(properties, key2)) {
            addProperty(schema, node.properties, key2, properties[key2]);
          }
        }
      } else {
        children2.unshift(properties);
      }
    }
    while (++index2 < children2.length) {
      addChild(node.children, children2[index2]);
    }
    if (node.type === "element" && node.tagName === "template") {
      node.content = { type: "root", children: node.children };
      node.children = [];
    }
    return node;
  };
  return h4;
}
function isProperties(value, name) {
  if (value === null || value === void 0 || typeof value !== "object" || Array.isArray(value)) {
    return false;
  }
  if (name === "input" || !value.type || typeof value.type !== "string") {
    return true;
  }
  if ("children" in value && Array.isArray(value.children)) {
    return false;
  }
  if (name === "button") {
    return buttonTypes.has(value.type.toLowerCase());
  }
  return !("value" in value);
}
function addProperty(schema, properties, key2, value) {
  const info = find(schema, key2);
  let index2 = -1;
  let result;
  if (value === void 0 || value === null)
    return;
  if (typeof value === "number") {
    if (Number.isNaN(value))
      return;
    result = value;
  } else if (typeof value === "boolean") {
    result = value;
  } else if (typeof value === "string") {
    if (info.spaceSeparated) {
      result = parse(value);
    } else if (info.commaSeparated) {
      result = parse2(value);
    } else if (info.commaOrSpaceSeparated) {
      result = parse(parse2(value).join(" "));
    } else {
      result = parsePrimitive(info, info.property, value);
    }
  } else if (Array.isArray(value)) {
    result = value.concat();
  } else {
    result = info.property === "style" ? style(value) : String(value);
  }
  if (Array.isArray(result)) {
    const finalResult = [];
    while (++index2 < result.length) {
      finalResult[index2] = parsePrimitive(info, info.property, result[index2]);
    }
    result = finalResult;
  }
  if (info.property === "className" && Array.isArray(properties.className)) {
    result = properties.className.concat(result);
  }
  properties[info.property] = result;
}
function addChild(nodes2, value) {
  let index2 = -1;
  if (value === void 0 || value === null) {
  } else if (typeof value === "string" || typeof value === "number") {
    nodes2.push({ type: "text", value: String(value) });
  } else if (Array.isArray(value)) {
    while (++index2 < value.length) {
      addChild(nodes2, value[index2]);
    }
  } else if (typeof value === "object" && "type" in value) {
    if (value.type === "root") {
      addChild(nodes2, value.children);
    } else {
      nodes2.push(value);
    }
  } else {
    throw new Error("Expected node, nodes, or string, got `" + value + "`");
  }
}
function parsePrimitive(info, name, value) {
  if (typeof value === "string") {
    if (info.number && value && !Number.isNaN(Number(value))) {
      return Number(value);
    }
    if ((info.boolean || info.overloadedBoolean) && (value === "" || normalize(value) === normalize(name))) {
      return true;
    }
  }
  return value;
}
function style(value) {
  const result = [];
  let key2;
  for (key2 in value) {
    if (own7.call(value, key2)) {
      result.push([key2, value[key2]].join(": "));
    }
  }
  return result.join("; ");
}
function createAdjustMap(values) {
  const result = {};
  let index2 = -1;
  while (++index2 < values.length) {
    result[values[index2].toLowerCase()] = values[index2];
  }
  return result;
}
var buttonTypes, own7;
var init_core4 = __esm({
  "node_modules/hastscript/lib/core.js"() {
    init_property_information();
    init_hast_util_parse_selector();
    init_space_separated_tokens();
    init_comma_separated_tokens();
    buttonTypes = /* @__PURE__ */ new Set(["menu", "submit", "reset", "button"]);
    own7 = {}.hasOwnProperty;
  }
});

// node_modules/hastscript/lib/html.js
var h3;
var init_html2 = __esm({
  "node_modules/hastscript/lib/html.js"() {
    init_property_information();
    init_core4();
    h3 = core2(html2, "div");
  }
});

// node_modules/hastscript/lib/svg-case-sensitive-tag-names.js
var svgCaseSensitiveTagNames;
var init_svg_case_sensitive_tag_names = __esm({
  "node_modules/hastscript/lib/svg-case-sensitive-tag-names.js"() {
    svgCaseSensitiveTagNames = [
      "altGlyph",
      "altGlyphDef",
      "altGlyphItem",
      "animateColor",
      "animateMotion",
      "animateTransform",
      "clipPath",
      "feBlend",
      "feColorMatrix",
      "feComponentTransfer",
      "feComposite",
      "feConvolveMatrix",
      "feDiffuseLighting",
      "feDisplacementMap",
      "feDistantLight",
      "feDropShadow",
      "feFlood",
      "feFuncA",
      "feFuncB",
      "feFuncG",
      "feFuncR",
      "feGaussianBlur",
      "feImage",
      "feMerge",
      "feMergeNode",
      "feMorphology",
      "feOffset",
      "fePointLight",
      "feSpecularLighting",
      "feSpotLight",
      "feTile",
      "feTurbulence",
      "foreignObject",
      "glyphRef",
      "linearGradient",
      "radialGradient",
      "solidColor",
      "textArea",
      "textPath"
    ];
  }
});

// node_modules/hastscript/lib/svg.js
var s3;
var init_svg2 = __esm({
  "node_modules/hastscript/lib/svg.js"() {
    init_property_information();
    init_core4();
    init_svg_case_sensitive_tag_names();
    s3 = core2(svg2, "g", svgCaseSensitiveTagNames);
  }
});

// node_modules/hastscript/lib/index.js
var init_lib4 = __esm({
  "node_modules/hastscript/lib/index.js"() {
    init_html2();
    init_svg2();
  }
});

// node_modules/hastscript/index.js
var init_hastscript = __esm({
  "node_modules/hastscript/index.js"() {
    init_lib4();
  }
});

// node_modules/web-namespaces/index.js
var webNamespaces;
var init_web_namespaces = __esm({
  "node_modules/web-namespaces/index.js"() {
    webNamespaces = {
      html: "http://www.w3.org/1999/xhtml",
      mathml: "http://www.w3.org/1998/Math/MathML",
      svg: "http://www.w3.org/2000/svg",
      xlink: "http://www.w3.org/1999/xlink",
      xml: "http://www.w3.org/XML/1998/namespace",
      xmlns: "http://www.w3.org/2000/xmlns/"
    };
  }
});

// node_modules/hast-util-from-parse5/lib/index.js
function fromParse5(ast, options = {}) {
  let settings;
  let file59;
  if (isFile(options)) {
    file59 = options;
    settings = {};
  } else {
    file59 = options.file;
    settings = options;
  }
  return transform({
    schema: settings.space === "svg" ? svg2 : html2,
    file: file59,
    verbose: settings.verbose,
    location: false
  }, ast);
}
function transform(ctx, ast) {
  const schema = ctx.schema;
  const fn = own8.call(map2, ast.nodeName) ? map2[ast.nodeName] : element3;
  let children2;
  if ("tagName" in ast) {
    ctx.schema = ast.namespaceURI === webNamespaces.svg ? svg2 : html2;
  }
  if ("childNodes" in ast) {
    children2 = nodes(ctx, ast.childNodes);
  }
  const result = fn(ctx, ast, children2);
  if ("sourceCodeLocation" in ast && ast.sourceCodeLocation && ctx.file) {
    const position3 = createLocation(ctx, result, ast.sourceCodeLocation);
    if (position3) {
      ctx.location = true;
      result.position = position3;
    }
  }
  ctx.schema = schema;
  return result;
}
function nodes(ctx, children2) {
  let index2 = -1;
  const result = [];
  while (++index2 < children2.length) {
    result[index2] = transform(ctx, children2[index2]);
  }
  return result;
}
function root(ctx, ast, children2) {
  const result = {
    type: "root",
    children: children2,
    data: { quirksMode: ast.mode === "quirks" || ast.mode === "limited-quirks" }
  };
  if (ctx.file && ctx.location) {
    const doc = String(ctx.file);
    const loc = location(doc);
    result.position = {
      start: loc.toPoint(0),
      end: loc.toPoint(doc.length)
    };
  }
  return result;
}
function doctype2() {
  return { type: "doctype" };
}
function text2(_, ast) {
  return { type: "text", value: ast.value };
}
function comment3(_, ast) {
  return { type: "comment", value: ast.data };
}
function element3(ctx, ast, children2) {
  const fn = ctx.schema.space === "svg" ? s3 : h3;
  let index2 = -1;
  const props = {};
  while (++index2 < ast.attrs.length) {
    const attribute = ast.attrs[index2];
    props[(attribute.prefix ? attribute.prefix + ":" : "") + attribute.name] = attribute.value;
  }
  const result = fn(ast.tagName, props, children2);
  if (result.tagName === "template" && "content" in ast) {
    const pos = ast.sourceCodeLocation;
    const startTag2 = pos && pos.startTag && position2(pos.startTag);
    const endTag2 = pos && pos.endTag && position2(pos.endTag);
    const content3 = transform(ctx, ast.content);
    if (startTag2 && endTag2 && ctx.file) {
      content3.position = { start: startTag2.end, end: endTag2.start };
    }
    result.content = content3;
  }
  return result;
}
function createLocation(ctx, node, location2) {
  const result = position2(location2);
  if (node.type === "element") {
    const tail = node.children[node.children.length - 1];
    if (result && !location2.endTag && tail && tail.position && tail.position.end) {
      result.end = Object.assign({}, tail.position.end);
    }
    if (ctx.verbose) {
      const props = {};
      let key2;
      for (key2 in location2.attrs) {
        if (own8.call(location2.attrs, key2)) {
          props[find(ctx.schema, key2).property] = position2(location2.attrs[key2]);
        }
      }
      node.data = {
        position: {
          opening: position2(location2.startTag),
          closing: location2.endTag ? position2(location2.endTag) : null,
          properties: props
        }
      };
    }
  }
  return result;
}
function position2(loc) {
  const start3 = point3({
    line: loc.startLine,
    column: loc.startCol,
    offset: loc.startOffset
  });
  const end = point3({
    line: loc.endLine,
    column: loc.endCol,
    offset: loc.endOffset
  });
  return start3 || end ? { start: start3, end } : null;
}
function point3(point4) {
  return point4.line && point4.column ? point4 : null;
}
function isFile(value) {
  return "messages" in value;
}
var own8, map2;
var init_lib5 = __esm({
  "node_modules/hast-util-from-parse5/lib/index.js"() {
    init_hastscript();
    init_property_information();
    init_vfile_location();
    init_web_namespaces();
    own8 = {}.hasOwnProperty;
    map2 = {
      "#document": root,
      "#document-fragment": root,
      "#text": text2,
      "#comment": comment3,
      "#documentType": doctype2
    };
  }
});

// node_modules/hast-util-from-parse5/index.js
var init_hast_util_from_parse5 = __esm({
  "node_modules/hast-util-from-parse5/index.js"() {
    init_lib5();
  }
});

// node_modules/inline-style-parser/index.js
var require_inline_style_parser = __commonJS({
  "node_modules/inline-style-parser/index.js"(exports, module2) {
    var COMMENT_REGEX = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;
    var NEWLINE_REGEX = /\n/g;
    var WHITESPACE_REGEX = /^\s*/;
    var PROPERTY_REGEX = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/;
    var COLON_REGEX = /^:\s*/;
    var VALUE_REGEX = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/;
    var SEMICOLON_REGEX = /^[;\s]*/;
    var TRIM_REGEX = /^\s+|\s+$/g;
    var NEWLINE = "\n";
    var FORWARD_SLASH = "/";
    var ASTERISK = "*";
    var EMPTY_STRING = "";
    var TYPE_COMMENT = "comment";
    var TYPE_DECLARATION = "declaration";
    module2.exports = function(style3, options) {
      if (typeof style3 !== "string") {
        throw new TypeError("First argument must be a string");
      }
      if (!style3)
        return [];
      options = options || {};
      var lineno = 1;
      var column = 1;
      function updatePosition(str) {
        var lines = str.match(NEWLINE_REGEX);
        if (lines)
          lineno += lines.length;
        var i3 = str.lastIndexOf(NEWLINE);
        column = ~i3 ? str.length - i3 : column + str.length;
      }
      function position3() {
        var start3 = { line: lineno, column };
        return function(node) {
          node.position = new Position3(start3);
          whitespace2();
          return node;
        };
      }
      function Position3(start3) {
        this.start = start3;
        this.end = { line: lineno, column };
        this.source = options.source;
      }
      Position3.prototype.content = style3;
      var errorsList = [];
      function error3(msg) {
        var err = new Error(options.source + ":" + lineno + ":" + column + ": " + msg);
        err.reason = msg;
        err.filename = options.source;
        err.line = lineno;
        err.column = column;
        err.source = style3;
        if (options.silent) {
          errorsList.push(err);
        } else {
          throw err;
        }
      }
      function match(re) {
        var m3 = re.exec(style3);
        if (!m3)
          return;
        var str = m3[0];
        updatePosition(str);
        style3 = style3.slice(str.length);
        return m3;
      }
      function whitespace2() {
        match(WHITESPACE_REGEX);
      }
      function comments(rules) {
        var c2;
        rules = rules || [];
        while (c2 = comment5()) {
          if (c2 !== false) {
            rules.push(c2);
          }
        }
        return rules;
      }
      function comment5() {
        var pos = position3();
        if (FORWARD_SLASH != style3.charAt(0) || ASTERISK != style3.charAt(1))
          return;
        var i3 = 2;
        while (EMPTY_STRING != style3.charAt(i3) && (ASTERISK != style3.charAt(i3) || FORWARD_SLASH != style3.charAt(i3 + 1))) {
          ++i3;
        }
        i3 += 2;
        if (EMPTY_STRING === style3.charAt(i3 - 1)) {
          return error3("End of comment missing");
        }
        var str = style3.slice(2, i3 - 2);
        column += 2;
        updatePosition(str);
        style3 = style3.slice(i3);
        column += 2;
        return pos({
          type: TYPE_COMMENT,
          comment: str
        });
      }
      function declaration() {
        var pos = position3();
        var prop = match(PROPERTY_REGEX);
        if (!prop)
          return;
        comment5();
        if (!match(COLON_REGEX))
          return error3("property missing ':'");
        var val = match(VALUE_REGEX);
        var ret = pos({
          type: TYPE_DECLARATION,
          property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),
          value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING
        });
        match(SEMICOLON_REGEX);
        return ret;
      }
      function declarations() {
        var decls = [];
        comments(decls);
        var decl;
        while (decl = declaration()) {
          if (decl !== false) {
            decls.push(decl);
            comments(decls);
          }
        }
        return decls;
      }
      whitespace2();
      return declarations();
    };
    function trim(str) {
      return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;
    }
  }
});

// node_modules/style-to-object/index.js
var require_style_to_object = __commonJS({
  "node_modules/style-to-object/index.js"(exports, module2) {
    var parse8 = require_inline_style_parser();
    function StyleToObject(style3, iterator) {
      var output = null;
      if (!style3 || typeof style3 !== "string") {
        return output;
      }
      var declaration;
      var declarations = parse8(style3);
      var hasIterator = typeof iterator === "function";
      var property;
      var value;
      for (var i3 = 0, len = declarations.length; i3 < len; i3++) {
        declaration = declarations[i3];
        property = declaration.property;
        value = declaration.value;
        if (hasIterator) {
          iterator(property, value, declaration);
        } else if (value) {
          output || (output = {});
          output[property] = value;
        }
      }
      return output;
    }
    module2.exports = StyleToObject;
  }
});

// node_modules/hast-to-hyperscript/index.js
function toH(h4, tree, options) {
  if (typeof h4 !== "function") {
    throw new TypeError("h is not a function");
  }
  const r3 = react(h4);
  const v2 = vue(h4);
  const vd = vdom(h4);
  let prefix;
  let node;
  if (typeof options === "string" || typeof options === "boolean") {
    prefix = options;
    options = {};
  } else {
    if (!options)
      options = {};
    prefix = options.prefix;
  }
  if (root2(tree)) {
    node = tree.children.length === 1 && element4(tree.children[0]) ? tree.children[0] : {
      type: "element",
      tagName: "div",
      properties: {},
      children: tree.children
    };
  } else if (element4(tree)) {
    node = tree;
  } else {
    throw new Error("Expected root or element, not `" + (tree && tree.type || tree) + "`");
  }
  return transform2(h4, node, {
    schema: options.space === "svg" ? svg2 : html2,
    prefix: prefix === void 0 || prefix === null ? r3 || v2 || vd ? "h-" : null : typeof prefix === "string" ? prefix : prefix ? "h-" : null,
    key: 0,
    react: r3,
    vue: v2,
    vdom: vd,
    hyperscript: hyperscript(h4)
  });
}
function transform2(h4, node, ctx) {
  const parentSchema = ctx.schema;
  let schema = parentSchema;
  let name = node.tagName;
  const attributes2 = {};
  const nodes2 = [];
  let index2 = -1;
  let key2;
  if (parentSchema.space === "html" && name.toLowerCase() === "svg") {
    schema = svg2;
    ctx.schema = schema;
  }
  for (key2 in node.properties) {
    if (node.properties && own9.call(node.properties, key2)) {
      addAttribute2(attributes2, key2, node.properties[key2], ctx, name);
    }
  }
  if (ctx.vdom) {
    if (schema.space === "html") {
      name = name.toUpperCase();
    } else if (schema.space) {
      attributes2.namespace = ns[schema.space];
    }
  }
  if (ctx.prefix) {
    ctx.key++;
    attributes2.key = ctx.prefix + ctx.key;
  }
  if (node.children) {
    while (++index2 < node.children.length) {
      const value = node.children[index2];
      if (element4(value)) {
        nodes2.push(transform2(h4, value, ctx));
      } else if (text3(value)) {
        nodes2.push(value.value);
      }
    }
  }
  ctx.schema = parentSchema;
  return nodes2.length > 0 ? h4.call(node, name, attributes2, nodes2) : h4.call(node, name, attributes2);
}
function addAttribute2(props, prop, value, ctx, name) {
  const info = find(ctx.schema, prop);
  let subprop;
  if (value === void 0 || value === null || typeof value === "number" && Number.isNaN(value) || value === false && (ctx.vue || ctx.vdom || ctx.hyperscript) || !value && info.boolean && (ctx.vue || ctx.vdom || ctx.hyperscript)) {
    return;
  }
  if (Array.isArray(value)) {
    value = info.commaSeparated ? stringify2(value) : stringify(value);
  }
  if (info.boolean && ctx.hyperscript) {
    value = "";
  }
  if (info.property === "style" && typeof value === "string" && (ctx.react || ctx.vue || ctx.vdom)) {
    value = parseStyle(value, name);
  }
  if (ctx.vue) {
    if (info.property !== "style")
      subprop = "attrs";
  } else if (!info.mustUseProperty) {
    if (ctx.vdom) {
      if (info.property !== "style")
        subprop = "attributes";
    } else if (ctx.hyperscript) {
      subprop = "attrs";
    }
  }
  if (subprop) {
    props[subprop] = Object.assign(props[subprop] || {}, {
      [info.attribute]: value
    });
  } else if (info.space && ctx.react) {
    props[toReact[info.property] || info.property] = value;
  } else {
    props[info.attribute] = value;
  }
}
function react(h4) {
  const node = h4("div", {});
  return Boolean(node && ("_owner" in node || "_store" in node) && (node.key === void 0 || node.key === null));
}
function hyperscript(h4) {
  return "context" in h4 && "cleanup" in h4;
}
function vdom(h4) {
  const node = h4("div", {});
  return node.type === "VirtualNode";
}
function vue(h4) {
  const node = h4("div", {});
  return Boolean(node && node.context && node.context._isVue);
}
function parseStyle(value, tagName) {
  const result = {};
  try {
    (0, import_style_to_object.default)(value, (name, value2) => {
      if (name.slice(0, 4) === "-ms-")
        name = "ms-" + name.slice(4);
      result[name.replace(/-([a-z])/g, (_, $1) => $1.toUpperCase())] = value2;
    });
  } catch (error3) {
    error3.message = tagName + "[style]" + error3.message.slice("undefined".length);
    throw error3;
  }
  return result;
}
var import_style_to_object, ns, toReact, own9, root2, element4, text3;
var init_hast_to_hyperscript = __esm({
  "node_modules/hast-to-hyperscript/index.js"() {
    init_property_information();
    init_space_separated_tokens();
    init_comma_separated_tokens();
    import_style_to_object = __toESM(require_style_to_object(), 1);
    init_web_namespaces();
    init_unist_util_is();
    ns = webNamespaces;
    toReact = hastToReact;
    own9 = {}.hasOwnProperty;
    root2 = convert("root");
    element4 = convert("element");
    text3 = convert("text");
  }
});

// node_modules/zwitch/index.js
function zwitch(key2, options) {
  var settings = options || {};
  function one5(value) {
    var fn = one5.invalid;
    var handlers3 = one5.handlers;
    if (value && own10.call(value, key2)) {
      fn = own10.call(handlers3, value[key2]) ? handlers3[value[key2]] : one5.unknown;
    }
    if (fn) {
      return fn.apply(this, arguments);
    }
  }
  one5.handlers = settings.handlers || {};
  one5.invalid = settings.invalid;
  one5.unknown = settings.unknown;
  return one5;
}
var own10;
var init_zwitch = __esm({
  "node_modules/zwitch/index.js"() {
    own10 = {}.hasOwnProperty;
  }
});

// node_modules/hast-util-to-parse5/lib/index.js
function toParse5(tree, space) {
  return one2(tree, space === "svg" ? svg2 : html2);
}
function root3(node, schema) {
  var p5 = {
    nodeName: "#document",
    mode: (node.data || {}).quirksMode ? "quirks" : "no-quirks",
    childNodes: []
  };
  p5.childNodes = all2(node.children, p5, schema);
  return patch(node, p5);
}
function fragment(node, schema) {
  var p5 = { nodeName: "#document-fragment", childNodes: [] };
  p5.childNodes = all2(node.children, p5, schema);
  return patch(node, p5);
}
function doctype3(node) {
  return patch(node, {
    nodeName: "#documentType",
    name: "html",
    publicId: "",
    systemId: "",
    parentNode: void 0
  });
}
function text4(node) {
  return patch(node, {
    nodeName: "#text",
    value: node.value,
    parentNode: void 0
  });
}
function comment4(node) {
  return patch(node, {
    nodeName: "#comment",
    data: node.value,
    parentNode: void 0
  });
}
function element5(node, schema) {
  var space = schema.space;
  return toH(h4, Object.assign({}, node, { children: [] }), { space });
  function h4(name, attrs) {
    var values = [];
    var info;
    var value;
    var key2;
    var index2;
    var p5;
    for (key2 in attrs) {
      if (!own11.call(attrs, key2) || attrs[key2] === false) {
        continue;
      }
      info = find(schema, key2);
      if (info.boolean && !attrs[key2]) {
        continue;
      }
      value = { name: key2, value: attrs[key2] === true ? "" : String(attrs[key2]) };
      if (info.space && info.space !== "html" && info.space !== "svg") {
        index2 = key2.indexOf(":");
        if (index2 < 0) {
          value.prefix = "";
        } else {
          value.name = key2.slice(index2 + 1);
          value.prefix = key2.slice(0, index2);
        }
        value.namespace = webNamespaces[info.space];
      }
      values.push(value);
    }
    if (schema.space === "html" && node.tagName === "svg")
      schema = svg2;
    p5 = patch(node, {
      nodeName: name,
      tagName: name,
      attrs: values,
      namespaceURI: webNamespaces[schema.space],
      childNodes: [],
      parentNode: void 0
    });
    p5.childNodes = all2(node.children, p5, schema);
    if (name === "template")
      p5.content = fragment(node.content, schema);
    return p5;
  }
}
function all2(children2, p5, schema) {
  var index2 = -1;
  var result = [];
  var child;
  if (children2) {
    while (++index2 < children2.length) {
      child = one2(children2[index2], schema);
      child.parentNode = p5;
      result.push(child);
    }
  }
  return result;
}
function patch(node, p5) {
  var position3 = node.position;
  if (position3 && position3.start && position3.end) {
    p5.sourceCodeLocation = {
      startLine: position3.start.line,
      startCol: position3.start.column,
      startOffset: position3.start.offset,
      endLine: position3.end.line,
      endCol: position3.end.column,
      endOffset: position3.end.offset
    };
  }
  return p5;
}
var own11, one2;
var init_lib6 = __esm({
  "node_modules/hast-util-to-parse5/lib/index.js"() {
    init_property_information();
    init_hast_to_hyperscript();
    init_web_namespaces();
    init_zwitch();
    own11 = {}.hasOwnProperty;
    one2 = zwitch("type", { handlers: { root: root3, element: element5, text: text4, comment: comment4, doctype: doctype3 } });
  }
});

// node_modules/hast-util-to-parse5/index.js
var init_hast_util_to_parse5 = __esm({
  "node_modules/hast-util-to-parse5/index.js"() {
    init_lib6();
  }
});

// node_modules/hast-util-raw/lib/index.js
function startTag(node) {
  const location2 = Object.assign(createParse5Location(node));
  location2.startTag = Object.assign({}, location2);
  return {
    type: startTagToken,
    tagName: node.tagName,
    selfClosing: false,
    attrs: attributes(node),
    location: location2
  };
}
function attributes(node) {
  return toParse5({
    tagName: node.tagName,
    type: "element",
    properties: node.properties,
    children: []
  }).attrs;
}
function endTag(node) {
  const location2 = Object.assign(createParse5Location(node));
  location2.startTag = Object.assign({}, location2);
  return {
    type: endTagToken,
    tagName: node.tagName,
    attrs: [],
    location: location2
  };
}
function unknown(node) {
  throw new Error("Cannot compile `" + node.type + "` node");
}
function documentMode(node) {
  const head2 = node.type === "root" ? node.children[0] : node;
  return Boolean(head2 && (head2.type === "doctype" || head2.type === "element" && head2.tagName === "html"));
}
function createParse5Location(node) {
  const start3 = pointStart(node);
  const end = pointEnd(node);
  return {
    startLine: start3.line,
    startCol: start3.column,
    startOffset: start3.offset,
    endLine: end.line,
    endCol: end.column,
    endOffset: end.offset
  };
}
function isOptions(value) {
  return Boolean(value && !("message" in value && "messages" in value));
}
var import_parser, inTemplateMode, dataState, characterToken, startTagToken, endTagToken, commentToken, doctypeToken, parseOptions, raw2;
var init_lib7 = __esm({
  "node_modules/hast-util-raw/lib/index.js"() {
    import_parser = __toESM(require_parser(), 1);
    init_unist_util_position();
    init_unist_util_visit();
    init_hast_util_from_parse5();
    init_hast_util_to_parse5();
    init_html_void_elements();
    init_web_namespaces();
    init_zwitch();
    inTemplateMode = "IN_TEMPLATE_MODE";
    dataState = "DATA_STATE";
    characterToken = "CHARACTER_TOKEN";
    startTagToken = "START_TAG_TOKEN";
    endTagToken = "END_TAG_TOKEN";
    commentToken = "COMMENT_TOKEN";
    doctypeToken = "DOCTYPE_TOKEN";
    parseOptions = { sourceCodeLocationInfo: true, scriptingEnabled: false };
    raw2 = function(tree, file59, options) {
      let index2 = -1;
      const parser = new import_parser.default(parseOptions);
      const one5 = zwitch("type", {
        handlers: { root: root5, element: element6, text: text8, comment: comment5, doctype: doctype4, raw: handleRaw },
        unknown
      });
      let stitches;
      let tokenizer2;
      let preprocessor;
      let posTracker;
      let locationTracker;
      if (isOptions(file59)) {
        options = file59;
        file59 = void 0;
      }
      if (options && options.passThrough) {
        while (++index2 < options.passThrough.length) {
          one5.handlers[options.passThrough[index2]] = stitch;
        }
      }
      const result = fromParse5(documentMode(tree) ? document4() : fragment2(), file59);
      if (stitches) {
        visit(result, "comment", (node, index3, parent) => {
          const stitch2 = node;
          if (stitch2.value.stitch && parent !== null && index3 !== null) {
            parent.children[index3] = stitch2.value.stitch;
            return index3;
          }
        });
      }
      if (tree.type !== "root" && result.type === "root" && result.children.length === 1) {
        return result.children[0];
      }
      return result;
      function fragment2() {
        const context = {
          nodeName: "template",
          tagName: "template",
          attrs: [],
          namespaceURI: webNamespaces.html,
          childNodes: []
        };
        const mock = {
          nodeName: "documentmock",
          tagName: "documentmock",
          attrs: [],
          namespaceURI: webNamespaces.html,
          childNodes: []
        };
        const doc = { nodeName: "#document-fragment", childNodes: [] };
        parser._bootstrap(mock, context);
        parser._pushTmplInsertionMode(inTemplateMode);
        parser._initTokenizerForFragmentParsing();
        parser._insertFakeRootElement();
        parser._resetInsertionMode();
        parser._findFormInFragmentContext();
        tokenizer2 = parser.tokenizer;
        if (!tokenizer2)
          throw new Error("Expected `tokenizer`");
        preprocessor = tokenizer2.preprocessor;
        locationTracker = tokenizer2.__mixins[0];
        posTracker = locationTracker.posTracker;
        one5(tree);
        parser._adoptNodes(mock.childNodes[0], doc);
        return doc;
      }
      function document4() {
        const doc = parser.treeAdapter.createDocument();
        parser._bootstrap(doc, void 0);
        tokenizer2 = parser.tokenizer;
        if (!tokenizer2)
          throw new Error("Expected `tokenizer`");
        preprocessor = tokenizer2.preprocessor;
        locationTracker = tokenizer2.__mixins[0];
        posTracker = locationTracker.posTracker;
        one5(tree);
        return doc;
      }
      function all5(nodes2) {
        let index3 = -1;
        if (nodes2) {
          while (++index3 < nodes2.length) {
            one5(nodes2[index3]);
          }
        }
      }
      function root5(node) {
        all5(node.children);
      }
      function element6(node) {
        resetTokenizer();
        parser._processToken(startTag(node), webNamespaces.html);
        all5(node.children);
        if (!htmlVoidElements.includes(node.tagName)) {
          resetTokenizer();
          parser._processToken(endTag(node));
        }
      }
      function text8(node) {
        resetTokenizer();
        parser._processToken({
          type: characterToken,
          chars: node.value,
          location: createParse5Location(node)
        });
      }
      function doctype4(node) {
        resetTokenizer();
        parser._processToken({
          type: doctypeToken,
          name: "html",
          forceQuirks: false,
          publicId: "",
          systemId: "",
          location: createParse5Location(node)
        });
      }
      function comment5(node) {
        resetTokenizer();
        parser._processToken({
          type: commentToken,
          data: node.value,
          location: createParse5Location(node)
        });
      }
      function handleRaw(node) {
        const start3 = pointStart(node);
        const line = start3.line || 1;
        const column = start3.column || 1;
        const offset2 = start3.offset || 0;
        if (!preprocessor)
          throw new Error("Expected `preprocessor`");
        if (!tokenizer2)
          throw new Error("Expected `tokenizer`");
        if (!posTracker)
          throw new Error("Expected `posTracker`");
        if (!locationTracker)
          throw new Error("Expected `locationTracker`");
        preprocessor.html = void 0;
        preprocessor.pos = -1;
        preprocessor.lastGapPos = -1;
        preprocessor.lastCharPos = -1;
        preprocessor.gapStack = [];
        preprocessor.skipNextNewLine = false;
        preprocessor.lastChunkWritten = false;
        preprocessor.endOfChunkHit = false;
        posTracker.isEol = false;
        posTracker.lineStartPos = -column + 1;
        posTracker.droppedBufferSize = offset2;
        posTracker.offset = 0;
        posTracker.col = 1;
        posTracker.line = line;
        locationTracker.currentAttrLocation = void 0;
        locationTracker.ctLoc = createParse5Location(node);
        tokenizer2.write(node.value);
        parser._runParsingLoop(null);
        if (tokenizer2.state === "NAMED_CHARACTER_REFERENCE_STATE" || tokenizer2.state === "NUMERIC_CHARACTER_REFERENCE_END_STATE") {
          preprocessor.lastChunkWritten = true;
          tokenizer2[tokenizer2.state](tokenizer2._consume());
        }
        const token = tokenizer2.currentCharacterToken;
        if (token) {
          token.location.endLine = posTracker.line;
          token.location.endCol = posTracker.col + 1;
          token.location.endOffset = posTracker.offset + 1;
          parser._processToken(token);
        }
      }
      function stitch(node) {
        stitches = true;
        let clone2;
        if ("children" in node) {
          clone2 = __spreadProps(__spreadValues({}, node), {
            children: raw2({ type: "root", children: node.children }, file59, options).children
          });
        } else {
          clone2 = __spreadValues({}, node);
        }
        comment5({ type: "comment", value: { stitch: clone2 } });
      }
      function resetTokenizer() {
        if (!tokenizer2)
          throw new Error("Expected `tokenizer`");
        tokenizer2.tokenQueue = [];
        tokenizer2.state = dataState;
        tokenizer2.returnState = "";
        tokenizer2.charRefCode = -1;
        tokenizer2.tempBuff = [];
        tokenizer2.lastStartTagName = "";
        tokenizer2.consumedAfterSnapshot = -1;
        tokenizer2.active = false;
        tokenizer2.currentCharacterToken = void 0;
        tokenizer2.currentToken = void 0;
        tokenizer2.currentAttr = void 0;
      }
    };
  }
});

// node_modules/hast-util-raw/index.js
var init_hast_util_raw = __esm({
  "node_modules/hast-util-raw/index.js"() {
    init_lib7();
  }
});

// node_modules/rehype-raw/index.js
function rehypeRaw(options = {}) {
  return (tree, file59) => {
    const result = raw2(tree, file59, options);
    return result;
  };
}
var init_rehype_raw = __esm({
  "node_modules/rehype-raw/index.js"() {
    init_hast_util_raw();
  }
});

// node_modules/rehype-stringify/lib/index.js
function rehypeStringify(config) {
  const processorSettings = this.data("settings");
  const settings = Object.assign({}, processorSettings, config);
  Object.assign(this, { Compiler: compiler2 });
  function compiler2(tree) {
    return toHtml(tree, settings);
  }
}
var init_lib8 = __esm({
  "node_modules/rehype-stringify/lib/index.js"() {
    init_hast_util_to_html();
  }
});

// node_modules/rehype-stringify/index.js
var init_rehype_stringify = __esm({
  "node_modules/rehype-stringify/index.js"() {
    init_lib8();
  }
});

// node_modules/mdast-util-to-string/index.js
function toString3(node, options) {
  var { includeImageAlt = true } = options || {};
  return one3(node, includeImageAlt);
}
function one3(node, includeImageAlt) {
  return node && typeof node === "object" && (node.value || (includeImageAlt ? node.alt : "") || "children" in node && all3(node.children, includeImageAlt) || Array.isArray(node) && all3(node, includeImageAlt)) || "";
}
function all3(values, includeImageAlt) {
  var result = [];
  var index2 = -1;
  while (++index2 < values.length) {
    result[index2] = one3(values[index2], includeImageAlt);
  }
  return result.join("");
}
var init_mdast_util_to_string = __esm({
  "node_modules/mdast-util-to-string/index.js"() {
  }
});

// node_modules/micromark/lib/initialize/content.js
function initializeContent(effects) {
  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);
  let previous2;
  return contentStart;
  function afterContentStartConstruct(code2) {
    if (code2 === null) {
      effects.consume(code2);
      return;
    }
    effects.enter("lineEnding");
    effects.consume(code2);
    effects.exit("lineEnding");
    return factorySpace(effects, contentStart, "linePrefix");
  }
  function paragraphInitial(code2) {
    effects.enter("paragraph");
    return lineStart(code2);
  }
  function lineStart(code2) {
    const token = effects.enter("chunkText", {
      contentType: "text",
      previous: previous2
    });
    if (previous2) {
      previous2.next = token;
    }
    previous2 = token;
    return data3(code2);
  }
  function data3(code2) {
    if (code2 === null) {
      effects.exit("chunkText");
      effects.exit("paragraph");
      effects.consume(code2);
      return;
    }
    if (markdownLineEnding(code2)) {
      effects.consume(code2);
      effects.exit("chunkText");
      return lineStart;
    }
    effects.consume(code2);
    return data3;
  }
}
var content;
var init_content = __esm({
  "node_modules/micromark/lib/initialize/content.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    content = {
      tokenize: initializeContent
    };
  }
});

// node_modules/micromark/lib/initialize/document.js
function initializeDocument(effects) {
  const self2 = this;
  const stack = [];
  let continued = 0;
  let childFlow;
  let childToken;
  let lineStartOffset;
  return start3;
  function start3(code2) {
    if (continued < stack.length) {
      const item = stack[continued];
      self2.containerState = item[1];
      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code2);
    }
    return checkNewContainers(code2);
  }
  function documentContinue(code2) {
    continued++;
    if (self2.containerState._closeFlow) {
      self2.containerState._closeFlow = void 0;
      if (childFlow) {
        closeFlow();
      }
      const indexBeforeExits = self2.events.length;
      let indexBeforeFlow = indexBeforeExits;
      let point4;
      while (indexBeforeFlow--) {
        if (self2.events[indexBeforeFlow][0] === "exit" && self2.events[indexBeforeFlow][1].type === "chunkFlow") {
          point4 = self2.events[indexBeforeFlow][1].end;
          break;
        }
      }
      exitContainers(continued);
      let index2 = indexBeforeExits;
      while (index2 < self2.events.length) {
        self2.events[index2][1].end = Object.assign({}, point4);
        index2++;
      }
      splice(self2.events, indexBeforeFlow + 1, 0, self2.events.slice(indexBeforeExits));
      self2.events.length = index2;
      return checkNewContainers(code2);
    }
    return start3(code2);
  }
  function checkNewContainers(code2) {
    if (continued === stack.length) {
      if (!childFlow) {
        return documentContinued(code2);
      }
      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {
        return flowStart(code2);
      }
      self2.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);
    }
    self2.containerState = {};
    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code2);
  }
  function thereIsANewContainer(code2) {
    if (childFlow)
      closeFlow();
    exitContainers(continued);
    return documentContinued(code2);
  }
  function thereIsNoNewContainer(code2) {
    self2.parser.lazy[self2.now().line] = continued !== stack.length;
    lineStartOffset = self2.now().offset;
    return flowStart(code2);
  }
  function documentContinued(code2) {
    self2.containerState = {};
    return effects.attempt(containerConstruct, containerContinue, flowStart)(code2);
  }
  function containerContinue(code2) {
    continued++;
    stack.push([self2.currentConstruct, self2.containerState]);
    return documentContinued(code2);
  }
  function flowStart(code2) {
    if (code2 === null) {
      if (childFlow)
        closeFlow();
      exitContainers(0);
      effects.consume(code2);
      return;
    }
    childFlow = childFlow || self2.parser.flow(self2.now());
    effects.enter("chunkFlow", {
      contentType: "flow",
      previous: childToken,
      _tokenizer: childFlow
    });
    return flowContinue(code2);
  }
  function flowContinue(code2) {
    if (code2 === null) {
      writeToChild(effects.exit("chunkFlow"), true);
      exitContainers(0);
      effects.consume(code2);
      return;
    }
    if (markdownLineEnding(code2)) {
      effects.consume(code2);
      writeToChild(effects.exit("chunkFlow"));
      continued = 0;
      self2.interrupt = void 0;
      return start3;
    }
    effects.consume(code2);
    return flowContinue;
  }
  function writeToChild(token, eof) {
    const stream = self2.sliceStream(token);
    if (eof)
      stream.push(null);
    token.previous = childToken;
    if (childToken)
      childToken.next = token;
    childToken = token;
    childFlow.defineSkip(token.start);
    childFlow.write(stream);
    if (self2.parser.lazy[token.start.line]) {
      let index2 = childFlow.events.length;
      while (index2--) {
        if (childFlow.events[index2][1].start.offset < lineStartOffset && (!childFlow.events[index2][1].end || childFlow.events[index2][1].end.offset > lineStartOffset)) {
          return;
        }
      }
      const indexBeforeExits = self2.events.length;
      let indexBeforeFlow = indexBeforeExits;
      let seen;
      let point4;
      while (indexBeforeFlow--) {
        if (self2.events[indexBeforeFlow][0] === "exit" && self2.events[indexBeforeFlow][1].type === "chunkFlow") {
          if (seen) {
            point4 = self2.events[indexBeforeFlow][1].end;
            break;
          }
          seen = true;
        }
      }
      exitContainers(continued);
      index2 = indexBeforeExits;
      while (index2 < self2.events.length) {
        self2.events[index2][1].end = Object.assign({}, point4);
        index2++;
      }
      splice(self2.events, indexBeforeFlow + 1, 0, self2.events.slice(indexBeforeExits));
      self2.events.length = index2;
    }
  }
  function exitContainers(size) {
    let index2 = stack.length;
    while (index2-- > size) {
      const entry = stack[index2];
      self2.containerState = entry[1];
      entry[0].exit.call(self2, effects);
    }
    stack.length = size;
  }
  function closeFlow() {
    childFlow.write([null]);
    childToken = void 0;
    childFlow = void 0;
    self2.containerState._closeFlow = void 0;
  }
}
function tokenizeContainer(effects, ok2, nok) {
  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok2, nok), "linePrefix", this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
}
var document2, containerConstruct;
var init_document = __esm({
  "node_modules/micromark/lib/initialize/document.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    init_micromark_util_chunked();
    document2 = {
      tokenize: initializeDocument
    };
    containerConstruct = {
      tokenize: tokenizeContainer
    };
  }
});

// node_modules/micromark-util-classify-character/index.js
function classifyCharacter(code2) {
  if (code2 === null || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2)) {
    return 1;
  }
  if (unicodePunctuation(code2)) {
    return 2;
  }
}
var init_micromark_util_classify_character = __esm({
  "node_modules/micromark-util-classify-character/index.js"() {
    init_micromark_util_character();
  }
});

// node_modules/micromark-util-resolve-all/index.js
function resolveAll(constructs2, events, context) {
  const called = [];
  let index2 = -1;
  while (++index2 < constructs2.length) {
    const resolve2 = constructs2[index2].resolveAll;
    if (resolve2 && !called.includes(resolve2)) {
      events = resolve2(events, context);
      called.push(resolve2);
    }
  }
  return events;
}
var init_micromark_util_resolve_all = __esm({
  "node_modules/micromark-util-resolve-all/index.js"() {
  }
});

// node_modules/micromark-core-commonmark/lib/attention.js
function resolveAllAttention(events, context) {
  let index2 = -1;
  let open;
  let group;
  let text8;
  let openingSequence;
  let closingSequence;
  let use;
  let nextEvents;
  let offset2;
  while (++index2 < events.length) {
    if (events[index2][0] === "enter" && events[index2][1].type === "attentionSequence" && events[index2][1]._close) {
      open = index2;
      while (open--) {
        if (events[open][0] === "exit" && events[open][1].type === "attentionSequence" && events[open][1]._open && context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index2][1]).charCodeAt(0)) {
          if ((events[open][1]._close || events[index2][1]._open) && (events[index2][1].end.offset - events[index2][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index2][1].end.offset - events[index2][1].start.offset) % 3)) {
            continue;
          }
          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index2][1].end.offset - events[index2][1].start.offset > 1 ? 2 : 1;
          const start3 = Object.assign({}, events[open][1].end);
          const end = Object.assign({}, events[index2][1].start);
          movePoint(start3, -use);
          movePoint(end, use);
          openingSequence = {
            type: use > 1 ? "strongSequence" : "emphasisSequence",
            start: start3,
            end: Object.assign({}, events[open][1].end)
          };
          closingSequence = {
            type: use > 1 ? "strongSequence" : "emphasisSequence",
            start: Object.assign({}, events[index2][1].start),
            end
          };
          text8 = {
            type: use > 1 ? "strongText" : "emphasisText",
            start: Object.assign({}, events[open][1].end),
            end: Object.assign({}, events[index2][1].start)
          };
          group = {
            type: use > 1 ? "strong" : "emphasis",
            start: Object.assign({}, openingSequence.start),
            end: Object.assign({}, closingSequence.end)
          };
          events[open][1].end = Object.assign({}, openingSequence.start);
          events[index2][1].start = Object.assign({}, closingSequence.end);
          nextEvents = [];
          if (events[open][1].end.offset - events[open][1].start.offset) {
            nextEvents = push(nextEvents, [
              ["enter", events[open][1], context],
              ["exit", events[open][1], context]
            ]);
          }
          nextEvents = push(nextEvents, [
            ["enter", group, context],
            ["enter", openingSequence, context],
            ["exit", openingSequence, context],
            ["enter", text8, context]
          ]);
          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index2), context));
          nextEvents = push(nextEvents, [
            ["exit", text8, context],
            ["enter", closingSequence, context],
            ["exit", closingSequence, context],
            ["exit", group, context]
          ]);
          if (events[index2][1].end.offset - events[index2][1].start.offset) {
            offset2 = 2;
            nextEvents = push(nextEvents, [
              ["enter", events[index2][1], context],
              ["exit", events[index2][1], context]
            ]);
          } else {
            offset2 = 0;
          }
          splice(events, open - 1, index2 - open + 3, nextEvents);
          index2 = open + nextEvents.length - offset2 - 2;
          break;
        }
      }
    }
  }
  index2 = -1;
  while (++index2 < events.length) {
    if (events[index2][1].type === "attentionSequence") {
      events[index2][1].type = "data";
    }
  }
  return events;
}
function tokenizeAttention(effects, ok2) {
  const attentionMarkers2 = this.parser.constructs.attentionMarkers.null;
  const previous2 = this.previous;
  const before = classifyCharacter(previous2);
  let marker;
  return start3;
  function start3(code2) {
    effects.enter("attentionSequence");
    marker = code2;
    return sequence(code2);
  }
  function sequence(code2) {
    if (code2 === marker) {
      effects.consume(code2);
      return sequence;
    }
    const token = effects.exit("attentionSequence");
    const after = classifyCharacter(code2);
    const open = !after || after === 2 && before || attentionMarkers2.includes(code2);
    const close = !before || before === 2 && after || attentionMarkers2.includes(previous2);
    token._open = Boolean(marker === 42 ? open : open && (before || !close));
    token._close = Boolean(marker === 42 ? close : close && (after || !open));
    return ok2(code2);
  }
}
function movePoint(point4, offset2) {
  point4.column += offset2;
  point4.offset += offset2;
  point4._bufferIndex += offset2;
}
var attention;
var init_attention = __esm({
  "node_modules/micromark-core-commonmark/lib/attention.js"() {
    init_micromark_util_chunked();
    init_micromark_util_classify_character();
    init_micromark_util_resolve_all();
    attention = {
      name: "attention",
      tokenize: tokenizeAttention,
      resolveAll: resolveAllAttention
    };
  }
});

// node_modules/micromark-core-commonmark/lib/autolink.js
function tokenizeAutolink(effects, ok2, nok) {
  let size = 1;
  return start3;
  function start3(code2) {
    effects.enter("autolink");
    effects.enter("autolinkMarker");
    effects.consume(code2);
    effects.exit("autolinkMarker");
    effects.enter("autolinkProtocol");
    return open;
  }
  function open(code2) {
    if (asciiAlpha(code2)) {
      effects.consume(code2);
      return schemeOrEmailAtext;
    }
    return asciiAtext(code2) ? emailAtext(code2) : nok(code2);
  }
  function schemeOrEmailAtext(code2) {
    return code2 === 43 || code2 === 45 || code2 === 46 || asciiAlphanumeric(code2) ? schemeInsideOrEmailAtext(code2) : emailAtext(code2);
  }
  function schemeInsideOrEmailAtext(code2) {
    if (code2 === 58) {
      effects.consume(code2);
      return urlInside;
    }
    if ((code2 === 43 || code2 === 45 || code2 === 46 || asciiAlphanumeric(code2)) && size++ < 32) {
      effects.consume(code2);
      return schemeInsideOrEmailAtext;
    }
    return emailAtext(code2);
  }
  function urlInside(code2) {
    if (code2 === 62) {
      effects.exit("autolinkProtocol");
      return end(code2);
    }
    if (code2 === null || code2 === 32 || code2 === 60 || asciiControl(code2)) {
      return nok(code2);
    }
    effects.consume(code2);
    return urlInside;
  }
  function emailAtext(code2) {
    if (code2 === 64) {
      effects.consume(code2);
      size = 0;
      return emailAtSignOrDot;
    }
    if (asciiAtext(code2)) {
      effects.consume(code2);
      return emailAtext;
    }
    return nok(code2);
  }
  function emailAtSignOrDot(code2) {
    return asciiAlphanumeric(code2) ? emailLabel(code2) : nok(code2);
  }
  function emailLabel(code2) {
    if (code2 === 46) {
      effects.consume(code2);
      size = 0;
      return emailAtSignOrDot;
    }
    if (code2 === 62) {
      effects.exit("autolinkProtocol").type = "autolinkEmail";
      return end(code2);
    }
    return emailValue(code2);
  }
  function emailValue(code2) {
    if ((code2 === 45 || asciiAlphanumeric(code2)) && size++ < 63) {
      effects.consume(code2);
      return code2 === 45 ? emailValue : emailLabel;
    }
    return nok(code2);
  }
  function end(code2) {
    effects.enter("autolinkMarker");
    effects.consume(code2);
    effects.exit("autolinkMarker");
    effects.exit("autolink");
    return ok2;
  }
}
var autolink;
var init_autolink = __esm({
  "node_modules/micromark-core-commonmark/lib/autolink.js"() {
    init_micromark_util_character();
    autolink = {
      name: "autolink",
      tokenize: tokenizeAutolink
    };
  }
});

// node_modules/micromark-core-commonmark/lib/blank-line.js
function tokenizeBlankLine(effects, ok2, nok) {
  return factorySpace(effects, afterWhitespace, "linePrefix");
  function afterWhitespace(code2) {
    return code2 === null || markdownLineEnding(code2) ? ok2(code2) : nok(code2);
  }
}
var blankLine;
var init_blank_line = __esm({
  "node_modules/micromark-core-commonmark/lib/blank-line.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    blankLine = {
      tokenize: tokenizeBlankLine,
      partial: true
    };
  }
});

// node_modules/micromark-core-commonmark/lib/block-quote.js
function tokenizeBlockQuoteStart(effects, ok2, nok) {
  const self2 = this;
  return start3;
  function start3(code2) {
    if (code2 === 62) {
      const state = self2.containerState;
      if (!state.open) {
        effects.enter("blockQuote", {
          _container: true
        });
        state.open = true;
      }
      effects.enter("blockQuotePrefix");
      effects.enter("blockQuoteMarker");
      effects.consume(code2);
      effects.exit("blockQuoteMarker");
      return after;
    }
    return nok(code2);
  }
  function after(code2) {
    if (markdownSpace(code2)) {
      effects.enter("blockQuotePrefixWhitespace");
      effects.consume(code2);
      effects.exit("blockQuotePrefixWhitespace");
      effects.exit("blockQuotePrefix");
      return ok2;
    }
    effects.exit("blockQuotePrefix");
    return ok2(code2);
  }
}
function tokenizeBlockQuoteContinuation(effects, ok2, nok) {
  return factorySpace(effects, effects.attempt(blockQuote, ok2, nok), "linePrefix", this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
}
function exit(effects) {
  effects.exit("blockQuote");
}
var blockQuote;
var init_block_quote = __esm({
  "node_modules/micromark-core-commonmark/lib/block-quote.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    blockQuote = {
      name: "blockQuote",
      tokenize: tokenizeBlockQuoteStart,
      continuation: {
        tokenize: tokenizeBlockQuoteContinuation
      },
      exit
    };
  }
});

// node_modules/micromark-core-commonmark/lib/character-escape.js
function tokenizeCharacterEscape(effects, ok2, nok) {
  return start3;
  function start3(code2) {
    effects.enter("characterEscape");
    effects.enter("escapeMarker");
    effects.consume(code2);
    effects.exit("escapeMarker");
    return open;
  }
  function open(code2) {
    if (asciiPunctuation(code2)) {
      effects.enter("characterEscapeValue");
      effects.consume(code2);
      effects.exit("characterEscapeValue");
      effects.exit("characterEscape");
      return ok2;
    }
    return nok(code2);
  }
}
var characterEscape;
var init_character_escape = __esm({
  "node_modules/micromark-core-commonmark/lib/character-escape.js"() {
    init_micromark_util_character();
    characterEscape = {
      name: "characterEscape",
      tokenize: tokenizeCharacterEscape
    };
  }
});

// node_modules/micromark-core-commonmark/lib/character-reference.js
function tokenizeCharacterReference(effects, ok2, nok) {
  const self2 = this;
  let size = 0;
  let max;
  let test;
  return start3;
  function start3(code2) {
    effects.enter("characterReference");
    effects.enter("characterReferenceMarker");
    effects.consume(code2);
    effects.exit("characterReferenceMarker");
    return open;
  }
  function open(code2) {
    if (code2 === 35) {
      effects.enter("characterReferenceMarkerNumeric");
      effects.consume(code2);
      effects.exit("characterReferenceMarkerNumeric");
      return numeric;
    }
    effects.enter("characterReferenceValue");
    max = 31;
    test = asciiAlphanumeric;
    return value(code2);
  }
  function numeric(code2) {
    if (code2 === 88 || code2 === 120) {
      effects.enter("characterReferenceMarkerHexadecimal");
      effects.consume(code2);
      effects.exit("characterReferenceMarkerHexadecimal");
      effects.enter("characterReferenceValue");
      max = 6;
      test = asciiHexDigit;
      return value;
    }
    effects.enter("characterReferenceValue");
    max = 7;
    test = asciiDigit;
    return value(code2);
  }
  function value(code2) {
    let token;
    if (code2 === 59 && size) {
      token = effects.exit("characterReferenceValue");
      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self2.sliceSerialize(token))) {
        return nok(code2);
      }
      effects.enter("characterReferenceMarker");
      effects.consume(code2);
      effects.exit("characterReferenceMarker");
      effects.exit("characterReference");
      return ok2;
    }
    if (test(code2) && size++ < max) {
      effects.consume(code2);
      return value;
    }
    return nok(code2);
  }
}
var characterReference;
var init_character_reference = __esm({
  "node_modules/micromark-core-commonmark/lib/character-reference.js"() {
    init_decode_named_character_reference();
    init_micromark_util_character();
    characterReference = {
      name: "characterReference",
      tokenize: tokenizeCharacterReference
    };
  }
});

// node_modules/micromark-core-commonmark/lib/code-fenced.js
function tokenizeCodeFenced(effects, ok2, nok) {
  const self2 = this;
  const closingFenceConstruct = {
    tokenize: tokenizeClosingFence,
    partial: true
  };
  const nonLazyLine = {
    tokenize: tokenizeNonLazyLine,
    partial: true
  };
  const tail = this.events[this.events.length - 1];
  const initialPrefix = tail && tail[1].type === "linePrefix" ? tail[2].sliceSerialize(tail[1], true).length : 0;
  let sizeOpen = 0;
  let marker;
  return start3;
  function start3(code2) {
    effects.enter("codeFenced");
    effects.enter("codeFencedFence");
    effects.enter("codeFencedFenceSequence");
    marker = code2;
    return sequenceOpen(code2);
  }
  function sequenceOpen(code2) {
    if (code2 === marker) {
      effects.consume(code2);
      sizeOpen++;
      return sequenceOpen;
    }
    effects.exit("codeFencedFenceSequence");
    return sizeOpen < 3 ? nok(code2) : factorySpace(effects, infoOpen, "whitespace")(code2);
  }
  function infoOpen(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      return openAfter(code2);
    }
    effects.enter("codeFencedFenceInfo");
    effects.enter("chunkString", {
      contentType: "string"
    });
    return info(code2);
  }
  function info(code2) {
    if (code2 === null || markdownLineEndingOrSpace(code2)) {
      effects.exit("chunkString");
      effects.exit("codeFencedFenceInfo");
      return factorySpace(effects, infoAfter, "whitespace")(code2);
    }
    if (code2 === 96 && code2 === marker)
      return nok(code2);
    effects.consume(code2);
    return info;
  }
  function infoAfter(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      return openAfter(code2);
    }
    effects.enter("codeFencedFenceMeta");
    effects.enter("chunkString", {
      contentType: "string"
    });
    return meta(code2);
  }
  function meta(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      effects.exit("chunkString");
      effects.exit("codeFencedFenceMeta");
      return openAfter(code2);
    }
    if (code2 === 96 && code2 === marker)
      return nok(code2);
    effects.consume(code2);
    return meta;
  }
  function openAfter(code2) {
    effects.exit("codeFencedFence");
    return self2.interrupt ? ok2(code2) : contentStart(code2);
  }
  function contentStart(code2) {
    if (code2 === null) {
      return after(code2);
    }
    if (markdownLineEnding(code2)) {
      return effects.attempt(nonLazyLine, effects.attempt(closingFenceConstruct, after, initialPrefix ? factorySpace(effects, contentStart, "linePrefix", initialPrefix + 1) : contentStart), after)(code2);
    }
    effects.enter("codeFlowValue");
    return contentContinue(code2);
  }
  function contentContinue(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      effects.exit("codeFlowValue");
      return contentStart(code2);
    }
    effects.consume(code2);
    return contentContinue;
  }
  function after(code2) {
    effects.exit("codeFenced");
    return ok2(code2);
  }
  function tokenizeNonLazyLine(effects2, ok3, nok2) {
    const self3 = this;
    return start4;
    function start4(code2) {
      effects2.enter("lineEnding");
      effects2.consume(code2);
      effects2.exit("lineEnding");
      return lineStart;
    }
    function lineStart(code2) {
      return self3.parser.lazy[self3.now().line] ? nok2(code2) : ok3(code2);
    }
  }
  function tokenizeClosingFence(effects2, ok3, nok2) {
    let size = 0;
    return factorySpace(effects2, closingSequenceStart, "linePrefix", this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
    function closingSequenceStart(code2) {
      effects2.enter("codeFencedFence");
      effects2.enter("codeFencedFenceSequence");
      return closingSequence(code2);
    }
    function closingSequence(code2) {
      if (code2 === marker) {
        effects2.consume(code2);
        size++;
        return closingSequence;
      }
      if (size < sizeOpen)
        return nok2(code2);
      effects2.exit("codeFencedFenceSequence");
      return factorySpace(effects2, closingSequenceEnd, "whitespace")(code2);
    }
    function closingSequenceEnd(code2) {
      if (code2 === null || markdownLineEnding(code2)) {
        effects2.exit("codeFencedFence");
        return ok3(code2);
      }
      return nok2(code2);
    }
  }
}
var codeFenced;
var init_code_fenced = __esm({
  "node_modules/micromark-core-commonmark/lib/code-fenced.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    codeFenced = {
      name: "codeFenced",
      tokenize: tokenizeCodeFenced,
      concrete: true
    };
  }
});

// node_modules/micromark-core-commonmark/lib/code-indented.js
function tokenizeCodeIndented(effects, ok2, nok) {
  const self2 = this;
  return start3;
  function start3(code2) {
    effects.enter("codeIndented");
    return factorySpace(effects, afterStartPrefix, "linePrefix", 4 + 1)(code2);
  }
  function afterStartPrefix(code2) {
    const tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === "linePrefix" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? afterPrefix(code2) : nok(code2);
  }
  function afterPrefix(code2) {
    if (code2 === null) {
      return after(code2);
    }
    if (markdownLineEnding(code2)) {
      return effects.attempt(indentedContent, afterPrefix, after)(code2);
    }
    effects.enter("codeFlowValue");
    return content3(code2);
  }
  function content3(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      effects.exit("codeFlowValue");
      return afterPrefix(code2);
    }
    effects.consume(code2);
    return content3;
  }
  function after(code2) {
    effects.exit("codeIndented");
    return ok2(code2);
  }
}
function tokenizeIndentedContent(effects, ok2, nok) {
  const self2 = this;
  return start3;
  function start3(code2) {
    if (self2.parser.lazy[self2.now().line]) {
      return nok(code2);
    }
    if (markdownLineEnding(code2)) {
      effects.enter("lineEnding");
      effects.consume(code2);
      effects.exit("lineEnding");
      return start3;
    }
    return factorySpace(effects, afterPrefix, "linePrefix", 4 + 1)(code2);
  }
  function afterPrefix(code2) {
    const tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === "linePrefix" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok2(code2) : markdownLineEnding(code2) ? start3(code2) : nok(code2);
  }
}
var codeIndented, indentedContent;
var init_code_indented = __esm({
  "node_modules/micromark-core-commonmark/lib/code-indented.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    codeIndented = {
      name: "codeIndented",
      tokenize: tokenizeCodeIndented
    };
    indentedContent = {
      tokenize: tokenizeIndentedContent,
      partial: true
    };
  }
});

// node_modules/micromark-core-commonmark/lib/code-text.js
function resolveCodeText(events) {
  let tailExitIndex = events.length - 4;
  let headEnterIndex = 3;
  let index2;
  let enter;
  if ((events[headEnterIndex][1].type === "lineEnding" || events[headEnterIndex][1].type === "space") && (events[tailExitIndex][1].type === "lineEnding" || events[tailExitIndex][1].type === "space")) {
    index2 = headEnterIndex;
    while (++index2 < tailExitIndex) {
      if (events[index2][1].type === "codeTextData") {
        events[headEnterIndex][1].type = "codeTextPadding";
        events[tailExitIndex][1].type = "codeTextPadding";
        headEnterIndex += 2;
        tailExitIndex -= 2;
        break;
      }
    }
  }
  index2 = headEnterIndex - 1;
  tailExitIndex++;
  while (++index2 <= tailExitIndex) {
    if (enter === void 0) {
      if (index2 !== tailExitIndex && events[index2][1].type !== "lineEnding") {
        enter = index2;
      }
    } else if (index2 === tailExitIndex || events[index2][1].type === "lineEnding") {
      events[enter][1].type = "codeTextData";
      if (index2 !== enter + 2) {
        events[enter][1].end = events[index2 - 1][1].end;
        events.splice(enter + 2, index2 - enter - 2);
        tailExitIndex -= index2 - enter - 2;
        index2 = enter + 2;
      }
      enter = void 0;
    }
  }
  return events;
}
function previous(code2) {
  return code2 !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function tokenizeCodeText(effects, ok2, nok) {
  const self2 = this;
  let sizeOpen = 0;
  let size;
  let token;
  return start3;
  function start3(code2) {
    effects.enter("codeText");
    effects.enter("codeTextSequence");
    return openingSequence(code2);
  }
  function openingSequence(code2) {
    if (code2 === 96) {
      effects.consume(code2);
      sizeOpen++;
      return openingSequence;
    }
    effects.exit("codeTextSequence");
    return gap(code2);
  }
  function gap(code2) {
    if (code2 === null) {
      return nok(code2);
    }
    if (code2 === 96) {
      token = effects.enter("codeTextSequence");
      size = 0;
      return closingSequence(code2);
    }
    if (code2 === 32) {
      effects.enter("space");
      effects.consume(code2);
      effects.exit("space");
      return gap;
    }
    if (markdownLineEnding(code2)) {
      effects.enter("lineEnding");
      effects.consume(code2);
      effects.exit("lineEnding");
      return gap;
    }
    effects.enter("codeTextData");
    return data3(code2);
  }
  function data3(code2) {
    if (code2 === null || code2 === 32 || code2 === 96 || markdownLineEnding(code2)) {
      effects.exit("codeTextData");
      return gap(code2);
    }
    effects.consume(code2);
    return data3;
  }
  function closingSequence(code2) {
    if (code2 === 96) {
      effects.consume(code2);
      size++;
      return closingSequence;
    }
    if (size === sizeOpen) {
      effects.exit("codeTextSequence");
      effects.exit("codeText");
      return ok2(code2);
    }
    token.type = "codeTextData";
    return data3(code2);
  }
}
var codeText;
var init_code_text = __esm({
  "node_modules/micromark-core-commonmark/lib/code-text.js"() {
    init_micromark_util_character();
    codeText = {
      name: "codeText",
      tokenize: tokenizeCodeText,
      resolve: resolveCodeText,
      previous
    };
  }
});

// node_modules/micromark-util-subtokenize/index.js
function subtokenize(events) {
  const jumps = {};
  let index2 = -1;
  let event;
  let lineIndex;
  let otherIndex;
  let otherEvent;
  let parameters;
  let subevents;
  let more;
  while (++index2 < events.length) {
    while (index2 in jumps) {
      index2 = jumps[index2];
    }
    event = events[index2];
    if (index2 && event[1].type === "chunkFlow" && events[index2 - 1][1].type === "listItemPrefix") {
      subevents = event[1]._tokenizer.events;
      otherIndex = 0;
      if (otherIndex < subevents.length && subevents[otherIndex][1].type === "lineEndingBlank") {
        otherIndex += 2;
      }
      if (otherIndex < subevents.length && subevents[otherIndex][1].type === "content") {
        while (++otherIndex < subevents.length) {
          if (subevents[otherIndex][1].type === "content") {
            break;
          }
          if (subevents[otherIndex][1].type === "chunkText") {
            subevents[otherIndex][1]._isInFirstContentOfListItem = true;
            otherIndex++;
          }
        }
      }
    }
    if (event[0] === "enter") {
      if (event[1].contentType) {
        Object.assign(jumps, subcontent(events, index2));
        index2 = jumps[index2];
        more = true;
      }
    } else if (event[1]._container) {
      otherIndex = index2;
      lineIndex = void 0;
      while (otherIndex--) {
        otherEvent = events[otherIndex];
        if (otherEvent[1].type === "lineEnding" || otherEvent[1].type === "lineEndingBlank") {
          if (otherEvent[0] === "enter") {
            if (lineIndex) {
              events[lineIndex][1].type = "lineEndingBlank";
            }
            otherEvent[1].type = "lineEnding";
            lineIndex = otherIndex;
          }
        } else {
          break;
        }
      }
      if (lineIndex) {
        event[1].end = Object.assign({}, events[lineIndex][1].start);
        parameters = events.slice(lineIndex, index2);
        parameters.unshift(event);
        splice(events, lineIndex, index2 - lineIndex + 1, parameters);
      }
    }
  }
  return !more;
}
function subcontent(events, eventIndex) {
  const token = events[eventIndex][1];
  const context = events[eventIndex][2];
  let startPosition = eventIndex - 1;
  const startPositions = [];
  const tokenizer2 = token._tokenizer || context.parser[token.contentType](token.start);
  const childEvents = tokenizer2.events;
  const jumps = [];
  const gaps = {};
  let stream;
  let previous2;
  let index2 = -1;
  let current2 = token;
  let adjust = 0;
  let start3 = 0;
  const breaks = [start3];
  while (current2) {
    while (events[++startPosition][1] !== current2) {
    }
    startPositions.push(startPosition);
    if (!current2._tokenizer) {
      stream = context.sliceStream(current2);
      if (!current2.next) {
        stream.push(null);
      }
      if (previous2) {
        tokenizer2.defineSkip(current2.start);
      }
      if (current2._isInFirstContentOfListItem) {
        tokenizer2._gfmTasklistFirstContentOfListItem = true;
      }
      tokenizer2.write(stream);
      if (current2._isInFirstContentOfListItem) {
        tokenizer2._gfmTasklistFirstContentOfListItem = void 0;
      }
    }
    previous2 = current2;
    current2 = current2.next;
  }
  current2 = token;
  while (++index2 < childEvents.length) {
    if (childEvents[index2][0] === "exit" && childEvents[index2 - 1][0] === "enter" && childEvents[index2][1].type === childEvents[index2 - 1][1].type && childEvents[index2][1].start.line !== childEvents[index2][1].end.line) {
      start3 = index2 + 1;
      breaks.push(start3);
      current2._tokenizer = void 0;
      current2.previous = void 0;
      current2 = current2.next;
    }
  }
  tokenizer2.events = [];
  if (current2) {
    current2._tokenizer = void 0;
    current2.previous = void 0;
  } else {
    breaks.pop();
  }
  index2 = breaks.length;
  while (index2--) {
    const slice2 = childEvents.slice(breaks[index2], breaks[index2 + 1]);
    const start4 = startPositions.pop();
    jumps.unshift([start4, start4 + slice2.length - 1]);
    splice(events, start4, 2, slice2);
  }
  index2 = -1;
  while (++index2 < jumps.length) {
    gaps[adjust + jumps[index2][0]] = adjust + jumps[index2][1];
    adjust += jumps[index2][1] - jumps[index2][0] - 1;
  }
  return gaps;
}
var init_micromark_util_subtokenize = __esm({
  "node_modules/micromark-util-subtokenize/index.js"() {
    init_micromark_util_chunked();
  }
});

// node_modules/micromark-core-commonmark/lib/content.js
function resolveContent(events) {
  subtokenize(events);
  return events;
}
function tokenizeContent(effects, ok2) {
  let previous2;
  return start3;
  function start3(code2) {
    effects.enter("content");
    previous2 = effects.enter("chunkContent", {
      contentType: "content"
    });
    return data3(code2);
  }
  function data3(code2) {
    if (code2 === null) {
      return contentEnd(code2);
    }
    if (markdownLineEnding(code2)) {
      return effects.check(continuationConstruct, contentContinue, contentEnd)(code2);
    }
    effects.consume(code2);
    return data3;
  }
  function contentEnd(code2) {
    effects.exit("chunkContent");
    effects.exit("content");
    return ok2(code2);
  }
  function contentContinue(code2) {
    effects.consume(code2);
    effects.exit("chunkContent");
    previous2.next = effects.enter("chunkContent", {
      contentType: "content",
      previous: previous2
    });
    previous2 = previous2.next;
    return data3;
  }
}
function tokenizeContinuation(effects, ok2, nok) {
  const self2 = this;
  return startLookahead;
  function startLookahead(code2) {
    effects.exit("chunkContent");
    effects.enter("lineEnding");
    effects.consume(code2);
    effects.exit("lineEnding");
    return factorySpace(effects, prefixed, "linePrefix");
  }
  function prefixed(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      return nok(code2);
    }
    const tail = self2.events[self2.events.length - 1];
    if (!self2.parser.constructs.disable.null.includes("codeIndented") && tail && tail[1].type === "linePrefix" && tail[2].sliceSerialize(tail[1], true).length >= 4) {
      return ok2(code2);
    }
    return effects.interrupt(self2.parser.constructs.flow, nok, ok2)(code2);
  }
}
var content2, continuationConstruct;
var init_content2 = __esm({
  "node_modules/micromark-core-commonmark/lib/content.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    init_micromark_util_subtokenize();
    content2 = {
      tokenize: tokenizeContent,
      resolve: resolveContent
    };
    continuationConstruct = {
      tokenize: tokenizeContinuation,
      partial: true
    };
  }
});

// node_modules/micromark-factory-destination/index.js
function factoryDestination(effects, ok2, nok, type, literalType, literalMarkerType, rawType, stringType, max) {
  const limit = max || Number.POSITIVE_INFINITY;
  let balance = 0;
  return start3;
  function start3(code2) {
    if (code2 === 60) {
      effects.enter(type);
      effects.enter(literalType);
      effects.enter(literalMarkerType);
      effects.consume(code2);
      effects.exit(literalMarkerType);
      return destinationEnclosedBefore;
    }
    if (code2 === null || code2 === 41 || asciiControl(code2)) {
      return nok(code2);
    }
    effects.enter(type);
    effects.enter(rawType);
    effects.enter(stringType);
    effects.enter("chunkString", {
      contentType: "string"
    });
    return destinationRaw(code2);
  }
  function destinationEnclosedBefore(code2) {
    if (code2 === 62) {
      effects.enter(literalMarkerType);
      effects.consume(code2);
      effects.exit(literalMarkerType);
      effects.exit(literalType);
      effects.exit(type);
      return ok2;
    }
    effects.enter(stringType);
    effects.enter("chunkString", {
      contentType: "string"
    });
    return destinationEnclosed(code2);
  }
  function destinationEnclosed(code2) {
    if (code2 === 62) {
      effects.exit("chunkString");
      effects.exit(stringType);
      return destinationEnclosedBefore(code2);
    }
    if (code2 === null || code2 === 60 || markdownLineEnding(code2)) {
      return nok(code2);
    }
    effects.consume(code2);
    return code2 === 92 ? destinationEnclosedEscape : destinationEnclosed;
  }
  function destinationEnclosedEscape(code2) {
    if (code2 === 60 || code2 === 62 || code2 === 92) {
      effects.consume(code2);
      return destinationEnclosed;
    }
    return destinationEnclosed(code2);
  }
  function destinationRaw(code2) {
    if (code2 === 40) {
      if (++balance > limit)
        return nok(code2);
      effects.consume(code2);
      return destinationRaw;
    }
    if (code2 === 41) {
      if (!balance--) {
        effects.exit("chunkString");
        effects.exit(stringType);
        effects.exit(rawType);
        effects.exit(type);
        return ok2(code2);
      }
      effects.consume(code2);
      return destinationRaw;
    }
    if (code2 === null || markdownLineEndingOrSpace(code2)) {
      if (balance)
        return nok(code2);
      effects.exit("chunkString");
      effects.exit(stringType);
      effects.exit(rawType);
      effects.exit(type);
      return ok2(code2);
    }
    if (asciiControl(code2))
      return nok(code2);
    effects.consume(code2);
    return code2 === 92 ? destinationRawEscape : destinationRaw;
  }
  function destinationRawEscape(code2) {
    if (code2 === 40 || code2 === 41 || code2 === 92) {
      effects.consume(code2);
      return destinationRaw;
    }
    return destinationRaw(code2);
  }
}
var init_micromark_factory_destination = __esm({
  "node_modules/micromark-factory-destination/index.js"() {
    init_micromark_util_character();
  }
});

// node_modules/micromark-factory-label/index.js
function factoryLabel(effects, ok2, nok, type, markerType, stringType) {
  const self2 = this;
  let size = 0;
  let data3;
  return start3;
  function start3(code2) {
    effects.enter(type);
    effects.enter(markerType);
    effects.consume(code2);
    effects.exit(markerType);
    effects.enter(stringType);
    return atBreak;
  }
  function atBreak(code2) {
    if (code2 === null || code2 === 91 || code2 === 93 && !data3 || code2 === 94 && !size && "_hiddenFootnoteSupport" in self2.parser.constructs || size > 999) {
      return nok(code2);
    }
    if (code2 === 93) {
      effects.exit(stringType);
      effects.enter(markerType);
      effects.consume(code2);
      effects.exit(markerType);
      effects.exit(type);
      return ok2;
    }
    if (markdownLineEnding(code2)) {
      effects.enter("lineEnding");
      effects.consume(code2);
      effects.exit("lineEnding");
      return atBreak;
    }
    effects.enter("chunkString", {
      contentType: "string"
    });
    return label2(code2);
  }
  function label2(code2) {
    if (code2 === null || code2 === 91 || code2 === 93 || markdownLineEnding(code2) || size++ > 999) {
      effects.exit("chunkString");
      return atBreak(code2);
    }
    effects.consume(code2);
    data3 = data3 || !markdownSpace(code2);
    return code2 === 92 ? labelEscape : label2;
  }
  function labelEscape(code2) {
    if (code2 === 91 || code2 === 92 || code2 === 93) {
      effects.consume(code2);
      size++;
      return label2;
    }
    return label2(code2);
  }
}
var init_micromark_factory_label = __esm({
  "node_modules/micromark-factory-label/index.js"() {
    init_micromark_util_character();
  }
});

// node_modules/micromark-factory-title/index.js
function factoryTitle(effects, ok2, nok, type, markerType, stringType) {
  let marker;
  return start3;
  function start3(code2) {
    effects.enter(type);
    effects.enter(markerType);
    effects.consume(code2);
    effects.exit(markerType);
    marker = code2 === 40 ? 41 : code2;
    return atFirstTitleBreak;
  }
  function atFirstTitleBreak(code2) {
    if (code2 === marker) {
      effects.enter(markerType);
      effects.consume(code2);
      effects.exit(markerType);
      effects.exit(type);
      return ok2;
    }
    effects.enter(stringType);
    return atTitleBreak(code2);
  }
  function atTitleBreak(code2) {
    if (code2 === marker) {
      effects.exit(stringType);
      return atFirstTitleBreak(marker);
    }
    if (code2 === null) {
      return nok(code2);
    }
    if (markdownLineEnding(code2)) {
      effects.enter("lineEnding");
      effects.consume(code2);
      effects.exit("lineEnding");
      return factorySpace(effects, atTitleBreak, "linePrefix");
    }
    effects.enter("chunkString", {
      contentType: "string"
    });
    return title(code2);
  }
  function title(code2) {
    if (code2 === marker || code2 === null || markdownLineEnding(code2)) {
      effects.exit("chunkString");
      return atTitleBreak(code2);
    }
    effects.consume(code2);
    return code2 === 92 ? titleEscape : title;
  }
  function titleEscape(code2) {
    if (code2 === marker || code2 === 92) {
      effects.consume(code2);
      return title;
    }
    return title(code2);
  }
}
var init_micromark_factory_title = __esm({
  "node_modules/micromark-factory-title/index.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
  }
});

// node_modules/micromark-factory-whitespace/index.js
function factoryWhitespace(effects, ok2) {
  let seen;
  return start3;
  function start3(code2) {
    if (markdownLineEnding(code2)) {
      effects.enter("lineEnding");
      effects.consume(code2);
      effects.exit("lineEnding");
      seen = true;
      return start3;
    }
    if (markdownSpace(code2)) {
      return factorySpace(effects, start3, seen ? "linePrefix" : "lineSuffix")(code2);
    }
    return ok2(code2);
  }
}
var init_micromark_factory_whitespace = __esm({
  "node_modules/micromark-factory-whitespace/index.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
  }
});

// node_modules/micromark-util-normalize-identifier/index.js
function normalizeIdentifier(value) {
  return value.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
}
var init_micromark_util_normalize_identifier = __esm({
  "node_modules/micromark-util-normalize-identifier/index.js"() {
  }
});

// node_modules/micromark-core-commonmark/lib/definition.js
function tokenizeDefinition(effects, ok2, nok) {
  const self2 = this;
  let identifier;
  return start3;
  function start3(code2) {
    effects.enter("definition");
    return factoryLabel.call(self2, effects, labelAfter, nok, "definitionLabel", "definitionLabelMarker", "definitionLabelString")(code2);
  }
  function labelAfter(code2) {
    identifier = normalizeIdentifier(self2.sliceSerialize(self2.events[self2.events.length - 1][1]).slice(1, -1));
    if (code2 === 58) {
      effects.enter("definitionMarker");
      effects.consume(code2);
      effects.exit("definitionMarker");
      return factoryWhitespace(effects, factoryDestination(effects, effects.attempt(titleConstruct, factorySpace(effects, after, "whitespace"), factorySpace(effects, after, "whitespace")), nok, "definitionDestination", "definitionDestinationLiteral", "definitionDestinationLiteralMarker", "definitionDestinationRaw", "definitionDestinationString"));
    }
    return nok(code2);
  }
  function after(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      effects.exit("definition");
      if (!self2.parser.defined.includes(identifier)) {
        self2.parser.defined.push(identifier);
      }
      return ok2(code2);
    }
    return nok(code2);
  }
}
function tokenizeTitle(effects, ok2, nok) {
  return start3;
  function start3(code2) {
    return markdownLineEndingOrSpace(code2) ? factoryWhitespace(effects, before)(code2) : nok(code2);
  }
  function before(code2) {
    if (code2 === 34 || code2 === 39 || code2 === 40) {
      return factoryTitle(effects, factorySpace(effects, after, "whitespace"), nok, "definitionTitle", "definitionTitleMarker", "definitionTitleString")(code2);
    }
    return nok(code2);
  }
  function after(code2) {
    return code2 === null || markdownLineEnding(code2) ? ok2(code2) : nok(code2);
  }
}
var definition, titleConstruct;
var init_definition = __esm({
  "node_modules/micromark-core-commonmark/lib/definition.js"() {
    init_micromark_factory_destination();
    init_micromark_factory_label();
    init_micromark_factory_space();
    init_micromark_factory_title();
    init_micromark_factory_whitespace();
    init_micromark_util_normalize_identifier();
    init_micromark_util_character();
    definition = {
      name: "definition",
      tokenize: tokenizeDefinition
    };
    titleConstruct = {
      tokenize: tokenizeTitle,
      partial: true
    };
  }
});

// node_modules/micromark-core-commonmark/lib/hard-break-escape.js
function tokenizeHardBreakEscape(effects, ok2, nok) {
  return start3;
  function start3(code2) {
    effects.enter("hardBreakEscape");
    effects.enter("escapeMarker");
    effects.consume(code2);
    return open;
  }
  function open(code2) {
    if (markdownLineEnding(code2)) {
      effects.exit("escapeMarker");
      effects.exit("hardBreakEscape");
      return ok2(code2);
    }
    return nok(code2);
  }
}
var hardBreakEscape;
var init_hard_break_escape = __esm({
  "node_modules/micromark-core-commonmark/lib/hard-break-escape.js"() {
    init_micromark_util_character();
    hardBreakEscape = {
      name: "hardBreakEscape",
      tokenize: tokenizeHardBreakEscape
    };
  }
});

// node_modules/micromark-core-commonmark/lib/heading-atx.js
function resolveHeadingAtx(events, context) {
  let contentEnd = events.length - 2;
  let contentStart = 3;
  let content3;
  let text8;
  if (events[contentStart][1].type === "whitespace") {
    contentStart += 2;
  }
  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === "whitespace") {
    contentEnd -= 2;
  }
  if (events[contentEnd][1].type === "atxHeadingSequence" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === "whitespace")) {
    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;
  }
  if (contentEnd > contentStart) {
    content3 = {
      type: "atxHeadingText",
      start: events[contentStart][1].start,
      end: events[contentEnd][1].end
    };
    text8 = {
      type: "chunkText",
      start: events[contentStart][1].start,
      end: events[contentEnd][1].end,
      contentType: "text"
    };
    splice(events, contentStart, contentEnd - contentStart + 1, [
      ["enter", content3, context],
      ["enter", text8, context],
      ["exit", text8, context],
      ["exit", content3, context]
    ]);
  }
  return events;
}
function tokenizeHeadingAtx(effects, ok2, nok) {
  const self2 = this;
  let size = 0;
  return start3;
  function start3(code2) {
    effects.enter("atxHeading");
    effects.enter("atxHeadingSequence");
    return fenceOpenInside(code2);
  }
  function fenceOpenInside(code2) {
    if (code2 === 35 && size++ < 6) {
      effects.consume(code2);
      return fenceOpenInside;
    }
    if (code2 === null || markdownLineEndingOrSpace(code2)) {
      effects.exit("atxHeadingSequence");
      return self2.interrupt ? ok2(code2) : headingBreak(code2);
    }
    return nok(code2);
  }
  function headingBreak(code2) {
    if (code2 === 35) {
      effects.enter("atxHeadingSequence");
      return sequence(code2);
    }
    if (code2 === null || markdownLineEnding(code2)) {
      effects.exit("atxHeading");
      return ok2(code2);
    }
    if (markdownSpace(code2)) {
      return factorySpace(effects, headingBreak, "whitespace")(code2);
    }
    effects.enter("atxHeadingText");
    return data3(code2);
  }
  function sequence(code2) {
    if (code2 === 35) {
      effects.consume(code2);
      return sequence;
    }
    effects.exit("atxHeadingSequence");
    return headingBreak(code2);
  }
  function data3(code2) {
    if (code2 === null || code2 === 35 || markdownLineEndingOrSpace(code2)) {
      effects.exit("atxHeadingText");
      return headingBreak(code2);
    }
    effects.consume(code2);
    return data3;
  }
}
var headingAtx;
var init_heading_atx = __esm({
  "node_modules/micromark-core-commonmark/lib/heading-atx.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    init_micromark_util_chunked();
    headingAtx = {
      name: "headingAtx",
      tokenize: tokenizeHeadingAtx,
      resolve: resolveHeadingAtx
    };
  }
});

// node_modules/micromark-util-html-tag-name/index.js
var htmlBlockNames, htmlRawNames;
var init_micromark_util_html_tag_name = __esm({
  "node_modules/micromark-util-html-tag-name/index.js"() {
    htmlBlockNames = [
      "address",
      "article",
      "aside",
      "base",
      "basefont",
      "blockquote",
      "body",
      "caption",
      "center",
      "col",
      "colgroup",
      "dd",
      "details",
      "dialog",
      "dir",
      "div",
      "dl",
      "dt",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "frame",
      "frameset",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "head",
      "header",
      "hr",
      "html",
      "iframe",
      "legend",
      "li",
      "link",
      "main",
      "menu",
      "menuitem",
      "nav",
      "noframes",
      "ol",
      "optgroup",
      "option",
      "p",
      "param",
      "section",
      "summary",
      "table",
      "tbody",
      "td",
      "tfoot",
      "th",
      "thead",
      "title",
      "tr",
      "track",
      "ul"
    ];
    htmlRawNames = ["pre", "script", "style", "textarea"];
  }
});

// node_modules/micromark-core-commonmark/lib/html-flow.js
function resolveToHtmlFlow(events) {
  let index2 = events.length;
  while (index2--) {
    if (events[index2][0] === "enter" && events[index2][1].type === "htmlFlow") {
      break;
    }
  }
  if (index2 > 1 && events[index2 - 2][1].type === "linePrefix") {
    events[index2][1].start = events[index2 - 2][1].start;
    events[index2 + 1][1].start = events[index2 - 2][1].start;
    events.splice(index2 - 2, 2);
  }
  return events;
}
function tokenizeHtmlFlow(effects, ok2, nok) {
  const self2 = this;
  let kind;
  let startTag2;
  let buffer3;
  let index2;
  let marker;
  return start3;
  function start3(code2) {
    effects.enter("htmlFlow");
    effects.enter("htmlFlowData");
    effects.consume(code2);
    return open;
  }
  function open(code2) {
    if (code2 === 33) {
      effects.consume(code2);
      return declarationStart;
    }
    if (code2 === 47) {
      effects.consume(code2);
      return tagCloseStart;
    }
    if (code2 === 63) {
      effects.consume(code2);
      kind = 3;
      return self2.interrupt ? ok2 : continuationDeclarationInside;
    }
    if (asciiAlpha(code2)) {
      effects.consume(code2);
      buffer3 = String.fromCharCode(code2);
      startTag2 = true;
      return tagName;
    }
    return nok(code2);
  }
  function declarationStart(code2) {
    if (code2 === 45) {
      effects.consume(code2);
      kind = 2;
      return commentOpenInside;
    }
    if (code2 === 91) {
      effects.consume(code2);
      kind = 5;
      buffer3 = "CDATA[";
      index2 = 0;
      return cdataOpenInside;
    }
    if (asciiAlpha(code2)) {
      effects.consume(code2);
      kind = 4;
      return self2.interrupt ? ok2 : continuationDeclarationInside;
    }
    return nok(code2);
  }
  function commentOpenInside(code2) {
    if (code2 === 45) {
      effects.consume(code2);
      return self2.interrupt ? ok2 : continuationDeclarationInside;
    }
    return nok(code2);
  }
  function cdataOpenInside(code2) {
    if (code2 === buffer3.charCodeAt(index2++)) {
      effects.consume(code2);
      return index2 === buffer3.length ? self2.interrupt ? ok2 : continuation : cdataOpenInside;
    }
    return nok(code2);
  }
  function tagCloseStart(code2) {
    if (asciiAlpha(code2)) {
      effects.consume(code2);
      buffer3 = String.fromCharCode(code2);
      return tagName;
    }
    return nok(code2);
  }
  function tagName(code2) {
    if (code2 === null || code2 === 47 || code2 === 62 || markdownLineEndingOrSpace(code2)) {
      if (code2 !== 47 && startTag2 && htmlRawNames.includes(buffer3.toLowerCase())) {
        kind = 1;
        return self2.interrupt ? ok2(code2) : continuation(code2);
      }
      if (htmlBlockNames.includes(buffer3.toLowerCase())) {
        kind = 6;
        if (code2 === 47) {
          effects.consume(code2);
          return basicSelfClosing;
        }
        return self2.interrupt ? ok2(code2) : continuation(code2);
      }
      kind = 7;
      return self2.interrupt && !self2.parser.lazy[self2.now().line] ? nok(code2) : startTag2 ? completeAttributeNameBefore(code2) : completeClosingTagAfter(code2);
    }
    if (code2 === 45 || asciiAlphanumeric(code2)) {
      effects.consume(code2);
      buffer3 += String.fromCharCode(code2);
      return tagName;
    }
    return nok(code2);
  }
  function basicSelfClosing(code2) {
    if (code2 === 62) {
      effects.consume(code2);
      return self2.interrupt ? ok2 : continuation;
    }
    return nok(code2);
  }
  function completeClosingTagAfter(code2) {
    if (markdownSpace(code2)) {
      effects.consume(code2);
      return completeClosingTagAfter;
    }
    return completeEnd(code2);
  }
  function completeAttributeNameBefore(code2) {
    if (code2 === 47) {
      effects.consume(code2);
      return completeEnd;
    }
    if (code2 === 58 || code2 === 95 || asciiAlpha(code2)) {
      effects.consume(code2);
      return completeAttributeName;
    }
    if (markdownSpace(code2)) {
      effects.consume(code2);
      return completeAttributeNameBefore;
    }
    return completeEnd(code2);
  }
  function completeAttributeName(code2) {
    if (code2 === 45 || code2 === 46 || code2 === 58 || code2 === 95 || asciiAlphanumeric(code2)) {
      effects.consume(code2);
      return completeAttributeName;
    }
    return completeAttributeNameAfter(code2);
  }
  function completeAttributeNameAfter(code2) {
    if (code2 === 61) {
      effects.consume(code2);
      return completeAttributeValueBefore;
    }
    if (markdownSpace(code2)) {
      effects.consume(code2);
      return completeAttributeNameAfter;
    }
    return completeAttributeNameBefore(code2);
  }
  function completeAttributeValueBefore(code2) {
    if (code2 === null || code2 === 60 || code2 === 61 || code2 === 62 || code2 === 96) {
      return nok(code2);
    }
    if (code2 === 34 || code2 === 39) {
      effects.consume(code2);
      marker = code2;
      return completeAttributeValueQuoted;
    }
    if (markdownSpace(code2)) {
      effects.consume(code2);
      return completeAttributeValueBefore;
    }
    marker = null;
    return completeAttributeValueUnquoted(code2);
  }
  function completeAttributeValueQuoted(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      return nok(code2);
    }
    if (code2 === marker) {
      effects.consume(code2);
      return completeAttributeValueQuotedAfter;
    }
    effects.consume(code2);
    return completeAttributeValueQuoted;
  }
  function completeAttributeValueUnquoted(code2) {
    if (code2 === null || code2 === 34 || code2 === 39 || code2 === 60 || code2 === 61 || code2 === 62 || code2 === 96 || markdownLineEndingOrSpace(code2)) {
      return completeAttributeNameAfter(code2);
    }
    effects.consume(code2);
    return completeAttributeValueUnquoted;
  }
  function completeAttributeValueQuotedAfter(code2) {
    if (code2 === 47 || code2 === 62 || markdownSpace(code2)) {
      return completeAttributeNameBefore(code2);
    }
    return nok(code2);
  }
  function completeEnd(code2) {
    if (code2 === 62) {
      effects.consume(code2);
      return completeAfter;
    }
    return nok(code2);
  }
  function completeAfter(code2) {
    if (markdownSpace(code2)) {
      effects.consume(code2);
      return completeAfter;
    }
    return code2 === null || markdownLineEnding(code2) ? continuation(code2) : nok(code2);
  }
  function continuation(code2) {
    if (code2 === 45 && kind === 2) {
      effects.consume(code2);
      return continuationCommentInside;
    }
    if (code2 === 60 && kind === 1) {
      effects.consume(code2);
      return continuationRawTagOpen;
    }
    if (code2 === 62 && kind === 4) {
      effects.consume(code2);
      return continuationClose;
    }
    if (code2 === 63 && kind === 3) {
      effects.consume(code2);
      return continuationDeclarationInside;
    }
    if (code2 === 93 && kind === 5) {
      effects.consume(code2);
      return continuationCharacterDataInside;
    }
    if (markdownLineEnding(code2) && (kind === 6 || kind === 7)) {
      return effects.check(nextBlankConstruct, continuationClose, continuationAtLineEnding)(code2);
    }
    if (code2 === null || markdownLineEnding(code2)) {
      return continuationAtLineEnding(code2);
    }
    effects.consume(code2);
    return continuation;
  }
  function continuationAtLineEnding(code2) {
    effects.exit("htmlFlowData");
    return htmlContinueStart(code2);
  }
  function htmlContinueStart(code2) {
    if (code2 === null) {
      return done(code2);
    }
    if (markdownLineEnding(code2)) {
      return effects.attempt({
        tokenize: htmlLineEnd,
        partial: true
      }, htmlContinueStart, done)(code2);
    }
    effects.enter("htmlFlowData");
    return continuation(code2);
  }
  function htmlLineEnd(effects2, ok3, nok2) {
    return start4;
    function start4(code2) {
      effects2.enter("lineEnding");
      effects2.consume(code2);
      effects2.exit("lineEnding");
      return lineStart;
    }
    function lineStart(code2) {
      return self2.parser.lazy[self2.now().line] ? nok2(code2) : ok3(code2);
    }
  }
  function continuationCommentInside(code2) {
    if (code2 === 45) {
      effects.consume(code2);
      return continuationDeclarationInside;
    }
    return continuation(code2);
  }
  function continuationRawTagOpen(code2) {
    if (code2 === 47) {
      effects.consume(code2);
      buffer3 = "";
      return continuationRawEndTag;
    }
    return continuation(code2);
  }
  function continuationRawEndTag(code2) {
    if (code2 === 62 && htmlRawNames.includes(buffer3.toLowerCase())) {
      effects.consume(code2);
      return continuationClose;
    }
    if (asciiAlpha(code2) && buffer3.length < 8) {
      effects.consume(code2);
      buffer3 += String.fromCharCode(code2);
      return continuationRawEndTag;
    }
    return continuation(code2);
  }
  function continuationCharacterDataInside(code2) {
    if (code2 === 93) {
      effects.consume(code2);
      return continuationDeclarationInside;
    }
    return continuation(code2);
  }
  function continuationDeclarationInside(code2) {
    if (code2 === 62) {
      effects.consume(code2);
      return continuationClose;
    }
    if (code2 === 45 && kind === 2) {
      effects.consume(code2);
      return continuationDeclarationInside;
    }
    return continuation(code2);
  }
  function continuationClose(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      effects.exit("htmlFlowData");
      return done(code2);
    }
    effects.consume(code2);
    return continuationClose;
  }
  function done(code2) {
    effects.exit("htmlFlow");
    return ok2(code2);
  }
}
function tokenizeNextBlank(effects, ok2, nok) {
  return start3;
  function start3(code2) {
    effects.exit("htmlFlowData");
    effects.enter("lineEndingBlank");
    effects.consume(code2);
    effects.exit("lineEndingBlank");
    return effects.attempt(blankLine, ok2, nok);
  }
}
var htmlFlow, nextBlankConstruct;
var init_html_flow = __esm({
  "node_modules/micromark-core-commonmark/lib/html-flow.js"() {
    init_micromark_util_character();
    init_micromark_util_html_tag_name();
    init_blank_line();
    htmlFlow = {
      name: "htmlFlow",
      tokenize: tokenizeHtmlFlow,
      resolveTo: resolveToHtmlFlow,
      concrete: true
    };
    nextBlankConstruct = {
      tokenize: tokenizeNextBlank,
      partial: true
    };
  }
});

// node_modules/micromark-core-commonmark/lib/html-text.js
function tokenizeHtmlText(effects, ok2, nok) {
  const self2 = this;
  let marker;
  let buffer3;
  let index2;
  let returnState;
  return start3;
  function start3(code2) {
    effects.enter("htmlText");
    effects.enter("htmlTextData");
    effects.consume(code2);
    return open;
  }
  function open(code2) {
    if (code2 === 33) {
      effects.consume(code2);
      return declarationOpen;
    }
    if (code2 === 47) {
      effects.consume(code2);
      return tagCloseStart;
    }
    if (code2 === 63) {
      effects.consume(code2);
      return instruction;
    }
    if (asciiAlpha(code2)) {
      effects.consume(code2);
      return tagOpen;
    }
    return nok(code2);
  }
  function declarationOpen(code2) {
    if (code2 === 45) {
      effects.consume(code2);
      return commentOpen;
    }
    if (code2 === 91) {
      effects.consume(code2);
      buffer3 = "CDATA[";
      index2 = 0;
      return cdataOpen;
    }
    if (asciiAlpha(code2)) {
      effects.consume(code2);
      return declaration;
    }
    return nok(code2);
  }
  function commentOpen(code2) {
    if (code2 === 45) {
      effects.consume(code2);
      return commentStart;
    }
    return nok(code2);
  }
  function commentStart(code2) {
    if (code2 === null || code2 === 62) {
      return nok(code2);
    }
    if (code2 === 45) {
      effects.consume(code2);
      return commentStartDash;
    }
    return comment5(code2);
  }
  function commentStartDash(code2) {
    if (code2 === null || code2 === 62) {
      return nok(code2);
    }
    return comment5(code2);
  }
  function comment5(code2) {
    if (code2 === null) {
      return nok(code2);
    }
    if (code2 === 45) {
      effects.consume(code2);
      return commentClose;
    }
    if (markdownLineEnding(code2)) {
      returnState = comment5;
      return atLineEnding(code2);
    }
    effects.consume(code2);
    return comment5;
  }
  function commentClose(code2) {
    if (code2 === 45) {
      effects.consume(code2);
      return end;
    }
    return comment5(code2);
  }
  function cdataOpen(code2) {
    if (code2 === buffer3.charCodeAt(index2++)) {
      effects.consume(code2);
      return index2 === buffer3.length ? cdata : cdataOpen;
    }
    return nok(code2);
  }
  function cdata(code2) {
    if (code2 === null) {
      return nok(code2);
    }
    if (code2 === 93) {
      effects.consume(code2);
      return cdataClose;
    }
    if (markdownLineEnding(code2)) {
      returnState = cdata;
      return atLineEnding(code2);
    }
    effects.consume(code2);
    return cdata;
  }
  function cdataClose(code2) {
    if (code2 === 93) {
      effects.consume(code2);
      return cdataEnd;
    }
    return cdata(code2);
  }
  function cdataEnd(code2) {
    if (code2 === 62) {
      return end(code2);
    }
    if (code2 === 93) {
      effects.consume(code2);
      return cdataEnd;
    }
    return cdata(code2);
  }
  function declaration(code2) {
    if (code2 === null || code2 === 62) {
      return end(code2);
    }
    if (markdownLineEnding(code2)) {
      returnState = declaration;
      return atLineEnding(code2);
    }
    effects.consume(code2);
    return declaration;
  }
  function instruction(code2) {
    if (code2 === null) {
      return nok(code2);
    }
    if (code2 === 63) {
      effects.consume(code2);
      return instructionClose;
    }
    if (markdownLineEnding(code2)) {
      returnState = instruction;
      return atLineEnding(code2);
    }
    effects.consume(code2);
    return instruction;
  }
  function instructionClose(code2) {
    return code2 === 62 ? end(code2) : instruction(code2);
  }
  function tagCloseStart(code2) {
    if (asciiAlpha(code2)) {
      effects.consume(code2);
      return tagClose;
    }
    return nok(code2);
  }
  function tagClose(code2) {
    if (code2 === 45 || asciiAlphanumeric(code2)) {
      effects.consume(code2);
      return tagClose;
    }
    return tagCloseBetween(code2);
  }
  function tagCloseBetween(code2) {
    if (markdownLineEnding(code2)) {
      returnState = tagCloseBetween;
      return atLineEnding(code2);
    }
    if (markdownSpace(code2)) {
      effects.consume(code2);
      return tagCloseBetween;
    }
    return end(code2);
  }
  function tagOpen(code2) {
    if (code2 === 45 || asciiAlphanumeric(code2)) {
      effects.consume(code2);
      return tagOpen;
    }
    if (code2 === 47 || code2 === 62 || markdownLineEndingOrSpace(code2)) {
      return tagOpenBetween(code2);
    }
    return nok(code2);
  }
  function tagOpenBetween(code2) {
    if (code2 === 47) {
      effects.consume(code2);
      return end;
    }
    if (code2 === 58 || code2 === 95 || asciiAlpha(code2)) {
      effects.consume(code2);
      return tagOpenAttributeName;
    }
    if (markdownLineEnding(code2)) {
      returnState = tagOpenBetween;
      return atLineEnding(code2);
    }
    if (markdownSpace(code2)) {
      effects.consume(code2);
      return tagOpenBetween;
    }
    return end(code2);
  }
  function tagOpenAttributeName(code2) {
    if (code2 === 45 || code2 === 46 || code2 === 58 || code2 === 95 || asciiAlphanumeric(code2)) {
      effects.consume(code2);
      return tagOpenAttributeName;
    }
    return tagOpenAttributeNameAfter(code2);
  }
  function tagOpenAttributeNameAfter(code2) {
    if (code2 === 61) {
      effects.consume(code2);
      return tagOpenAttributeValueBefore;
    }
    if (markdownLineEnding(code2)) {
      returnState = tagOpenAttributeNameAfter;
      return atLineEnding(code2);
    }
    if (markdownSpace(code2)) {
      effects.consume(code2);
      return tagOpenAttributeNameAfter;
    }
    return tagOpenBetween(code2);
  }
  function tagOpenAttributeValueBefore(code2) {
    if (code2 === null || code2 === 60 || code2 === 61 || code2 === 62 || code2 === 96) {
      return nok(code2);
    }
    if (code2 === 34 || code2 === 39) {
      effects.consume(code2);
      marker = code2;
      return tagOpenAttributeValueQuoted;
    }
    if (markdownLineEnding(code2)) {
      returnState = tagOpenAttributeValueBefore;
      return atLineEnding(code2);
    }
    if (markdownSpace(code2)) {
      effects.consume(code2);
      return tagOpenAttributeValueBefore;
    }
    effects.consume(code2);
    marker = void 0;
    return tagOpenAttributeValueUnquoted;
  }
  function tagOpenAttributeValueQuoted(code2) {
    if (code2 === marker) {
      effects.consume(code2);
      return tagOpenAttributeValueQuotedAfter;
    }
    if (code2 === null) {
      return nok(code2);
    }
    if (markdownLineEnding(code2)) {
      returnState = tagOpenAttributeValueQuoted;
      return atLineEnding(code2);
    }
    effects.consume(code2);
    return tagOpenAttributeValueQuoted;
  }
  function tagOpenAttributeValueQuotedAfter(code2) {
    if (code2 === 62 || code2 === 47 || markdownLineEndingOrSpace(code2)) {
      return tagOpenBetween(code2);
    }
    return nok(code2);
  }
  function tagOpenAttributeValueUnquoted(code2) {
    if (code2 === null || code2 === 34 || code2 === 39 || code2 === 60 || code2 === 61 || code2 === 96) {
      return nok(code2);
    }
    if (code2 === 62 || markdownLineEndingOrSpace(code2)) {
      return tagOpenBetween(code2);
    }
    effects.consume(code2);
    return tagOpenAttributeValueUnquoted;
  }
  function atLineEnding(code2) {
    effects.exit("htmlTextData");
    effects.enter("lineEnding");
    effects.consume(code2);
    effects.exit("lineEnding");
    return factorySpace(effects, afterPrefix, "linePrefix", self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
  }
  function afterPrefix(code2) {
    effects.enter("htmlTextData");
    return returnState(code2);
  }
  function end(code2) {
    if (code2 === 62) {
      effects.consume(code2);
      effects.exit("htmlTextData");
      effects.exit("htmlText");
      return ok2;
    }
    return nok(code2);
  }
}
var htmlText;
var init_html_text = __esm({
  "node_modules/micromark-core-commonmark/lib/html-text.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    htmlText = {
      name: "htmlText",
      tokenize: tokenizeHtmlText
    };
  }
});

// node_modules/micromark-core-commonmark/lib/label-end.js
function resolveAllLabelEnd(events) {
  let index2 = -1;
  let token;
  while (++index2 < events.length) {
    token = events[index2][1];
    if (token.type === "labelImage" || token.type === "labelLink" || token.type === "labelEnd") {
      events.splice(index2 + 1, token.type === "labelImage" ? 4 : 2);
      token.type = "data";
      index2++;
    }
  }
  return events;
}
function resolveToLabelEnd(events, context) {
  let index2 = events.length;
  let offset2 = 0;
  let token;
  let open;
  let close;
  let media;
  while (index2--) {
    token = events[index2][1];
    if (open) {
      if (token.type === "link" || token.type === "labelLink" && token._inactive) {
        break;
      }
      if (events[index2][0] === "enter" && token.type === "labelLink") {
        token._inactive = true;
      }
    } else if (close) {
      if (events[index2][0] === "enter" && (token.type === "labelImage" || token.type === "labelLink") && !token._balanced) {
        open = index2;
        if (token.type !== "labelLink") {
          offset2 = 2;
          break;
        }
      }
    } else if (token.type === "labelEnd") {
      close = index2;
    }
  }
  const group = {
    type: events[open][1].type === "labelLink" ? "link" : "image",
    start: Object.assign({}, events[open][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  };
  const label2 = {
    type: "label",
    start: Object.assign({}, events[open][1].start),
    end: Object.assign({}, events[close][1].end)
  };
  const text8 = {
    type: "labelText",
    start: Object.assign({}, events[open + offset2 + 2][1].end),
    end: Object.assign({}, events[close - 2][1].start)
  };
  media = [
    ["enter", group, context],
    ["enter", label2, context]
  ];
  media = push(media, events.slice(open + 1, open + offset2 + 3));
  media = push(media, [["enter", text8, context]]);
  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset2 + 4, close - 3), context));
  media = push(media, [
    ["exit", text8, context],
    events[close - 2],
    events[close - 1],
    ["exit", label2, context]
  ]);
  media = push(media, events.slice(close + 1));
  media = push(media, [["exit", group, context]]);
  splice(events, open, events.length, media);
  return events;
}
function tokenizeLabelEnd(effects, ok2, nok) {
  const self2 = this;
  let index2 = self2.events.length;
  let labelStart;
  let defined;
  while (index2--) {
    if ((self2.events[index2][1].type === "labelImage" || self2.events[index2][1].type === "labelLink") && !self2.events[index2][1]._balanced) {
      labelStart = self2.events[index2][1];
      break;
    }
  }
  return start3;
  function start3(code2) {
    if (!labelStart) {
      return nok(code2);
    }
    if (labelStart._inactive)
      return balanced(code2);
    defined = self2.parser.defined.includes(normalizeIdentifier(self2.sliceSerialize({
      start: labelStart.end,
      end: self2.now()
    })));
    effects.enter("labelEnd");
    effects.enter("labelMarker");
    effects.consume(code2);
    effects.exit("labelMarker");
    effects.exit("labelEnd");
    return afterLabelEnd;
  }
  function afterLabelEnd(code2) {
    if (code2 === 40) {
      return effects.attempt(resourceConstruct, ok2, defined ? ok2 : balanced)(code2);
    }
    if (code2 === 91) {
      return effects.attempt(fullReferenceConstruct, ok2, defined ? effects.attempt(collapsedReferenceConstruct, ok2, balanced) : balanced)(code2);
    }
    return defined ? ok2(code2) : balanced(code2);
  }
  function balanced(code2) {
    labelStart._balanced = true;
    return nok(code2);
  }
}
function tokenizeResource(effects, ok2, nok) {
  return start3;
  function start3(code2) {
    effects.enter("resource");
    effects.enter("resourceMarker");
    effects.consume(code2);
    effects.exit("resourceMarker");
    return factoryWhitespace(effects, open);
  }
  function open(code2) {
    if (code2 === 41) {
      return end(code2);
    }
    return factoryDestination(effects, destinationAfter, nok, "resourceDestination", "resourceDestinationLiteral", "resourceDestinationLiteralMarker", "resourceDestinationRaw", "resourceDestinationString", 32)(code2);
  }
  function destinationAfter(code2) {
    return markdownLineEndingOrSpace(code2) ? factoryWhitespace(effects, between)(code2) : end(code2);
  }
  function between(code2) {
    if (code2 === 34 || code2 === 39 || code2 === 40) {
      return factoryTitle(effects, factoryWhitespace(effects, end), nok, "resourceTitle", "resourceTitleMarker", "resourceTitleString")(code2);
    }
    return end(code2);
  }
  function end(code2) {
    if (code2 === 41) {
      effects.enter("resourceMarker");
      effects.consume(code2);
      effects.exit("resourceMarker");
      effects.exit("resource");
      return ok2;
    }
    return nok(code2);
  }
}
function tokenizeFullReference(effects, ok2, nok) {
  const self2 = this;
  return start3;
  function start3(code2) {
    return factoryLabel.call(self2, effects, afterLabel, nok, "reference", "referenceMarker", "referenceString")(code2);
  }
  function afterLabel(code2) {
    return self2.parser.defined.includes(normalizeIdentifier(self2.sliceSerialize(self2.events[self2.events.length - 1][1]).slice(1, -1))) ? ok2(code2) : nok(code2);
  }
}
function tokenizeCollapsedReference(effects, ok2, nok) {
  return start3;
  function start3(code2) {
    effects.enter("reference");
    effects.enter("referenceMarker");
    effects.consume(code2);
    effects.exit("referenceMarker");
    return open;
  }
  function open(code2) {
    if (code2 === 93) {
      effects.enter("referenceMarker");
      effects.consume(code2);
      effects.exit("referenceMarker");
      effects.exit("reference");
      return ok2;
    }
    return nok(code2);
  }
}
var labelEnd, resourceConstruct, fullReferenceConstruct, collapsedReferenceConstruct;
var init_label_end = __esm({
  "node_modules/micromark-core-commonmark/lib/label-end.js"() {
    init_micromark_factory_destination();
    init_micromark_factory_label();
    init_micromark_factory_title();
    init_micromark_factory_whitespace();
    init_micromark_util_character();
    init_micromark_util_chunked();
    init_micromark_util_normalize_identifier();
    init_micromark_util_resolve_all();
    labelEnd = {
      name: "labelEnd",
      tokenize: tokenizeLabelEnd,
      resolveTo: resolveToLabelEnd,
      resolveAll: resolveAllLabelEnd
    };
    resourceConstruct = {
      tokenize: tokenizeResource
    };
    fullReferenceConstruct = {
      tokenize: tokenizeFullReference
    };
    collapsedReferenceConstruct = {
      tokenize: tokenizeCollapsedReference
    };
  }
});

// node_modules/micromark-core-commonmark/lib/label-start-image.js
function tokenizeLabelStartImage(effects, ok2, nok) {
  const self2 = this;
  return start3;
  function start3(code2) {
    effects.enter("labelImage");
    effects.enter("labelImageMarker");
    effects.consume(code2);
    effects.exit("labelImageMarker");
    return open;
  }
  function open(code2) {
    if (code2 === 91) {
      effects.enter("labelMarker");
      effects.consume(code2);
      effects.exit("labelMarker");
      effects.exit("labelImage");
      return after;
    }
    return nok(code2);
  }
  function after(code2) {
    return code2 === 94 && "_hiddenFootnoteSupport" in self2.parser.constructs ? nok(code2) : ok2(code2);
  }
}
var labelStartImage;
var init_label_start_image = __esm({
  "node_modules/micromark-core-commonmark/lib/label-start-image.js"() {
    init_label_end();
    labelStartImage = {
      name: "labelStartImage",
      tokenize: tokenizeLabelStartImage,
      resolveAll: labelEnd.resolveAll
    };
  }
});

// node_modules/micromark-core-commonmark/lib/label-start-link.js
function tokenizeLabelStartLink(effects, ok2, nok) {
  const self2 = this;
  return start3;
  function start3(code2) {
    effects.enter("labelLink");
    effects.enter("labelMarker");
    effects.consume(code2);
    effects.exit("labelMarker");
    effects.exit("labelLink");
    return after;
  }
  function after(code2) {
    return code2 === 94 && "_hiddenFootnoteSupport" in self2.parser.constructs ? nok(code2) : ok2(code2);
  }
}
var labelStartLink;
var init_label_start_link = __esm({
  "node_modules/micromark-core-commonmark/lib/label-start-link.js"() {
    init_label_end();
    labelStartLink = {
      name: "labelStartLink",
      tokenize: tokenizeLabelStartLink,
      resolveAll: labelEnd.resolveAll
    };
  }
});

// node_modules/micromark-core-commonmark/lib/line-ending.js
function tokenizeLineEnding(effects, ok2) {
  return start3;
  function start3(code2) {
    effects.enter("lineEnding");
    effects.consume(code2);
    effects.exit("lineEnding");
    return factorySpace(effects, ok2, "linePrefix");
  }
}
var lineEnding;
var init_line_ending = __esm({
  "node_modules/micromark-core-commonmark/lib/line-ending.js"() {
    init_micromark_factory_space();
    lineEnding = {
      name: "lineEnding",
      tokenize: tokenizeLineEnding
    };
  }
});

// node_modules/micromark-core-commonmark/lib/thematic-break.js
function tokenizeThematicBreak(effects, ok2, nok) {
  let size = 0;
  let marker;
  return start3;
  function start3(code2) {
    effects.enter("thematicBreak");
    marker = code2;
    return atBreak(code2);
  }
  function atBreak(code2) {
    if (code2 === marker) {
      effects.enter("thematicBreakSequence");
      return sequence(code2);
    }
    if (markdownSpace(code2)) {
      return factorySpace(effects, atBreak, "whitespace")(code2);
    }
    if (size < 3 || code2 !== null && !markdownLineEnding(code2)) {
      return nok(code2);
    }
    effects.exit("thematicBreak");
    return ok2(code2);
  }
  function sequence(code2) {
    if (code2 === marker) {
      effects.consume(code2);
      size++;
      return sequence;
    }
    effects.exit("thematicBreakSequence");
    return atBreak(code2);
  }
}
var thematicBreak;
var init_thematic_break = __esm({
  "node_modules/micromark-core-commonmark/lib/thematic-break.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    thematicBreak = {
      name: "thematicBreak",
      tokenize: tokenizeThematicBreak
    };
  }
});

// node_modules/micromark-core-commonmark/lib/list.js
function tokenizeListStart(effects, ok2, nok) {
  const self2 = this;
  const tail = self2.events[self2.events.length - 1];
  let initialSize = tail && tail[1].type === "linePrefix" ? tail[2].sliceSerialize(tail[1], true).length : 0;
  let size = 0;
  return start3;
  function start3(code2) {
    const kind = self2.containerState.type || (code2 === 42 || code2 === 43 || code2 === 45 ? "listUnordered" : "listOrdered");
    if (kind === "listUnordered" ? !self2.containerState.marker || code2 === self2.containerState.marker : asciiDigit(code2)) {
      if (!self2.containerState.type) {
        self2.containerState.type = kind;
        effects.enter(kind, {
          _container: true
        });
      }
      if (kind === "listUnordered") {
        effects.enter("listItemPrefix");
        return code2 === 42 || code2 === 45 ? effects.check(thematicBreak, nok, atMarker)(code2) : atMarker(code2);
      }
      if (!self2.interrupt || code2 === 49) {
        effects.enter("listItemPrefix");
        effects.enter("listItemValue");
        return inside(code2);
      }
    }
    return nok(code2);
  }
  function inside(code2) {
    if (asciiDigit(code2) && ++size < 10) {
      effects.consume(code2);
      return inside;
    }
    if ((!self2.interrupt || size < 2) && (self2.containerState.marker ? code2 === self2.containerState.marker : code2 === 41 || code2 === 46)) {
      effects.exit("listItemValue");
      return atMarker(code2);
    }
    return nok(code2);
  }
  function atMarker(code2) {
    effects.enter("listItemMarker");
    effects.consume(code2);
    effects.exit("listItemMarker");
    self2.containerState.marker = self2.containerState.marker || code2;
    return effects.check(blankLine, self2.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));
  }
  function onBlank(code2) {
    self2.containerState.initialBlankLine = true;
    initialSize++;
    return endOfPrefix(code2);
  }
  function otherPrefix(code2) {
    if (markdownSpace(code2)) {
      effects.enter("listItemPrefixWhitespace");
      effects.consume(code2);
      effects.exit("listItemPrefixWhitespace");
      return endOfPrefix;
    }
    return nok(code2);
  }
  function endOfPrefix(code2) {
    self2.containerState.size = initialSize + self2.sliceSerialize(effects.exit("listItemPrefix"), true).length;
    return ok2(code2);
  }
}
function tokenizeListContinuation(effects, ok2, nok) {
  const self2 = this;
  self2.containerState._closeFlow = void 0;
  return effects.check(blankLine, onBlank, notBlank);
  function onBlank(code2) {
    self2.containerState.furtherBlankLines = self2.containerState.furtherBlankLines || self2.containerState.initialBlankLine;
    return factorySpace(effects, ok2, "listItemIndent", self2.containerState.size + 1)(code2);
  }
  function notBlank(code2) {
    if (self2.containerState.furtherBlankLines || !markdownSpace(code2)) {
      self2.containerState.furtherBlankLines = void 0;
      self2.containerState.initialBlankLine = void 0;
      return notInCurrentItem(code2);
    }
    self2.containerState.furtherBlankLines = void 0;
    self2.containerState.initialBlankLine = void 0;
    return effects.attempt(indentConstruct, ok2, notInCurrentItem)(code2);
  }
  function notInCurrentItem(code2) {
    self2.containerState._closeFlow = true;
    self2.interrupt = void 0;
    return factorySpace(effects, effects.attempt(list, ok2, nok), "linePrefix", self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(code2);
  }
}
function tokenizeIndent(effects, ok2, nok) {
  const self2 = this;
  return factorySpace(effects, afterPrefix, "listItemIndent", self2.containerState.size + 1);
  function afterPrefix(code2) {
    const tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === "listItemIndent" && tail[2].sliceSerialize(tail[1], true).length === self2.containerState.size ? ok2(code2) : nok(code2);
  }
}
function tokenizeListEnd(effects) {
  effects.exit(this.containerState.type);
}
function tokenizeListItemPrefixWhitespace(effects, ok2, nok) {
  const self2 = this;
  return factorySpace(effects, afterPrefix, "listItemPrefixWhitespace", self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4 + 1);
  function afterPrefix(code2) {
    const tail = self2.events[self2.events.length - 1];
    return !markdownSpace(code2) && tail && tail[1].type === "listItemPrefixWhitespace" ? ok2(code2) : nok(code2);
  }
}
var list, listItemPrefixWhitespaceConstruct, indentConstruct;
var init_list = __esm({
  "node_modules/micromark-core-commonmark/lib/list.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    init_blank_line();
    init_thematic_break();
    list = {
      name: "list",
      tokenize: tokenizeListStart,
      continuation: {
        tokenize: tokenizeListContinuation
      },
      exit: tokenizeListEnd
    };
    listItemPrefixWhitespaceConstruct = {
      tokenize: tokenizeListItemPrefixWhitespace,
      partial: true
    };
    indentConstruct = {
      tokenize: tokenizeIndent,
      partial: true
    };
  }
});

// node_modules/micromark-core-commonmark/lib/setext-underline.js
function resolveToSetextUnderline(events, context) {
  let index2 = events.length;
  let content3;
  let text8;
  let definition2;
  while (index2--) {
    if (events[index2][0] === "enter") {
      if (events[index2][1].type === "content") {
        content3 = index2;
        break;
      }
      if (events[index2][1].type === "paragraph") {
        text8 = index2;
      }
    } else {
      if (events[index2][1].type === "content") {
        events.splice(index2, 1);
      }
      if (!definition2 && events[index2][1].type === "definition") {
        definition2 = index2;
      }
    }
  }
  const heading2 = {
    type: "setextHeading",
    start: Object.assign({}, events[text8][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  };
  events[text8][1].type = "setextHeadingText";
  if (definition2) {
    events.splice(text8, 0, ["enter", heading2, context]);
    events.splice(definition2 + 1, 0, ["exit", events[content3][1], context]);
    events[content3][1].end = Object.assign({}, events[definition2][1].end);
  } else {
    events[content3][1] = heading2;
  }
  events.push(["exit", heading2, context]);
  return events;
}
function tokenizeSetextUnderline(effects, ok2, nok) {
  const self2 = this;
  let index2 = self2.events.length;
  let marker;
  let paragraph2;
  while (index2--) {
    if (self2.events[index2][1].type !== "lineEnding" && self2.events[index2][1].type !== "linePrefix" && self2.events[index2][1].type !== "content") {
      paragraph2 = self2.events[index2][1].type === "paragraph";
      break;
    }
  }
  return start3;
  function start3(code2) {
    if (!self2.parser.lazy[self2.now().line] && (self2.interrupt || paragraph2)) {
      effects.enter("setextHeadingLine");
      effects.enter("setextHeadingLineSequence");
      marker = code2;
      return closingSequence(code2);
    }
    return nok(code2);
  }
  function closingSequence(code2) {
    if (code2 === marker) {
      effects.consume(code2);
      return closingSequence;
    }
    effects.exit("setextHeadingLineSequence");
    return factorySpace(effects, closingSequenceEnd, "lineSuffix")(code2);
  }
  function closingSequenceEnd(code2) {
    if (code2 === null || markdownLineEnding(code2)) {
      effects.exit("setextHeadingLine");
      return ok2(code2);
    }
    return nok(code2);
  }
}
var setextUnderline;
var init_setext_underline = __esm({
  "node_modules/micromark-core-commonmark/lib/setext-underline.js"() {
    init_micromark_factory_space();
    init_micromark_util_character();
    setextUnderline = {
      name: "setextUnderline",
      tokenize: tokenizeSetextUnderline,
      resolveTo: resolveToSetextUnderline
    };
  }
});

// node_modules/micromark-core-commonmark/index.js
var init_micromark_core_commonmark = __esm({
  "node_modules/micromark-core-commonmark/index.js"() {
    init_attention();
    init_autolink();
    init_blank_line();
    init_block_quote();
    init_character_escape();
    init_character_reference();
    init_code_fenced();
    init_code_indented();
    init_code_text();
    init_content2();
    init_definition();
    init_hard_break_escape();
    init_heading_atx();
    init_html_flow();
    init_html_text();
    init_label_end();
    init_label_start_image();
    init_label_start_link();
    init_line_ending();
    init_list();
    init_setext_underline();
    init_thematic_break();
  }
});

// node_modules/micromark/lib/initialize/flow.js
function initializeFlow(effects) {
  const self2 = this;
  const initial = effects.attempt(blankLine, atBlankEnding, effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content2, afterConstruct)), "linePrefix")));
  return initial;
  function atBlankEnding(code2) {
    if (code2 === null) {
      effects.consume(code2);
      return;
    }
    effects.enter("lineEndingBlank");
    effects.consume(code2);
    effects.exit("lineEndingBlank");
    self2.currentConstruct = void 0;
    return initial;
  }
  function afterConstruct(code2) {
    if (code2 === null) {
      effects.consume(code2);
      return;
    }
    effects.enter("lineEnding");
    effects.consume(code2);
    effects.exit("lineEnding");
    self2.currentConstruct = void 0;
    return initial;
  }
}
var flow;
var init_flow = __esm({
  "node_modules/micromark/lib/initialize/flow.js"() {
    init_micromark_core_commonmark();
    init_micromark_factory_space();
    flow = {
      tokenize: initializeFlow
    };
  }
});

// node_modules/micromark/lib/initialize/text.js
function initializeFactory(field) {
  return {
    tokenize: initializeText,
    resolveAll: createResolver(field === "text" ? resolveAllLineSuffixes : void 0)
  };
  function initializeText(effects) {
    const self2 = this;
    const constructs2 = this.parser.constructs[field];
    const text8 = effects.attempt(constructs2, start3, notText);
    return start3;
    function start3(code2) {
      return atBreak(code2) ? text8(code2) : notText(code2);
    }
    function notText(code2) {
      if (code2 === null) {
        effects.consume(code2);
        return;
      }
      effects.enter("data");
      effects.consume(code2);
      return data3;
    }
    function data3(code2) {
      if (atBreak(code2)) {
        effects.exit("data");
        return text8(code2);
      }
      effects.consume(code2);
      return data3;
    }
    function atBreak(code2) {
      if (code2 === null) {
        return true;
      }
      const list3 = constructs2[code2];
      let index2 = -1;
      if (list3) {
        while (++index2 < list3.length) {
          const item = list3[index2];
          if (!item.previous || item.previous.call(self2, self2.previous)) {
            return true;
          }
        }
      }
      return false;
    }
  }
}
function createResolver(extraResolver) {
  return resolveAllText;
  function resolveAllText(events, context) {
    let index2 = -1;
    let enter;
    while (++index2 <= events.length) {
      if (enter === void 0) {
        if (events[index2] && events[index2][1].type === "data") {
          enter = index2;
          index2++;
        }
      } else if (!events[index2] || events[index2][1].type !== "data") {
        if (index2 !== enter + 2) {
          events[enter][1].end = events[index2 - 1][1].end;
          events.splice(enter + 2, index2 - enter - 2);
          index2 = enter + 2;
        }
        enter = void 0;
      }
    }
    return extraResolver ? extraResolver(events, context) : events;
  }
}
function resolveAllLineSuffixes(events, context) {
  let eventIndex = 0;
  while (++eventIndex <= events.length) {
    if ((eventIndex === events.length || events[eventIndex][1].type === "lineEnding") && events[eventIndex - 1][1].type === "data") {
      const data3 = events[eventIndex - 1][1];
      const chunks = context.sliceStream(data3);
      let index2 = chunks.length;
      let bufferIndex = -1;
      let size = 0;
      let tabs;
      while (index2--) {
        const chunk = chunks[index2];
        if (typeof chunk === "string") {
          bufferIndex = chunk.length;
          while (chunk.charCodeAt(bufferIndex - 1) === 32) {
            size++;
            bufferIndex--;
          }
          if (bufferIndex)
            break;
          bufferIndex = -1;
        } else if (chunk === -2) {
          tabs = true;
          size++;
        } else if (chunk === -1) {
        } else {
          index2++;
          break;
        }
      }
      if (size) {
        const token = {
          type: eventIndex === events.length || tabs || size < 2 ? "lineSuffix" : "hardBreakTrailing",
          start: {
            line: data3.end.line,
            column: data3.end.column - size,
            offset: data3.end.offset - size,
            _index: data3.start._index + index2,
            _bufferIndex: index2 ? bufferIndex : data3.start._bufferIndex + bufferIndex
          },
          end: Object.assign({}, data3.end)
        };
        data3.end = Object.assign({}, token.start);
        if (data3.start.offset === data3.end.offset) {
          Object.assign(data3, token);
        } else {
          events.splice(eventIndex, 0, ["enter", token, context], ["exit", token, context]);
          eventIndex += 2;
        }
      }
      eventIndex++;
    }
  }
  return events;
}
var resolver, string, text5;
var init_text2 = __esm({
  "node_modules/micromark/lib/initialize/text.js"() {
    resolver = {
      resolveAll: createResolver()
    };
    string = initializeFactory("string");
    text5 = initializeFactory("text");
  }
});

// node_modules/micromark/lib/create-tokenizer.js
function createTokenizer(parser, initialize, from) {
  let point4 = Object.assign(from ? Object.assign({}, from) : {
    line: 1,
    column: 1,
    offset: 0
  }, {
    _index: 0,
    _bufferIndex: -1
  });
  const columnStart = {};
  const resolveAllConstructs = [];
  let chunks = [];
  let stack = [];
  let consumed = true;
  const effects = {
    consume,
    enter,
    exit: exit2,
    attempt: constructFactory(onsuccessfulconstruct),
    check: constructFactory(onsuccessfulcheck),
    interrupt: constructFactory(onsuccessfulcheck, {
      interrupt: true
    })
  };
  const context = {
    previous: null,
    code: null,
    containerState: {},
    events: [],
    parser,
    sliceStream,
    sliceSerialize,
    now,
    defineSkip,
    write
  };
  let state = initialize.tokenize.call(context, effects);
  let expectedCode;
  if (initialize.resolveAll) {
    resolveAllConstructs.push(initialize);
  }
  return context;
  function write(slice2) {
    chunks = push(chunks, slice2);
    main();
    if (chunks[chunks.length - 1] !== null) {
      return [];
    }
    addResult(initialize, 0);
    context.events = resolveAll(resolveAllConstructs, context.events, context);
    return context.events;
  }
  function sliceSerialize(token, expandTabs) {
    return serializeChunks(sliceStream(token), expandTabs);
  }
  function sliceStream(token) {
    return sliceChunks(chunks, token);
  }
  function now() {
    return Object.assign({}, point4);
  }
  function defineSkip(value) {
    columnStart[value.line] = value.column;
    accountForPotentialSkip();
  }
  function main() {
    let chunkIndex;
    while (point4._index < chunks.length) {
      const chunk = chunks[point4._index];
      if (typeof chunk === "string") {
        chunkIndex = point4._index;
        if (point4._bufferIndex < 0) {
          point4._bufferIndex = 0;
        }
        while (point4._index === chunkIndex && point4._bufferIndex < chunk.length) {
          go(chunk.charCodeAt(point4._bufferIndex));
        }
      } else {
        go(chunk);
      }
    }
  }
  function go(code2) {
    consumed = void 0;
    expectedCode = code2;
    state = state(code2);
  }
  function consume(code2) {
    if (markdownLineEnding(code2)) {
      point4.line++;
      point4.column = 1;
      point4.offset += code2 === -3 ? 2 : 1;
      accountForPotentialSkip();
    } else if (code2 !== -1) {
      point4.column++;
      point4.offset++;
    }
    if (point4._bufferIndex < 0) {
      point4._index++;
    } else {
      point4._bufferIndex++;
      if (point4._bufferIndex === chunks[point4._index].length) {
        point4._bufferIndex = -1;
        point4._index++;
      }
    }
    context.previous = code2;
    consumed = true;
  }
  function enter(type, fields) {
    const token = fields || {};
    token.type = type;
    token.start = now();
    context.events.push(["enter", token, context]);
    stack.push(token);
    return token;
  }
  function exit2(type) {
    const token = stack.pop();
    token.end = now();
    context.events.push(["exit", token, context]);
    return token;
  }
  function onsuccessfulconstruct(construct, info) {
    addResult(construct, info.from);
  }
  function onsuccessfulcheck(_, info) {
    info.restore();
  }
  function constructFactory(onreturn, fields) {
    return hook;
    function hook(constructs2, returnState, bogusState) {
      let listOfConstructs;
      let constructIndex;
      let currentConstruct;
      let info;
      return Array.isArray(constructs2) ? handleListOfConstructs(constructs2) : "tokenize" in constructs2 ? handleListOfConstructs([constructs2]) : handleMapOfConstructs(constructs2);
      function handleMapOfConstructs(map3) {
        return start3;
        function start3(code2) {
          const def = code2 !== null && map3[code2];
          const all5 = code2 !== null && map3.null;
          const list3 = [
            ...Array.isArray(def) ? def : def ? [def] : [],
            ...Array.isArray(all5) ? all5 : all5 ? [all5] : []
          ];
          return handleListOfConstructs(list3)(code2);
        }
      }
      function handleListOfConstructs(list3) {
        listOfConstructs = list3;
        constructIndex = 0;
        if (list3.length === 0) {
          return bogusState;
        }
        return handleConstruct(list3[constructIndex]);
      }
      function handleConstruct(construct) {
        return start3;
        function start3(code2) {
          info = store2();
          currentConstruct = construct;
          if (!construct.partial) {
            context.currentConstruct = construct;
          }
          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {
            return nok(code2);
          }
          return construct.tokenize.call(fields ? Object.assign(Object.create(context), fields) : context, effects, ok2, nok)(code2);
        }
      }
      function ok2(code2) {
        consumed = true;
        onreturn(currentConstruct, info);
        return returnState;
      }
      function nok(code2) {
        consumed = true;
        info.restore();
        if (++constructIndex < listOfConstructs.length) {
          return handleConstruct(listOfConstructs[constructIndex]);
        }
        return bogusState;
      }
    }
  }
  function addResult(construct, from2) {
    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {
      resolveAllConstructs.push(construct);
    }
    if (construct.resolve) {
      splice(context.events, from2, context.events.length - from2, construct.resolve(context.events.slice(from2), context));
    }
    if (construct.resolveTo) {
      context.events = construct.resolveTo(context.events, context);
    }
  }
  function store2() {
    const startPoint = now();
    const startPrevious = context.previous;
    const startCurrentConstruct = context.currentConstruct;
    const startEventsIndex = context.events.length;
    const startStack = Array.from(stack);
    return {
      restore,
      from: startEventsIndex
    };
    function restore() {
      point4 = startPoint;
      context.previous = startPrevious;
      context.currentConstruct = startCurrentConstruct;
      context.events.length = startEventsIndex;
      stack = startStack;
      accountForPotentialSkip();
    }
  }
  function accountForPotentialSkip() {
    if (point4.line in columnStart && point4.column < 2) {
      point4.column = columnStart[point4.line];
      point4.offset += columnStart[point4.line] - 1;
    }
  }
}
function sliceChunks(chunks, token) {
  const startIndex = token.start._index;
  const startBufferIndex = token.start._bufferIndex;
  const endIndex = token.end._index;
  const endBufferIndex = token.end._bufferIndex;
  let view;
  if (startIndex === endIndex) {
    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];
  } else {
    view = chunks.slice(startIndex, endIndex);
    if (startBufferIndex > -1) {
      view[0] = view[0].slice(startBufferIndex);
    }
    if (endBufferIndex > 0) {
      view.push(chunks[endIndex].slice(0, endBufferIndex));
    }
  }
  return view;
}
function serializeChunks(chunks, expandTabs) {
  let index2 = -1;
  const result = [];
  let atTab;
  while (++index2 < chunks.length) {
    const chunk = chunks[index2];
    let value;
    if (typeof chunk === "string") {
      value = chunk;
    } else
      switch (chunk) {
        case -5: {
          value = "\r";
          break;
        }
        case -4: {
          value = "\n";
          break;
        }
        case -3: {
          value = "\r\n";
          break;
        }
        case -2: {
          value = expandTabs ? " " : "	";
          break;
        }
        case -1: {
          if (!expandTabs && atTab)
            continue;
          value = " ";
          break;
        }
        default: {
          value = String.fromCharCode(chunk);
        }
      }
    atTab = chunk === -2;
    result.push(value);
  }
  return result.join("");
}
var init_create_tokenizer = __esm({
  "node_modules/micromark/lib/create-tokenizer.js"() {
    init_micromark_util_character();
    init_micromark_util_chunked();
    init_micromark_util_resolve_all();
  }
});

// node_modules/micromark/lib/constructs.js
var constructs_exports = {};
__export(constructs_exports, {
  attentionMarkers: () => attentionMarkers,
  contentInitial: () => contentInitial,
  disable: () => disable,
  document: () => document3,
  flow: () => flow2,
  flowInitial: () => flowInitial,
  insideSpan: () => insideSpan,
  string: () => string2,
  text: () => text6
});
var document3, contentInitial, flowInitial, flow2, string2, text6, insideSpan, attentionMarkers, disable;
var init_constructs = __esm({
  "node_modules/micromark/lib/constructs.js"() {
    init_micromark_core_commonmark();
    init_text2();
    document3 = {
      [42]: list,
      [43]: list,
      [45]: list,
      [48]: list,
      [49]: list,
      [50]: list,
      [51]: list,
      [52]: list,
      [53]: list,
      [54]: list,
      [55]: list,
      [56]: list,
      [57]: list,
      [62]: blockQuote
    };
    contentInitial = {
      [91]: definition
    };
    flowInitial = {
      [-2]: codeIndented,
      [-1]: codeIndented,
      [32]: codeIndented
    };
    flow2 = {
      [35]: headingAtx,
      [42]: thematicBreak,
      [45]: [setextUnderline, thematicBreak],
      [60]: htmlFlow,
      [61]: setextUnderline,
      [95]: thematicBreak,
      [96]: codeFenced,
      [126]: codeFenced
    };
    string2 = {
      [38]: characterReference,
      [92]: characterEscape
    };
    text6 = {
      [-5]: lineEnding,
      [-4]: lineEnding,
      [-3]: lineEnding,
      [33]: labelStartImage,
      [38]: characterReference,
      [42]: attention,
      [60]: [autolink, htmlText],
      [91]: labelStartLink,
      [92]: [hardBreakEscape, characterEscape],
      [93]: labelEnd,
      [95]: attention,
      [96]: codeText
    };
    insideSpan = {
      null: [attention, resolver]
    };
    attentionMarkers = {
      null: [42, 95]
    };
    disable = {
      null: []
    };
  }
});

// node_modules/micromark/lib/parse.js
function parse5(options = {}) {
  const constructs2 = combineExtensions([constructs_exports].concat(options.extensions || []));
  const parser = {
    defined: [],
    lazy: {},
    constructs: constructs2,
    content: create2(content),
    document: create2(document2),
    flow: create2(flow),
    string: create2(string),
    text: create2(text5)
  };
  return parser;
  function create2(initial) {
    return creator;
    function creator(from) {
      return createTokenizer(parser, initial, from);
    }
  }
}
var init_parse = __esm({
  "node_modules/micromark/lib/parse.js"() {
    init_micromark_util_combine_extensions();
    init_content();
    init_document();
    init_flow();
    init_text2();
    init_create_tokenizer();
    init_constructs();
  }
});

// node_modules/micromark/lib/preprocess.js
function preprocess() {
  let column = 1;
  let buffer3 = "";
  let start3 = true;
  let atCarriageReturn;
  return preprocessor;
  function preprocessor(value, encoding, end) {
    const chunks = [];
    let match;
    let next;
    let startPosition;
    let endPosition;
    let code2;
    value = buffer3 + value.toString(encoding);
    startPosition = 0;
    buffer3 = "";
    if (start3) {
      if (value.charCodeAt(0) === 65279) {
        startPosition++;
      }
      start3 = void 0;
    }
    while (startPosition < value.length) {
      search2.lastIndex = startPosition;
      match = search2.exec(value);
      endPosition = match && match.index !== void 0 ? match.index : value.length;
      code2 = value.charCodeAt(endPosition);
      if (!match) {
        buffer3 = value.slice(startPosition);
        break;
      }
      if (code2 === 10 && startPosition === endPosition && atCarriageReturn) {
        chunks.push(-3);
        atCarriageReturn = void 0;
      } else {
        if (atCarriageReturn) {
          chunks.push(-5);
          atCarriageReturn = void 0;
        }
        if (startPosition < endPosition) {
          chunks.push(value.slice(startPosition, endPosition));
          column += endPosition - startPosition;
        }
        switch (code2) {
          case 0: {
            chunks.push(65533);
            column++;
            break;
          }
          case 9: {
            next = Math.ceil(column / 4) * 4;
            chunks.push(-2);
            while (column++ < next)
              chunks.push(-1);
            break;
          }
          case 10: {
            chunks.push(-4);
            column = 1;
            break;
          }
          default: {
            atCarriageReturn = true;
            column = 1;
          }
        }
      }
      startPosition = endPosition + 1;
    }
    if (end) {
      if (atCarriageReturn)
        chunks.push(-5);
      if (buffer3)
        chunks.push(buffer3);
      chunks.push(null);
    }
    return chunks;
  }
}
var search2;
var init_preprocess = __esm({
  "node_modules/micromark/lib/preprocess.js"() {
    search2 = /[\0\t\n\r]/g;
  }
});

// node_modules/micromark/lib/postprocess.js
function postprocess(events) {
  while (!subtokenize(events)) {
  }
  return events;
}
var init_postprocess = __esm({
  "node_modules/micromark/lib/postprocess.js"() {
    init_micromark_util_subtokenize();
  }
});

// node_modules/micromark-util-decode-numeric-character-reference/index.js
function decodeNumericCharacterReference(value, base2) {
  const code2 = Number.parseInt(value, base2);
  if (code2 < 9 || code2 === 11 || code2 > 13 && code2 < 32 || code2 > 126 && code2 < 160 || code2 > 55295 && code2 < 57344 || code2 > 64975 && code2 < 65008 || (code2 & 65535) === 65535 || (code2 & 65535) === 65534 || code2 > 1114111) {
    return "\uFFFD";
  }
  return String.fromCharCode(code2);
}
var init_micromark_util_decode_numeric_character_reference = __esm({
  "node_modules/micromark-util-decode-numeric-character-reference/index.js"() {
  }
});

// node_modules/micromark-util-decode-string/index.js
function decodeString(value) {
  return value.replace(characterEscapeOrReference, decode);
}
function decode($0, $1, $22) {
  if ($1) {
    return $1;
  }
  const head2 = $22.charCodeAt(0);
  if (head2 === 35) {
    const head3 = $22.charCodeAt(1);
    const hex = head3 === 120 || head3 === 88;
    return decodeNumericCharacterReference($22.slice(hex ? 2 : 1), hex ? 16 : 10);
  }
  return decodeNamedCharacterReference($22) || $0;
}
var characterEscapeOrReference;
var init_micromark_util_decode_string = __esm({
  "node_modules/micromark-util-decode-string/index.js"() {
    init_decode_named_character_reference();
    init_micromark_util_decode_numeric_character_reference();
    characterEscapeOrReference = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
  }
});

// node_modules/mdast-util-from-markdown/lib/index.js
function compiler(options = {}) {
  const config = configure({
    transforms: [],
    canContainEols: [
      "emphasis",
      "fragment",
      "heading",
      "paragraph",
      "strong"
    ],
    enter: {
      autolink: opener(link2),
      autolinkProtocol: onenterdata,
      autolinkEmail: onenterdata,
      atxHeading: opener(heading2),
      blockQuote: opener(blockQuote2),
      characterEscape: onenterdata,
      characterReference: onenterdata,
      codeFenced: opener(codeFlow),
      codeFencedFenceInfo: buffer3,
      codeFencedFenceMeta: buffer3,
      codeIndented: opener(codeFlow, buffer3),
      codeText: opener(codeText2, buffer3),
      codeTextData: onenterdata,
      data: onenterdata,
      codeFlowValue: onenterdata,
      definition: opener(definition2),
      definitionDestinationString: buffer3,
      definitionLabelString: buffer3,
      definitionTitleString: buffer3,
      emphasis: opener(emphasis2),
      hardBreakEscape: opener(hardBreak2),
      hardBreakTrailing: opener(hardBreak2),
      htmlFlow: opener(html6, buffer3),
      htmlFlowData: onenterdata,
      htmlText: opener(html6, buffer3),
      htmlTextData: onenterdata,
      image: opener(image2),
      label: buffer3,
      link: opener(link2),
      listItem: opener(listItem2),
      listItemValue: onenterlistitemvalue,
      listOrdered: opener(list3, onenterlistordered),
      listUnordered: opener(list3),
      paragraph: opener(paragraph2),
      reference: onenterreference,
      referenceString: buffer3,
      resourceDestinationString: buffer3,
      resourceTitleString: buffer3,
      setextHeading: opener(heading2),
      strong: opener(strong2),
      thematicBreak: opener(thematicBreak3)
    },
    exit: {
      atxHeading: closer(),
      atxHeadingSequence: onexitatxheadingsequence,
      autolink: closer(),
      autolinkEmail: onexitautolinkemail,
      autolinkProtocol: onexitautolinkprotocol,
      blockQuote: closer(),
      characterEscapeValue: onexitdata,
      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,
      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,
      characterReferenceValue: onexitcharacterreferencevalue,
      codeFenced: closer(onexitcodefenced),
      codeFencedFence: onexitcodefencedfence,
      codeFencedFenceInfo: onexitcodefencedfenceinfo,
      codeFencedFenceMeta: onexitcodefencedfencemeta,
      codeFlowValue: onexitdata,
      codeIndented: closer(onexitcodeindented),
      codeText: closer(onexitcodetext),
      codeTextData: onexitdata,
      data: onexitdata,
      definition: closer(),
      definitionDestinationString: onexitdefinitiondestinationstring,
      definitionLabelString: onexitdefinitionlabelstring,
      definitionTitleString: onexitdefinitiontitlestring,
      emphasis: closer(),
      hardBreakEscape: closer(onexithardbreak),
      hardBreakTrailing: closer(onexithardbreak),
      htmlFlow: closer(onexithtmlflow),
      htmlFlowData: onexitdata,
      htmlText: closer(onexithtmltext),
      htmlTextData: onexitdata,
      image: closer(onexitimage),
      label: onexitlabel,
      labelText: onexitlabeltext,
      lineEnding: onexitlineending,
      link: closer(onexitlink),
      listItem: closer(),
      listOrdered: closer(),
      listUnordered: closer(),
      paragraph: closer(),
      referenceString: onexitreferencestring,
      resourceDestinationString: onexitresourcedestinationstring,
      resourceTitleString: onexitresourcetitlestring,
      resource: onexitresource,
      setextHeading: closer(onexitsetextheading),
      setextHeadingLineSequence: onexitsetextheadinglinesequence,
      setextHeadingText: onexitsetextheadingtext,
      strong: closer(),
      thematicBreak: closer()
    }
  }, options.mdastExtensions || []);
  const data3 = {};
  return compile2;
  function compile2(events) {
    let tree = {
      type: "root",
      children: []
    };
    const stack = [tree];
    const tokenStack = [];
    const listStack = [];
    const context = {
      stack,
      tokenStack,
      config,
      enter,
      exit: exit2,
      buffer: buffer3,
      resume,
      setData,
      getData
    };
    let index2 = -1;
    while (++index2 < events.length) {
      if (events[index2][1].type === "listOrdered" || events[index2][1].type === "listUnordered") {
        if (events[index2][0] === "enter") {
          listStack.push(index2);
        } else {
          const tail = listStack.pop();
          index2 = prepareList(events, tail, index2);
        }
      }
    }
    index2 = -1;
    while (++index2 < events.length) {
      const handler2 = config[events[index2][0]];
      if (own12.call(handler2, events[index2][1].type)) {
        handler2[events[index2][1].type].call(Object.assign({
          sliceSerialize: events[index2][2].sliceSerialize
        }, context), events[index2][1]);
      }
    }
    if (tokenStack.length > 0) {
      const tail = tokenStack[tokenStack.length - 1];
      const handler2 = tail[1] || defaultOnError;
      handler2.call(context, void 0, tail[0]);
    }
    tree.position = {
      start: point4(events.length > 0 ? events[0][1].start : {
        line: 1,
        column: 1,
        offset: 0
      }),
      end: point4(events.length > 0 ? events[events.length - 2][1].end : {
        line: 1,
        column: 1,
        offset: 0
      })
    };
    index2 = -1;
    while (++index2 < config.transforms.length) {
      tree = config.transforms[index2](tree) || tree;
    }
    return tree;
  }
  function prepareList(events, start3, length) {
    let index2 = start3 - 1;
    let containerBalance = -1;
    let listSpread = false;
    let listItem3;
    let lineIndex;
    let firstBlankLineIndex;
    let atMarker;
    while (++index2 <= length) {
      const event = events[index2];
      if (event[1].type === "listUnordered" || event[1].type === "listOrdered" || event[1].type === "blockQuote") {
        if (event[0] === "enter") {
          containerBalance++;
        } else {
          containerBalance--;
        }
        atMarker = void 0;
      } else if (event[1].type === "lineEndingBlank") {
        if (event[0] === "enter") {
          if (listItem3 && !atMarker && !containerBalance && !firstBlankLineIndex) {
            firstBlankLineIndex = index2;
          }
          atMarker = void 0;
        }
      } else if (event[1].type === "linePrefix" || event[1].type === "listItemValue" || event[1].type === "listItemMarker" || event[1].type === "listItemPrefix" || event[1].type === "listItemPrefixWhitespace") {
      } else {
        atMarker = void 0;
      }
      if (!containerBalance && event[0] === "enter" && event[1].type === "listItemPrefix" || containerBalance === -1 && event[0] === "exit" && (event[1].type === "listUnordered" || event[1].type === "listOrdered")) {
        if (listItem3) {
          let tailIndex = index2;
          lineIndex = void 0;
          while (tailIndex--) {
            const tailEvent = events[tailIndex];
            if (tailEvent[1].type === "lineEnding" || tailEvent[1].type === "lineEndingBlank") {
              if (tailEvent[0] === "exit")
                continue;
              if (lineIndex) {
                events[lineIndex][1].type = "lineEndingBlank";
                listSpread = true;
              }
              tailEvent[1].type = "lineEnding";
              lineIndex = tailIndex;
            } else if (tailEvent[1].type === "linePrefix" || tailEvent[1].type === "blockQuotePrefix" || tailEvent[1].type === "blockQuotePrefixWhitespace" || tailEvent[1].type === "blockQuoteMarker" || tailEvent[1].type === "listItemIndent") {
            } else {
              break;
            }
          }
          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {
            listItem3._spread = true;
          }
          listItem3.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);
          events.splice(lineIndex || index2, 0, ["exit", listItem3, event[2]]);
          index2++;
          length++;
        }
        if (event[1].type === "listItemPrefix") {
          listItem3 = {
            type: "listItem",
            _spread: false,
            start: Object.assign({}, event[1].start)
          };
          events.splice(index2, 0, ["enter", listItem3, event[2]]);
          index2++;
          length++;
          firstBlankLineIndex = void 0;
          atMarker = true;
        }
      }
    }
    events[start3][1]._spread = listSpread;
    return length;
  }
  function setData(key2, value) {
    data3[key2] = value;
  }
  function getData(key2) {
    return data3[key2];
  }
  function point4(d2) {
    return {
      line: d2.line,
      column: d2.column,
      offset: d2.offset
    };
  }
  function opener(create2, and) {
    return open;
    function open(token) {
      enter.call(this, create2(token), token);
      if (and)
        and.call(this, token);
    }
  }
  function buffer3() {
    this.stack.push({
      type: "fragment",
      children: []
    });
  }
  function enter(node, token, errorHandler) {
    const parent = this.stack[this.stack.length - 1];
    parent.children.push(node);
    this.stack.push(node);
    this.tokenStack.push([token, errorHandler]);
    node.position = {
      start: point4(token.start)
    };
    return node;
  }
  function closer(and) {
    return close;
    function close(token) {
      if (and)
        and.call(this, token);
      exit2.call(this, token);
    }
  }
  function exit2(token, onExitError) {
    const node = this.stack.pop();
    const open = this.tokenStack.pop();
    if (!open) {
      throw new Error("Cannot close `" + token.type + "` (" + stringifyPosition({
        start: token.start,
        end: token.end
      }) + "): it\u2019s not open");
    } else if (open[0].type !== token.type) {
      if (onExitError) {
        onExitError.call(this, token, open[0]);
      } else {
        const handler2 = open[1] || defaultOnError;
        handler2.call(this, token, open[0]);
      }
    }
    node.position.end = point4(token.end);
    return node;
  }
  function resume() {
    return toString3(this.stack.pop());
  }
  function onenterlistordered() {
    setData("expectingFirstListItemValue", true);
  }
  function onenterlistitemvalue(token) {
    if (getData("expectingFirstListItemValue")) {
      const ancestor = this.stack[this.stack.length - 2];
      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);
      setData("expectingFirstListItemValue");
    }
  }
  function onexitcodefencedfenceinfo() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.lang = data4;
  }
  function onexitcodefencedfencemeta() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.meta = data4;
  }
  function onexitcodefencedfence() {
    if (getData("flowCodeInside"))
      return;
    this.buffer();
    setData("flowCodeInside", true);
  }
  function onexitcodefenced() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.value = data4.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, "");
    setData("flowCodeInside");
  }
  function onexitcodeindented() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.value = data4.replace(/(\r?\n|\r)$/g, "");
  }
  function onexitdefinitionlabelstring(token) {
    const label2 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.label = label2;
    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();
  }
  function onexitdefinitiontitlestring() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.title = data4;
  }
  function onexitdefinitiondestinationstring() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.url = data4;
  }
  function onexitatxheadingsequence(token) {
    const node = this.stack[this.stack.length - 1];
    if (!node.depth) {
      const depth = this.sliceSerialize(token).length;
      node.depth = depth;
    }
  }
  function onexitsetextheadingtext() {
    setData("setextHeadingSlurpLineEnding", true);
  }
  function onexitsetextheadinglinesequence(token) {
    const node = this.stack[this.stack.length - 1];
    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2;
  }
  function onexitsetextheading() {
    setData("setextHeadingSlurpLineEnding");
  }
  function onenterdata(token) {
    const parent = this.stack[this.stack.length - 1];
    let tail = parent.children[parent.children.length - 1];
    if (!tail || tail.type !== "text") {
      tail = text8();
      tail.position = {
        start: point4(token.start)
      };
      parent.children.push(tail);
    }
    this.stack.push(tail);
  }
  function onexitdata(token) {
    const tail = this.stack.pop();
    tail.value += this.sliceSerialize(token);
    tail.position.end = point4(token.end);
  }
  function onexitlineending(token) {
    const context = this.stack[this.stack.length - 1];
    if (getData("atHardBreak")) {
      const tail = context.children[context.children.length - 1];
      tail.position.end = point4(token.end);
      setData("atHardBreak");
      return;
    }
    if (!getData("setextHeadingSlurpLineEnding") && config.canContainEols.includes(context.type)) {
      onenterdata.call(this, token);
      onexitdata.call(this, token);
    }
  }
  function onexithardbreak() {
    setData("atHardBreak", true);
  }
  function onexithtmlflow() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.value = data4;
  }
  function onexithtmltext() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.value = data4;
  }
  function onexitcodetext() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.value = data4;
  }
  function onexitlink() {
    const context = this.stack[this.stack.length - 1];
    if (getData("inReference")) {
      context.type += "Reference";
      context.referenceType = getData("referenceType") || "shortcut";
      delete context.url;
      delete context.title;
    } else {
      delete context.identifier;
      delete context.label;
    }
    setData("referenceType");
  }
  function onexitimage() {
    const context = this.stack[this.stack.length - 1];
    if (getData("inReference")) {
      context.type += "Reference";
      context.referenceType = getData("referenceType") || "shortcut";
      delete context.url;
      delete context.title;
    } else {
      delete context.identifier;
      delete context.label;
    }
    setData("referenceType");
  }
  function onexitlabeltext(token) {
    const ancestor = this.stack[this.stack.length - 2];
    const string3 = this.sliceSerialize(token);
    ancestor.label = decodeString(string3);
    ancestor.identifier = normalizeIdentifier(string3).toLowerCase();
  }
  function onexitlabel() {
    const fragment2 = this.stack[this.stack.length - 1];
    const value = this.resume();
    const node = this.stack[this.stack.length - 1];
    setData("inReference", true);
    if (node.type === "link") {
      node.children = fragment2.children;
    } else {
      node.alt = value;
    }
  }
  function onexitresourcedestinationstring() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.url = data4;
  }
  function onexitresourcetitlestring() {
    const data4 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.title = data4;
  }
  function onexitresource() {
    setData("inReference");
  }
  function onenterreference() {
    setData("referenceType", "collapsed");
  }
  function onexitreferencestring(token) {
    const label2 = this.resume();
    const node = this.stack[this.stack.length - 1];
    node.label = label2;
    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();
    setData("referenceType", "full");
  }
  function onexitcharacterreferencemarker(token) {
    setData("characterReferenceType", token.type);
  }
  function onexitcharacterreferencevalue(token) {
    const data4 = this.sliceSerialize(token);
    const type = getData("characterReferenceType");
    let value;
    if (type) {
      value = decodeNumericCharacterReference(data4, type === "characterReferenceMarkerNumeric" ? 10 : 16);
      setData("characterReferenceType");
    } else {
      value = decodeNamedCharacterReference(data4);
    }
    const tail = this.stack.pop();
    tail.value += value;
    tail.position.end = point4(token.end);
  }
  function onexitautolinkprotocol(token) {
    onexitdata.call(this, token);
    const node = this.stack[this.stack.length - 1];
    node.url = this.sliceSerialize(token);
  }
  function onexitautolinkemail(token) {
    onexitdata.call(this, token);
    const node = this.stack[this.stack.length - 1];
    node.url = "mailto:" + this.sliceSerialize(token);
  }
  function blockQuote2() {
    return {
      type: "blockquote",
      children: []
    };
  }
  function codeFlow() {
    return {
      type: "code",
      lang: null,
      meta: null,
      value: ""
    };
  }
  function codeText2() {
    return {
      type: "inlineCode",
      value: ""
    };
  }
  function definition2() {
    return {
      type: "definition",
      identifier: "",
      label: null,
      title: null,
      url: ""
    };
  }
  function emphasis2() {
    return {
      type: "emphasis",
      children: []
    };
  }
  function heading2() {
    return {
      type: "heading",
      depth: void 0,
      children: []
    };
  }
  function hardBreak2() {
    return {
      type: "break"
    };
  }
  function html6() {
    return {
      type: "html",
      value: ""
    };
  }
  function image2() {
    return {
      type: "image",
      title: null,
      url: "",
      alt: null
    };
  }
  function link2() {
    return {
      type: "link",
      title: null,
      url: "",
      children: []
    };
  }
  function list3(token) {
    return {
      type: "list",
      ordered: token.type === "listOrdered",
      start: null,
      spread: token._spread,
      children: []
    };
  }
  function listItem2(token) {
    return {
      type: "listItem",
      spread: token._spread,
      checked: null,
      children: []
    };
  }
  function paragraph2() {
    return {
      type: "paragraph",
      children: []
    };
  }
  function strong2() {
    return {
      type: "strong",
      children: []
    };
  }
  function text8() {
    return {
      type: "text",
      value: ""
    };
  }
  function thematicBreak3() {
    return {
      type: "thematicBreak"
    };
  }
}
function configure(combined, extensions) {
  let index2 = -1;
  while (++index2 < extensions.length) {
    const value = extensions[index2];
    if (Array.isArray(value)) {
      configure(combined, value);
    } else {
      extension(combined, value);
    }
  }
  return combined;
}
function extension(combined, extension2) {
  let key2;
  for (key2 in extension2) {
    if (own12.call(extension2, key2)) {
      const list3 = key2 === "canContainEols" || key2 === "transforms";
      const maybe = own12.call(combined, key2) ? combined[key2] : void 0;
      const left = maybe || (combined[key2] = list3 ? [] : {});
      const right = extension2[key2];
      if (right) {
        if (list3) {
          combined[key2] = [...left, ...right];
        } else {
          Object.assign(left, right);
        }
      }
    }
  }
}
function defaultOnError(left, right) {
  if (left) {
    throw new Error("Cannot close `" + left.type + "` (" + stringifyPosition({
      start: left.start,
      end: left.end
    }) + "): a different token (`" + right.type + "`, " + stringifyPosition({
      start: right.start,
      end: right.end
    }) + ") is open");
  } else {
    throw new Error("Cannot close document, a token (`" + right.type + "`, " + stringifyPosition({
      start: right.start,
      end: right.end
    }) + ") is still open");
  }
}
var own12, fromMarkdown;
var init_lib9 = __esm({
  "node_modules/mdast-util-from-markdown/lib/index.js"() {
    init_mdast_util_to_string();
    init_parse();
    init_preprocess();
    init_postprocess();
    init_micromark_util_decode_numeric_character_reference();
    init_micromark_util_decode_string();
    init_micromark_util_normalize_identifier();
    init_decode_named_character_reference();
    init_unist_util_stringify_position();
    own12 = {}.hasOwnProperty;
    fromMarkdown = function(value, encoding, options) {
      if (typeof encoding !== "string") {
        options = encoding;
        encoding = void 0;
      }
      return compiler(options)(postprocess(parse5(options).document().write(preprocess()(value, encoding, true))));
    };
  }
});

// node_modules/mdast-util-from-markdown/index.js
var init_mdast_util_from_markdown = __esm({
  "node_modules/mdast-util-from-markdown/index.js"() {
    init_lib9();
  }
});

// node_modules/remark-parse/lib/index.js
function remarkParse(options) {
  const parser = (doc) => {
    const settings = this.data("settings");
    return fromMarkdown(doc, Object.assign({}, settings, options, {
      extensions: this.data("micromarkExtensions") || [],
      mdastExtensions: this.data("fromMarkdownExtensions") || []
    }));
  };
  Object.assign(this, { Parser: parser });
}
var init_lib10 = __esm({
  "node_modules/remark-parse/lib/index.js"() {
    init_mdast_util_from_markdown();
  }
});

// node_modules/remark-parse/index.js
var remark_parse_default;
var init_remark_parse = __esm({
  "node_modules/remark-parse/index.js"() {
    init_lib10();
    remark_parse_default = remarkParse;
  }
});

// node_modules/unist-builder/index.js
var u2;
var init_unist_builder = __esm({
  "node_modules/unist-builder/index.js"() {
    u2 = function(type, props, value) {
      var node = { type: String(type) };
      if ((value === void 0 || value === null) && (typeof props === "string" || Array.isArray(props))) {
        value = props;
      } else {
        Object.assign(node, props);
      }
      if (Array.isArray(value)) {
        node.children = value;
      } else if (value !== void 0 && value !== null) {
        node.value = String(value);
      }
      return node;
    };
  }
});

// node_modules/mdast-util-to-hast/lib/traverse.js
function unknown2(h4, node) {
  const data3 = node.data || {};
  if ("value" in node && !(own13.call(data3, "hName") || own13.call(data3, "hProperties") || own13.call(data3, "hChildren"))) {
    return h4.augment(node, u2("text", node.value));
  }
  return h4(node, "div", all4(h4, node));
}
function one4(h4, node, parent) {
  const type = node && node.type;
  let fn;
  if (!type) {
    throw new Error("Expected node, got `" + node + "`");
  }
  if (own13.call(h4.handlers, type)) {
    fn = h4.handlers[type];
  } else if (h4.passThrough && h4.passThrough.includes(type)) {
    fn = returnNode;
  } else {
    fn = h4.unknownHandler;
  }
  return (typeof fn === "function" ? fn : unknown2)(h4, node, parent);
}
function returnNode(h4, node) {
  return "children" in node ? __spreadProps(__spreadValues({}, node), { children: all4(h4, node) }) : node;
}
function all4(h4, parent) {
  const values = [];
  if ("children" in parent) {
    const nodes2 = parent.children;
    let index2 = -1;
    while (++index2 < nodes2.length) {
      const result = one4(h4, nodes2[index2], parent);
      if (result) {
        if (index2 && nodes2[index2 - 1].type === "break") {
          if (!Array.isArray(result) && result.type === "text") {
            result.value = result.value.replace(/^\s+/, "");
          }
          if (!Array.isArray(result) && result.type === "element") {
            const head2 = result.children[0];
            if (head2 && head2.type === "text") {
              head2.value = head2.value.replace(/^\s+/, "");
            }
          }
        }
        if (Array.isArray(result)) {
          values.push(...result);
        } else {
          values.push(result);
        }
      }
    }
  }
  return values;
}
var own13;
var init_traverse = __esm({
  "node_modules/mdast-util-to-hast/lib/traverse.js"() {
    init_unist_builder();
    own13 = {}.hasOwnProperty;
  }
});

// node_modules/unist-util-generated/index.js
function generated(node) {
  return !node || !node.position || !node.position.start || !node.position.start.line || !node.position.start.column || !node.position.end || !node.position.end.line || !node.position.end.column;
}
var init_unist_util_generated = __esm({
  "node_modules/unist-util-generated/index.js"() {
  }
});

// node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/color.js
function color3(d2) {
  return "\x1B[33m" + d2 + "\x1B[39m";
}
var init_color3 = __esm({
  "node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/color.js"() {
  }
});

// node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js
function toResult3(value) {
  if (Array.isArray(value)) {
    return value;
  }
  if (typeof value === "number") {
    return [CONTINUE3, value];
  }
  return [value];
}
var CONTINUE3, SKIP3, EXIT3, visitParents2;
var init_unist_util_visit_parents2 = __esm({
  "node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js"() {
    init_unist_util_is();
    init_color3();
    CONTINUE3 = true;
    SKIP3 = "skip";
    EXIT3 = false;
    visitParents2 = function(tree, test, visitor, reverse) {
      if (typeof test === "function" && typeof visitor !== "function") {
        reverse = visitor;
        visitor = test;
        test = null;
      }
      var is = convert(test);
      var step = reverse ? -1 : 1;
      factory2(tree, null, [])();
      function factory2(node, index2, parents) {
        var value = typeof node === "object" && node !== null ? node : {};
        var name;
        if (typeof value.type === "string") {
          name = typeof value.tagName === "string" ? value.tagName : typeof value.name === "string" ? value.name : void 0;
          Object.defineProperty(visit6, "name", {
            value: "node (" + color3(value.type + (name ? "<" + name + ">" : "")) + ")"
          });
        }
        return visit6;
        function visit6() {
          var result = [];
          var subresult;
          var offset2;
          var grandparents;
          if (!test || is(node, index2, parents[parents.length - 1] || null)) {
            result = toResult3(visitor(node, parents));
            if (result[0] === EXIT3) {
              return result;
            }
          }
          if (node.children && result[0] !== SKIP3) {
            offset2 = (reverse ? node.children.length : -1) + step;
            grandparents = parents.concat(node);
            while (offset2 > -1 && offset2 < node.children.length) {
              subresult = factory2(node.children[offset2], offset2, grandparents)();
              if (subresult[0] === EXIT3) {
                return subresult;
              }
              offset2 = typeof subresult[1] === "number" ? subresult[1] : offset2 + step;
            }
          }
          return result;
        }
      }
    };
  }
});

// node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js
var visit5;
var init_unist_util_visit2 = __esm({
  "node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js"() {
    init_unist_util_visit_parents2();
    visit5 = function(tree, test, visitor, reverse) {
      if (typeof test === "function" && typeof visitor !== "function") {
        reverse = visitor;
        visitor = test;
        test = null;
      }
      visitParents2(tree, test, overload, reverse);
      function overload(node, parents) {
        var parent = parents[parents.length - 1];
        return visitor(node, parent ? parent.children.indexOf(node) : null, parent);
      }
    };
  }
});

// node_modules/mdast-util-definitions/index.js
function definitions(node) {
  const cache = /* @__PURE__ */ Object.create(null);
  if (!node || !node.type) {
    throw new Error("mdast-util-definitions expected node");
  }
  visit5(node, "definition", ondefinition);
  return getDefinition;
  function ondefinition(definition2) {
    const id = clean(definition2.identifier);
    if (id && !own14.call(cache, id)) {
      cache[id] = definition2;
    }
  }
  function getDefinition(identifier) {
    const id = clean(identifier);
    return id && own14.call(cache, id) ? cache[id] : null;
  }
}
function clean(value) {
  return String(value || "").toUpperCase();
}
var own14;
var init_mdast_util_definitions = __esm({
  "node_modules/mdast-util-definitions/index.js"() {
    init_unist_util_visit2();
    own14 = {}.hasOwnProperty;
  }
});

// node_modules/micromark-util-encode/index.js
function encode(value) {
  return value.replace(/["&<>]/g, replace3);
  function replace3(value2) {
    return "&" + characterReferences[value2] + ";";
  }
}
var characterReferences;
var init_micromark_util_encode = __esm({
  "node_modules/micromark-util-encode/index.js"() {
    characterReferences = { '"': "quot", "&": "amp", "<": "lt", ">": "gt" };
  }
});

// node_modules/micromark-util-sanitize-uri/index.js
function sanitizeUri(url59, protocol) {
  const value = encode(normalizeUri(url59 || ""));
  if (!protocol) {
    return value;
  }
  const colon = value.indexOf(":");
  const questionMark = value.indexOf("?");
  const numberSign = value.indexOf("#");
  const slash = value.indexOf("/");
  if (colon < 0 || slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign || protocol.test(value.slice(0, colon))) {
    return value;
  }
  return "";
}
function normalizeUri(value) {
  const result = [];
  let index2 = -1;
  let start3 = 0;
  let skip = 0;
  while (++index2 < value.length) {
    const code2 = value.charCodeAt(index2);
    let replace3 = "";
    if (code2 === 37 && asciiAlphanumeric(value.charCodeAt(index2 + 1)) && asciiAlphanumeric(value.charCodeAt(index2 + 2))) {
      skip = 2;
    } else if (code2 < 128) {
      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code2))) {
        replace3 = String.fromCharCode(code2);
      }
    } else if (code2 > 55295 && code2 < 57344) {
      const next = value.charCodeAt(index2 + 1);
      if (code2 < 56320 && next > 56319 && next < 57344) {
        replace3 = String.fromCharCode(code2, next);
        skip = 1;
      } else {
        replace3 = "\uFFFD";
      }
    } else {
      replace3 = String.fromCharCode(code2);
    }
    if (replace3) {
      result.push(value.slice(start3, index2), encodeURIComponent(replace3));
      start3 = index2 + skip + 1;
      replace3 = "";
    }
    if (skip) {
      index2 += skip;
      skip = 0;
    }
  }
  return result.join("") + value.slice(start3);
}
var init_micromark_util_sanitize_uri = __esm({
  "node_modules/micromark-util-sanitize-uri/index.js"() {
    init_micromark_util_character();
    init_micromark_util_encode();
  }
});

// node_modules/mdast-util-to-hast/lib/wrap.js
function wrap(nodes2, loose) {
  const result = [];
  let index2 = -1;
  if (loose) {
    result.push(u2("text", "\n"));
  }
  while (++index2 < nodes2.length) {
    if (index2)
      result.push(u2("text", "\n"));
    result.push(nodes2[index2]);
  }
  if (loose && nodes2.length > 0) {
    result.push(u2("text", "\n"));
  }
  return result;
}
var init_wrap = __esm({
  "node_modules/mdast-util-to-hast/lib/wrap.js"() {
    init_unist_builder();
  }
});

// node_modules/mdast-util-to-hast/lib/footer.js
function footer(h4) {
  let index2 = -1;
  const listItems = [];
  while (++index2 < h4.footnoteOrder.length) {
    const def = h4.footnoteById[h4.footnoteOrder[index2].toUpperCase()];
    if (!def) {
      continue;
    }
    const content3 = all4(h4, def);
    const id = String(def.identifier);
    const safeId = sanitizeUri(id.toLowerCase());
    let referenceIndex = 0;
    const backReferences = [];
    while (++referenceIndex <= h4.footnoteCounts[id]) {
      const backReference = {
        type: "element",
        tagName: "a",
        properties: {
          href: "#" + h4.clobberPrefix + "fnref-" + safeId + (referenceIndex > 1 ? "-" + referenceIndex : ""),
          dataFootnoteBackref: true,
          className: ["data-footnote-backref"],
          ariaLabel: h4.footnoteBackLabel
        },
        children: [{ type: "text", value: "\u21A9" }]
      };
      if (referenceIndex > 1) {
        backReference.children.push({
          type: "element",
          tagName: "sup",
          children: [{ type: "text", value: String(referenceIndex) }]
        });
      }
      if (backReferences.length > 0) {
        backReferences.push({ type: "text", value: " " });
      }
      backReferences.push(backReference);
    }
    const tail = content3[content3.length - 1];
    if (tail && tail.type === "element" && tail.tagName === "p") {
      const tailTail = tail.children[tail.children.length - 1];
      if (tailTail && tailTail.type === "text") {
        tailTail.value += " ";
      } else {
        tail.children.push({ type: "text", value: " " });
      }
      tail.children.push(...backReferences);
    } else {
      content3.push(...backReferences);
    }
    const listItem2 = {
      type: "element",
      tagName: "li",
      properties: { id: h4.clobberPrefix + "fn-" + safeId },
      children: wrap(content3, true)
    };
    if (def.position) {
      listItem2.position = def.position;
    }
    listItems.push(listItem2);
  }
  if (listItems.length === 0) {
    return null;
  }
  return {
    type: "element",
    tagName: "section",
    properties: { dataFootnotes: true, className: ["footnotes"] },
    children: [
      {
        type: "element",
        tagName: "h2",
        properties: { id: "footnote-label", className: ["sr-only"] },
        children: [u2("text", h4.footnoteLabel)]
      },
      { type: "text", value: "\n" },
      {
        type: "element",
        tagName: "ol",
        properties: {},
        children: wrap(listItems, true)
      },
      { type: "text", value: "\n" }
    ]
  };
}
var init_footer = __esm({
  "node_modules/mdast-util-to-hast/lib/footer.js"() {
    init_micromark_util_sanitize_uri();
    init_unist_builder();
    init_traverse();
    init_wrap();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/blockquote.js
function blockquote(h4, node) {
  return h4(node, "blockquote", wrap(all4(h4, node), true));
}
var init_blockquote = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/blockquote.js"() {
    init_wrap();
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/break.js
function hardBreak(h4, node) {
  return [h4(node, "br"), u2("text", "\n")];
}
var init_break = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/break.js"() {
    init_unist_builder();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/code.js
function code(h4, node) {
  const value = node.value ? node.value + "\n" : "";
  const lang = node.lang && node.lang.match(/^[^ \t]+(?=[ \t]|$)/);
  const props = {};
  if (lang) {
    props.className = ["language-" + lang];
  }
  const code2 = h4(node, "code", props, [u2("text", value)]);
  if (node.meta) {
    code2.data = { meta: node.meta };
  }
  return h4(node.position, "pre", [code2]);
}
var init_code = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/code.js"() {
    init_unist_builder();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/delete.js
function strikethrough2(h4, node) {
  return h4(node, "del", all4(h4, node));
}
var init_delete = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/delete.js"() {
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/emphasis.js
function emphasis(h4, node) {
  return h4(node, "em", all4(h4, node));
}
var init_emphasis = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/emphasis.js"() {
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js
function footnoteReference(h4, node) {
  const id = String(node.identifier);
  const safeId = sanitizeUri(id.toLowerCase());
  const index2 = h4.footnoteOrder.indexOf(id);
  let counter3;
  if (index2 === -1) {
    h4.footnoteOrder.push(id);
    h4.footnoteCounts[id] = 1;
    counter3 = h4.footnoteOrder.length;
  } else {
    h4.footnoteCounts[id]++;
    counter3 = index2 + 1;
  }
  const reuseCounter = h4.footnoteCounts[id];
  return h4(node, "sup", [
    h4(node.position, "a", {
      href: "#" + h4.clobberPrefix + "fn-" + safeId,
      id: h4.clobberPrefix + "fnref-" + safeId + (reuseCounter > 1 ? "-" + reuseCounter : ""),
      dataFootnoteRef: true,
      ariaDescribedBy: "footnote-label"
    }, [u2("text", String(counter3))])
  ]);
}
var init_footnote_reference = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js"() {
    init_micromark_util_sanitize_uri();
    init_unist_builder();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/footnote.js
function footnote(h4, node) {
  const footnoteById = h4.footnoteById;
  let no = 1;
  while (no in footnoteById)
    no++;
  const identifier = String(no);
  footnoteById[identifier] = {
    type: "footnoteDefinition",
    identifier,
    children: [{ type: "paragraph", children: node.children }],
    position: node.position
  };
  return footnoteReference(h4, {
    type: "footnoteReference",
    identifier,
    position: node.position
  });
}
var init_footnote = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/footnote.js"() {
    init_footnote_reference();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/heading.js
function heading(h4, node) {
  return h4(node, "h" + node.depth, all4(h4, node));
}
var init_heading = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/heading.js"() {
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/html.js
function html5(h4, node) {
  return h4.dangerous ? h4.augment(node, u2("raw", node.value)) : null;
}
var init_html3 = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/html.js"() {
    init_unist_builder();
  }
});

// node_modules/mdurl/encode.js
var require_encode = __commonJS({
  "node_modules/mdurl/encode.js"(exports, module2) {
    "use strict";
    var encodeCache = {};
    function getEncodeCache(exclude) {
      var i3, ch, cache = encodeCache[exclude];
      if (cache) {
        return cache;
      }
      cache = encodeCache[exclude] = [];
      for (i3 = 0; i3 < 128; i3++) {
        ch = String.fromCharCode(i3);
        if (/^[0-9a-z]$/i.test(ch)) {
          cache.push(ch);
        } else {
          cache.push("%" + ("0" + i3.toString(16).toUpperCase()).slice(-2));
        }
      }
      for (i3 = 0; i3 < exclude.length; i3++) {
        cache[exclude.charCodeAt(i3)] = exclude[i3];
      }
      return cache;
    }
    function encode2(string3, exclude, keepEscaped) {
      var i3, l2, code2, nextCode, cache, result = "";
      if (typeof exclude !== "string") {
        keepEscaped = exclude;
        exclude = encode2.defaultChars;
      }
      if (typeof keepEscaped === "undefined") {
        keepEscaped = true;
      }
      cache = getEncodeCache(exclude);
      for (i3 = 0, l2 = string3.length; i3 < l2; i3++) {
        code2 = string3.charCodeAt(i3);
        if (keepEscaped && code2 === 37 && i3 + 2 < l2) {
          if (/^[0-9a-f]{2}$/i.test(string3.slice(i3 + 1, i3 + 3))) {
            result += string3.slice(i3, i3 + 3);
            i3 += 2;
            continue;
          }
        }
        if (code2 < 128) {
          result += cache[code2];
          continue;
        }
        if (code2 >= 55296 && code2 <= 57343) {
          if (code2 >= 55296 && code2 <= 56319 && i3 + 1 < l2) {
            nextCode = string3.charCodeAt(i3 + 1);
            if (nextCode >= 56320 && nextCode <= 57343) {
              result += encodeURIComponent(string3[i3] + string3[i3 + 1]);
              i3++;
              continue;
            }
          }
          result += "%EF%BF%BD";
          continue;
        }
        result += encodeURIComponent(string3[i3]);
      }
      return result;
    }
    encode2.defaultChars = ";/?:@&=+$,-_.!~*'()#";
    encode2.componentChars = "-_.!~*'()";
    module2.exports = encode2;
  }
});

// node_modules/mdast-util-to-hast/lib/revert.js
function revert(h4, node) {
  const subtype = node.referenceType;
  let suffix = "]";
  if (subtype === "collapsed") {
    suffix += "[]";
  } else if (subtype === "full") {
    suffix += "[" + (node.label || node.identifier) + "]";
  }
  if (node.type === "imageReference") {
    return u2("text", "![" + node.alt + suffix);
  }
  const contents = all4(h4, node);
  const head2 = contents[0];
  if (head2 && head2.type === "text") {
    head2.value = "[" + head2.value;
  } else {
    contents.unshift(u2("text", "["));
  }
  const tail = contents[contents.length - 1];
  if (tail && tail.type === "text") {
    tail.value += suffix;
  } else {
    contents.push(u2("text", suffix));
  }
  return contents;
}
var init_revert = __esm({
  "node_modules/mdast-util-to-hast/lib/revert.js"() {
    init_unist_builder();
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/image-reference.js
function imageReference(h4, node) {
  const def = h4.definition(node.identifier);
  if (!def) {
    return revert(h4, node);
  }
  const props = { src: (0, import_encode.default)(def.url || ""), alt: node.alt };
  if (def.title !== null && def.title !== void 0) {
    props.title = def.title;
  }
  return h4(node, "img", props);
}
var import_encode;
var init_image_reference = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/image-reference.js"() {
    import_encode = __toESM(require_encode(), 1);
    init_revert();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/image.js
function image(h4, node) {
  const props = { src: (0, import_encode2.default)(node.url), alt: node.alt };
  if (node.title !== null && node.title !== void 0) {
    props.title = node.title;
  }
  return h4(node, "img", props);
}
var import_encode2;
var init_image = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/image.js"() {
    import_encode2 = __toESM(require_encode(), 1);
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/inline-code.js
function inlineCode(h4, node) {
  return h4(node, "code", [u2("text", node.value.replace(/\r?\n|\r/g, " "))]);
}
var init_inline_code = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/inline-code.js"() {
    init_unist_builder();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/link-reference.js
function linkReference(h4, node) {
  const def = h4.definition(node.identifier);
  if (!def) {
    return revert(h4, node);
  }
  const props = { href: (0, import_encode3.default)(def.url || "") };
  if (def.title !== null && def.title !== void 0) {
    props.title = def.title;
  }
  return h4(node, "a", props, all4(h4, node));
}
var import_encode3;
var init_link_reference = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/link-reference.js"() {
    import_encode3 = __toESM(require_encode(), 1);
    init_revert();
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/link.js
function link(h4, node) {
  const props = { href: (0, import_encode4.default)(node.url) };
  if (node.title !== null && node.title !== void 0) {
    props.title = node.title;
  }
  return h4(node, "a", props, all4(h4, node));
}
var import_encode4;
var init_link = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/link.js"() {
    import_encode4 = __toESM(require_encode(), 1);
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/list-item.js
function listItem(h4, node, parent) {
  const result = all4(h4, node);
  const loose = parent ? listLoose(parent) : listItemLoose(node);
  const props = {};
  const wrapped = [];
  if (typeof node.checked === "boolean") {
    let paragraph2;
    if (result[0] && result[0].type === "element" && result[0].tagName === "p") {
      paragraph2 = result[0];
    } else {
      paragraph2 = h4(null, "p", []);
      result.unshift(paragraph2);
    }
    if (paragraph2.children.length > 0) {
      paragraph2.children.unshift(u2("text", " "));
    }
    paragraph2.children.unshift(h4(null, "input", {
      type: "checkbox",
      checked: node.checked,
      disabled: true
    }));
    props.className = ["task-list-item"];
  }
  let index2 = -1;
  while (++index2 < result.length) {
    const child = result[index2];
    if (loose || index2 !== 0 || child.type !== "element" || child.tagName !== "p") {
      wrapped.push(u2("text", "\n"));
    }
    if (child.type === "element" && child.tagName === "p" && !loose) {
      wrapped.push(...child.children);
    } else {
      wrapped.push(child);
    }
  }
  const tail = result[result.length - 1];
  if (tail && (loose || !("tagName" in tail) || tail.tagName !== "p")) {
    wrapped.push(u2("text", "\n"));
  }
  return h4(node, "li", props, wrapped);
}
function listLoose(node) {
  let loose = node.spread;
  const children2 = node.children;
  let index2 = -1;
  while (!loose && ++index2 < children2.length) {
    loose = listItemLoose(children2[index2]);
  }
  return Boolean(loose);
}
function listItemLoose(node) {
  const spread = node.spread;
  return spread === void 0 || spread === null ? node.children.length > 1 : spread;
}
var init_list_item = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/list-item.js"() {
    init_unist_builder();
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/list.js
function list2(h4, node) {
  const props = {};
  const name = node.ordered ? "ol" : "ul";
  const items = all4(h4, node);
  let index2 = -1;
  if (typeof node.start === "number" && node.start !== 1) {
    props.start = node.start;
  }
  while (++index2 < items.length) {
    const item = items[index2];
    if (item.type === "element" && item.tagName === "li" && item.properties && Array.isArray(item.properties.className) && item.properties.className.includes("task-list-item")) {
      props.className = ["contains-task-list"];
      break;
    }
  }
  return h4(node, name, props, wrap(items, true));
}
var init_list2 = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/list.js"() {
    init_wrap();
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/paragraph.js
function paragraph(h4, node) {
  return h4(node, "p", all4(h4, node));
}
var init_paragraph = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/paragraph.js"() {
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/root.js
function root4(h4, node) {
  return h4.augment(node, u2("root", wrap(all4(h4, node))));
}
var init_root = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/root.js"() {
    init_unist_builder();
    init_traverse();
    init_wrap();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/strong.js
function strong(h4, node) {
  return h4(node, "strong", all4(h4, node));
}
var init_strong = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/strong.js"() {
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/table.js
function table(h4, node) {
  const rows = node.children;
  let index2 = -1;
  const align = node.align || [];
  const result = [];
  while (++index2 < rows.length) {
    const row = rows[index2].children;
    const name = index2 === 0 ? "th" : "td";
    const out = [];
    let cellIndex = -1;
    const length = node.align ? align.length : row.length;
    while (++cellIndex < length) {
      const cell = row[cellIndex];
      out.push(h4(cell, name, { align: align[cellIndex] }, cell ? all4(h4, cell) : []));
    }
    result[index2] = h4(rows[index2], "tr", wrap(out, true));
  }
  return h4(node, "table", wrap([h4(result[0].position, "thead", wrap([result[0]], true))].concat(result[1] ? h4({
    start: pointStart(result[1]),
    end: pointEnd(result[result.length - 1])
  }, "tbody", wrap(result.slice(1), true)) : []), true));
}
var init_table = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/table.js"() {
    init_unist_util_position();
    init_wrap();
    init_traverse();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/text.js
function text7(h4, node) {
  return h4.augment(node, u2("text", String(node.value).replace(/[ \t]*(\r?\n|\r)[ \t]*/g, "$1")));
}
var init_text3 = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/text.js"() {
    init_unist_builder();
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js
function thematicBreak2(h4, node) {
  return h4(node, "hr");
}
var init_thematic_break2 = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js"() {
  }
});

// node_modules/mdast-util-to-hast/lib/handlers/index.js
function ignore() {
  return null;
}
var handlers2;
var init_handlers = __esm({
  "node_modules/mdast-util-to-hast/lib/handlers/index.js"() {
    init_blockquote();
    init_break();
    init_code();
    init_delete();
    init_emphasis();
    init_footnote_reference();
    init_footnote();
    init_heading();
    init_html3();
    init_image_reference();
    init_image();
    init_inline_code();
    init_link_reference();
    init_link();
    init_list_item();
    init_list2();
    init_paragraph();
    init_root();
    init_strong();
    init_table();
    init_text3();
    init_thematic_break2();
    handlers2 = {
      blockquote,
      break: hardBreak,
      code,
      delete: strikethrough2,
      emphasis,
      footnoteReference,
      footnote,
      heading,
      html: html5,
      imageReference,
      image,
      inlineCode,
      linkReference,
      link,
      listItem,
      list: list2,
      paragraph,
      root: root4,
      strong,
      table,
      text: text7,
      thematicBreak: thematicBreak2,
      toml: ignore,
      yaml: ignore,
      definition: ignore,
      footnoteDefinition: ignore
    };
  }
});

// node_modules/mdast-util-to-hast/lib/index.js
function factory(tree, options) {
  const settings = options || {};
  const dangerous2 = settings.allowDangerousHtml || false;
  const footnoteById = {};
  h4.dangerous = dangerous2;
  h4.clobberPrefix = settings.clobberPrefix === void 0 || settings.clobberPrefix === null ? "user-content-" : settings.clobberPrefix;
  h4.footnoteLabel = settings.footnoteLabel || "Footnotes";
  h4.footnoteBackLabel = settings.footnoteBackLabel || "Back to content";
  h4.definition = definitions(tree);
  h4.footnoteById = footnoteById;
  h4.footnoteOrder = [];
  h4.footnoteCounts = {};
  h4.augment = augment;
  h4.handlers = __spreadValues(__spreadValues({}, handlers2), settings.handlers);
  h4.unknownHandler = settings.unknownHandler;
  h4.passThrough = settings.passThrough;
  visit(tree, "footnoteDefinition", (definition2) => {
    const id = String(definition2.identifier).toUpperCase();
    if (!own15.call(footnoteById, id)) {
      footnoteById[id] = definition2;
    }
  });
  return h4;
  function augment(left, right) {
    if (left && "data" in left && left.data) {
      const data3 = left.data;
      if (data3.hName) {
        if (right.type !== "element") {
          right = {
            type: "element",
            tagName: "",
            properties: {},
            children: []
          };
        }
        right.tagName = data3.hName;
      }
      if (right.type === "element" && data3.hProperties) {
        right.properties = __spreadValues(__spreadValues({}, right.properties), data3.hProperties);
      }
      if ("children" in right && right.children && data3.hChildren) {
        right.children = data3.hChildren;
      }
    }
    if (left) {
      const ctx = "type" in left ? left : { position: left };
      if (!generated(ctx)) {
        right.position = { start: pointStart(ctx), end: pointEnd(ctx) };
      }
    }
    return right;
  }
  function h4(node, tagName, props, children2) {
    if (Array.isArray(props)) {
      children2 = props;
      props = {};
    }
    return augment(node, {
      type: "element",
      tagName,
      properties: props || {},
      children: children2 || []
    });
  }
}
function toHast(tree, options) {
  const h4 = factory(tree, options);
  const node = one4(h4, tree, null);
  const foot = footer(h4);
  if (foot) {
    node.children.push(u2("text", "\n"), foot);
  }
  return Array.isArray(node) ? { type: "root", children: node } : node;
}
var own15;
var init_lib11 = __esm({
  "node_modules/mdast-util-to-hast/lib/index.js"() {
    init_unist_builder();
    init_unist_util_visit();
    init_unist_util_position();
    init_unist_util_generated();
    init_mdast_util_definitions();
    init_traverse();
    init_footer();
    init_handlers();
    own15 = {}.hasOwnProperty;
  }
});

// node_modules/mdast-util-to-hast/index.js
var init_mdast_util_to_hast = __esm({
  "node_modules/mdast-util-to-hast/index.js"() {
    init_lib11();
  }
});

// node_modules/remark-rehype/lib/index.js
function bridge(destination, options) {
  return (node, file59, next) => {
    destination.run(toHast(node, options), file59, (error3) => {
      next(error3);
    });
  };
}
function mutate(options) {
  return (node) => toHast(node, options);
}
var remarkRehype, lib_default;
var init_lib12 = __esm({
  "node_modules/remark-rehype/lib/index.js"() {
    init_mdast_util_to_hast();
    remarkRehype = function(destination, options) {
      return destination && "run" in destination ? bridge(destination, options) : mutate(destination || options);
    };
    lib_default = remarkRehype;
  }
});

// node_modules/remark-rehype/index.js
var init_remark_rehype = __esm({
  "node_modules/remark-rehype/index.js"() {
    init_lib12();
  }
});

// node_modules/bail/index.js
function bail(error3) {
  if (error3) {
    throw error3;
  }
}
var init_bail = __esm({
  "node_modules/bail/index.js"() {
  }
});

// node_modules/is-buffer/index.js
var require_is_buffer = __commonJS({
  "node_modules/is-buffer/index.js"(exports, module2) {
    module2.exports = function isBuffer4(obj) {
      return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj);
    };
  }
});

// node_modules/extend/index.js
var require_extend = __commonJS({
  "node_modules/extend/index.js"(exports, module2) {
    "use strict";
    var hasOwn4 = Object.prototype.hasOwnProperty;
    var toStr2 = Object.prototype.toString;
    var defineProperty = Object.defineProperty;
    var gOPD2 = Object.getOwnPropertyDescriptor;
    var isArray2 = function isArray3(arr) {
      if (typeof Array.isArray === "function") {
        return Array.isArray(arr);
      }
      return toStr2.call(arr) === "[object Array]";
    };
    var isPlainObject2 = function isPlainObject3(obj) {
      if (!obj || toStr2.call(obj) !== "[object Object]") {
        return false;
      }
      var hasOwnConstructor = hasOwn4.call(obj, "constructor");
      var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn4.call(obj.constructor.prototype, "isPrototypeOf");
      if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
        return false;
      }
      var key2;
      for (key2 in obj) {
      }
      return typeof key2 === "undefined" || hasOwn4.call(obj, key2);
    };
    var setProperty2 = function setProperty3(target, options) {
      if (defineProperty && options.name === "__proto__") {
        defineProperty(target, options.name, {
          enumerable: true,
          configurable: true,
          value: options.newValue,
          writable: true
        });
      } else {
        target[options.name] = options.newValue;
      }
    };
    var getProperty = function getProperty2(obj, name) {
      if (name === "__proto__") {
        if (!hasOwn4.call(obj, name)) {
          return void 0;
        } else if (gOPD2) {
          return gOPD2(obj, name).value;
        }
      }
      return obj[name];
    };
    module2.exports = function extend3() {
      var options, name, src2, copy, copyIsArray, clone2;
      var target = arguments[0];
      var i3 = 1;
      var length = arguments.length;
      var deep = false;
      if (typeof target === "boolean") {
        deep = target;
        target = arguments[1] || {};
        i3 = 2;
      }
      if (target == null || typeof target !== "object" && typeof target !== "function") {
        target = {};
      }
      for (; i3 < length; ++i3) {
        options = arguments[i3];
        if (options != null) {
          for (name in options) {
            src2 = getProperty(target, name);
            copy = getProperty(options, name);
            if (target !== copy) {
              if (deep && copy && (isPlainObject2(copy) || (copyIsArray = isArray2(copy)))) {
                if (copyIsArray) {
                  copyIsArray = false;
                  clone2 = src2 && isArray2(src2) ? src2 : [];
                } else {
                  clone2 = src2 && isPlainObject2(src2) ? src2 : {};
                }
                setProperty2(target, { name, newValue: extend3(deep, clone2, copy) });
              } else if (typeof copy !== "undefined") {
                setProperty2(target, { name, newValue: copy });
              }
            }
          }
        }
      }
      return target;
    };
  }
});

// node_modules/is-plain-obj/index.js
function isPlainObject(value) {
  if (Object.prototype.toString.call(value) !== "[object Object]") {
    return false;
  }
  const prototype = Object.getPrototypeOf(value);
  return prototype === null || prototype === Object.prototype;
}
var init_is_plain_obj = __esm({
  "node_modules/is-plain-obj/index.js"() {
  }
});

// node_modules/trough/index.js
function trough() {
  const fns = [];
  const pipeline2 = { run, use };
  return pipeline2;
  function run(...values) {
    let middlewareIndex = -1;
    const callback = values.pop();
    if (typeof callback !== "function") {
      throw new TypeError("Expected function as last argument, not " + callback);
    }
    next(null, ...values);
    function next(error3, ...output) {
      const fn = fns[++middlewareIndex];
      let index2 = -1;
      if (error3) {
        callback(error3);
        return;
      }
      while (++index2 < values.length) {
        if (output[index2] === null || output[index2] === void 0) {
          output[index2] = values[index2];
        }
      }
      values = output;
      if (fn) {
        wrap2(fn, next)(...output);
      } else {
        callback(null, ...output);
      }
    }
  }
  function use(middelware) {
    if (typeof middelware !== "function") {
      throw new TypeError("Expected `middelware` to be a function, not " + middelware);
    }
    fns.push(middelware);
    return pipeline2;
  }
}
function wrap2(middleware, callback) {
  let called;
  return wrapped;
  function wrapped(...parameters) {
    const fnExpectsCallback = middleware.length > parameters.length;
    let result;
    if (fnExpectsCallback) {
      parameters.push(done);
    }
    try {
      result = middleware.apply(this, parameters);
    } catch (error3) {
      const exception = error3;
      if (fnExpectsCallback && called) {
        throw exception;
      }
      return done(exception);
    }
    if (!fnExpectsCallback) {
      if (result instanceof Promise) {
        result.then(then, done);
      } else if (result instanceof Error) {
        done(result);
      } else {
        then(result);
      }
    }
  }
  function done(error3, ...output) {
    if (!called) {
      called = true;
      callback(error3, ...output);
    }
  }
  function then(value) {
    done(null, value);
  }
}
var init_trough = __esm({
  "node_modules/trough/index.js"() {
  }
});

// node_modules/vfile/lib/minpath.js
var import_path3;
var init_minpath = __esm({
  "node_modules/vfile/lib/minpath.js"() {
    import_path3 = __toESM(require("path"), 1);
  }
});

// node_modules/vfile/lib/minproc.js
var import_process;
var init_minproc = __esm({
  "node_modules/vfile/lib/minproc.js"() {
    import_process = __toESM(require("process"), 1);
  }
});

// node_modules/vfile/lib/minurl.shared.js
function isUrl(fileURLOrPath) {
  return fileURLOrPath !== null && typeof fileURLOrPath === "object" && fileURLOrPath.href && fileURLOrPath.origin;
}
var init_minurl_shared = __esm({
  "node_modules/vfile/lib/minurl.shared.js"() {
  }
});

// node_modules/vfile/lib/minurl.js
var import_url;
var init_minurl = __esm({
  "node_modules/vfile/lib/minurl.js"() {
    import_url = require("url");
    init_minurl_shared();
  }
});

// node_modules/vfile/lib/index.js
function assertPart(part, name) {
  if (part && part.includes(import_path3.default.sep)) {
    throw new Error("`" + name + "` cannot be a path: did not expect `" + import_path3.default.sep + "`");
  }
}
function assertNonEmpty(part, name) {
  if (!part) {
    throw new Error("`" + name + "` cannot be empty");
  }
}
function assertPath(path, name) {
  if (!path) {
    throw new Error("Setting `" + name + "` requires `path` to be set too");
  }
}
var import_is_buffer, order, VFile;
var init_lib13 = __esm({
  "node_modules/vfile/lib/index.js"() {
    import_is_buffer = __toESM(require_is_buffer(), 1);
    init_vfile_message();
    init_minpath();
    init_minproc();
    init_minurl();
    order = ["history", "path", "basename", "stem", "extname", "dirname"];
    VFile = class {
      constructor(value) {
        let options;
        if (!value) {
          options = {};
        } else if (typeof value === "string" || (0, import_is_buffer.default)(value)) {
          options = { value };
        } else if (isUrl(value)) {
          options = { path: value };
        } else {
          options = value;
        }
        this.data = {};
        this.messages = [];
        this.history = [];
        this.cwd = import_process.default.cwd();
        this.value;
        this.stored;
        this.result;
        this.map;
        let index2 = -1;
        while (++index2 < order.length) {
          const prop2 = order[index2];
          if (prop2 in options && options[prop2] !== void 0) {
            this[prop2] = prop2 === "history" ? [...options[prop2]] : options[prop2];
          }
        }
        let prop;
        for (prop in options) {
          if (!order.includes(prop))
            this[prop] = options[prop];
        }
      }
      get path() {
        return this.history[this.history.length - 1];
      }
      set path(path) {
        if (isUrl(path)) {
          path = (0, import_url.fileURLToPath)(path);
        }
        assertNonEmpty(path, "path");
        if (this.path !== path) {
          this.history.push(path);
        }
      }
      get dirname() {
        return typeof this.path === "string" ? import_path3.default.dirname(this.path) : void 0;
      }
      set dirname(dirname2) {
        assertPath(this.basename, "dirname");
        this.path = import_path3.default.join(dirname2 || "", this.basename);
      }
      get basename() {
        return typeof this.path === "string" ? import_path3.default.basename(this.path) : void 0;
      }
      set basename(basename3) {
        assertNonEmpty(basename3, "basename");
        assertPart(basename3, "basename");
        this.path = import_path3.default.join(this.dirname || "", basename3);
      }
      get extname() {
        return typeof this.path === "string" ? import_path3.default.extname(this.path) : void 0;
      }
      set extname(extname2) {
        assertPart(extname2, "extname");
        assertPath(this.dirname, "extname");
        if (extname2) {
          if (extname2.charCodeAt(0) !== 46) {
            throw new Error("`extname` must start with `.`");
          }
          if (extname2.includes(".", 1)) {
            throw new Error("`extname` cannot contain multiple dots");
          }
        }
        this.path = import_path3.default.join(this.dirname, this.stem + (extname2 || ""));
      }
      get stem() {
        return typeof this.path === "string" ? import_path3.default.basename(this.path, this.extname) : void 0;
      }
      set stem(stem) {
        assertNonEmpty(stem, "stem");
        assertPart(stem, "stem");
        this.path = import_path3.default.join(this.dirname || "", stem + (this.extname || ""));
      }
      toString(encoding) {
        return (this.value || "").toString(encoding);
      }
      message(reason, place, origin) {
        const message = new VFileMessage(reason, place, origin);
        if (this.path) {
          message.name = this.path + ":" + message.name;
          message.file = this.path;
        }
        message.fatal = false;
        this.messages.push(message);
        return message;
      }
      info(reason, place, origin) {
        const message = this.message(reason, place, origin);
        message.fatal = null;
        return message;
      }
      fail(reason, place, origin) {
        const message = this.message(reason, place, origin);
        message.fatal = true;
        throw message;
      }
    };
  }
});

// node_modules/vfile/index.js
var init_vfile = __esm({
  "node_modules/vfile/index.js"() {
    init_lib13();
  }
});

// node_modules/unified/lib/index.js
function base() {
  const transformers = trough();
  const attachers = [];
  let namespace = {};
  let frozen;
  let freezeIndex = -1;
  processor.data = data3;
  processor.Parser = void 0;
  processor.Compiler = void 0;
  processor.freeze = freeze;
  processor.attachers = attachers;
  processor.use = use;
  processor.parse = parse8;
  processor.stringify = stringify3;
  processor.run = run;
  processor.runSync = runSync;
  processor.process = process2;
  processor.processSync = processSync;
  return processor;
  function processor() {
    const destination = base();
    let index2 = -1;
    while (++index2 < attachers.length) {
      destination.use(...attachers[index2]);
    }
    destination.data((0, import_extend.default)(true, {}, namespace));
    return destination;
  }
  function data3(key2, value) {
    if (typeof key2 === "string") {
      if (arguments.length === 2) {
        assertUnfrozen("data", frozen);
        namespace[key2] = value;
        return processor;
      }
      return own16.call(namespace, key2) && namespace[key2] || null;
    }
    if (key2) {
      assertUnfrozen("data", frozen);
      namespace = key2;
      return processor;
    }
    return namespace;
  }
  function freeze() {
    if (frozen) {
      return processor;
    }
    while (++freezeIndex < attachers.length) {
      const [attacher, ...options] = attachers[freezeIndex];
      if (options[0] === false) {
        continue;
      }
      if (options[0] === true) {
        options[0] = void 0;
      }
      const transformer2 = attacher.call(processor, ...options);
      if (typeof transformer2 === "function") {
        transformers.use(transformer2);
      }
    }
    frozen = true;
    freezeIndex = Number.POSITIVE_INFINITY;
    return processor;
  }
  function use(value, ...options) {
    let settings;
    assertUnfrozen("use", frozen);
    if (value === null || value === void 0) {
    } else if (typeof value === "function") {
      addPlugin(value, ...options);
    } else if (typeof value === "object") {
      if (Array.isArray(value)) {
        addList(value);
      } else {
        addPreset(value);
      }
    } else {
      throw new TypeError("Expected usable value, not `" + value + "`");
    }
    if (settings) {
      namespace.settings = Object.assign(namespace.settings || {}, settings);
    }
    return processor;
    function add(value2) {
      if (typeof value2 === "function") {
        addPlugin(value2);
      } else if (typeof value2 === "object") {
        if (Array.isArray(value2)) {
          const [plugin2, ...options2] = value2;
          addPlugin(plugin2, ...options2);
        } else {
          addPreset(value2);
        }
      } else {
        throw new TypeError("Expected usable value, not `" + value2 + "`");
      }
    }
    function addPreset(result) {
      addList(result.plugins);
      if (result.settings) {
        settings = Object.assign(settings || {}, result.settings);
      }
    }
    function addList(plugins) {
      let index2 = -1;
      if (plugins === null || plugins === void 0) {
      } else if (Array.isArray(plugins)) {
        while (++index2 < plugins.length) {
          const thing = plugins[index2];
          add(thing);
        }
      } else {
        throw new TypeError("Expected a list of plugins, not `" + plugins + "`");
      }
    }
    function addPlugin(plugin2, value2) {
      let index2 = -1;
      let entry;
      while (++index2 < attachers.length) {
        if (attachers[index2][0] === plugin2) {
          entry = attachers[index2];
          break;
        }
      }
      if (entry) {
        if (isPlainObject(entry[1]) && isPlainObject(value2)) {
          value2 = (0, import_extend.default)(true, entry[1], value2);
        }
        entry[1] = value2;
      } else {
        attachers.push([...arguments]);
      }
    }
  }
  function parse8(doc) {
    processor.freeze();
    const file59 = vfile(doc);
    const Parser4 = processor.Parser;
    assertParser("parse", Parser4);
    if (newable(Parser4, "parse")) {
      return new Parser4(String(file59), file59).parse();
    }
    return Parser4(String(file59), file59);
  }
  function stringify3(node, doc) {
    processor.freeze();
    const file59 = vfile(doc);
    const Compiler = processor.Compiler;
    assertCompiler("stringify", Compiler);
    assertNode(node);
    if (newable(Compiler, "compile")) {
      return new Compiler(node, file59).compile();
    }
    return Compiler(node, file59);
  }
  function run(node, doc, callback) {
    assertNode(node);
    processor.freeze();
    if (!callback && typeof doc === "function") {
      callback = doc;
      doc = void 0;
    }
    if (!callback) {
      return new Promise(executor);
    }
    executor(null, callback);
    function executor(resolve2, reject) {
      transformers.run(node, vfile(doc), done);
      function done(error3, tree, file59) {
        tree = tree || node;
        if (error3) {
          reject(error3);
        } else if (resolve2) {
          resolve2(tree);
        } else {
          callback(null, tree, file59);
        }
      }
    }
  }
  function runSync(node, file59) {
    let result;
    let complete;
    processor.run(node, file59, done);
    assertDone("runSync", "run", complete);
    return result;
    function done(error3, tree) {
      bail(error3);
      result = tree;
      complete = true;
    }
  }
  function process2(doc, callback) {
    processor.freeze();
    assertParser("process", processor.Parser);
    assertCompiler("process", processor.Compiler);
    if (!callback) {
      return new Promise(executor);
    }
    executor(null, callback);
    function executor(resolve2, reject) {
      const file59 = vfile(doc);
      processor.run(processor.parse(file59), file59, (error3, tree, file60) => {
        if (error3 || !tree || !file60) {
          done(error3);
        } else {
          const result = processor.stringify(tree, file60);
          if (result === void 0 || result === null) {
          } else if (looksLikeAVFileValue(result)) {
            file60.value = result;
          } else {
            file60.result = result;
          }
          done(error3, file60);
        }
      });
      function done(error3, file60) {
        if (error3 || !file60) {
          reject(error3);
        } else if (resolve2) {
          resolve2(file60);
        } else {
          callback(null, file60);
        }
      }
    }
  }
  function processSync(doc) {
    let complete;
    processor.freeze();
    assertParser("processSync", processor.Parser);
    assertCompiler("processSync", processor.Compiler);
    const file59 = vfile(doc);
    processor.process(file59, done);
    assertDone("processSync", "process", complete);
    return file59;
    function done(error3) {
      complete = true;
      bail(error3);
    }
  }
}
function newable(value, name) {
  return typeof value === "function" && value.prototype && (keys2(value.prototype) || name in value.prototype);
}
function keys2(value) {
  let key2;
  for (key2 in value) {
    if (own16.call(value, key2)) {
      return true;
    }
  }
  return false;
}
function assertParser(name, value) {
  if (typeof value !== "function") {
    throw new TypeError("Cannot `" + name + "` without `Parser`");
  }
}
function assertCompiler(name, value) {
  if (typeof value !== "function") {
    throw new TypeError("Cannot `" + name + "` without `Compiler`");
  }
}
function assertUnfrozen(name, frozen) {
  if (frozen) {
    throw new Error("Cannot call `" + name + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.");
  }
}
function assertNode(node) {
  if (!isPlainObject(node) || typeof node.type !== "string") {
    throw new TypeError("Expected node, got `" + node + "`");
  }
}
function assertDone(name, asyncName, complete) {
  if (!complete) {
    throw new Error("`" + name + "` finished async. Use `" + asyncName + "` instead");
  }
}
function vfile(value) {
  return looksLikeAVFile(value) ? value : new VFile(value);
}
function looksLikeAVFile(value) {
  return Boolean(value && typeof value === "object" && "message" in value && "messages" in value);
}
function looksLikeAVFileValue(value) {
  return typeof value === "string" || (0, import_is_buffer2.default)(value);
}
var import_is_buffer2, import_extend, unified, own16;
var init_lib14 = __esm({
  "node_modules/unified/lib/index.js"() {
    init_bail();
    import_is_buffer2 = __toESM(require_is_buffer(), 1);
    import_extend = __toESM(require_extend(), 1);
    init_is_plain_obj();
    init_trough();
    init_vfile();
    unified = base().freeze();
    own16 = {}.hasOwnProperty;
  }
});

// node_modules/unified/index.js
var init_unified = __esm({
  "node_modules/unified/index.js"() {
    init_lib14();
  }
});

// node_modules/@astrojs/markdown-remark/dist/types.js
var init_types2 = __esm({
  "node_modules/@astrojs/markdown-remark/dist/types.js"() {
  }
});

// node_modules/@astrojs/markdown-remark/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  DEFAULT_REHYPE_PLUGINS: () => DEFAULT_REHYPE_PLUGINS,
  DEFAULT_REMARK_PLUGINS: () => DEFAULT_REMARK_PLUGINS,
  renderMarkdown: () => renderMarkdown2,
  slug: () => slug
});
function slug(value) {
  return slugger.slug(value);
}
async function renderMarkdown2(content3, opts = {}) {
  var _a8;
  let {
    fileURL,
    mode = "mdx",
    syntaxHighlight = "shiki",
    shikiConfig = {},
    remarkPlugins = [],
    rehypePlugins = []
  } = opts;
  const input2 = new VFile({ value: content3, path: fileURL });
  const scopedClassName = (_a8 = opts.$) == null ? void 0 : _a8.scopedClassName;
  const isMDX = mode === "mdx";
  const { headers, rehypeCollectHeaders } = createCollectHeaders();
  let parser = unified().use(remark_parse_default).use(isMDX ? [remarkMdxish, remarkMarkAndUnravel] : []).use([remarkUnwrap]);
  if (remarkPlugins.length === 0 && rehypePlugins.length === 0) {
    remarkPlugins = [...DEFAULT_REMARK_PLUGINS];
    rehypePlugins = [...DEFAULT_REHYPE_PLUGINS];
  }
  const loadedRemarkPlugins = await Promise.all(loadPlugins(remarkPlugins));
  const loadedRehypePlugins = await Promise.all(loadPlugins(rehypePlugins));
  loadedRemarkPlugins.forEach(([plugin2, opts2]) => {
    parser.use([[plugin2, opts2]]);
  });
  if (scopedClassName) {
    parser.use([scopedStyles(scopedClassName)]);
  }
  if (syntaxHighlight === "shiki") {
    parser.use([await remark_shiki_default(shikiConfig, scopedClassName)]);
  } else if (syntaxHighlight === "prism") {
    parser.use([remark_prism_default(scopedClassName)]);
  }
  parser.use([
    [
      lib_default,
      {
        allowDangerousHtml: true,
        passThrough: [
          "raw",
          "mdxFlowExpression",
          "mdxJsxFlowElement",
          "mdxJsxTextElement",
          "mdxTextExpression"
        ]
      }
    ]
  ]);
  loadedRehypePlugins.forEach(([plugin2, opts2]) => {
    parser.use([[plugin2, opts2]]);
  });
  parser.use(isMDX ? [rehypeJsx, rehypeExpressions] : [rehypeRaw]).use(rehypeEscape).use(rehypeIslands).use([rehypeCollectHeaders]).use(rehypeStringify, { allowDangerousHtml: true });
  let result;
  try {
    const vfile2 = await parser.process(input2);
    result = vfile2.toString();
  } catch (err) {
    err = prefixError(err, `Failed to parse Markdown file "${input2.path}"`);
    console.error(err);
    throw err;
  }
  return {
    metadata: { headers, source: content3, html: result.toString() },
    code: result.toString()
  };
}
function prefixError(err, prefix) {
  if (err && err.message) {
    try {
      err.message = `${prefix}:
${err.message}`;
      return err;
    } catch (error3) {
    }
  }
  const wrappedError = new Error(`${prefix}${err ? `: ${err}` : ""}`);
  try {
    wrappedError.stack = err.stack;
    wrappedError.cause = err;
  } catch (error3) {
  }
  return wrappedError;
}
var import_github_slugger2, DEFAULT_REMARK_PLUGINS, DEFAULT_REHYPE_PLUGINS, slugger;
var init_dist2 = __esm({
  "node_modules/@astrojs/markdown-remark/dist/index.js"() {
    init_load_plugins();
    init_rehype_collect_headers();
    init_rehype_escape();
    init_rehype_expressions();
    init_rehype_islands();
    init_rehype_jsx();
    init_remark_mark_and_unravel();
    init_remark_mdxish();
    init_remark_prism();
    init_remark_scoped_styles();
    init_remark_shiki();
    init_remark_unwrap();
    import_github_slugger2 = __toESM(require_github_slugger(), 1);
    init_rehype_raw();
    init_rehype_stringify();
    init_remark_parse();
    init_remark_rehype();
    init_unified();
    init_vfile();
    init_types2();
    DEFAULT_REMARK_PLUGINS = ["remark-gfm", "remark-smartypants"];
    DEFAULT_REHYPE_PLUGINS = [];
    slugger = new import_github_slugger2.default();
  }
});

// .netlify/functions-internal/chunks/chunk.b863d8b9.mjs
var chunk_b863d8b9_exports = {};
__export(chunk_b863d8b9_exports, {
  $$metadata: () => $$metadata,
  compiledContent: () => compiledContent,
  default: () => $$Architecture,
  frontmatter: () => frontmatter,
  metadata: () => metadata,
  rawContent: () => rawContent
});
function rawContent() {
  return "\r\n";
}
function compiledContent() {
  return "";
}
var import_serialize_javascript2, metadata, frontmatter, $$metadata, $$Astro, $$Architecture;
var init_chunk_b863d8b9 = __esm({
  ".netlify/functions-internal/chunks/chunk.b863d8b9.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript2 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata = { "headers": [], "source": "\r\n", "html": "" };
    frontmatter = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n", "html": "" } };
    $$metadata = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/architecture.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/architecture.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Architecture = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
      Astro2.self = $$Architecture;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.b31d322e.mjs
var chunk_b31d322e_exports = {};
__export(chunk_b31d322e_exports, {
  $$loadMetadata: () => $$loadMetadata,
  Content: () => Content,
  compiledContent: () => compiledContent2,
  default: () => load,
  file: () => file,
  frontmatter: () => frontmatter2,
  getHeaders: () => getHeaders,
  rawContent: () => rawContent2,
  url: () => url
});
function rawContent2() {
  return "\r\n";
}
async function compiledContent2() {
  return load().then((m3) => m3.compiledContent());
}
function $$loadMetadata() {
  return load().then((m3) => m3.$$metadata);
}
async function load() {
  return await Promise.resolve().then(() => (init_chunk_b863d8b9(), chunk_b863d8b9_exports));
}
function Content(...args) {
  return load().then((m3) => m3.default(...args));
}
function getHeaders() {
  return load().then((m3) => m3.metadata.headers);
}
var frontmatter2, file, url;
var init_chunk_b31d322e = __esm({
  ".netlify/functions-internal/chunks/chunk.b31d322e.mjs"() {
    frontmatter2 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file = "C:/work-projects/pireactor/main-site/public/assets/content/es/services/architecture.md";
    url = void 0;
    Content.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.1cb67a4f.mjs
var chunk_1cb67a4f_exports = {};
__export(chunk_1cb67a4f_exports, {
  $$metadata: () => $$metadata2,
  compiledContent: () => compiledContent3,
  default: () => $$Automation,
  frontmatter: () => frontmatter3,
  metadata: () => metadata2,
  rawContent: () => rawContent3
});
function rawContent3() {
  return "";
}
function compiledContent3() {
  return "";
}
var import_serialize_javascript3, metadata2, frontmatter3, $$metadata2, $$Astro2, $$Automation;
var init_chunk_1cb67a4f = __esm({
  ".netlify/functions-internal/chunks/chunk.1cb67a4f.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript3 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata2 = { "headers": [], "source": "", "html": "" };
    frontmatter3 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata2 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/automation.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro2 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/automation.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Automation = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro2, $$props, $$slots);
      Astro2.self = $$Automation;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.e89ab15e.mjs
var chunk_e89ab15e_exports = {};
__export(chunk_e89ab15e_exports, {
  $$loadMetadata: () => $$loadMetadata2,
  Content: () => Content2,
  compiledContent: () => compiledContent4,
  default: () => load2,
  file: () => file2,
  frontmatter: () => frontmatter4,
  getHeaders: () => getHeaders2,
  rawContent: () => rawContent4,
  url: () => url2
});
function rawContent4() {
  return "";
}
async function compiledContent4() {
  return load2().then((m3) => m3.compiledContent());
}
function $$loadMetadata2() {
  return load2().then((m3) => m3.$$metadata);
}
async function load2() {
  return await Promise.resolve().then(() => (init_chunk_1cb67a4f(), chunk_1cb67a4f_exports));
}
function Content2(...args) {
  return load2().then((m3) => m3.default(...args));
}
function getHeaders2() {
  return load2().then((m3) => m3.metadata.headers);
}
var frontmatter4, file2, url2;
var init_chunk_e89ab15e = __esm({
  ".netlify/functions-internal/chunks/chunk.e89ab15e.mjs"() {
    frontmatter4 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file2 = "C:/work-projects/pireactor/main-site/public/assets/content/es/services/automation.md";
    url2 = void 0;
    Content2.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.568cb922.mjs
var chunk_568cb922_exports = {};
__export(chunk_568cb922_exports, {
  $$metadata: () => $$metadata3,
  compiledContent: () => compiledContent5,
  default: () => $$Blockchain,
  frontmatter: () => frontmatter5,
  metadata: () => metadata3,
  rawContent: () => rawContent5
});
function rawContent5() {
  return "";
}
function compiledContent5() {
  return "";
}
var import_serialize_javascript4, metadata3, frontmatter5, $$metadata3, $$Astro3, $$Blockchain;
var init_chunk_568cb922 = __esm({
  ".netlify/functions-internal/chunks/chunk.568cb922.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript4 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata3 = { "headers": [], "source": "", "html": "" };
    frontmatter5 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata3 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/blockchain.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro3 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/blockchain.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Blockchain = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro3, $$props, $$slots);
      Astro2.self = $$Blockchain;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.553bc06b.mjs
var chunk_553bc06b_exports = {};
__export(chunk_553bc06b_exports, {
  $$loadMetadata: () => $$loadMetadata3,
  Content: () => Content3,
  compiledContent: () => compiledContent6,
  default: () => load3,
  file: () => file3,
  frontmatter: () => frontmatter6,
  getHeaders: () => getHeaders3,
  rawContent: () => rawContent6,
  url: () => url3
});
function rawContent6() {
  return "";
}
async function compiledContent6() {
  return load3().then((m3) => m3.compiledContent());
}
function $$loadMetadata3() {
  return load3().then((m3) => m3.$$metadata);
}
async function load3() {
  return await Promise.resolve().then(() => (init_chunk_568cb922(), chunk_568cb922_exports));
}
function Content3(...args) {
  return load3().then((m3) => m3.default(...args));
}
function getHeaders3() {
  return load3().then((m3) => m3.metadata.headers);
}
var frontmatter6, file3, url3;
var init_chunk_553bc06b = __esm({
  ".netlify/functions-internal/chunks/chunk.553bc06b.mjs"() {
    frontmatter6 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file3 = "C:/work-projects/pireactor/main-site/public/assets/content/es/services/blockchain.md";
    url3 = void 0;
    Content3.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.14d8e118.mjs
var chunk_14d8e118_exports = {};
__export(chunk_14d8e118_exports, {
  $$metadata: () => $$metadata4,
  compiledContent: () => compiledContent7,
  default: () => $$Strategy,
  frontmatter: () => frontmatter7,
  metadata: () => metadata4,
  rawContent: () => rawContent7
});
function rawContent7() {
  return "\r\n\r\n\r\n";
}
function compiledContent7() {
  return "";
}
var import_serialize_javascript5, metadata4, frontmatter7, $$metadata4, $$Astro4, $$Strategy;
var init_chunk_14d8e118 = __esm({
  ".netlify/functions-internal/chunks/chunk.14d8e118.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript5 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata4 = { "headers": [], "source": "\r\n\r\n\r\n", "html": "" };
    frontmatter7 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n", "html": "" } };
    $$metadata4 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/strategy.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro4 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/strategy.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Strategy = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro4, $$props, $$slots);
      Astro2.self = $$Strategy;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.3c563026.mjs
var chunk_3c563026_exports = {};
__export(chunk_3c563026_exports, {
  $$loadMetadata: () => $$loadMetadata4,
  Content: () => Content4,
  compiledContent: () => compiledContent8,
  default: () => load4,
  file: () => file4,
  frontmatter: () => frontmatter8,
  getHeaders: () => getHeaders4,
  rawContent: () => rawContent8,
  url: () => url4
});
function rawContent8() {
  return "\r\n\r\n\r\n";
}
async function compiledContent8() {
  return load4().then((m3) => m3.compiledContent());
}
function $$loadMetadata4() {
  return load4().then((m3) => m3.$$metadata);
}
async function load4() {
  return await Promise.resolve().then(() => (init_chunk_14d8e118(), chunk_14d8e118_exports));
}
function Content4(...args) {
  return load4().then((m3) => m3.default(...args));
}
function getHeaders4() {
  return load4().then((m3) => m3.metadata.headers);
}
var frontmatter8, file4, url4;
var init_chunk_3c563026 = __esm({
  ".netlify/functions-internal/chunks/chunk.3c563026.mjs"() {
    frontmatter8 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file4 = "C:/work-projects/pireactor/main-site/public/assets/content/es/services/strategy.md";
    url4 = void 0;
    Content4.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.78b7c01d.mjs
var chunk_78b7c01d_exports = {};
__export(chunk_78b7c01d_exports, {
  $$metadata: () => $$metadata5,
  compiledContent: () => compiledContent9,
  default: () => $$Wallets,
  frontmatter: () => frontmatter9,
  metadata: () => metadata5,
  rawContent: () => rawContent9
});
function rawContent9() {
  return "\r\n\r\n\r\n\r\n";
}
function compiledContent9() {
  return "";
}
var import_serialize_javascript6, metadata5, frontmatter9, $$metadata5, $$Astro5, $$Wallets;
var init_chunk_78b7c01d = __esm({
  ".netlify/functions-internal/chunks/chunk.78b7c01d.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript6 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata5 = { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" };
    frontmatter9 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" } };
    $$metadata5 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/wallets.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro5 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/services/wallets.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Wallets = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro5, $$props, $$slots);
      Astro2.self = $$Wallets;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.165e007d.mjs
var chunk_165e007d_exports = {};
__export(chunk_165e007d_exports, {
  $$loadMetadata: () => $$loadMetadata5,
  Content: () => Content5,
  compiledContent: () => compiledContent10,
  default: () => load5,
  file: () => file5,
  frontmatter: () => frontmatter10,
  getHeaders: () => getHeaders5,
  rawContent: () => rawContent10,
  url: () => url5
});
function rawContent10() {
  return "\r\n\r\n\r\n\r\n";
}
async function compiledContent10() {
  return load5().then((m3) => m3.compiledContent());
}
function $$loadMetadata5() {
  return load5().then((m3) => m3.$$metadata);
}
async function load5() {
  return await Promise.resolve().then(() => (init_chunk_78b7c01d(), chunk_78b7c01d_exports));
}
function Content5(...args) {
  return load5().then((m3) => m3.default(...args));
}
function getHeaders5() {
  return load5().then((m3) => m3.metadata.headers);
}
var frontmatter10, file5, url5;
var init_chunk_165e007d = __esm({
  ".netlify/functions-internal/chunks/chunk.165e007d.mjs"() {
    frontmatter10 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file5 = "C:/work-projects/pireactor/main-site/public/assets/content/es/services/wallets.md";
    url5 = void 0;
    Content5.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.0e9fcfce.mjs
var chunk_0e9fcfce_exports = {};
__export(chunk_0e9fcfce_exports, {
  $$metadata: () => $$metadata6,
  compiledContent: () => compiledContent11,
  default: () => $$Architecture2,
  frontmatter: () => frontmatter11,
  metadata: () => metadata6,
  rawContent: () => rawContent11
});
function rawContent11() {
  return "\r\n";
}
function compiledContent11() {
  return "";
}
var import_serialize_javascript7, metadata6, frontmatter11, $$metadata6, $$Astro6, $$Architecture2;
var init_chunk_0e9fcfce = __esm({
  ".netlify/functions-internal/chunks/chunk.0e9fcfce.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript7 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata6 = { "headers": [], "source": "\r\n", "html": "" };
    frontmatter11 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n", "html": "" } };
    $$metadata6 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/architecture.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro6 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/architecture.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Architecture2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro6, $$props, $$slots);
      Astro2.self = $$Architecture2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.7ab29271.mjs
var chunk_7ab29271_exports = {};
__export(chunk_7ab29271_exports, {
  $$loadMetadata: () => $$loadMetadata6,
  Content: () => Content6,
  compiledContent: () => compiledContent12,
  default: () => load6,
  file: () => file6,
  frontmatter: () => frontmatter12,
  getHeaders: () => getHeaders6,
  rawContent: () => rawContent12,
  url: () => url6
});
function rawContent12() {
  return "\r\n";
}
async function compiledContent12() {
  return load6().then((m3) => m3.compiledContent());
}
function $$loadMetadata6() {
  return load6().then((m3) => m3.$$metadata);
}
async function load6() {
  return await Promise.resolve().then(() => (init_chunk_0e9fcfce(), chunk_0e9fcfce_exports));
}
function Content6(...args) {
  return load6().then((m3) => m3.default(...args));
}
function getHeaders6() {
  return load6().then((m3) => m3.metadata.headers);
}
var frontmatter12, file6, url6;
var init_chunk_7ab29271 = __esm({
  ".netlify/functions-internal/chunks/chunk.7ab29271.mjs"() {
    frontmatter12 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file6 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/architecture.md";
    url6 = void 0;
    Content6.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.dfd72786.mjs
var chunk_dfd72786_exports = {};
__export(chunk_dfd72786_exports, {
  $$metadata: () => $$metadata7,
  compiledContent: () => compiledContent13,
  default: () => $$Automation2,
  frontmatter: () => frontmatter13,
  metadata: () => metadata7,
  rawContent: () => rawContent13
});
function rawContent13() {
  return "";
}
function compiledContent13() {
  return "";
}
var import_serialize_javascript8, metadata7, frontmatter13, $$metadata7, $$Astro7, $$Automation2;
var init_chunk_dfd72786 = __esm({
  ".netlify/functions-internal/chunks/chunk.dfd72786.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript8 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata7 = { "headers": [], "source": "", "html": "" };
    frontmatter13 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata7 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/automation.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro7 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/automation.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Automation2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro7, $$props, $$slots);
      Astro2.self = $$Automation2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.10e50542.mjs
var chunk_10e50542_exports = {};
__export(chunk_10e50542_exports, {
  $$loadMetadata: () => $$loadMetadata7,
  Content: () => Content7,
  compiledContent: () => compiledContent14,
  default: () => load7,
  file: () => file7,
  frontmatter: () => frontmatter14,
  getHeaders: () => getHeaders7,
  rawContent: () => rawContent14,
  url: () => url7
});
function rawContent14() {
  return "";
}
async function compiledContent14() {
  return load7().then((m3) => m3.compiledContent());
}
function $$loadMetadata7() {
  return load7().then((m3) => m3.$$metadata);
}
async function load7() {
  return await Promise.resolve().then(() => (init_chunk_dfd72786(), chunk_dfd72786_exports));
}
function Content7(...args) {
  return load7().then((m3) => m3.default(...args));
}
function getHeaders7() {
  return load7().then((m3) => m3.metadata.headers);
}
var frontmatter14, file7, url7;
var init_chunk_10e50542 = __esm({
  ".netlify/functions-internal/chunks/chunk.10e50542.mjs"() {
    frontmatter14 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file7 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/automation.md";
    url7 = void 0;
    Content7.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.b29fe0c0.mjs
var chunk_b29fe0c0_exports = {};
__export(chunk_b29fe0c0_exports, {
  $$metadata: () => $$metadata8,
  compiledContent: () => compiledContent15,
  default: () => $$Blockchain2,
  frontmatter: () => frontmatter15,
  metadata: () => metadata8,
  rawContent: () => rawContent15
});
function rawContent15() {
  return "";
}
function compiledContent15() {
  return "";
}
var import_serialize_javascript9, metadata8, frontmatter15, $$metadata8, $$Astro8, $$Blockchain2;
var init_chunk_b29fe0c0 = __esm({
  ".netlify/functions-internal/chunks/chunk.b29fe0c0.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript9 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata8 = { "headers": [], "source": "", "html": "" };
    frontmatter15 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata8 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/blockchain.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro8 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/blockchain.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Blockchain2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro8, $$props, $$slots);
      Astro2.self = $$Blockchain2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.2b4629e3.mjs
var chunk_2b4629e3_exports = {};
__export(chunk_2b4629e3_exports, {
  $$loadMetadata: () => $$loadMetadata8,
  Content: () => Content8,
  compiledContent: () => compiledContent16,
  default: () => load8,
  file: () => file8,
  frontmatter: () => frontmatter16,
  getHeaders: () => getHeaders8,
  rawContent: () => rawContent16,
  url: () => url8
});
function rawContent16() {
  return "";
}
async function compiledContent16() {
  return load8().then((m3) => m3.compiledContent());
}
function $$loadMetadata8() {
  return load8().then((m3) => m3.$$metadata);
}
async function load8() {
  return await Promise.resolve().then(() => (init_chunk_b29fe0c0(), chunk_b29fe0c0_exports));
}
function Content8(...args) {
  return load8().then((m3) => m3.default(...args));
}
function getHeaders8() {
  return load8().then((m3) => m3.metadata.headers);
}
var frontmatter16, file8, url8;
var init_chunk_2b4629e3 = __esm({
  ".netlify/functions-internal/chunks/chunk.2b4629e3.mjs"() {
    frontmatter16 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file8 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/blockchain.md";
    url8 = void 0;
    Content8.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.9f5a04b0.mjs
var chunk_9f5a04b0_exports = {};
__export(chunk_9f5a04b0_exports, {
  $$metadata: () => $$metadata9,
  compiledContent: () => compiledContent17,
  default: () => $$Strategy2,
  frontmatter: () => frontmatter17,
  metadata: () => metadata9,
  rawContent: () => rawContent17
});
function rawContent17() {
  return "\r\n\r\n\r\n";
}
function compiledContent17() {
  return "";
}
var import_serialize_javascript10, metadata9, frontmatter17, $$metadata9, $$Astro9, $$Strategy2;
var init_chunk_9f5a04b0 = __esm({
  ".netlify/functions-internal/chunks/chunk.9f5a04b0.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript10 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata9 = { "headers": [], "source": "\r\n\r\n\r\n", "html": "" };
    frontmatter17 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n", "html": "" } };
    $$metadata9 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/strategy.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro9 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/strategy.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Strategy2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro9, $$props, $$slots);
      Astro2.self = $$Strategy2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.67f22cca.mjs
var chunk_67f22cca_exports = {};
__export(chunk_67f22cca_exports, {
  $$loadMetadata: () => $$loadMetadata9,
  Content: () => Content9,
  compiledContent: () => compiledContent18,
  default: () => load9,
  file: () => file9,
  frontmatter: () => frontmatter18,
  getHeaders: () => getHeaders9,
  rawContent: () => rawContent18,
  url: () => url9
});
function rawContent18() {
  return "\r\n\r\n\r\n";
}
async function compiledContent18() {
  return load9().then((m3) => m3.compiledContent());
}
function $$loadMetadata9() {
  return load9().then((m3) => m3.$$metadata);
}
async function load9() {
  return await Promise.resolve().then(() => (init_chunk_9f5a04b0(), chunk_9f5a04b0_exports));
}
function Content9(...args) {
  return load9().then((m3) => m3.default(...args));
}
function getHeaders9() {
  return load9().then((m3) => m3.metadata.headers);
}
var frontmatter18, file9, url9;
var init_chunk_67f22cca = __esm({
  ".netlify/functions-internal/chunks/chunk.67f22cca.mjs"() {
    frontmatter18 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file9 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/strategy.md";
    url9 = void 0;
    Content9.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.21f33fcd.mjs
var chunk_21f33fcd_exports = {};
__export(chunk_21f33fcd_exports, {
  $$metadata: () => $$metadata10,
  compiledContent: () => compiledContent19,
  default: () => $$Wallets2,
  frontmatter: () => frontmatter19,
  metadata: () => metadata10,
  rawContent: () => rawContent19
});
function rawContent19() {
  return "\r\n\r\n\r\n\r\n";
}
function compiledContent19() {
  return "";
}
var import_serialize_javascript11, metadata10, frontmatter19, $$metadata10, $$Astro10, $$Wallets2;
var init_chunk_21f33fcd = __esm({
  ".netlify/functions-internal/chunks/chunk.21f33fcd.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript11 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata10 = { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" };
    frontmatter19 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" } };
    $$metadata10 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/wallets.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro10 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/services/wallets.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Wallets2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro10, $$props, $$slots);
      Astro2.self = $$Wallets2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.d3d93e58.mjs
var chunk_d3d93e58_exports = {};
__export(chunk_d3d93e58_exports, {
  $$loadMetadata: () => $$loadMetadata10,
  Content: () => Content10,
  compiledContent: () => compiledContent20,
  default: () => load10,
  file: () => file10,
  frontmatter: () => frontmatter20,
  getHeaders: () => getHeaders10,
  rawContent: () => rawContent20,
  url: () => url10
});
function rawContent20() {
  return "\r\n\r\n\r\n\r\n";
}
async function compiledContent20() {
  return load10().then((m3) => m3.compiledContent());
}
function $$loadMetadata10() {
  return load10().then((m3) => m3.$$metadata);
}
async function load10() {
  return await Promise.resolve().then(() => (init_chunk_21f33fcd(), chunk_21f33fcd_exports));
}
function Content10(...args) {
  return load10().then((m3) => m3.default(...args));
}
function getHeaders10() {
  return load10().then((m3) => m3.metadata.headers);
}
var frontmatter20, file10, url10;
var init_chunk_d3d93e58 = __esm({
  ".netlify/functions-internal/chunks/chunk.d3d93e58.mjs"() {
    frontmatter20 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file10 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/wallets.md";
    url10 = void 0;
    Content10.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.aacb32d6.mjs
var chunk_aacb32d6_exports = {};
__export(chunk_aacb32d6_exports, {
  $$metadata: () => $$metadata11,
  compiledContent: () => compiledContent21,
  default: () => $$Architecture3,
  frontmatter: () => frontmatter21,
  metadata: () => metadata11,
  rawContent: () => rawContent21
});
function rawContent21() {
  return "\r\n";
}
function compiledContent21() {
  return "";
}
var import_serialize_javascript12, metadata11, frontmatter21, $$metadata11, $$Astro11, $$Architecture3;
var init_chunk_aacb32d6 = __esm({
  ".netlify/functions-internal/chunks/chunk.aacb32d6.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript12 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata11 = { "headers": [], "source": "\r\n", "html": "" };
    frontmatter21 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n", "html": "" } };
    $$metadata11 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/architecture.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro11 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/architecture.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Architecture3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro11, $$props, $$slots);
      Astro2.self = $$Architecture3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.554d4dc5.mjs
var chunk_554d4dc5_exports = {};
__export(chunk_554d4dc5_exports, {
  $$loadMetadata: () => $$loadMetadata11,
  Content: () => Content11,
  compiledContent: () => compiledContent22,
  default: () => load11,
  file: () => file11,
  frontmatter: () => frontmatter22,
  getHeaders: () => getHeaders11,
  rawContent: () => rawContent22,
  url: () => url11
});
function rawContent22() {
  return "\r\n";
}
async function compiledContent22() {
  return load11().then((m3) => m3.compiledContent());
}
function $$loadMetadata11() {
  return load11().then((m3) => m3.$$metadata);
}
async function load11() {
  return await Promise.resolve().then(() => (init_chunk_aacb32d6(), chunk_aacb32d6_exports));
}
function Content11(...args) {
  return load11().then((m3) => m3.default(...args));
}
function getHeaders11() {
  return load11().then((m3) => m3.metadata.headers);
}
var frontmatter22, file11, url11;
var init_chunk_554d4dc5 = __esm({
  ".netlify/functions-internal/chunks/chunk.554d4dc5.mjs"() {
    frontmatter22 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file11 = "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/architecture.md";
    url11 = void 0;
    Content11.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.600d7c6f.mjs
var chunk_600d7c6f_exports = {};
__export(chunk_600d7c6f_exports, {
  $$metadata: () => $$metadata12,
  compiledContent: () => compiledContent23,
  default: () => $$Automation3,
  frontmatter: () => frontmatter23,
  metadata: () => metadata12,
  rawContent: () => rawContent23
});
function rawContent23() {
  return "";
}
function compiledContent23() {
  return "";
}
var import_serialize_javascript13, metadata12, frontmatter23, $$metadata12, $$Astro12, $$Automation3;
var init_chunk_600d7c6f = __esm({
  ".netlify/functions-internal/chunks/chunk.600d7c6f.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript13 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata12 = { "headers": [], "source": "", "html": "" };
    frontmatter23 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata12 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/automation.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro12 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/automation.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Automation3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro12, $$props, $$slots);
      Astro2.self = $$Automation3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.e38eb8e6.mjs
var chunk_e38eb8e6_exports = {};
__export(chunk_e38eb8e6_exports, {
  $$loadMetadata: () => $$loadMetadata12,
  Content: () => Content12,
  compiledContent: () => compiledContent24,
  default: () => load12,
  file: () => file12,
  frontmatter: () => frontmatter24,
  getHeaders: () => getHeaders12,
  rawContent: () => rawContent24,
  url: () => url12
});
function rawContent24() {
  return "";
}
async function compiledContent24() {
  return load12().then((m3) => m3.compiledContent());
}
function $$loadMetadata12() {
  return load12().then((m3) => m3.$$metadata);
}
async function load12() {
  return await Promise.resolve().then(() => (init_chunk_600d7c6f(), chunk_600d7c6f_exports));
}
function Content12(...args) {
  return load12().then((m3) => m3.default(...args));
}
function getHeaders12() {
  return load12().then((m3) => m3.metadata.headers);
}
var frontmatter24, file12, url12;
var init_chunk_e38eb8e6 = __esm({
  ".netlify/functions-internal/chunks/chunk.e38eb8e6.mjs"() {
    frontmatter24 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file12 = "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/automation.md";
    url12 = void 0;
    Content12.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.6b97c041.mjs
var chunk_6b97c041_exports = {};
__export(chunk_6b97c041_exports, {
  $$metadata: () => $$metadata13,
  compiledContent: () => compiledContent25,
  default: () => $$Blockchain3,
  frontmatter: () => frontmatter25,
  metadata: () => metadata13,
  rawContent: () => rawContent25
});
function rawContent25() {
  return "";
}
function compiledContent25() {
  return "";
}
var import_serialize_javascript14, metadata13, frontmatter25, $$metadata13, $$Astro13, $$Blockchain3;
var init_chunk_6b97c041 = __esm({
  ".netlify/functions-internal/chunks/chunk.6b97c041.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript14 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata13 = { "headers": [], "source": "", "html": "" };
    frontmatter25 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata13 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/blockchain.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro13 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/blockchain.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Blockchain3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro13, $$props, $$slots);
      Astro2.self = $$Blockchain3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.9ece0295.mjs
var chunk_9ece0295_exports = {};
__export(chunk_9ece0295_exports, {
  $$loadMetadata: () => $$loadMetadata13,
  Content: () => Content13,
  compiledContent: () => compiledContent26,
  default: () => load13,
  file: () => file13,
  frontmatter: () => frontmatter26,
  getHeaders: () => getHeaders13,
  rawContent: () => rawContent26,
  url: () => url13
});
function rawContent26() {
  return "";
}
async function compiledContent26() {
  return load13().then((m3) => m3.compiledContent());
}
function $$loadMetadata13() {
  return load13().then((m3) => m3.$$metadata);
}
async function load13() {
  return await Promise.resolve().then(() => (init_chunk_6b97c041(), chunk_6b97c041_exports));
}
function Content13(...args) {
  return load13().then((m3) => m3.default(...args));
}
function getHeaders13() {
  return load13().then((m3) => m3.metadata.headers);
}
var frontmatter26, file13, url13;
var init_chunk_9ece0295 = __esm({
  ".netlify/functions-internal/chunks/chunk.9ece0295.mjs"() {
    frontmatter26 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file13 = "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/blockchain.md";
    url13 = void 0;
    Content13.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.49fbd89e.mjs
var chunk_49fbd89e_exports = {};
__export(chunk_49fbd89e_exports, {
  $$metadata: () => $$metadata14,
  compiledContent: () => compiledContent27,
  default: () => $$Strategy3,
  frontmatter: () => frontmatter27,
  metadata: () => metadata14,
  rawContent: () => rawContent27
});
function rawContent27() {
  return "\r\n\r\n\r\n";
}
function compiledContent27() {
  return "";
}
var import_serialize_javascript15, metadata14, frontmatter27, $$metadata14, $$Astro14, $$Strategy3;
var init_chunk_49fbd89e = __esm({
  ".netlify/functions-internal/chunks/chunk.49fbd89e.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript15 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata14 = { "headers": [], "source": "\r\n\r\n\r\n", "html": "" };
    frontmatter27 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n", "html": "" } };
    $$metadata14 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/strategy.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro14 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/strategy.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Strategy3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro14, $$props, $$slots);
      Astro2.self = $$Strategy3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.2d3f63a8.mjs
var chunk_2d3f63a8_exports = {};
__export(chunk_2d3f63a8_exports, {
  $$loadMetadata: () => $$loadMetadata14,
  Content: () => Content14,
  compiledContent: () => compiledContent28,
  default: () => load14,
  file: () => file14,
  frontmatter: () => frontmatter28,
  getHeaders: () => getHeaders14,
  rawContent: () => rawContent28,
  url: () => url14
});
function rawContent28() {
  return "\r\n\r\n\r\n";
}
async function compiledContent28() {
  return load14().then((m3) => m3.compiledContent());
}
function $$loadMetadata14() {
  return load14().then((m3) => m3.$$metadata);
}
async function load14() {
  return await Promise.resolve().then(() => (init_chunk_49fbd89e(), chunk_49fbd89e_exports));
}
function Content14(...args) {
  return load14().then((m3) => m3.default(...args));
}
function getHeaders14() {
  return load14().then((m3) => m3.metadata.headers);
}
var frontmatter28, file14, url14;
var init_chunk_2d3f63a8 = __esm({
  ".netlify/functions-internal/chunks/chunk.2d3f63a8.mjs"() {
    frontmatter28 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file14 = "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/strategy.md";
    url14 = void 0;
    Content14.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.b4572d3d.mjs
var chunk_b4572d3d_exports = {};
__export(chunk_b4572d3d_exports, {
  $$metadata: () => $$metadata15,
  compiledContent: () => compiledContent29,
  default: () => $$Wallets3,
  frontmatter: () => frontmatter29,
  metadata: () => metadata15,
  rawContent: () => rawContent29
});
function rawContent29() {
  return "\r\n\r\n\r\n\r\n";
}
function compiledContent29() {
  return "";
}
var import_serialize_javascript16, metadata15, frontmatter29, $$metadata15, $$Astro15, $$Wallets3;
var init_chunk_b4572d3d = __esm({
  ".netlify/functions-internal/chunks/chunk.b4572d3d.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript16 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata15 = { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" };
    frontmatter29 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" } };
    $$metadata15 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/wallets.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro15 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/services/wallets.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Wallets3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro15, $$props, $$slots);
      Astro2.self = $$Wallets3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.39677201.mjs
var chunk_39677201_exports = {};
__export(chunk_39677201_exports, {
  $$loadMetadata: () => $$loadMetadata15,
  Content: () => Content15,
  compiledContent: () => compiledContent30,
  default: () => load15,
  file: () => file15,
  frontmatter: () => frontmatter30,
  getHeaders: () => getHeaders15,
  rawContent: () => rawContent30,
  url: () => url15
});
function rawContent30() {
  return "\r\n\r\n\r\n\r\n";
}
async function compiledContent30() {
  return load15().then((m3) => m3.compiledContent());
}
function $$loadMetadata15() {
  return load15().then((m3) => m3.$$metadata);
}
async function load15() {
  return await Promise.resolve().then(() => (init_chunk_b4572d3d(), chunk_b4572d3d_exports));
}
function Content15(...args) {
  return load15().then((m3) => m3.default(...args));
}
function getHeaders15() {
  return load15().then((m3) => m3.metadata.headers);
}
var frontmatter30, file15, url15;
var init_chunk_39677201 = __esm({
  ".netlify/functions-internal/chunks/chunk.39677201.mjs"() {
    frontmatter30 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file15 = "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/wallets.md";
    url15 = void 0;
    Content15.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.b63e5c2c.mjs
var chunk_b63e5c2c_exports = {};
__export(chunk_b63e5c2c_exports, {
  $$metadata: () => $$metadata16,
  compiledContent: () => compiledContent31,
  default: () => $$Architecture4,
  frontmatter: () => frontmatter31,
  metadata: () => metadata16,
  rawContent: () => rawContent31
});
function rawContent31() {
  return "\r\n";
}
function compiledContent31() {
  return "";
}
var import_serialize_javascript17, metadata16, frontmatter31, $$metadata16, $$Astro16, $$Architecture4;
var init_chunk_b63e5c2c = __esm({
  ".netlify/functions-internal/chunks/chunk.b63e5c2c.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript17 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata16 = { "headers": [], "source": "\r\n", "html": "" };
    frontmatter31 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n", "html": "" } };
    $$metadata16 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/architecture.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro16 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/architecture.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Architecture4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro16, $$props, $$slots);
      Astro2.self = $$Architecture4;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.9d601bcb.mjs
var chunk_9d601bcb_exports = {};
__export(chunk_9d601bcb_exports, {
  $$loadMetadata: () => $$loadMetadata16,
  Content: () => Content16,
  compiledContent: () => compiledContent32,
  default: () => load16,
  file: () => file16,
  frontmatter: () => frontmatter32,
  getHeaders: () => getHeaders16,
  rawContent: () => rawContent32,
  url: () => url16
});
function rawContent32() {
  return "\r\n";
}
async function compiledContent32() {
  return load16().then((m3) => m3.compiledContent());
}
function $$loadMetadata16() {
  return load16().then((m3) => m3.$$metadata);
}
async function load16() {
  return await Promise.resolve().then(() => (init_chunk_b63e5c2c(), chunk_b63e5c2c_exports));
}
function Content16(...args) {
  return load16().then((m3) => m3.default(...args));
}
function getHeaders16() {
  return load16().then((m3) => m3.metadata.headers);
}
var frontmatter32, file16, url16;
var init_chunk_9d601bcb = __esm({
  ".netlify/functions-internal/chunks/chunk.9d601bcb.mjs"() {
    frontmatter32 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file16 = "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/architecture.md";
    url16 = void 0;
    Content16.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.ce9b31c7.mjs
var chunk_ce9b31c7_exports = {};
__export(chunk_ce9b31c7_exports, {
  $$metadata: () => $$metadata17,
  compiledContent: () => compiledContent33,
  default: () => $$Automation4,
  frontmatter: () => frontmatter33,
  metadata: () => metadata17,
  rawContent: () => rawContent33
});
function rawContent33() {
  return "";
}
function compiledContent33() {
  return "";
}
var import_serialize_javascript18, metadata17, frontmatter33, $$metadata17, $$Astro17, $$Automation4;
var init_chunk_ce9b31c7 = __esm({
  ".netlify/functions-internal/chunks/chunk.ce9b31c7.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript18 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata17 = { "headers": [], "source": "", "html": "" };
    frontmatter33 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata17 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/automation.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro17 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/automation.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Automation4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro17, $$props, $$slots);
      Astro2.self = $$Automation4;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.0a29b555.mjs
var chunk_0a29b555_exports = {};
__export(chunk_0a29b555_exports, {
  $$loadMetadata: () => $$loadMetadata17,
  Content: () => Content17,
  compiledContent: () => compiledContent34,
  default: () => load17,
  file: () => file17,
  frontmatter: () => frontmatter34,
  getHeaders: () => getHeaders17,
  rawContent: () => rawContent34,
  url: () => url17
});
function rawContent34() {
  return "";
}
async function compiledContent34() {
  return load17().then((m3) => m3.compiledContent());
}
function $$loadMetadata17() {
  return load17().then((m3) => m3.$$metadata);
}
async function load17() {
  return await Promise.resolve().then(() => (init_chunk_ce9b31c7(), chunk_ce9b31c7_exports));
}
function Content17(...args) {
  return load17().then((m3) => m3.default(...args));
}
function getHeaders17() {
  return load17().then((m3) => m3.metadata.headers);
}
var frontmatter34, file17, url17;
var init_chunk_0a29b555 = __esm({
  ".netlify/functions-internal/chunks/chunk.0a29b555.mjs"() {
    frontmatter34 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file17 = "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/automation.md";
    url17 = void 0;
    Content17.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.7fa87549.mjs
var chunk_7fa87549_exports = {};
__export(chunk_7fa87549_exports, {
  $$metadata: () => $$metadata18,
  compiledContent: () => compiledContent35,
  default: () => $$Blockchain4,
  frontmatter: () => frontmatter35,
  metadata: () => metadata18,
  rawContent: () => rawContent35
});
function rawContent35() {
  return "";
}
function compiledContent35() {
  return "";
}
var import_serialize_javascript19, metadata18, frontmatter35, $$metadata18, $$Astro18, $$Blockchain4;
var init_chunk_7fa87549 = __esm({
  ".netlify/functions-internal/chunks/chunk.7fa87549.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript19 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata18 = { "headers": [], "source": "", "html": "" };
    frontmatter35 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata18 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/blockchain.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro18 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/blockchain.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Blockchain4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro18, $$props, $$slots);
      Astro2.self = $$Blockchain4;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.7363e747.mjs
var chunk_7363e747_exports = {};
__export(chunk_7363e747_exports, {
  $$loadMetadata: () => $$loadMetadata18,
  Content: () => Content18,
  compiledContent: () => compiledContent36,
  default: () => load18,
  file: () => file18,
  frontmatter: () => frontmatter36,
  getHeaders: () => getHeaders18,
  rawContent: () => rawContent36,
  url: () => url18
});
function rawContent36() {
  return "";
}
async function compiledContent36() {
  return load18().then((m3) => m3.compiledContent());
}
function $$loadMetadata18() {
  return load18().then((m3) => m3.$$metadata);
}
async function load18() {
  return await Promise.resolve().then(() => (init_chunk_7fa87549(), chunk_7fa87549_exports));
}
function Content18(...args) {
  return load18().then((m3) => m3.default(...args));
}
function getHeaders18() {
  return load18().then((m3) => m3.metadata.headers);
}
var frontmatter36, file18, url18;
var init_chunk_7363e747 = __esm({
  ".netlify/functions-internal/chunks/chunk.7363e747.mjs"() {
    frontmatter36 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file18 = "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/blockchain.md";
    url18 = void 0;
    Content18.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.45f8b216.mjs
var chunk_45f8b216_exports = {};
__export(chunk_45f8b216_exports, {
  $$metadata: () => $$metadata19,
  compiledContent: () => compiledContent37,
  default: () => $$Strategy4,
  frontmatter: () => frontmatter37,
  metadata: () => metadata19,
  rawContent: () => rawContent37
});
function rawContent37() {
  return "\r\n\r\n\r\n";
}
function compiledContent37() {
  return "";
}
var import_serialize_javascript20, metadata19, frontmatter37, $$metadata19, $$Astro19, $$Strategy4;
var init_chunk_45f8b216 = __esm({
  ".netlify/functions-internal/chunks/chunk.45f8b216.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript20 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata19 = { "headers": [], "source": "\r\n\r\n\r\n", "html": "" };
    frontmatter37 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n", "html": "" } };
    $$metadata19 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/strategy.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro19 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/strategy.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Strategy4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro19, $$props, $$slots);
      Astro2.self = $$Strategy4;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.d8c09329.mjs
var chunk_d8c09329_exports = {};
__export(chunk_d8c09329_exports, {
  $$loadMetadata: () => $$loadMetadata19,
  Content: () => Content19,
  compiledContent: () => compiledContent38,
  default: () => load19,
  file: () => file19,
  frontmatter: () => frontmatter38,
  getHeaders: () => getHeaders19,
  rawContent: () => rawContent38,
  url: () => url19
});
function rawContent38() {
  return "\r\n\r\n\r\n";
}
async function compiledContent38() {
  return load19().then((m3) => m3.compiledContent());
}
function $$loadMetadata19() {
  return load19().then((m3) => m3.$$metadata);
}
async function load19() {
  return await Promise.resolve().then(() => (init_chunk_45f8b216(), chunk_45f8b216_exports));
}
function Content19(...args) {
  return load19().then((m3) => m3.default(...args));
}
function getHeaders19() {
  return load19().then((m3) => m3.metadata.headers);
}
var frontmatter38, file19, url19;
var init_chunk_d8c09329 = __esm({
  ".netlify/functions-internal/chunks/chunk.d8c09329.mjs"() {
    frontmatter38 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file19 = "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/strategy.md";
    url19 = void 0;
    Content19.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.444aaa1b.mjs
var chunk_444aaa1b_exports = {};
__export(chunk_444aaa1b_exports, {
  $$metadata: () => $$metadata20,
  compiledContent: () => compiledContent39,
  default: () => $$Wallets4,
  frontmatter: () => frontmatter39,
  metadata: () => metadata20,
  rawContent: () => rawContent39
});
function rawContent39() {
  return "\r\n\r\n\r\n\r\n";
}
function compiledContent39() {
  return "";
}
var import_serialize_javascript21, metadata20, frontmatter39, $$metadata20, $$Astro20, $$Wallets4;
var init_chunk_444aaa1b = __esm({
  ".netlify/functions-internal/chunks/chunk.444aaa1b.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript21 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata20 = { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" };
    frontmatter39 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" } };
    $$metadata20 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/wallets.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro20 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/services/wallets.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Wallets4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro20, $$props, $$slots);
      Astro2.self = $$Wallets4;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.873f2a22.mjs
var chunk_873f2a22_exports = {};
__export(chunk_873f2a22_exports, {
  $$loadMetadata: () => $$loadMetadata20,
  Content: () => Content20,
  compiledContent: () => compiledContent40,
  default: () => load20,
  file: () => file20,
  frontmatter: () => frontmatter40,
  getHeaders: () => getHeaders20,
  rawContent: () => rawContent40,
  url: () => url20
});
function rawContent40() {
  return "\r\n\r\n\r\n\r\n";
}
async function compiledContent40() {
  return load20().then((m3) => m3.compiledContent());
}
function $$loadMetadata20() {
  return load20().then((m3) => m3.$$metadata);
}
async function load20() {
  return await Promise.resolve().then(() => (init_chunk_444aaa1b(), chunk_444aaa1b_exports));
}
function Content20(...args) {
  return load20().then((m3) => m3.default(...args));
}
function getHeaders20() {
  return load20().then((m3) => m3.metadata.headers);
}
var frontmatter40, file20, url20;
var init_chunk_873f2a22 = __esm({
  ".netlify/functions-internal/chunks/chunk.873f2a22.mjs"() {
    frontmatter40 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file20 = "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/wallets.md";
    url20 = void 0;
    Content20.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.0915290a.mjs
var chunk_0915290a_exports = {};
__export(chunk_0915290a_exports, {
  $$metadata: () => $$metadata21,
  compiledContent: () => compiledContent41,
  default: () => $$Architecture5,
  frontmatter: () => frontmatter41,
  metadata: () => metadata21,
  rawContent: () => rawContent41
});
function rawContent41() {
  return "\r\n";
}
function compiledContent41() {
  return "";
}
var import_serialize_javascript22, metadata21, frontmatter41, $$metadata21, $$Astro21, $$Architecture5;
var init_chunk_0915290a = __esm({
  ".netlify/functions-internal/chunks/chunk.0915290a.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript22 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata21 = { "headers": [], "source": "\r\n", "html": "" };
    frontmatter41 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n", "html": "" } };
    $$metadata21 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/architecture.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro21 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/architecture.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Architecture5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro21, $$props, $$slots);
      Astro2.self = $$Architecture5;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.52e3bf1b.mjs
var chunk_52e3bf1b_exports = {};
__export(chunk_52e3bf1b_exports, {
  $$loadMetadata: () => $$loadMetadata21,
  Content: () => Content21,
  compiledContent: () => compiledContent42,
  default: () => load21,
  file: () => file21,
  frontmatter: () => frontmatter42,
  getHeaders: () => getHeaders21,
  rawContent: () => rawContent42,
  url: () => url21
});
function rawContent42() {
  return "\r\n";
}
async function compiledContent42() {
  return load21().then((m3) => m3.compiledContent());
}
function $$loadMetadata21() {
  return load21().then((m3) => m3.$$metadata);
}
async function load21() {
  return await Promise.resolve().then(() => (init_chunk_0915290a(), chunk_0915290a_exports));
}
function Content21(...args) {
  return load21().then((m3) => m3.default(...args));
}
function getHeaders21() {
  return load21().then((m3) => m3.metadata.headers);
}
var frontmatter42, file21, url21;
var init_chunk_52e3bf1b = __esm({
  ".netlify/functions-internal/chunks/chunk.52e3bf1b.mjs"() {
    frontmatter42 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file21 = "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/architecture.md";
    url21 = void 0;
    Content21.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.36eb4c82.mjs
var chunk_36eb4c82_exports = {};
__export(chunk_36eb4c82_exports, {
  $$metadata: () => $$metadata22,
  compiledContent: () => compiledContent43,
  default: () => $$Automation5,
  frontmatter: () => frontmatter43,
  metadata: () => metadata22,
  rawContent: () => rawContent43
});
function rawContent43() {
  return "";
}
function compiledContent43() {
  return "";
}
var import_serialize_javascript23, metadata22, frontmatter43, $$metadata22, $$Astro22, $$Automation5;
var init_chunk_36eb4c82 = __esm({
  ".netlify/functions-internal/chunks/chunk.36eb4c82.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript23 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata22 = { "headers": [], "source": "", "html": "" };
    frontmatter43 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata22 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/automation.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro22 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/automation.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Automation5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro22, $$props, $$slots);
      Astro2.self = $$Automation5;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.343126a2.mjs
var chunk_343126a2_exports = {};
__export(chunk_343126a2_exports, {
  $$loadMetadata: () => $$loadMetadata22,
  Content: () => Content22,
  compiledContent: () => compiledContent44,
  default: () => load22,
  file: () => file22,
  frontmatter: () => frontmatter44,
  getHeaders: () => getHeaders22,
  rawContent: () => rawContent44,
  url: () => url22
});
function rawContent44() {
  return "";
}
async function compiledContent44() {
  return load22().then((m3) => m3.compiledContent());
}
function $$loadMetadata22() {
  return load22().then((m3) => m3.$$metadata);
}
async function load22() {
  return await Promise.resolve().then(() => (init_chunk_36eb4c82(), chunk_36eb4c82_exports));
}
function Content22(...args) {
  return load22().then((m3) => m3.default(...args));
}
function getHeaders22() {
  return load22().then((m3) => m3.metadata.headers);
}
var frontmatter44, file22, url22;
var init_chunk_343126a2 = __esm({
  ".netlify/functions-internal/chunks/chunk.343126a2.mjs"() {
    frontmatter44 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file22 = "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/automation.md";
    url22 = void 0;
    Content22.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.6a4be6de.mjs
var chunk_6a4be6de_exports = {};
__export(chunk_6a4be6de_exports, {
  $$metadata: () => $$metadata23,
  compiledContent: () => compiledContent45,
  default: () => $$Blockchain5,
  frontmatter: () => frontmatter45,
  metadata: () => metadata23,
  rawContent: () => rawContent45
});
function rawContent45() {
  return "";
}
function compiledContent45() {
  return "";
}
var import_serialize_javascript24, metadata23, frontmatter45, $$metadata23, $$Astro23, $$Blockchain5;
var init_chunk_6a4be6de = __esm({
  ".netlify/functions-internal/chunks/chunk.6a4be6de.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript24 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata23 = { "headers": [], "source": "", "html": "" };
    frontmatter45 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata23 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/blockchain.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro23 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/blockchain.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Blockchain5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro23, $$props, $$slots);
      Astro2.self = $$Blockchain5;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.1c6f6212.mjs
var chunk_1c6f6212_exports = {};
__export(chunk_1c6f6212_exports, {
  $$loadMetadata: () => $$loadMetadata23,
  Content: () => Content23,
  compiledContent: () => compiledContent46,
  default: () => load23,
  file: () => file23,
  frontmatter: () => frontmatter46,
  getHeaders: () => getHeaders23,
  rawContent: () => rawContent46,
  url: () => url23
});
function rawContent46() {
  return "";
}
async function compiledContent46() {
  return load23().then((m3) => m3.compiledContent());
}
function $$loadMetadata23() {
  return load23().then((m3) => m3.$$metadata);
}
async function load23() {
  return await Promise.resolve().then(() => (init_chunk_6a4be6de(), chunk_6a4be6de_exports));
}
function Content23(...args) {
  return load23().then((m3) => m3.default(...args));
}
function getHeaders23() {
  return load23().then((m3) => m3.metadata.headers);
}
var frontmatter46, file23, url23;
var init_chunk_1c6f6212 = __esm({
  ".netlify/functions-internal/chunks/chunk.1c6f6212.mjs"() {
    frontmatter46 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file23 = "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/blockchain.md";
    url23 = void 0;
    Content23.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.d14f03b9.mjs
var chunk_d14f03b9_exports = {};
__export(chunk_d14f03b9_exports, {
  $$metadata: () => $$metadata24,
  compiledContent: () => compiledContent47,
  default: () => $$Strategy5,
  frontmatter: () => frontmatter47,
  metadata: () => metadata24,
  rawContent: () => rawContent47
});
function rawContent47() {
  return "\r\n\r\n\r\n";
}
function compiledContent47() {
  return "";
}
var import_serialize_javascript25, metadata24, frontmatter47, $$metadata24, $$Astro24, $$Strategy5;
var init_chunk_d14f03b9 = __esm({
  ".netlify/functions-internal/chunks/chunk.d14f03b9.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript25 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata24 = { "headers": [], "source": "\r\n\r\n\r\n", "html": "" };
    frontmatter47 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n", "html": "" } };
    $$metadata24 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/strategy.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro24 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/strategy.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Strategy5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro24, $$props, $$slots);
      Astro2.self = $$Strategy5;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.2e67f1fb.mjs
var chunk_2e67f1fb_exports = {};
__export(chunk_2e67f1fb_exports, {
  $$loadMetadata: () => $$loadMetadata24,
  Content: () => Content24,
  compiledContent: () => compiledContent48,
  default: () => load24,
  file: () => file24,
  frontmatter: () => frontmatter48,
  getHeaders: () => getHeaders24,
  rawContent: () => rawContent48,
  url: () => url24
});
function rawContent48() {
  return "\r\n\r\n\r\n";
}
async function compiledContent48() {
  return load24().then((m3) => m3.compiledContent());
}
function $$loadMetadata24() {
  return load24().then((m3) => m3.$$metadata);
}
async function load24() {
  return await Promise.resolve().then(() => (init_chunk_d14f03b9(), chunk_d14f03b9_exports));
}
function Content24(...args) {
  return load24().then((m3) => m3.default(...args));
}
function getHeaders24() {
  return load24().then((m3) => m3.metadata.headers);
}
var frontmatter48, file24, url24;
var init_chunk_2e67f1fb = __esm({
  ".netlify/functions-internal/chunks/chunk.2e67f1fb.mjs"() {
    frontmatter48 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file24 = "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/strategy.md";
    url24 = void 0;
    Content24.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.e7391b23.mjs
var chunk_e7391b23_exports = {};
__export(chunk_e7391b23_exports, {
  $$metadata: () => $$metadata25,
  compiledContent: () => compiledContent49,
  default: () => $$Wallets5,
  frontmatter: () => frontmatter49,
  metadata: () => metadata25,
  rawContent: () => rawContent49
});
function rawContent49() {
  return "\r\n\r\n\r\n\r\n";
}
function compiledContent49() {
  return "";
}
var import_serialize_javascript26, metadata25, frontmatter49, $$metadata25, $$Astro25, $$Wallets5;
var init_chunk_e7391b23 = __esm({
  ".netlify/functions-internal/chunks/chunk.e7391b23.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript26 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata25 = { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" };
    frontmatter49 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" } };
    $$metadata25 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/wallets.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro25 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/services/wallets.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Wallets5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro25, $$props, $$slots);
      Astro2.self = $$Wallets5;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.1e8278ce.mjs
var chunk_1e8278ce_exports = {};
__export(chunk_1e8278ce_exports, {
  $$loadMetadata: () => $$loadMetadata25,
  Content: () => Content25,
  compiledContent: () => compiledContent50,
  default: () => load25,
  file: () => file25,
  frontmatter: () => frontmatter50,
  getHeaders: () => getHeaders25,
  rawContent: () => rawContent50,
  url: () => url25
});
function rawContent50() {
  return "\r\n\r\n\r\n\r\n";
}
async function compiledContent50() {
  return load25().then((m3) => m3.compiledContent());
}
function $$loadMetadata25() {
  return load25().then((m3) => m3.$$metadata);
}
async function load25() {
  return await Promise.resolve().then(() => (init_chunk_e7391b23(), chunk_e7391b23_exports));
}
function Content25(...args) {
  return load25().then((m3) => m3.default(...args));
}
function getHeaders25() {
  return load25().then((m3) => m3.metadata.headers);
}
var frontmatter50, file25, url25;
var init_chunk_1e8278ce = __esm({
  ".netlify/functions-internal/chunks/chunk.1e8278ce.mjs"() {
    frontmatter50 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file25 = "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/wallets.md";
    url25 = void 0;
    Content25.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.3677723b.mjs
var chunk_3677723b_exports = {};
__export(chunk_3677723b_exports, {
  $$metadata: () => $$metadata26,
  compiledContent: () => compiledContent51,
  default: () => $$Architecture6,
  frontmatter: () => frontmatter51,
  metadata: () => metadata26,
  rawContent: () => rawContent51
});
function rawContent51() {
  return "\r\n";
}
function compiledContent51() {
  return "";
}
var import_serialize_javascript27, metadata26, frontmatter51, $$metadata26, $$Astro26, $$Architecture6;
var init_chunk_3677723b = __esm({
  ".netlify/functions-internal/chunks/chunk.3677723b.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript27 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata26 = { "headers": [], "source": "\r\n", "html": "" };
    frontmatter51 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n", "html": "" } };
    $$metadata26 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/architecture.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro26 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/architecture.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Architecture6 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro26, $$props, $$slots);
      Astro2.self = $$Architecture6;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.c6afcfdc.mjs
var chunk_c6afcfdc_exports = {};
__export(chunk_c6afcfdc_exports, {
  $$loadMetadata: () => $$loadMetadata26,
  Content: () => Content26,
  compiledContent: () => compiledContent52,
  default: () => load26,
  file: () => file26,
  frontmatter: () => frontmatter52,
  getHeaders: () => getHeaders26,
  rawContent: () => rawContent52,
  url: () => url26
});
function rawContent52() {
  return "\r\n";
}
async function compiledContent52() {
  return load26().then((m3) => m3.compiledContent());
}
function $$loadMetadata26() {
  return load26().then((m3) => m3.$$metadata);
}
async function load26() {
  return await Promise.resolve().then(() => (init_chunk_3677723b(), chunk_3677723b_exports));
}
function Content26(...args) {
  return load26().then((m3) => m3.default(...args));
}
function getHeaders26() {
  return load26().then((m3) => m3.metadata.headers);
}
var frontmatter52, file26, url26;
var init_chunk_c6afcfdc = __esm({
  ".netlify/functions-internal/chunks/chunk.c6afcfdc.mjs"() {
    frontmatter52 = { "id": 2, "slug": "architecture", "title": "Architecture", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Above all, we pride ourselves in clearly documenting your business logic and processes in order to craft productivity boosting solutions or automate them entirely. We then create the most practical and expandable architecture for your unique use cases allowing quick, clean implementation.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file26 = "C:/work-projects/pireactor/main-site/public/assets/content/en/services/architecture.md";
    url26 = void 0;
    Content26.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.da1b1bde.mjs
var chunk_da1b1bde_exports = {};
__export(chunk_da1b1bde_exports, {
  $$metadata: () => $$metadata27,
  compiledContent: () => compiledContent53,
  default: () => $$Automation6,
  frontmatter: () => frontmatter53,
  metadata: () => metadata27,
  rawContent: () => rawContent53
});
function rawContent53() {
  return "";
}
function compiledContent53() {
  return "";
}
var import_serialize_javascript28, metadata27, frontmatter53, $$metadata27, $$Astro27, $$Automation6;
var init_chunk_da1b1bde = __esm({
  ".netlify/functions-internal/chunks/chunk.da1b1bde.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript28 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata27 = { "headers": [], "source": "", "html": "" };
    frontmatter53 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata27 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/automation.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro27 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/automation.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Automation6 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro27, $$props, $$slots);
      Astro2.self = $$Automation6;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.c98e4cd0.mjs
var chunk_c98e4cd0_exports = {};
__export(chunk_c98e4cd0_exports, {
  $$loadMetadata: () => $$loadMetadata27,
  Content: () => Content27,
  compiledContent: () => compiledContent54,
  default: () => load27,
  file: () => file27,
  frontmatter: () => frontmatter54,
  getHeaders: () => getHeaders27,
  rawContent: () => rawContent54,
  url: () => url27
});
function rawContent54() {
  return "";
}
async function compiledContent54() {
  return load27().then((m3) => m3.compiledContent());
}
function $$loadMetadata27() {
  return load27().then((m3) => m3.$$metadata);
}
async function load27() {
  return await Promise.resolve().then(() => (init_chunk_da1b1bde(), chunk_da1b1bde_exports));
}
function Content27(...args) {
  return load27().then((m3) => m3.default(...args));
}
function getHeaders27() {
  return load27().then((m3) => m3.metadata.headers);
}
var frontmatter54, file27, url27;
var init_chunk_c98e4cd0 = __esm({
  ".netlify/functions-internal/chunks/chunk.c98e4cd0.mjs"() {
    frontmatter54 = { "id": 3, "slug": "automation", "title": "Automation", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Expand your data engineering with AI augmented and RPA driven approaches. With dozens of projects behind us, we build scalable, efficient operations and drive powerful growth. Replace outdated manual processes with the smarter reusable algorithms, artificial intelligence, and BOTS.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file27 = "C:/work-projects/pireactor/main-site/public/assets/content/en/services/automation.md";
    url27 = void 0;
    Content27.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.9b8fee83.mjs
var chunk_9b8fee83_exports = {};
__export(chunk_9b8fee83_exports, {
  $$metadata: () => $$metadata28,
  compiledContent: () => compiledContent55,
  default: () => $$Blockchain6,
  frontmatter: () => frontmatter55,
  metadata: () => metadata28,
  rawContent: () => rawContent55
});
function rawContent55() {
  return "";
}
function compiledContent55() {
  return "";
}
var import_serialize_javascript29, metadata28, frontmatter55, $$metadata28, $$Astro28, $$Blockchain6;
var init_chunk_9b8fee83 = __esm({
  ".netlify/functions-internal/chunks/chunk.9b8fee83.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript29 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata28 = { "headers": [], "source": "", "html": "" };
    frontmatter55 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata28 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/blockchain.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro28 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/blockchain.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Blockchain6 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro28, $$props, $$slots);
      Astro2.self = $$Blockchain6;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.ec6459d7.mjs
var chunk_ec6459d7_exports = {};
__export(chunk_ec6459d7_exports, {
  $$loadMetadata: () => $$loadMetadata28,
  Content: () => Content28,
  compiledContent: () => compiledContent56,
  default: () => load28,
  file: () => file28,
  frontmatter: () => frontmatter56,
  getHeaders: () => getHeaders28,
  rawContent: () => rawContent56,
  url: () => url28
});
function rawContent56() {
  return "";
}
async function compiledContent56() {
  return load28().then((m3) => m3.compiledContent());
}
function $$loadMetadata28() {
  return load28().then((m3) => m3.$$metadata);
}
async function load28() {
  return await Promise.resolve().then(() => (init_chunk_9b8fee83(), chunk_9b8fee83_exports));
}
function Content28(...args) {
  return load28().then((m3) => m3.default(...args));
}
function getHeaders28() {
  return load28().then((m3) => m3.metadata.headers);
}
var frontmatter56, file28, url28;
var init_chunk_ec6459d7 = __esm({
  ".netlify/functions-internal/chunks/chunk.ec6459d7.mjs"() {
    frontmatter56 = { "id": 4, "slug": "blockchain", "title": "Blockchain", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Embrace digital transactions by harnessing [pi|reactor]'s strategic coin development services to foster your business growth. Our globalized experts craft intelligent strategies around centered on core use cases and implementation. We have real-world experience delivering comprehensive offerings from ideation and coin development, to ICO and marketing for clients across all industries.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file28 = "C:/work-projects/pireactor/main-site/public/assets/content/en/services/blockchain.md";
    url28 = void 0;
    Content28.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.72746ad1.mjs
var chunk_72746ad1_exports = {};
__export(chunk_72746ad1_exports, {
  $$metadata: () => $$metadata29,
  compiledContent: () => compiledContent57,
  default: () => $$Strategy6,
  frontmatter: () => frontmatter57,
  metadata: () => metadata29,
  rawContent: () => rawContent57
});
function rawContent57() {
  return "\r\n\r\n\r\n";
}
function compiledContent57() {
  return "";
}
var import_serialize_javascript30, metadata29, frontmatter57, $$metadata29, $$Astro29, $$Strategy6;
var init_chunk_72746ad1 = __esm({
  ".netlify/functions-internal/chunks/chunk.72746ad1.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript30 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata29 = { "headers": [], "source": "\r\n\r\n\r\n", "html": "" };
    frontmatter57 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n", "html": "" } };
    $$metadata29 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/strategy.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro29 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/strategy.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Strategy6 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro29, $$props, $$slots);
      Astro2.self = $$Strategy6;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.d804232d.mjs
var chunk_d804232d_exports = {};
__export(chunk_d804232d_exports, {
  $$loadMetadata: () => $$loadMetadata29,
  Content: () => Content29,
  compiledContent: () => compiledContent58,
  default: () => load29,
  file: () => file29,
  frontmatter: () => frontmatter58,
  getHeaders: () => getHeaders29,
  rawContent: () => rawContent58,
  url: () => url29
});
function rawContent58() {
  return "\r\n\r\n\r\n";
}
async function compiledContent58() {
  return load29().then((m3) => m3.compiledContent());
}
function $$loadMetadata29() {
  return load29().then((m3) => m3.$$metadata);
}
async function load29() {
  return await Promise.resolve().then(() => (init_chunk_72746ad1(), chunk_72746ad1_exports));
}
function Content29(...args) {
  return load29().then((m3) => m3.default(...args));
}
function getHeaders29() {
  return load29().then((m3) => m3.metadata.headers);
}
var frontmatter58, file29, url29;
var init_chunk_d804232d = __esm({
  ".netlify/functions-internal/chunks/chunk.d804232d.mjs"() {
    frontmatter58 = { "id": 1, "slug": "global-strategy", "title": "Global Strategy", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Powered by worldclass doers familiar with the bleeding edge, we help businesses achieve better business outcomes with honesty. Analyzing your usecase, we will choose the best technology, not the most popular.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file29 = "C:/work-projects/pireactor/main-site/public/assets/content/en/services/strategy.md";
    url29 = void 0;
    Content29.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.19b6c5b7.mjs
var chunk_19b6c5b7_exports = {};
__export(chunk_19b6c5b7_exports, {
  $$metadata: () => $$metadata30,
  compiledContent: () => compiledContent59,
  default: () => $$Wallets6,
  frontmatter: () => frontmatter59,
  metadata: () => metadata30,
  rawContent: () => rawContent59
});
function rawContent59() {
  return "\r\n\r\n\r\n\r\n";
}
function compiledContent59() {
  return "";
}
var import_serialize_javascript31, metadata30, frontmatter59, $$metadata30, $$Astro30, $$Wallets6;
var init_chunk_19b6c5b7 = __esm({
  ".netlify/functions-internal/chunks/chunk.19b6c5b7.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript31 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata30 = { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" };
    frontmatter59 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }], "astro": { "headers": [], "source": "\r\n\r\n\r\n\r\n", "html": "" } };
    $$metadata30 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/wallets.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro30 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/services/wallets.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Wallets6 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro30, $$props, $$slots);
      Astro2.self = $$Wallets6;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.bf2e9b1c.mjs
var chunk_bf2e9b1c_exports = {};
__export(chunk_bf2e9b1c_exports, {
  $$loadMetadata: () => $$loadMetadata30,
  Content: () => Content30,
  compiledContent: () => compiledContent60,
  default: () => load30,
  file: () => file30,
  frontmatter: () => frontmatter60,
  getHeaders: () => getHeaders30,
  rawContent: () => rawContent60,
  url: () => url30
});
function rawContent60() {
  return "\r\n\r\n\r\n\r\n";
}
async function compiledContent60() {
  return load30().then((m3) => m3.compiledContent());
}
function $$loadMetadata30() {
  return load30().then((m3) => m3.$$metadata);
}
async function load30() {
  return await Promise.resolve().then(() => (init_chunk_19b6c5b7(), chunk_19b6c5b7_exports));
}
function Content30(...args) {
  return load30().then((m3) => m3.default(...args));
}
function getHeaders30() {
  return load30().then((m3) => m3.metadata.headers);
}
var frontmatter60, file30, url30;
var init_chunk_bf2e9b1c = __esm({
  ".netlify/functions-internal/chunks/chunk.bf2e9b1c.mjs"() {
    frontmatter60 = { "id": 5, "slug": "wallets-and-exchanges", "title": "Wallets and Exchanges", "titleDesc": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nemo sint dicta nihil fugit deserunt repudiandae ullam inventore assumenda molestiae? Exercitationem quidem autem voluptate repudiandae dolorum nihil voluptas impedit. Vero, enim.", "heroBtn": "Boost my project", "viewBtn": "View projects", "aboutTiltle": "About", "desc": "Our strategically designed services cater to your neesd, whether centralized, decentralized or P2P. Multicoin wallets are key to securely storing the full spectrum of crypto assets. We offer turnkey best practices to add extra layers of security to any exchange or app, using industry standard features like 2FA, multisig support and biometric authentication.", "values": [{ "name": "Projects done", "value": 32 }, { "name": "Unique Industries", "value": 12 }], "articles": [{ "title": "Section title 1", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 2", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }, { "title": "Section title 3", "img": "http://mywishlist.ru/pic/i/wish/300x300/007/917/281.png", "desc": "Porttitor mattis morbi a, condimentum vitae sit adipiscing. Tempor, diam porttitor at justo in. Non eu malesuada mauris in velit adipiscing et, neque. Iaculis a est elementum, neque orci cursus eget praesent massa. Non lectus enim et vitae. Sed aenean magna vel sed non. Euismod tristique pulvinar at ipsum lectus tempus. Tellus nisl facilisis dui id varius suspendisse est. Adipiscing urna nunc velit faucibus interdum pretium malesuada. Lobortis leo sit sed morbi. Interdum sit risus sapien habitant in. Adipiscing nisl sagittis, proin vivamus tellus sit amet orci elit. Posuere lacus diam, ut pellentesque. Lorem cursus ornare non venenatis. Enim malesuada netus ut urna blandit eget praesent porttitor euismod. Sed turpis et odio orci massa ultrices est." }] };
    file30 = "C:/work-projects/pireactor/main-site/public/assets/content/en/services/wallets.md";
    url30 = void 0;
    Content30.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.d1556035.mjs
var chunk_d1556035_exports = {};
__export(chunk_d1556035_exports, {
  $$metadata: () => $$metadata31,
  compiledContent: () => compiledContent61,
  default: () => $$Content,
  frontmatter: () => frontmatter61,
  metadata: () => metadata31,
  rawContent: () => rawContent61
});
function rawContent61() {
  return "";
}
function compiledContent61() {
  return "";
}
var import_serialize_javascript32, metadata31, frontmatter61, $$metadata31, $$Astro31, $$Content;
var init_chunk_d1556035 = __esm({
  ".netlify/functions-internal/chunks/chunk.d1556035.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript32 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata31 = { "headers": [], "source": "", "html": "" };
    frontmatter61 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } }, "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata31 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/content.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro31 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/content.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Content = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro31, $$props, $$slots);
      Astro2.self = $$Content;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.a70b9817.mjs
var chunk_a70b9817_exports = {};
__export(chunk_a70b9817_exports, {
  $$loadMetadata: () => $$loadMetadata31,
  Content: () => Content31,
  compiledContent: () => compiledContent62,
  default: () => load31,
  file: () => file31,
  frontmatter: () => frontmatter62,
  getHeaders: () => getHeaders31,
  rawContent: () => rawContent62,
  url: () => url31
});
function rawContent62() {
  return "";
}
async function compiledContent62() {
  return load31().then((m3) => m3.compiledContent());
}
function $$loadMetadata31() {
  return load31().then((m3) => m3.$$metadata);
}
async function load31() {
  return await Promise.resolve().then(() => (init_chunk_d1556035(), chunk_d1556035_exports));
}
function Content31(...args) {
  return load31().then((m3) => m3.default(...args));
}
function getHeaders31() {
  return load31().then((m3) => m3.metadata.headers);
}
var frontmatter62, file31, url31;
var init_chunk_a70b9817 = __esm({
  ".netlify/functions-internal/chunks/chunk.a70b9817.mjs"() {
    frontmatter62 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } } };
    file31 = "C:/work-projects/pireactor/main-site/public/assets/content/es/content.md";
    url31 = void 0;
    Content31.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.57376fd2.mjs
var chunk_57376fd2_exports = {};
__export(chunk_57376fd2_exports, {
  $$metadata: () => $$metadata32,
  compiledContent: () => compiledContent63,
  default: () => $$Content2,
  frontmatter: () => frontmatter63,
  metadata: () => metadata32,
  rawContent: () => rawContent63
});
function rawContent63() {
  return "";
}
function compiledContent63() {
  return "";
}
var import_serialize_javascript33, metadata32, frontmatter63, $$metadata32, $$Astro32, $$Content2;
var init_chunk_57376fd2 = __esm({
  ".netlify/functions-internal/chunks/chunk.57376fd2.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript33 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata32 = { "headers": [], "source": "", "html": "" };
    frontmatter63 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } }, "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata32 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/content.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro32 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/content.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Content2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro32, $$props, $$slots);
      Astro2.self = $$Content2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.7554dae3.mjs
var chunk_7554dae3_exports = {};
__export(chunk_7554dae3_exports, {
  $$loadMetadata: () => $$loadMetadata32,
  Content: () => Content32,
  compiledContent: () => compiledContent64,
  default: () => load32,
  file: () => file32,
  frontmatter: () => frontmatter64,
  getHeaders: () => getHeaders32,
  rawContent: () => rawContent64,
  url: () => url32
});
function rawContent64() {
  return "";
}
async function compiledContent64() {
  return load32().then((m3) => m3.compiledContent());
}
function $$loadMetadata32() {
  return load32().then((m3) => m3.$$metadata);
}
async function load32() {
  return await Promise.resolve().then(() => (init_chunk_57376fd2(), chunk_57376fd2_exports));
}
function Content32(...args) {
  return load32().then((m3) => m3.default(...args));
}
function getHeaders32() {
  return load32().then((m3) => m3.metadata.headers);
}
var frontmatter64, file32, url32;
var init_chunk_7554dae3 = __esm({
  ".netlify/functions-internal/chunks/chunk.7554dae3.mjs"() {
    frontmatter64 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } } };
    file32 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/content.md";
    url32 = void 0;
    Content32.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.0caf9a02.mjs
var chunk_0caf9a02_exports = {};
__export(chunk_0caf9a02_exports, {
  $$metadata: () => $$metadata33,
  compiledContent: () => compiledContent65,
  default: () => $$Content3,
  frontmatter: () => frontmatter65,
  metadata: () => metadata33,
  rawContent: () => rawContent65
});
function rawContent65() {
  return "";
}
function compiledContent65() {
  return "";
}
var import_serialize_javascript34, metadata33, frontmatter65, $$metadata33, $$Astro33, $$Content3;
var init_chunk_0caf9a02 = __esm({
  ".netlify/functions-internal/chunks/chunk.0caf9a02.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript34 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata33 = { "headers": [], "source": "", "html": "" };
    frontmatter65 = { "lang": "ru", "title": "Pireactor", "description": "Global Resource Solutions", "href": "ru", "nav": { "about": "\u041E \u043D\u0430\u0441", "work": "\u041F\u043E\u0440\u0442\u0444\u043E\u043B\u0438", "services": "\u0423\u0441\u043B\u0443\u0433\u0438", "btn": "\u0421\u0432\u044F\u0437\u0430\u0442\u044C\u0441\u044F" }, "index": { "hero": { "redline": "\u041A\u0430\u0442\u0430\u043B\u0438\u0437\u0430\u0442\u043E\u0440", "title": "\u043F\u0440\u043E\u0434\u0443\u0442\u043E\u0432 \u0438 \u0441\u0442\u0430\u0440\u0442\u0430\u043F\u043E\u0432", "btnText": "\u041F\u0440\u043E\u043A\u0430\u0447\u0430\u0439\u0442\u0435 \u043C\u043E\u0439 \u043F\u0440\u043E\u0435\u043A\u0442" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } }, "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata33 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/content.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro33 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ru/content.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Content3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro33, $$props, $$slots);
      Astro2.self = $$Content3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.ad1611b2.mjs
var chunk_ad1611b2_exports = {};
__export(chunk_ad1611b2_exports, {
  $$loadMetadata: () => $$loadMetadata33,
  Content: () => Content33,
  compiledContent: () => compiledContent66,
  default: () => load33,
  file: () => file33,
  frontmatter: () => frontmatter66,
  getHeaders: () => getHeaders33,
  rawContent: () => rawContent66,
  url: () => url33
});
function rawContent66() {
  return "";
}
async function compiledContent66() {
  return load33().then((m3) => m3.compiledContent());
}
function $$loadMetadata33() {
  return load33().then((m3) => m3.$$metadata);
}
async function load33() {
  return await Promise.resolve().then(() => (init_chunk_0caf9a02(), chunk_0caf9a02_exports));
}
function Content33(...args) {
  return load33().then((m3) => m3.default(...args));
}
function getHeaders33() {
  return load33().then((m3) => m3.metadata.headers);
}
var frontmatter66, file33, url33;
var init_chunk_ad1611b2 = __esm({
  ".netlify/functions-internal/chunks/chunk.ad1611b2.mjs"() {
    frontmatter66 = { "lang": "ru", "title": "Pireactor", "description": "Global Resource Solutions", "href": "ru", "nav": { "about": "\u041E \u043D\u0430\u0441", "work": "\u041F\u043E\u0440\u0442\u0444\u043E\u043B\u0438", "services": "\u0423\u0441\u043B\u0443\u0433\u0438", "btn": "\u0421\u0432\u044F\u0437\u0430\u0442\u044C\u0441\u044F" }, "index": { "hero": { "redline": "\u041A\u0430\u0442\u0430\u043B\u0438\u0437\u0430\u0442\u043E\u0440", "title": "\u043F\u0440\u043E\u0434\u0443\u0442\u043E\u0432 \u0438 \u0441\u0442\u0430\u0440\u0442\u0430\u043F\u043E\u0432", "btnText": "\u041F\u0440\u043E\u043A\u0430\u0447\u0430\u0439\u0442\u0435 \u043C\u043E\u0439 \u043F\u0440\u043E\u0435\u043A\u0442" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } } };
    file33 = "C:/work-projects/pireactor/main-site/public/assets/content/ru/content.md";
    url33 = void 0;
    Content33.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.a70c2eac.mjs
var chunk_a70c2eac_exports = {};
__export(chunk_a70c2eac_exports, {
  $$metadata: () => $$metadata34,
  compiledContent: () => compiledContent67,
  default: () => $$Content4,
  frontmatter: () => frontmatter67,
  metadata: () => metadata34,
  rawContent: () => rawContent67
});
function rawContent67() {
  return "";
}
function compiledContent67() {
  return "";
}
var import_serialize_javascript35, metadata34, frontmatter67, $$metadata34, $$Astro34, $$Content4;
var init_chunk_a70c2eac = __esm({
  ".netlify/functions-internal/chunks/chunk.a70c2eac.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript35 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata34 = { "headers": [], "source": "", "html": "" };
    frontmatter67 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } }, "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata34 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/content.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro34 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/tr/content.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Content4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro34, $$props, $$slots);
      Astro2.self = $$Content4;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.ccb8540d.mjs
var chunk_ccb8540d_exports = {};
__export(chunk_ccb8540d_exports, {
  $$loadMetadata: () => $$loadMetadata34,
  Content: () => Content34,
  compiledContent: () => compiledContent68,
  default: () => load34,
  file: () => file34,
  frontmatter: () => frontmatter68,
  getHeaders: () => getHeaders34,
  rawContent: () => rawContent68,
  url: () => url34
});
function rawContent68() {
  return "";
}
async function compiledContent68() {
  return load34().then((m3) => m3.compiledContent());
}
function $$loadMetadata34() {
  return load34().then((m3) => m3.$$metadata);
}
async function load34() {
  return await Promise.resolve().then(() => (init_chunk_a70c2eac(), chunk_a70c2eac_exports));
}
function Content34(...args) {
  return load34().then((m3) => m3.default(...args));
}
function getHeaders34() {
  return load34().then((m3) => m3.metadata.headers);
}
var frontmatter68, file34, url34;
var init_chunk_ccb8540d = __esm({
  ".netlify/functions-internal/chunks/chunk.ccb8540d.mjs"() {
    frontmatter68 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } } };
    file34 = "C:/work-projects/pireactor/main-site/public/assets/content/tr/content.md";
    url34 = void 0;
    Content34.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.e26d0b71.mjs
var chunk_e26d0b71_exports = {};
__export(chunk_e26d0b71_exports, {
  $$metadata: () => $$metadata35,
  compiledContent: () => compiledContent69,
  default: () => $$Content5,
  frontmatter: () => frontmatter69,
  metadata: () => metadata35,
  rawContent: () => rawContent69
});
function rawContent69() {
  return "";
}
function compiledContent69() {
  return "";
}
var import_serialize_javascript36, metadata35, frontmatter69, $$metadata35, $$Astro35, $$Content5;
var init_chunk_e26d0b71 = __esm({
  ".netlify/functions-internal/chunks/chunk.e26d0b71.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript36 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata35 = { "headers": [], "source": "", "html": "" };
    frontmatter69 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } }, "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata35 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/content.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro35 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/ua/content.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Content5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro35, $$props, $$slots);
      Astro2.self = $$Content5;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.76ad3dcc.mjs
var chunk_76ad3dcc_exports = {};
__export(chunk_76ad3dcc_exports, {
  $$loadMetadata: () => $$loadMetadata35,
  Content: () => Content35,
  compiledContent: () => compiledContent70,
  default: () => load35,
  file: () => file35,
  frontmatter: () => frontmatter70,
  getHeaders: () => getHeaders35,
  rawContent: () => rawContent70,
  url: () => url35
});
function rawContent70() {
  return "";
}
async function compiledContent70() {
  return load35().then((m3) => m3.compiledContent());
}
function $$loadMetadata35() {
  return load35().then((m3) => m3.$$metadata);
}
async function load35() {
  return await Promise.resolve().then(() => (init_chunk_e26d0b71(), chunk_e26d0b71_exports));
}
function Content35(...args) {
  return load35().then((m3) => m3.default(...args));
}
function getHeaders35() {
  return load35().then((m3) => m3.metadata.headers);
}
var frontmatter70, file35, url35;
var init_chunk_76ad3dcc = __esm({
  ".netlify/functions-internal/chunks/chunk.76ad3dcc.mjs"() {
    frontmatter70 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } } };
    file35 = "C:/work-projects/pireactor/main-site/public/assets/content/ua/content.md";
    url35 = void 0;
    Content35.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.5e16a30b.mjs
var chunk_5e16a30b_exports = {};
__export(chunk_5e16a30b_exports, {
  $$metadata: () => $$metadata36,
  compiledContent: () => compiledContent71,
  default: () => $$Content6,
  frontmatter: () => frontmatter71,
  metadata: () => metadata36,
  rawContent: () => rawContent71
});
function rawContent71() {
  return "";
}
function compiledContent71() {
  return "";
}
var import_serialize_javascript37, metadata36, frontmatter71, $$metadata36, $$Astro36, $$Content6;
var init_chunk_5e16a30b = __esm({
  ".netlify/functions-internal/chunks/chunk.5e16a30b.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript37 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata36 = { "headers": [], "source": "", "html": "" };
    frontmatter71 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } }, "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata36 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/content.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro36 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/content.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Content6 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro36, $$props, $$slots);
      Astro2.self = $$Content6;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.c9d3957c.mjs
var chunk_c9d3957c_exports = {};
__export(chunk_c9d3957c_exports, {
  $$loadMetadata: () => $$loadMetadata36,
  Content: () => Content36,
  compiledContent: () => compiledContent72,
  default: () => load36,
  file: () => file36,
  frontmatter: () => frontmatter72,
  getHeaders: () => getHeaders36,
  rawContent: () => rawContent72,
  url: () => url36
});
function rawContent72() {
  return "";
}
async function compiledContent72() {
  return load36().then((m3) => m3.compiledContent());
}
function $$loadMetadata36() {
  return load36().then((m3) => m3.$$metadata);
}
async function load36() {
  return await Promise.resolve().then(() => (init_chunk_5e16a30b(), chunk_5e16a30b_exports));
}
function Content36(...args) {
  return load36().then((m3) => m3.default(...args));
}
function getHeaders36() {
  return load36().then((m3) => m3.metadata.headers);
}
var frontmatter72, file36, url36;
var init_chunk_c9d3957c = __esm({
  ".netlify/functions-internal/chunks/chunk.c9d3957c.mjs"() {
    frontmatter72 = { "lang": "en", "title": "Pireactor", "description": "Global Resource Solutions", "href": "en", "nav": { "about": "About us", "work": "Our Work", "services": "Our Services", "btn": "Let's talk" }, "index": { "hero": { "redline": "Startup &", "title": "Product Catalyzer", "btnText": "Accelerate my Roadmap" }, "desc": "We help clients explore requirements and work out what they really need today and to plan for tomorrow tomorrow. Instead of reiterating every week, we architect space for modular features and functionality expansions. Wepractice discipline to keep all parties on track and avoid scope creep. Only after the core project is complete do we start a new cycle", "mapTitle": "We develop projects for clients from all over the world" }, "about": { "hero": { "redline": "About", "title": "pireactor" }, "counterTitle": "We develop projects for clients from all over the world", "desc": "Have you ever wondered what all the PMPs, the Fifth Degree Process Kata Thai Judo certified experts in project... actually do? Even with decades of aggregate experience, we couldn't answer that question. So we made a better way.", "whoWeAreTitle": "Who we are", "leadsTitle": "Our Global Leads", "text": ["  [pi\u2503reactor] is reinventing straight through quality at speed global solutions from resourcing to delivery\u2014enabled by our proven & proprietary, Micro-Agile to Beyond-Agile, specialized end-to-end methodologies & our fully global talent management built atop of thirty years of combined industry experience across our core team. In short, we are a startup & product catalyzer, accelerating delivery of top quality at fractional cost for: product design, implementation and scaling, thereby unchaining funded founders and established businesses with our unparalleled leanmax global resourcing system. ", " We do not seek equity and. We accept select, funded member engagements: ranging from feature addition to functionality extension to full product development, from initial conception/scoping through release-to-market. We also provide venture transformation including visioning, planning, implementation and handoff. "], "locationsTitle": "Locations", "locations": [{ "name": "Kyiv", "img": "/assets/img/about/location/k.webp" }, { "name": "New York", "img": "/assets/img/about/location/ny.webp" }, { "name": "Gdansk", "img": "/assets/img/about/location/g.webp" }] }, "counters": [{ "value": 72, "title": "Projects Completed" }, { "value": 12, "title": "Unique Industries" }, { "value": 32, "title": "Number of employees" }, { "value": 5, "title": "Years on the market" }], "howSection": { "title": "How We Work", "list": [{ "title": "Planning", "desc": "Our team examines your requirements and expectations, takes account of your needs and creates a preliminary plan.", "class": "Planning" }, { "title": "Designing", "desc": "Everything from an efficient framework to an easy-to-use interface is drawn up, examined, evaluated and approved during the design phase.", "class": "Designing" }, { "title": "Defining", "desc": "We run due diligence checks, we have you approve features, we agree on timelines, run feasibility tests and finalize the design.", "class": "Defining" }, { "title": "Testing", "desc": "We apply all kinds of tests to both check the function of the software and test its security. We follow test-driven development.", "class": "Testing" }, { "title": "Building", "desc": "Our developpers, graphic designers and development management team get hard to work ensuring that your software is as efficient as possible.", "class": "Building" }, { "title": "Deployment", "desc": "With your approval, the software is deployed to the needed environment. All rights to the custom solution are transferred to you.", "class": "Deployment" }, { "title": "Maintenance", "desc": "We ensure all maintenance can be done easily by your own staff, but we also offer ongoing maintenance for highly complex and/or larger projects.", "class": "Maintenance" }] }, "services": { "title": "Our Services" }, "tech": { "title": "Technologies We Love", "desc": "Our technology expertise includes but not limited to:" }, "form": { "title": "Need an MVP?", "desc": "Let's arrange a call where we can discuss your project and determine if you're a good fit.", "fields": { "name": "Name", "email": "Email", "phone": "Phone", "subj": "Subject", "textArea": "Message (optional)", "fetchErr": "Something wrong! Please reload the page and try again", "sucMsg": "The form was sent successfully", "loading": "Sending...", "btnText": "Get a free consultation" } } };
    file36 = "C:/work-projects/pireactor/main-site/public/assets/content/en/content.md";
    url36 = void 0;
    Content36.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.3c153e1e.mjs
var chunk_3c153e1e_exports = {};
__export(chunk_3c153e1e_exports, {
  $$metadata: () => $$metadata37,
  compiledContent: () => compiledContent73,
  default: () => $$AlexAlejandre,
  frontmatter: () => frontmatter73,
  metadata: () => metadata37,
  rawContent: () => rawContent73
});
function rawContent73() {
  return "";
}
function compiledContent73() {
  return "";
}
var import_serialize_javascript38, metadata37, frontmatter73, $$metadata37, $$Astro37, $$AlexAlejandre;
var init_chunk_3c153e1e = __esm({
  ".netlify/functions-internal/chunks/chunk.3c153e1e.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript38 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata37 = { "headers": [], "source": "", "html": "" };
    frontmatter73 = { "id": 2, "desc": "Solutions and Releases", "name": "Alex Alejandre", "imgSource": "/assets/img/about/team/2.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/alexalejandre/", "info": " Alex specializes in solution-tailored and team-centric architecture and implementation. Starting from a organization's business model and availible resources, he makes the proper compromises to achieve an optimal deployment able to be modularly updated in accordance to future needs. \n \nApplying the principles of industrial engineering and efficient factory planning to the bloated software engineering space, Alex applies his innate entrepreneurial mindset to optimize the software delivery lifecycle (SDLC).  \n \nA language lover, Alex speaks German, Russian, French, Spanish and is delving into Persian and Arabic. ", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata37 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/leads/AlexAlejandre.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro37 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/leads/AlexAlejandre.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$AlexAlejandre = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro37, $$props, $$slots);
      Astro2.self = $$AlexAlejandre;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.5790b932.mjs
var chunk_5790b932_exports = {};
__export(chunk_5790b932_exports, {
  $$loadMetadata: () => $$loadMetadata37,
  Content: () => Content37,
  compiledContent: () => compiledContent74,
  default: () => load37,
  file: () => file37,
  frontmatter: () => frontmatter74,
  getHeaders: () => getHeaders37,
  rawContent: () => rawContent74,
  url: () => url37
});
function rawContent74() {
  return "";
}
async function compiledContent74() {
  return load37().then((m3) => m3.compiledContent());
}
function $$loadMetadata37() {
  return load37().then((m3) => m3.$$metadata);
}
async function load37() {
  return await Promise.resolve().then(() => (init_chunk_3c153e1e(), chunk_3c153e1e_exports));
}
function Content37(...args) {
  return load37().then((m3) => m3.default(...args));
}
function getHeaders37() {
  return load37().then((m3) => m3.metadata.headers);
}
var frontmatter74, file37, url37;
var init_chunk_5790b932 = __esm({
  ".netlify/functions-internal/chunks/chunk.5790b932.mjs"() {
    frontmatter74 = { "id": 2, "desc": "Solutions and Releases", "name": "Alex Alejandre", "imgSource": "/assets/img/about/team/2.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/alexalejandre/", "info": " Alex specializes in solution-tailored and team-centric architecture and implementation. Starting from a organization's business model and availible resources, he makes the proper compromises to achieve an optimal deployment able to be modularly updated in accordance to future needs. \n \nApplying the principles of industrial engineering and efficient factory planning to the bloated software engineering space, Alex applies his innate entrepreneurial mindset to optimize the software delivery lifecycle (SDLC).  \n \nA language lover, Alex speaks German, Russian, French, Spanish and is delving into Persian and Arabic. " };
    file37 = "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/AlexAlejandre.md";
    url37 = void 0;
    Content37.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.7a3612d0.mjs
var chunk_7a3612d0_exports = {};
__export(chunk_7a3612d0_exports, {
  $$metadata: () => $$metadata38,
  compiledContent: () => compiledContent75,
  default: () => $$JohnVermazenSt,
  frontmatter: () => frontmatter75,
  metadata: () => metadata38,
  rawContent: () => rawContent75
});
function rawContent75() {
  return "";
}
function compiledContent75() {
  return "";
}
var import_serialize_javascript39, metadata38, frontmatter75, $$metadata38, $$Astro38, $$JohnVermazenSt;
var init_chunk_7a3612d0 = __esm({
  ".netlify/functions-internal/chunks/chunk.7a3612d0.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript39 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata38 = { "headers": [], "source": "", "html": "" };
    frontmatter75 = { "id": 1, "desc": "Strategy & Engagements", "name": "John Vermassen", "imgSource": "/assets/img/about/team/1.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/johnnynycavlb/", "info": " 'Weird how they preach peak efficiency and innovation, then hire talent in the same fashion as manual gang-labor through history, not at all following in the well-ordered footsteps of the Ford production line.'  \n \nThe general attribute in the L to XXL programs John worked in as a tech consultant for institutional financial and information services in New York City was a persistent and complete lack of mutual faith that either the client firm or the consulting were engaged in a common purpose with clear goals. ", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata38 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JohnVermazenSt.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro38 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JohnVermazenSt.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$JohnVermazenSt = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro38, $$props, $$slots);
      Astro2.self = $$JohnVermazenSt;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.e09586c6.mjs
var chunk_e09586c6_exports = {};
__export(chunk_e09586c6_exports, {
  $$loadMetadata: () => $$loadMetadata38,
  Content: () => Content38,
  compiledContent: () => compiledContent76,
  default: () => load38,
  file: () => file38,
  frontmatter: () => frontmatter76,
  getHeaders: () => getHeaders38,
  rawContent: () => rawContent76,
  url: () => url38
});
function rawContent76() {
  return "";
}
async function compiledContent76() {
  return load38().then((m3) => m3.compiledContent());
}
function $$loadMetadata38() {
  return load38().then((m3) => m3.$$metadata);
}
async function load38() {
  return await Promise.resolve().then(() => (init_chunk_7a3612d0(), chunk_7a3612d0_exports));
}
function Content38(...args) {
  return load38().then((m3) => m3.default(...args));
}
function getHeaders38() {
  return load38().then((m3) => m3.metadata.headers);
}
var frontmatter76, file38, url38;
var init_chunk_e09586c6 = __esm({
  ".netlify/functions-internal/chunks/chunk.e09586c6.mjs"() {
    frontmatter76 = { "id": 1, "desc": "Strategy & Engagements", "name": "John Vermassen", "imgSource": "/assets/img/about/team/1.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/johnnynycavlb/", "info": " 'Weird how they preach peak efficiency and innovation, then hire talent in the same fashion as manual gang-labor through history, not at all following in the well-ordered footsteps of the Ford production line.'  \n \nThe general attribute in the L to XXL programs John worked in as a tech consultant for institutional financial and information services in New York City was a persistent and complete lack of mutual faith that either the client firm or the consulting were engaged in a common purpose with clear goals. " };
    file38 = "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JohnVermazenSt.md";
    url38 = void 0;
    Content38.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.46294fba.mjs
var chunk_46294fba_exports = {};
__export(chunk_46294fba_exports, {
  $$metadata: () => $$metadata39,
  compiledContent: () => compiledContent77,
  default: () => $$JustynaBorwik,
  frontmatter: () => frontmatter77,
  metadata: () => metadata39,
  rawContent: () => rawContent77
});
function rawContent77() {
  return "";
}
function compiledContent77() {
  return "";
}
var import_serialize_javascript40, metadata39, frontmatter77, $$metadata39, $$Astro39, $$JustynaBorwik;
var init_chunk_46294fba = __esm({
  ".netlify/functions-internal/chunks/chunk.46294fba.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript40 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata39 = { "headers": [], "source": "", "html": "" };
    frontmatter77 = { "id": 4, "desc": "Product Ownership", "name": "Justyna Borwik", "imgSource": "/assets/img/about/team/4.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/justynaborwik/", "info": " Responsible for effort allocations, workflow control and coordinating discrete business lines, Justyna uses advanced actuarial tools and project management expertiese to price new ventures and allocate comesmurate resources to them. \n \nShe is a key mentor to product managers and actively develops resources and engineering relationships throughout Central Europe.", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata39 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JustynaBorwik.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro39 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JustynaBorwik.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$JustynaBorwik = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro39, $$props, $$slots);
      Astro2.self = $$JustynaBorwik;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.6b16a774.mjs
var chunk_6b16a774_exports = {};
__export(chunk_6b16a774_exports, {
  $$loadMetadata: () => $$loadMetadata39,
  Content: () => Content39,
  compiledContent: () => compiledContent78,
  default: () => load39,
  file: () => file39,
  frontmatter: () => frontmatter78,
  getHeaders: () => getHeaders39,
  rawContent: () => rawContent78,
  url: () => url39
});
function rawContent78() {
  return "";
}
async function compiledContent78() {
  return load39().then((m3) => m3.compiledContent());
}
function $$loadMetadata39() {
  return load39().then((m3) => m3.$$metadata);
}
async function load39() {
  return await Promise.resolve().then(() => (init_chunk_46294fba(), chunk_46294fba_exports));
}
function Content39(...args) {
  return load39().then((m3) => m3.default(...args));
}
function getHeaders39() {
  return load39().then((m3) => m3.metadata.headers);
}
var frontmatter78, file39, url39;
var init_chunk_6b16a774 = __esm({
  ".netlify/functions-internal/chunks/chunk.6b16a774.mjs"() {
    frontmatter78 = { "id": 4, "desc": "Product Ownership", "name": "Justyna Borwik", "imgSource": "/assets/img/about/team/4.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/justynaborwik/", "info": " Responsible for effort allocations, workflow control and coordinating discrete business lines, Justyna uses advanced actuarial tools and project management expertiese to price new ventures and allocate comesmurate resources to them. \n \nShe is a key mentor to product managers and actively develops resources and engineering relationships throughout Central Europe." };
    file39 = "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JustynaBorwik.md";
    url39 = void 0;
    Content39.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.4195bd29.mjs
var chunk_4195bd29_exports = {};
__export(chunk_4195bd29_exports, {
  $$metadata: () => $$metadata40,
  compiledContent: () => compiledContent79,
  default: () => $$StevenVermazen,
  frontmatter: () => frontmatter79,
  metadata: () => metadata40,
  rawContent: () => rawContent79
});
function rawContent79() {
  return "";
}
function compiledContent79() {
  return "";
}
var import_serialize_javascript41, metadata40, frontmatter79, $$metadata40, $$Astro40, $$StevenVermazen;
var init_chunk_4195bd29 = __esm({
  ".netlify/functions-internal/chunks/chunk.4195bd29.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript41 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata40 = { "headers": [], "source": "", "html": "" };
    frontmatter79 = { "id": 3, "desc": "Resourcing and Insights", "name": "Steven Vermazen", "imgSource": "/assets/img/about/team/3.webp", "linkT": "#", "linkLI": "#", "info": " In today's rapidly changing industry, Steven would have arguably graduated as a data scientist, but in the world of yesterday he made himself an engineer with a bent for high-load algorithmic mathematics. \n \nHe chose to travel light and selected projects that kept his work and life balanced and his intellect clear. In effect, he practiced field triage as a delivery trauma surgery for software projects found flipped with all 6 axels spinning. He brings the bottom-up post mortem of the contemporary software industry.", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata40 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/leads/StevenVermazen.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro40 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/leads/StevenVermazen.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$StevenVermazen = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro40, $$props, $$slots);
      Astro2.self = $$StevenVermazen;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.6c0c45b4.mjs
var chunk_6c0c45b4_exports = {};
__export(chunk_6c0c45b4_exports, {
  $$loadMetadata: () => $$loadMetadata40,
  Content: () => Content40,
  compiledContent: () => compiledContent80,
  default: () => load40,
  file: () => file40,
  frontmatter: () => frontmatter80,
  getHeaders: () => getHeaders40,
  rawContent: () => rawContent80,
  url: () => url40
});
function rawContent80() {
  return "";
}
async function compiledContent80() {
  return load40().then((m3) => m3.compiledContent());
}
function $$loadMetadata40() {
  return load40().then((m3) => m3.$$metadata);
}
async function load40() {
  return await Promise.resolve().then(() => (init_chunk_4195bd29(), chunk_4195bd29_exports));
}
function Content40(...args) {
  return load40().then((m3) => m3.default(...args));
}
function getHeaders40() {
  return load40().then((m3) => m3.metadata.headers);
}
var frontmatter80, file40, url40;
var init_chunk_6c0c45b4 = __esm({
  ".netlify/functions-internal/chunks/chunk.6c0c45b4.mjs"() {
    frontmatter80 = { "id": 3, "desc": "Resourcing and Insights", "name": "Steven Vermazen", "imgSource": "/assets/img/about/team/3.webp", "linkT": "#", "linkLI": "#", "info": " In today's rapidly changing industry, Steven would have arguably graduated as a data scientist, but in the world of yesterday he made himself an engineer with a bent for high-load algorithmic mathematics. \n \nHe chose to travel light and selected projects that kept his work and life balanced and his intellect clear. In effect, he practiced field triage as a delivery trauma surgery for software projects found flipped with all 6 axels spinning. He brings the bottom-up post mortem of the contemporary software industry." };
    file40 = "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/StevenVermazen.md";
    url40 = void 0;
    Content40.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.2ba17b57.mjs
var chunk_2ba17b57_exports = {};
__export(chunk_2ba17b57_exports, {
  $$metadata: () => $$metadata41,
  compiledContent: () => compiledContent81,
  default: () => $$Brewery,
  frontmatter: () => frontmatter81,
  metadata: () => metadata41,
  rawContent: () => rawContent81
});
function rawContent81() {
  return "We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.\r\n \r\nWithin a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.\r\n\r\nAs the client's core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.\r\n\r\n\r\n\r\n";
}
function compiledContent81() {
  return "<p>We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.</p>\n<p>Within a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.</p>\n<p>As the client\u2019s core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.</p>";
}
var import_serialize_javascript42, metadata41, frontmatter81, $$metadata41, $$Astro41, $$Brewery;
var init_chunk_2ba17b57 = __esm({
  ".netlify/functions-internal/chunks/chunk.2ba17b57.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript42 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata41 = { "headers": [], "source": "We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.\r\n \r\nWithin a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.\r\n\r\nAs the client's core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.\r\n\r\n\r\n\r\n", "html": "<p>We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.</p>\n<p>Within a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.</p>\n<p>As the client\u2019s core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.</p>" };
    frontmatter81 = { "slug": "Crowd-Sourced-Brewing", "title": "Crowd Sourced Brewing", "developers": 12, "months": 55, "tags": ["Automation", "Product Developpment", "Architecture"], "desc": "A Croatian-Belgian craftbrewer wanted a webshop and marketing campaign to bring customers to the new platform. He got much more.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "development", "period": "December 2017", "icon": "Development phase" }, { "name": "release", "period": "March 2018", "icon": "Development phase" }, { "name": "support", "period": "April 2018 \u2014 May 2021", "icon": "Development phase" }], "bullets": ["Mobile App", "Web App", "UI/UX", "Analytics "], "result": [{ "name": "Profitability Index", "value": 1350, "format": "%" }, { "name": "Time to Delivery", "value": 4, "format": "Months" }, { "name": "New users", "value": 4e4, "format": "+" }], "astro": { "headers": [], "source": "We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.\r\n \r\nWithin a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.\r\n\r\nAs the client's core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.\r\n\r\n\r\n\r\n", "html": "<p>We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.</p>\n<p>Within a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.</p>\n<p>As the client\u2019s core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.</p>" } };
    $$metadata41 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/Brewery.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro41 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/Brewery.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Brewery = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro41, $$props, $$slots);
      Astro2.self = $$Brewery;
      return render2`<p>We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.</p>
<p>Within a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.</p>
<p>As the client’s core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.c1a611e2.mjs
var chunk_c1a611e2_exports = {};
__export(chunk_c1a611e2_exports, {
  $$loadMetadata: () => $$loadMetadata41,
  Content: () => Content41,
  compiledContent: () => compiledContent82,
  default: () => load41,
  file: () => file41,
  frontmatter: () => frontmatter82,
  getHeaders: () => getHeaders41,
  rawContent: () => rawContent82,
  url: () => url41
});
function rawContent82() {
  return "We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.\r\n \r\nWithin a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.\r\n\r\nAs the client's core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.\r\n\r\n\r\n\r\n";
}
async function compiledContent82() {
  return load41().then((m3) => m3.compiledContent());
}
function $$loadMetadata41() {
  return load41().then((m3) => m3.$$metadata);
}
async function load41() {
  return await Promise.resolve().then(() => (init_chunk_2ba17b57(), chunk_2ba17b57_exports));
}
function Content41(...args) {
  return load41().then((m3) => m3.default(...args));
}
function getHeaders41() {
  return load41().then((m3) => m3.metadata.headers);
}
var frontmatter82, file41, url41;
var init_chunk_c1a611e2 = __esm({
  ".netlify/functions-internal/chunks/chunk.c1a611e2.mjs"() {
    frontmatter82 = { "slug": "Crowd-Sourced-Brewing", "title": "Crowd Sourced Brewing", "developers": 12, "months": 55, "tags": ["Automation", "Product Developpment", "Architecture"], "desc": "A Croatian-Belgian craftbrewer wanted a webshop and marketing campaign to bring customers to the new platform. He got much more.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "development", "period": "December 2017", "icon": "Development phase" }, { "name": "release", "period": "March 2018", "icon": "Development phase" }, { "name": "support", "period": "April 2018 \u2014 May 2021", "icon": "Development phase" }], "bullets": ["Mobile App", "Web App", "UI/UX", "Analytics "], "result": [{ "name": "Profitability Index", "value": 1350, "format": "%" }, { "name": "Time to Delivery", "value": 4, "format": "Months" }, { "name": "New users", "value": 4e4, "format": "+" }] };
    file41 = "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/Brewery.md";
    url41 = void 0;
    Content41.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.8f49727f.mjs
var chunk_8f49727f_exports = {};
__export(chunk_8f49727f_exports, {
  $$metadata: () => $$metadata42,
  compiledContent: () => compiledContent83,
  default: () => $$NewHope20Copy,
  frontmatter: () => frontmatter83,
  metadata: () => metadata42,
  rawContent: () => rawContent83
});
function rawContent83() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
function compiledContent83() {
  return "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>";
}
var import_serialize_javascript43, metadata42, frontmatter83, $$metadata42, $$Astro42, $$NewHope20Copy;
var init_chunk_8f49727f = __esm({
  ".netlify/functions-internal/chunks/chunk.8f49727f.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript43 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata42 = { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" };
    frontmatter83 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Automation", "Wallets and Exchanges", "Architecture"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }], "astro": { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" } };
    $$metadata42 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope%20copy.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro42 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope%20copy.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$NewHope20Copy = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro42, $$props, $$slots);
      Astro2.self = $$NewHope20Copy;
      return render2`<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.
A arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>
<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>
<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>
<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.1fa0ae9a.mjs
var chunk_1fa0ae9a_exports = {};
__export(chunk_1fa0ae9a_exports, {
  $$loadMetadata: () => $$loadMetadata42,
  Content: () => Content42,
  compiledContent: () => compiledContent84,
  default: () => load42,
  file: () => file42,
  frontmatter: () => frontmatter84,
  getHeaders: () => getHeaders42,
  rawContent: () => rawContent84,
  url: () => url42
});
function rawContent84() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
async function compiledContent84() {
  return load42().then((m3) => m3.compiledContent());
}
function $$loadMetadata42() {
  return load42().then((m3) => m3.$$metadata);
}
async function load42() {
  return await Promise.resolve().then(() => (init_chunk_8f49727f(), chunk_8f49727f_exports));
}
function Content42(...args) {
  return load42().then((m3) => m3.default(...args));
}
function getHeaders42() {
  return load42().then((m3) => m3.metadata.headers);
}
var frontmatter84, file42, url42;
var init_chunk_1fa0ae9a = __esm({
  ".netlify/functions-internal/chunks/chunk.1fa0ae9a.mjs"() {
    frontmatter84 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Automation", "Wallets and Exchanges", "Architecture"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }] };
    file42 = "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope copy.md";
    url42 = void 0;
    Content42.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.e3e3886d.mjs
var chunk_e3e3886d_exports = {};
__export(chunk_e3e3886d_exports, {
  $$metadata: () => $$metadata43,
  compiledContent: () => compiledContent85,
  default: () => $$NewHope,
  frontmatter: () => frontmatter85,
  metadata: () => metadata43,
  rawContent: () => rawContent85
});
function rawContent85() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
function compiledContent85() {
  return "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>";
}
var import_serialize_javascript44, metadata43, frontmatter85, $$metadata43, $$Astro43, $$NewHope;
var init_chunk_e3e3886d = __esm({
  ".netlify/functions-internal/chunks/chunk.e3e3886d.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript44 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata43 = { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" };
    frontmatter85 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Wallets and Exchanges", "Blockchain", "Global Strategy"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }], "astro": { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" } };
    $$metadata43 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro43 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$NewHope = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro43, $$props, $$slots);
      Astro2.self = $$NewHope;
      return render2`<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.
A arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>
<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>
<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>
<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.8dce1602.mjs
var chunk_8dce1602_exports = {};
__export(chunk_8dce1602_exports, {
  $$loadMetadata: () => $$loadMetadata43,
  Content: () => Content43,
  compiledContent: () => compiledContent86,
  default: () => load43,
  file: () => file43,
  frontmatter: () => frontmatter86,
  getHeaders: () => getHeaders43,
  rawContent: () => rawContent86,
  url: () => url43
});
function rawContent86() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
async function compiledContent86() {
  return load43().then((m3) => m3.compiledContent());
}
function $$loadMetadata43() {
  return load43().then((m3) => m3.$$metadata);
}
async function load43() {
  return await Promise.resolve().then(() => (init_chunk_e3e3886d(), chunk_e3e3886d_exports));
}
function Content43(...args) {
  return load43().then((m3) => m3.default(...args));
}
function getHeaders43() {
  return load43().then((m3) => m3.metadata.headers);
}
var frontmatter86, file43, url43;
var init_chunk_8dce1602 = __esm({
  ".netlify/functions-internal/chunks/chunk.8dce1602.mjs"() {
    frontmatter86 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Wallets and Exchanges", "Blockchain", "Global Strategy"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }] };
    file43 = "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope.md";
    url43 = void 0;
    Content43.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.6ffd3df4.mjs
var chunk_6ffd3df4_exports = {};
__export(chunk_6ffd3df4_exports, {
  $$metadata: () => $$metadata44,
  compiledContent: () => compiledContent87,
  default: () => $$NewHope2,
  frontmatter: () => frontmatter87,
  metadata: () => metadata44,
  rawContent: () => rawContent87
});
function rawContent87() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
function compiledContent87() {
  return "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>";
}
var import_serialize_javascript45, metadata44, frontmatter87, $$metadata44, $$Astro44, $$NewHope2;
var init_chunk_6ffd3df4 = __esm({
  ".netlify/functions-internal/chunks/chunk.6ffd3df4.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript45 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata44 = { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" };
    frontmatter87 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Global Strategy"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }], "astro": { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" } };
    $$metadata44 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope2.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro44 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope2.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$NewHope2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro44, $$props, $$slots);
      Astro2.self = $$NewHope2;
      return render2`<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.
A arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>
<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>
<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>
<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.f23f1ec4.mjs
var chunk_f23f1ec4_exports = {};
__export(chunk_f23f1ec4_exports, {
  $$loadMetadata: () => $$loadMetadata44,
  Content: () => Content44,
  compiledContent: () => compiledContent88,
  default: () => load44,
  file: () => file44,
  frontmatter: () => frontmatter88,
  getHeaders: () => getHeaders44,
  rawContent: () => rawContent88,
  url: () => url44
});
function rawContent88() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
async function compiledContent88() {
  return load44().then((m3) => m3.compiledContent());
}
function $$loadMetadata44() {
  return load44().then((m3) => m3.$$metadata);
}
async function load44() {
  return await Promise.resolve().then(() => (init_chunk_6ffd3df4(), chunk_6ffd3df4_exports));
}
function Content44(...args) {
  return load44().then((m3) => m3.default(...args));
}
function getHeaders44() {
  return load44().then((m3) => m3.metadata.headers);
}
var frontmatter88, file44, url44;
var init_chunk_f23f1ec4 = __esm({
  ".netlify/functions-internal/chunks/chunk.f23f1ec4.mjs"() {
    frontmatter88 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Global Strategy"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }] };
    file44 = "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope2.md";
    url44 = void 0;
    Content44.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.230d152d.mjs
var chunk_230d152d_exports = {};
__export(chunk_230d152d_exports, {
  $$metadata: () => $$metadata45,
  compiledContent: () => compiledContent89,
  default: () => $$NewHope3,
  frontmatter: () => frontmatter89,
  metadata: () => metadata45,
  rawContent: () => rawContent89
});
function rawContent89() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
function compiledContent89() {
  return "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>";
}
var import_serialize_javascript46, metadata45, frontmatter89, $$metadata45, $$Astro45, $$NewHope3;
var init_chunk_230d152d = __esm({
  ".netlify/functions-internal/chunks/chunk.230d152d.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript46 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata45 = { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" };
    frontmatter89 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Blockchain"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }], "astro": { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" } };
    $$metadata45 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope3.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro45 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope3.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$NewHope3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro45, $$props, $$slots);
      Astro2.self = $$NewHope3;
      return render2`<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.
A arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>
<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>
<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>
<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.b8b02486.mjs
var chunk_b8b02486_exports = {};
__export(chunk_b8b02486_exports, {
  $$loadMetadata: () => $$loadMetadata45,
  Content: () => Content45,
  compiledContent: () => compiledContent90,
  default: () => load45,
  file: () => file45,
  frontmatter: () => frontmatter90,
  getHeaders: () => getHeaders45,
  rawContent: () => rawContent90,
  url: () => url45
});
function rawContent90() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
async function compiledContent90() {
  return load45().then((m3) => m3.compiledContent());
}
function $$loadMetadata45() {
  return load45().then((m3) => m3.$$metadata);
}
async function load45() {
  return await Promise.resolve().then(() => (init_chunk_230d152d(), chunk_230d152d_exports));
}
function Content45(...args) {
  return load45().then((m3) => m3.default(...args));
}
function getHeaders45() {
  return load45().then((m3) => m3.metadata.headers);
}
var frontmatter90, file45, url45;
var init_chunk_b8b02486 = __esm({
  ".netlify/functions-internal/chunks/chunk.b8b02486.mjs"() {
    frontmatter90 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Blockchain"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }] };
    file45 = "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope3.md";
    url45 = void 0;
    Content45.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.6b6b6ee3.mjs
var chunk_6b6b6ee3_exports = {};
__export(chunk_6b6b6ee3_exports, {
  $$metadata: () => $$metadata46,
  compiledContent: () => compiledContent91,
  default: () => $$AlexAlejandre2,
  frontmatter: () => frontmatter91,
  metadata: () => metadata46,
  rawContent: () => rawContent91
});
function rawContent91() {
  return "";
}
function compiledContent91() {
  return "";
}
var import_serialize_javascript47, metadata46, frontmatter91, $$metadata46, $$Astro46, $$AlexAlejandre2;
var init_chunk_6b6b6ee3 = __esm({
  ".netlify/functions-internal/chunks/chunk.6b6b6ee3.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript47 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata46 = { "headers": [], "source": "", "html": "" };
    frontmatter91 = { "id": 2, "desc": "Solutions and Releases", "name": "Alex Alejandre", "imgSource": "/assets/img/about/team/2.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/alexalejandre/", "info": " Alex specializes in solution-tailored and team-centric architecture and implementation. Starting from a organization's business model and availible resources, he makes the proper compromises to achieve an optimal deployment able to be modularly updated in accordance to future needs. \n \nApplying the principles of industrial engineering and efficient factory planning to the bloated software engineering space, Alex applies his innate entrepreneurial mindset to optimize the software delivery lifecycle (SDLC).  \n \nA language lover, Alex speaks German, Russian, French, Spanish and is delving into Persian and Arabic. ", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata46 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/leads/AlexAlejandre.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro46 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/leads/AlexAlejandre.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$AlexAlejandre2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro46, $$props, $$slots);
      Astro2.self = $$AlexAlejandre2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.efd8f2e3.mjs
var chunk_efd8f2e3_exports = {};
__export(chunk_efd8f2e3_exports, {
  $$loadMetadata: () => $$loadMetadata46,
  Content: () => Content46,
  compiledContent: () => compiledContent92,
  default: () => load46,
  file: () => file46,
  frontmatter: () => frontmatter92,
  getHeaders: () => getHeaders46,
  rawContent: () => rawContent92,
  url: () => url46
});
function rawContent92() {
  return "";
}
async function compiledContent92() {
  return load46().then((m3) => m3.compiledContent());
}
function $$loadMetadata46() {
  return load46().then((m3) => m3.$$metadata);
}
async function load46() {
  return await Promise.resolve().then(() => (init_chunk_6b6b6ee3(), chunk_6b6b6ee3_exports));
}
function Content46(...args) {
  return load46().then((m3) => m3.default(...args));
}
function getHeaders46() {
  return load46().then((m3) => m3.metadata.headers);
}
var frontmatter92, file46, url46;
var init_chunk_efd8f2e3 = __esm({
  ".netlify/functions-internal/chunks/chunk.efd8f2e3.mjs"() {
    frontmatter92 = { "id": 2, "desc": "Solutions and Releases", "name": "Alex Alejandre", "imgSource": "/assets/img/about/team/2.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/alexalejandre/", "info": " Alex specializes in solution-tailored and team-centric architecture and implementation. Starting from a organization's business model and availible resources, he makes the proper compromises to achieve an optimal deployment able to be modularly updated in accordance to future needs. \n \nApplying the principles of industrial engineering and efficient factory planning to the bloated software engineering space, Alex applies his innate entrepreneurial mindset to optimize the software delivery lifecycle (SDLC).  \n \nA language lover, Alex speaks German, Russian, French, Spanish and is delving into Persian and Arabic. " };
    file46 = "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/AlexAlejandre.md";
    url46 = void 0;
    Content46.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.0048259b.mjs
var chunk_0048259b_exports = {};
__export(chunk_0048259b_exports, {
  $$metadata: () => $$metadata47,
  compiledContent: () => compiledContent93,
  default: () => $$JohnVermazenSt2,
  frontmatter: () => frontmatter93,
  metadata: () => metadata47,
  rawContent: () => rawContent93
});
function rawContent93() {
  return "";
}
function compiledContent93() {
  return "";
}
var import_serialize_javascript48, metadata47, frontmatter93, $$metadata47, $$Astro47, $$JohnVermazenSt2;
var init_chunk_0048259b = __esm({
  ".netlify/functions-internal/chunks/chunk.0048259b.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript48 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata47 = { "headers": [], "source": "", "html": "" };
    frontmatter93 = { "id": 1, "desc": "Strategy & Engagements", "name": "John Vermassen", "imgSource": "/assets/img/about/team/1.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/johnnynycavlb/", "info": " 'Weird how they preach peak efficiency and innovation, then hire talent in the same fashion as manual gang-labor through history, not at all following in the well-ordered footsteps of the Ford production line.'  \n \nThe general attribute in the L to XXL programs John worked in as a tech consultant for institutional financial and information services in New York City was a persistent and complete lack of mutual faith that either the client firm or the consulting were engaged in a common purpose with clear goals. ", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata47 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JohnVermazenSt.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro47 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JohnVermazenSt.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$JohnVermazenSt2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro47, $$props, $$slots);
      Astro2.self = $$JohnVermazenSt2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.c3803efd.mjs
var chunk_c3803efd_exports = {};
__export(chunk_c3803efd_exports, {
  $$loadMetadata: () => $$loadMetadata47,
  Content: () => Content47,
  compiledContent: () => compiledContent94,
  default: () => load47,
  file: () => file47,
  frontmatter: () => frontmatter94,
  getHeaders: () => getHeaders47,
  rawContent: () => rawContent94,
  url: () => url47
});
function rawContent94() {
  return "";
}
async function compiledContent94() {
  return load47().then((m3) => m3.compiledContent());
}
function $$loadMetadata47() {
  return load47().then((m3) => m3.$$metadata);
}
async function load47() {
  return await Promise.resolve().then(() => (init_chunk_0048259b(), chunk_0048259b_exports));
}
function Content47(...args) {
  return load47().then((m3) => m3.default(...args));
}
function getHeaders47() {
  return load47().then((m3) => m3.metadata.headers);
}
var frontmatter94, file47, url47;
var init_chunk_c3803efd = __esm({
  ".netlify/functions-internal/chunks/chunk.c3803efd.mjs"() {
    frontmatter94 = { "id": 1, "desc": "Strategy & Engagements", "name": "John Vermassen", "imgSource": "/assets/img/about/team/1.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/johnnynycavlb/", "info": " 'Weird how they preach peak efficiency and innovation, then hire talent in the same fashion as manual gang-labor through history, not at all following in the well-ordered footsteps of the Ford production line.'  \n \nThe general attribute in the L to XXL programs John worked in as a tech consultant for institutional financial and information services in New York City was a persistent and complete lack of mutual faith that either the client firm or the consulting were engaged in a common purpose with clear goals. " };
    file47 = "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JohnVermazenSt.md";
    url47 = void 0;
    Content47.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.63972846.mjs
var chunk_63972846_exports = {};
__export(chunk_63972846_exports, {
  $$metadata: () => $$metadata48,
  compiledContent: () => compiledContent95,
  default: () => $$JustynaBorwik2,
  frontmatter: () => frontmatter95,
  metadata: () => metadata48,
  rawContent: () => rawContent95
});
function rawContent95() {
  return "";
}
function compiledContent95() {
  return "";
}
var import_serialize_javascript49, metadata48, frontmatter95, $$metadata48, $$Astro48, $$JustynaBorwik2;
var init_chunk_63972846 = __esm({
  ".netlify/functions-internal/chunks/chunk.63972846.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript49 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata48 = { "headers": [], "source": "", "html": "" };
    frontmatter95 = { "id": 4, "desc": "Product Ownership", "name": "Justyna Borwik", "imgSource": "/assets/img/about/team/4.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/justynaborwik/", "info": " Responsible for effort allocations, workflow control and coordinating discrete business lines, Justyna uses advanced actuarial tools and project management expertiese to price new ventures and allocate comesmurate resources to them. \n \nShe is a key mentor to product managers and actively develops resources and engineering relationships throughout Central Europe.", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata48 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JustynaBorwik.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro48 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JustynaBorwik.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$JustynaBorwik2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro48, $$props, $$slots);
      Astro2.self = $$JustynaBorwik2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.3f76bef5.mjs
var chunk_3f76bef5_exports = {};
__export(chunk_3f76bef5_exports, {
  $$loadMetadata: () => $$loadMetadata48,
  Content: () => Content48,
  compiledContent: () => compiledContent96,
  default: () => load48,
  file: () => file48,
  frontmatter: () => frontmatter96,
  getHeaders: () => getHeaders48,
  rawContent: () => rawContent96,
  url: () => url48
});
function rawContent96() {
  return "";
}
async function compiledContent96() {
  return load48().then((m3) => m3.compiledContent());
}
function $$loadMetadata48() {
  return load48().then((m3) => m3.$$metadata);
}
async function load48() {
  return await Promise.resolve().then(() => (init_chunk_63972846(), chunk_63972846_exports));
}
function Content48(...args) {
  return load48().then((m3) => m3.default(...args));
}
function getHeaders48() {
  return load48().then((m3) => m3.metadata.headers);
}
var frontmatter96, file48, url48;
var init_chunk_3f76bef5 = __esm({
  ".netlify/functions-internal/chunks/chunk.3f76bef5.mjs"() {
    frontmatter96 = { "id": 4, "desc": "Product Ownership", "name": "Justyna Borwik", "imgSource": "/assets/img/about/team/4.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/justynaborwik/", "info": " Responsible for effort allocations, workflow control and coordinating discrete business lines, Justyna uses advanced actuarial tools and project management expertiese to price new ventures and allocate comesmurate resources to them. \n \nShe is a key mentor to product managers and actively develops resources and engineering relationships throughout Central Europe." };
    file48 = "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JustynaBorwik.md";
    url48 = void 0;
    Content48.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.36dcdcdf.mjs
var chunk_36dcdcdf_exports = {};
__export(chunk_36dcdcdf_exports, {
  $$metadata: () => $$metadata49,
  compiledContent: () => compiledContent97,
  default: () => $$StevenVermazen2,
  frontmatter: () => frontmatter97,
  metadata: () => metadata49,
  rawContent: () => rawContent97
});
function rawContent97() {
  return "";
}
function compiledContent97() {
  return "";
}
var import_serialize_javascript50, metadata49, frontmatter97, $$metadata49, $$Astro49, $$StevenVermazen2;
var init_chunk_36dcdcdf = __esm({
  ".netlify/functions-internal/chunks/chunk.36dcdcdf.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript50 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata49 = { "headers": [], "source": "", "html": "" };
    frontmatter97 = { "id": 3, "desc": "Resourcing and Insights", "name": "Steven Vermazen", "imgSource": "/assets/img/about/team/3.webp", "linkT": "#", "linkLI": "#", "info": " In today's rapidly changing industry, Steven would have arguably graduated as a data scientist, but in the world of yesterday he made himself an engineer with a bent for high-load algorithmic mathematics. \n \nHe chose to travel light and selected projects that kept his work and life balanced and his intellect clear. In effect, he practiced field triage as a delivery trauma surgery for software projects found flipped with all 6 axels spinning. He brings the bottom-up post mortem of the contemporary software industry.", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata49 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/leads/StevenVermazen.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro49 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/es/leads/StevenVermazen.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$StevenVermazen2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro49, $$props, $$slots);
      Astro2.self = $$StevenVermazen2;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.2e39d252.mjs
var chunk_2e39d252_exports = {};
__export(chunk_2e39d252_exports, {
  $$loadMetadata: () => $$loadMetadata49,
  Content: () => Content49,
  compiledContent: () => compiledContent98,
  default: () => load49,
  file: () => file49,
  frontmatter: () => frontmatter98,
  getHeaders: () => getHeaders49,
  rawContent: () => rawContent98,
  url: () => url49
});
function rawContent98() {
  return "";
}
async function compiledContent98() {
  return load49().then((m3) => m3.compiledContent());
}
function $$loadMetadata49() {
  return load49().then((m3) => m3.$$metadata);
}
async function load49() {
  return await Promise.resolve().then(() => (init_chunk_36dcdcdf(), chunk_36dcdcdf_exports));
}
function Content49(...args) {
  return load49().then((m3) => m3.default(...args));
}
function getHeaders49() {
  return load49().then((m3) => m3.metadata.headers);
}
var frontmatter98, file49, url49;
var init_chunk_2e39d252 = __esm({
  ".netlify/functions-internal/chunks/chunk.2e39d252.mjs"() {
    frontmatter98 = { "id": 3, "desc": "Resourcing and Insights", "name": "Steven Vermazen", "imgSource": "/assets/img/about/team/3.webp", "linkT": "#", "linkLI": "#", "info": " In today's rapidly changing industry, Steven would have arguably graduated as a data scientist, but in the world of yesterday he made himself an engineer with a bent for high-load algorithmic mathematics. \n \nHe chose to travel light and selected projects that kept his work and life balanced and his intellect clear. In effect, he practiced field triage as a delivery trauma surgery for software projects found flipped with all 6 axels spinning. He brings the bottom-up post mortem of the contemporary software industry." };
    file49 = "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/StevenVermazen.md";
    url49 = void 0;
    Content49.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.632e3996.mjs
var chunk_632e3996_exports = {};
__export(chunk_632e3996_exports, {
  $$metadata: () => $$metadata50,
  compiledContent: () => compiledContent99,
  default: () => $$AlexAlejandre3,
  frontmatter: () => frontmatter99,
  metadata: () => metadata50,
  rawContent: () => rawContent99
});
function rawContent99() {
  return "";
}
function compiledContent99() {
  return "";
}
var import_serialize_javascript51, metadata50, frontmatter99, $$metadata50, $$Astro50, $$AlexAlejandre3;
var init_chunk_632e3996 = __esm({
  ".netlify/functions-internal/chunks/chunk.632e3996.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript51 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata50 = { "headers": [], "source": "", "html": "" };
    frontmatter99 = { "id": 2, "desc": "Solutions and Releases", "name": "Alex Alejandre", "imgSource": "/assets/img/about/team/2.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/alexalejandre/", "info": " Alex specializes in solution-tailored and team-centric architecture and implementation. Starting from a organization's business model and availible resources, he makes the proper compromises to achieve an optimal deployment able to be modularly updated in accordance to future needs. \n \nApplying the principles of industrial engineering and efficient factory planning to the bloated software engineering space, Alex applies his innate entrepreneurial mindset to optimize the software delivery lifecycle (SDLC).  \n \nA language lover, Alex speaks German, Russian, French, Spanish and is delving into Persian and Arabic. ", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata50 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/AlexAlejandre.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro50 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/AlexAlejandre.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$AlexAlejandre3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro50, $$props, $$slots);
      Astro2.self = $$AlexAlejandre3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.41e9167d.mjs
var chunk_41e9167d_exports = {};
__export(chunk_41e9167d_exports, {
  $$loadMetadata: () => $$loadMetadata50,
  Content: () => Content50,
  compiledContent: () => compiledContent100,
  default: () => load50,
  file: () => file50,
  frontmatter: () => frontmatter100,
  getHeaders: () => getHeaders50,
  rawContent: () => rawContent100,
  url: () => url50
});
function rawContent100() {
  return "";
}
async function compiledContent100() {
  return load50().then((m3) => m3.compiledContent());
}
function $$loadMetadata50() {
  return load50().then((m3) => m3.$$metadata);
}
async function load50() {
  return await Promise.resolve().then(() => (init_chunk_632e3996(), chunk_632e3996_exports));
}
function Content50(...args) {
  return load50().then((m3) => m3.default(...args));
}
function getHeaders50() {
  return load50().then((m3) => m3.metadata.headers);
}
var frontmatter100, file50, url50;
var init_chunk_41e9167d = __esm({
  ".netlify/functions-internal/chunks/chunk.41e9167d.mjs"() {
    frontmatter100 = { "id": 2, "desc": "Solutions and Releases", "name": "Alex Alejandre", "imgSource": "/assets/img/about/team/2.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/alexalejandre/", "info": " Alex specializes in solution-tailored and team-centric architecture and implementation. Starting from a organization's business model and availible resources, he makes the proper compromises to achieve an optimal deployment able to be modularly updated in accordance to future needs. \n \nApplying the principles of industrial engineering and efficient factory planning to the bloated software engineering space, Alex applies his innate entrepreneurial mindset to optimize the software delivery lifecycle (SDLC).  \n \nA language lover, Alex speaks German, Russian, French, Spanish and is delving into Persian and Arabic. " };
    file50 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/AlexAlejandre.md";
    url50 = void 0;
    Content50.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.d6e9935b.mjs
var chunk_d6e9935b_exports = {};
__export(chunk_d6e9935b_exports, {
  $$metadata: () => $$metadata51,
  compiledContent: () => compiledContent101,
  default: () => $$JohnVermazenSt3,
  frontmatter: () => frontmatter101,
  metadata: () => metadata51,
  rawContent: () => rawContent101
});
function rawContent101() {
  return "";
}
function compiledContent101() {
  return "";
}
var import_serialize_javascript52, metadata51, frontmatter101, $$metadata51, $$Astro51, $$JohnVermazenSt3;
var init_chunk_d6e9935b = __esm({
  ".netlify/functions-internal/chunks/chunk.d6e9935b.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript52 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata51 = { "headers": [], "source": "", "html": "" };
    frontmatter101 = { "id": 1, "desc": "Strategy & Engagements", "name": "John Vermassen", "imgSource": "/assets/img/about/team/1.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/johnnynycavlb/", "info": " 'Weird how they preach peak efficiency and innovation, then hire talent in the same fashion as manual gang-labor through history, not at all following in the well-ordered footsteps of the Ford production line.'  \n \nThe general attribute in the L to XXL programs John worked in as a tech consultant for institutional financial and information services in New York City was a persistent and complete lack of mutual faith that either the client firm or the consulting were engaged in a common purpose with clear goals. ", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata51 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JohnVermazenSt.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro51 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JohnVermazenSt.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$JohnVermazenSt3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro51, $$props, $$slots);
      Astro2.self = $$JohnVermazenSt3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.68fc1448.mjs
var chunk_68fc1448_exports = {};
__export(chunk_68fc1448_exports, {
  $$loadMetadata: () => $$loadMetadata51,
  Content: () => Content51,
  compiledContent: () => compiledContent102,
  default: () => load51,
  file: () => file51,
  frontmatter: () => frontmatter102,
  getHeaders: () => getHeaders51,
  rawContent: () => rawContent102,
  url: () => url51
});
function rawContent102() {
  return "";
}
async function compiledContent102() {
  return load51().then((m3) => m3.compiledContent());
}
function $$loadMetadata51() {
  return load51().then((m3) => m3.$$metadata);
}
async function load51() {
  return await Promise.resolve().then(() => (init_chunk_d6e9935b(), chunk_d6e9935b_exports));
}
function Content51(...args) {
  return load51().then((m3) => m3.default(...args));
}
function getHeaders51() {
  return load51().then((m3) => m3.metadata.headers);
}
var frontmatter102, file51, url51;
var init_chunk_68fc1448 = __esm({
  ".netlify/functions-internal/chunks/chunk.68fc1448.mjs"() {
    frontmatter102 = { "id": 1, "desc": "Strategy & Engagements", "name": "John Vermassen", "imgSource": "/assets/img/about/team/1.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/johnnynycavlb/", "info": " 'Weird how they preach peak efficiency and innovation, then hire talent in the same fashion as manual gang-labor through history, not at all following in the well-ordered footsteps of the Ford production line.'  \n \nThe general attribute in the L to XXL programs John worked in as a tech consultant for institutional financial and information services in New York City was a persistent and complete lack of mutual faith that either the client firm or the consulting were engaged in a common purpose with clear goals. " };
    file51 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JohnVermazenSt.md";
    url51 = void 0;
    Content51.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.33615634.mjs
var chunk_33615634_exports = {};
__export(chunk_33615634_exports, {
  $$metadata: () => $$metadata52,
  compiledContent: () => compiledContent103,
  default: () => $$JustynaBorwik3,
  frontmatter: () => frontmatter103,
  metadata: () => metadata52,
  rawContent: () => rawContent103
});
function rawContent103() {
  return "";
}
function compiledContent103() {
  return "";
}
var import_serialize_javascript53, metadata52, frontmatter103, $$metadata52, $$Astro52, $$JustynaBorwik3;
var init_chunk_33615634 = __esm({
  ".netlify/functions-internal/chunks/chunk.33615634.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript53 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata52 = { "headers": [], "source": "", "html": "" };
    frontmatter103 = { "id": 4, "desc": "Product Ownership", "name": "Justyna Borwik", "imgSource": "/assets/img/about/team/4.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/justynaborwik/", "info": " Responsible for effort allocations, workflow control and coordinating discrete business lines, Justyna uses advanced actuarial tools and project management expertiese to price new ventures and allocate comesmurate resources to them. \n \nShe is a key mentor to product managers and actively develops resources and engineering relationships throughout Central Europe.", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata52 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JustynaBorwik.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro52 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JustynaBorwik.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$JustynaBorwik3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro52, $$props, $$slots);
      Astro2.self = $$JustynaBorwik3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.03a6dc40.mjs
var chunk_03a6dc40_exports = {};
__export(chunk_03a6dc40_exports, {
  $$loadMetadata: () => $$loadMetadata52,
  Content: () => Content52,
  compiledContent: () => compiledContent104,
  default: () => load52,
  file: () => file52,
  frontmatter: () => frontmatter104,
  getHeaders: () => getHeaders52,
  rawContent: () => rawContent104,
  url: () => url52
});
function rawContent104() {
  return "";
}
async function compiledContent104() {
  return load52().then((m3) => m3.compiledContent());
}
function $$loadMetadata52() {
  return load52().then((m3) => m3.$$metadata);
}
async function load52() {
  return await Promise.resolve().then(() => (init_chunk_33615634(), chunk_33615634_exports));
}
function Content52(...args) {
  return load52().then((m3) => m3.default(...args));
}
function getHeaders52() {
  return load52().then((m3) => m3.metadata.headers);
}
var frontmatter104, file52, url52;
var init_chunk_03a6dc40 = __esm({
  ".netlify/functions-internal/chunks/chunk.03a6dc40.mjs"() {
    frontmatter104 = { "id": 4, "desc": "Product Ownership", "name": "Justyna Borwik", "imgSource": "/assets/img/about/team/4.webp", "linkT": "#", "linkLI": "https://www.linkedin.com/in/justynaborwik/", "info": " Responsible for effort allocations, workflow control and coordinating discrete business lines, Justyna uses advanced actuarial tools and project management expertiese to price new ventures and allocate comesmurate resources to them. \n \nShe is a key mentor to product managers and actively develops resources and engineering relationships throughout Central Europe." };
    file52 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JustynaBorwik.md";
    url52 = void 0;
    Content52.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.467e42e5.mjs
var chunk_467e42e5_exports = {};
__export(chunk_467e42e5_exports, {
  $$metadata: () => $$metadata53,
  compiledContent: () => compiledContent105,
  default: () => $$StevenVermazen3,
  frontmatter: () => frontmatter105,
  metadata: () => metadata53,
  rawContent: () => rawContent105
});
function rawContent105() {
  return "";
}
function compiledContent105() {
  return "";
}
var import_serialize_javascript54, metadata53, frontmatter105, $$metadata53, $$Astro53, $$StevenVermazen3;
var init_chunk_467e42e5 = __esm({
  ".netlify/functions-internal/chunks/chunk.467e42e5.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript54 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata53 = { "headers": [], "source": "", "html": "" };
    frontmatter105 = { "id": 3, "desc": "Resourcing and Insights", "name": "Steven Vermazen", "imgSource": "/assets/img/about/team/3.webp", "linkT": "#", "linkLI": "#", "info": " In today's rapidly changing industry, Steven would have arguably graduated as a data scientist, but in the world of yesterday he made himself an engineer with a bent for high-load algorithmic mathematics. \n \nHe chose to travel light and selected projects that kept his work and life balanced and his intellect clear. In effect, he practiced field triage as a delivery trauma surgery for software projects found flipped with all 6 axels spinning. He brings the bottom-up post mortem of the contemporary software industry.", "astro": { "headers": [], "source": "", "html": "" } };
    $$metadata53 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/StevenVermazen.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro53 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/StevenVermazen.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$StevenVermazen3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro53, $$props, $$slots);
      Astro2.self = $$StevenVermazen3;
      return render2``;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.6cf3c4a4.mjs
var chunk_6cf3c4a4_exports = {};
__export(chunk_6cf3c4a4_exports, {
  $$loadMetadata: () => $$loadMetadata53,
  Content: () => Content53,
  compiledContent: () => compiledContent106,
  default: () => load53,
  file: () => file53,
  frontmatter: () => frontmatter106,
  getHeaders: () => getHeaders53,
  rawContent: () => rawContent106,
  url: () => url53
});
function rawContent106() {
  return "";
}
async function compiledContent106() {
  return load53().then((m3) => m3.compiledContent());
}
function $$loadMetadata53() {
  return load53().then((m3) => m3.$$metadata);
}
async function load53() {
  return await Promise.resolve().then(() => (init_chunk_467e42e5(), chunk_467e42e5_exports));
}
function Content53(...args) {
  return load53().then((m3) => m3.default(...args));
}
function getHeaders53() {
  return load53().then((m3) => m3.metadata.headers);
}
var frontmatter106, file53, url53;
var init_chunk_6cf3c4a4 = __esm({
  ".netlify/functions-internal/chunks/chunk.6cf3c4a4.mjs"() {
    frontmatter106 = { "id": 3, "desc": "Resourcing and Insights", "name": "Steven Vermazen", "imgSource": "/assets/img/about/team/3.webp", "linkT": "#", "linkLI": "#", "info": " In today's rapidly changing industry, Steven would have arguably graduated as a data scientist, but in the world of yesterday he made himself an engineer with a bent for high-load algorithmic mathematics. \n \nHe chose to travel light and selected projects that kept his work and life balanced and his intellect clear. In effect, he practiced field triage as a delivery trauma surgery for software projects found flipped with all 6 axels spinning. He brings the bottom-up post mortem of the contemporary software industry." };
    file53 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/StevenVermazen.md";
    url53 = void 0;
    Content53.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.221beb90.mjs
var chunk_221beb90_exports = {};
__export(chunk_221beb90_exports, {
  $$metadata: () => $$metadata54,
  compiledContent: () => compiledContent107,
  default: () => $$Brewery2,
  frontmatter: () => frontmatter107,
  metadata: () => metadata54,
  rawContent: () => rawContent107
});
function rawContent107() {
  return "We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.\r\n \r\nWithin a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.\r\n\r\nAs the client's core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.\r\n\r\n\r\n\r\n";
}
function compiledContent107() {
  return "<p>We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.</p>\n<p>Within a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.</p>\n<p>As the client\u2019s core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.</p>";
}
var import_serialize_javascript55, metadata54, frontmatter107, $$metadata54, $$Astro54, $$Brewery2;
var init_chunk_221beb90 = __esm({
  ".netlify/functions-internal/chunks/chunk.221beb90.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript55 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata54 = { "headers": [], "source": "We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.\r\n \r\nWithin a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.\r\n\r\nAs the client's core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.\r\n\r\n\r\n\r\n", "html": "<p>We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.</p>\n<p>Within a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.</p>\n<p>As the client\u2019s core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.</p>" };
    frontmatter107 = { "slug": "Crowd-Sourced-Brewing", "title": "Crowd Sourced Brewing", "developers": 12, "months": 55, "tags": ["Automation", "Product Developpment", "Architecture"], "desc": "A Croatian-Belgian craftbrewer wanted a webshop and marketing campaign to bring customers to the new platform. He got much more.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "development", "period": "December 2017", "icon": "Development phase" }, { "name": "release", "period": "March 2018", "icon": "Development phase" }, { "name": "support", "period": "April 2018 \u2014 May 2021", "icon": "Development phase" }], "bullets": ["Mobile App", "Web App", "UI/UX", "Analytics "], "result": [{ "name": "Profitability Index", "value": 1350, "format": "%" }, { "name": "Time to Delivery", "value": 4, "format": "Months" }, { "name": "New users", "value": 4e4, "format": "+" }], "astro": { "headers": [], "source": "We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.\r\n \r\nWithin a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.\r\n\r\nAs the client's core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.\r\n\r\n\r\n\r\n", "html": "<p>We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.</p>\n<p>Within a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.</p>\n<p>As the client\u2019s core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.</p>" } };
    $$metadata54 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/Brewery.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro54 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/Brewery.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Brewery2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro54, $$props, $$slots);
      Astro2.self = $$Brewery2;
      return render2`<p>We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.</p>
<p>Within a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.</p>
<p>As the client’s core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.0da3919e.mjs
var chunk_0da3919e_exports = {};
__export(chunk_0da3919e_exports, {
  $$loadMetadata: () => $$loadMetadata54,
  Content: () => Content54,
  compiledContent: () => compiledContent108,
  default: () => load54,
  file: () => file54,
  frontmatter: () => frontmatter108,
  getHeaders: () => getHeaders54,
  rawContent: () => rawContent108,
  url: () => url54
});
function rawContent108() {
  return "We brainstormed, then developped a crowsourcing system for users to vote on recipes, labeling, art etc. of (concurrent) batches of beer. This caused them to invite friends onto the platform to vote and debate, causing increased feelings of ownership and brand loyalty, resulting in above market sales and retention per customer, while avoiding the need for market research, A/B testing of designs etc.\r\n \r\nWithin a year of implementation, the new approach increased total sales by over 600%, brought the repeat customer rate to 72% and net promoter score to 63.\r\n\r\nAs the client's core competency lied outside of the tech space, we were further engaged to maintain and host the system. We handled maitenance and expanded functionality when necessary, including more secure authentification, necessary vulnerability patching, optimizations to decrease server load etc.\r\n\r\n\r\n\r\n";
}
async function compiledContent108() {
  return load54().then((m3) => m3.compiledContent());
}
function $$loadMetadata54() {
  return load54().then((m3) => m3.$$metadata);
}
async function load54() {
  return await Promise.resolve().then(() => (init_chunk_221beb90(), chunk_221beb90_exports));
}
function Content54(...args) {
  return load54().then((m3) => m3.default(...args));
}
function getHeaders54() {
  return load54().then((m3) => m3.metadata.headers);
}
var frontmatter108, file54, url54;
var init_chunk_0da3919e = __esm({
  ".netlify/functions-internal/chunks/chunk.0da3919e.mjs"() {
    frontmatter108 = { "slug": "Crowd-Sourced-Brewing", "title": "Crowd Sourced Brewing", "developers": 12, "months": 55, "tags": ["Automation", "Product Developpment", "Architecture"], "desc": "A Croatian-Belgian craftbrewer wanted a webshop and marketing campaign to bring customers to the new platform. He got much more.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "development", "period": "December 2017", "icon": "Development phase" }, { "name": "release", "period": "March 2018", "icon": "Development phase" }, { "name": "support", "period": "April 2018 \u2014 May 2021", "icon": "Development phase" }], "bullets": ["Mobile App", "Web App", "UI/UX", "Analytics "], "result": [{ "name": "Profitability Index", "value": 1350, "format": "%" }, { "name": "Time to Delivery", "value": 4, "format": "Months" }, { "name": "New users", "value": 4e4, "format": "+" }] };
    file54 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/Brewery.md";
    url54 = void 0;
    Content54.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.44b418e6.mjs
var chunk_44b418e6_exports = {};
__export(chunk_44b418e6_exports, {
  $$metadata: () => $$metadata55,
  compiledContent: () => compiledContent109,
  default: () => $$NewHope20Copy2,
  frontmatter: () => frontmatter109,
  metadata: () => metadata55,
  rawContent: () => rawContent109
});
function rawContent109() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
function compiledContent109() {
  return "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>";
}
var import_serialize_javascript56, metadata55, frontmatter109, $$metadata55, $$Astro55, $$NewHope20Copy2;
var init_chunk_44b418e6 = __esm({
  ".netlify/functions-internal/chunks/chunk.44b418e6.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript56 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata55 = { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" };
    frontmatter109 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Automation", "Wallets and Exchanges", "Architecture"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }], "astro": { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" } };
    $$metadata55 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope%20copy.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro55 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope%20copy.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$NewHope20Copy2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro55, $$props, $$slots);
      Astro2.self = $$NewHope20Copy2;
      return render2`<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.
A arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>
<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>
<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>
<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.2e94afe0.mjs
var chunk_2e94afe0_exports = {};
__export(chunk_2e94afe0_exports, {
  $$loadMetadata: () => $$loadMetadata55,
  Content: () => Content55,
  compiledContent: () => compiledContent110,
  default: () => load55,
  file: () => file55,
  frontmatter: () => frontmatter110,
  getHeaders: () => getHeaders55,
  rawContent: () => rawContent110,
  url: () => url55
});
function rawContent110() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
async function compiledContent110() {
  return load55().then((m3) => m3.compiledContent());
}
function $$loadMetadata55() {
  return load55().then((m3) => m3.$$metadata);
}
async function load55() {
  return await Promise.resolve().then(() => (init_chunk_44b418e6(), chunk_44b418e6_exports));
}
function Content55(...args) {
  return load55().then((m3) => m3.default(...args));
}
function getHeaders55() {
  return load55().then((m3) => m3.metadata.headers);
}
var frontmatter110, file55, url55;
var init_chunk_2e94afe0 = __esm({
  ".netlify/functions-internal/chunks/chunk.2e94afe0.mjs"() {
    frontmatter110 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Automation", "Wallets and Exchanges", "Architecture"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }] };
    file55 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope copy.md";
    url55 = void 0;
    Content55.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.a153f1a3.mjs
var chunk_a153f1a3_exports = {};
__export(chunk_a153f1a3_exports, {
  $$metadata: () => $$metadata56,
  compiledContent: () => compiledContent111,
  default: () => $$NewHope4,
  frontmatter: () => frontmatter111,
  metadata: () => metadata56,
  rawContent: () => rawContent111
});
function rawContent111() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
function compiledContent111() {
  return "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>";
}
var import_serialize_javascript57, metadata56, frontmatter111, $$metadata56, $$Astro56, $$NewHope4;
var init_chunk_a153f1a3 = __esm({
  ".netlify/functions-internal/chunks/chunk.a153f1a3.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript57 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata56 = { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" };
    frontmatter111 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Wallets and Exchanges", "Blockchain", "Global Strategy"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }], "astro": { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" } };
    $$metadata56 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro56 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$NewHope4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro56, $$props, $$slots);
      Astro2.self = $$NewHope4;
      return render2`<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.
A arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>
<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>
<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>
<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.7d2c8f1b.mjs
var chunk_7d2c8f1b_exports = {};
__export(chunk_7d2c8f1b_exports, {
  $$loadMetadata: () => $$loadMetadata56,
  Content: () => Content56,
  compiledContent: () => compiledContent112,
  default: () => load56,
  file: () => file56,
  frontmatter: () => frontmatter112,
  getHeaders: () => getHeaders56,
  rawContent: () => rawContent112,
  url: () => url56
});
function rawContent112() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
async function compiledContent112() {
  return load56().then((m3) => m3.compiledContent());
}
function $$loadMetadata56() {
  return load56().then((m3) => m3.$$metadata);
}
async function load56() {
  return await Promise.resolve().then(() => (init_chunk_a153f1a3(), chunk_a153f1a3_exports));
}
function Content56(...args) {
  return load56().then((m3) => m3.default(...args));
}
function getHeaders56() {
  return load56().then((m3) => m3.metadata.headers);
}
var frontmatter112, file56, url56;
var init_chunk_7d2c8f1b = __esm({
  ".netlify/functions-internal/chunks/chunk.7d2c8f1b.mjs"() {
    frontmatter112 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Wallets and Exchanges", "Blockchain", "Global Strategy"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }] };
    file56 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope.md";
    url56 = void 0;
    Content56.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.23027b50.mjs
var chunk_23027b50_exports = {};
__export(chunk_23027b50_exports, {
  $$metadata: () => $$metadata57,
  compiledContent: () => compiledContent113,
  default: () => $$NewHope22,
  frontmatter: () => frontmatter113,
  metadata: () => metadata57,
  rawContent: () => rawContent113
});
function rawContent113() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
function compiledContent113() {
  return "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>";
}
var import_serialize_javascript58, metadata57, frontmatter113, $$metadata57, $$Astro57, $$NewHope22;
var init_chunk_23027b50 = __esm({
  ".netlify/functions-internal/chunks/chunk.23027b50.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript58 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata57 = { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" };
    frontmatter113 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Global Strategy"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }], "astro": { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" } };
    $$metadata57 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope2.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro57 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope2.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$NewHope22 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro57, $$props, $$slots);
      Astro2.self = $$NewHope22;
      return render2`<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.
A arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>
<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>
<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>
<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.31893b22.mjs
var chunk_31893b22_exports = {};
__export(chunk_31893b22_exports, {
  $$loadMetadata: () => $$loadMetadata57,
  Content: () => Content57,
  compiledContent: () => compiledContent114,
  default: () => load57,
  file: () => file57,
  frontmatter: () => frontmatter114,
  getHeaders: () => getHeaders57,
  rawContent: () => rawContent114,
  url: () => url57
});
function rawContent114() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
async function compiledContent114() {
  return load57().then((m3) => m3.compiledContent());
}
function $$loadMetadata57() {
  return load57().then((m3) => m3.$$metadata);
}
async function load57() {
  return await Promise.resolve().then(() => (init_chunk_23027b50(), chunk_23027b50_exports));
}
function Content57(...args) {
  return load57().then((m3) => m3.default(...args));
}
function getHeaders57() {
  return load57().then((m3) => m3.metadata.headers);
}
var frontmatter114, file57, url57;
var init_chunk_31893b22 = __esm({
  ".netlify/functions-internal/chunks/chunk.31893b22.mjs"() {
    frontmatter114 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Global Strategy"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }] };
    file57 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope2.md";
    url57 = void 0;
    Content57.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/chunks/chunk.a129f2f7.mjs
var chunk_a129f2f7_exports = {};
__export(chunk_a129f2f7_exports, {
  $$metadata: () => $$metadata58,
  compiledContent: () => compiledContent115,
  default: () => $$NewHope32,
  frontmatter: () => frontmatter115,
  metadata: () => metadata58,
  rawContent: () => rawContent115
});
function rawContent115() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
function compiledContent115() {
  return "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>";
}
var import_serialize_javascript59, metadata58, frontmatter115, $$metadata58, $$Astro58, $$NewHope32;
var init_chunk_a129f2f7 = __esm({
  ".netlify/functions-internal/chunks/chunk.a129f2f7.mjs"() {
    init_entry();
    init_dist2();
    init_netlify_functions();
    import_serialize_javascript59 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    metadata58 = { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" };
    frontmatter115 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Blockchain"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }], "astro": { "headers": [], "source": "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n", "html": "<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>\n<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>\n<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>\n<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>" } };
    $$metadata58 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope3.md", { modules: [{ module: dist_exports, specifier: "@astrojs/markdown-remark", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro58 = createAstro("/@fs/C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope3.md", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$NewHope32 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro58, $$props, $$slots);
      Astro2.self = $$NewHope32;
      return render2`<p>Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.
A arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>
<p>Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
Ut posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s</p>
<p>celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.
celerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae</p>
<p>blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.</p>`;
    });
  }
});

// .netlify/functions-internal/chunks/chunk.726d82cf.mjs
var chunk_726d82cf_exports = {};
__export(chunk_726d82cf_exports, {
  $$loadMetadata: () => $$loadMetadata58,
  Content: () => Content58,
  compiledContent: () => compiledContent116,
  default: () => load58,
  file: () => file58,
  frontmatter: () => frontmatter116,
  getHeaders: () => getHeaders58,
  rawContent: () => rawContent116,
  url: () => url58
});
function rawContent116() {
  return "Aliquet est nunc diam dolor. Semper lobortis cursus sit scelerisque diam enim, etiam venenatis, accumsan. Ultrices sem molestie accumsan adipiscing gravida purus interdum erat lacinia. Et nibh tristique elit proin vitae.\r\nA arcu et molestie blandit. Viverra iaculis imperdiet suspendisse sed quis. Mattis scelerisque nunc, duis at ipsum. Odio arcu pulvinar rhoncus enim nunc. Netus maecenas neque facilisis suspendisse aliquam proin neque, viverra semper. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque scelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\nUt posuere amet, amet tempus augue pellentesque amet. Enim in eget laoreet dui vulputate vel. Est ante felis, sapien, mi sed erat scelerisque neque s\r\n\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae blandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\ncelerisque. In tortor id adipiscing nulla mauris enim, id adipiscing. Euismod nec amet facilisis tortor tempor amet. Nibh morbi vitae vitae \r\n\r\nblandit in aliquet. Eu sem porttitor commodo, scelerisque fermentum mi viverra. Cras a diam elit eget venenatis ipsum orci venenatis. Auctor euismod urna sollicitudin non massa. Risus massa vestibulum nulla semper nam sit. Eget egestas ut nec fermentum imperdiet nec ultricies nisl.\r\n\r\n\r\n";
}
async function compiledContent116() {
  return load58().then((m3) => m3.compiledContent());
}
function $$loadMetadata58() {
  return load58().then((m3) => m3.$$metadata);
}
async function load58() {
  return await Promise.resolve().then(() => (init_chunk_a129f2f7(), chunk_a129f2f7_exports));
}
function Content58(...args) {
  return load58().then((m3) => m3.default(...args));
}
function getHeaders58() {
  return load58().then((m3) => m3.metadata.headers);
}
var frontmatter116, file58, url58;
var init_chunk_726d82cf = __esm({
  ".netlify/functions-internal/chunks/chunk.726d82cf.mjs"() {
    frontmatter116 = { "slug": "Episode-IV-A-New-Hope", "title": "Star Wars: Episode IV A New Hope", "developers": 12, "months": 12, "tags": ["Blockchain"], "desc": "It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire. During the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.", "img": "https://api.time.com/wp-content/uploads/2017/05/star-wars_1024.jpg", "phases": [{ "name": "Development phase", "period": "December 2021 \u2014 February 2022", "icon": "Development phase" }, { "name": "release", "period": "March 2022", "icon": "Development phase" }, { "name": "support", "period": "April 2022 \u2014 till now", "icon": "Development phase" }], "bullets": ["Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras.", "Bibendum et, praesent mattis vitae. Sem nibh in quisque cras risus dolor interdum in cras."], "result": [{ "name": "Increase in traffic", "value": 180, "format": "%" }, { "name": "Time-saving", "value": 48, "format": "%" }, { "name": "New users", "value": 3e3, "format": "+" }] };
    file58 = "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope3.md";
    url58 = void 0;
    Content58.isAstroComponentFactory = true;
  }
});

// .netlify/functions-internal/entry.mjs
var entry_exports = {};
__export(entry_exports, {
  a: () => createAstro,
  b: () => createComponent2,
  c: () => createMetadata2,
  handler: () => handler,
  r: () => render2
});
function check(Component, props, children2) {
  if (typeof Component !== "function")
    return false;
  const { html: html6 } = renderToStaticMarkup(Component, props, children2);
  return typeof html6 === "string";
}
function renderToStaticMarkup(Component, props, children2) {
  const html6 = renderToString(() => createComponent(Component, __spreadProps(__spreadValues({}, props), {
    children: children2 != null ? ssr(`<astro-fragment>${children2}</astro-fragment>`) : children2
  })));
  return {
    html: html6
  };
}
function serializeListValue2(value) {
  const hash = {};
  push2(value);
  return Object.keys(hash).join(" ");
  function push2(item) {
    if (item && typeof item.forEach === "function")
      item.forEach(push2);
    else if (item === Object(item))
      Object.keys(item).forEach((name) => {
        if (item[name])
          push2(name);
      });
    else {
      item = item == null ? "" : String(item).trim();
      if (item) {
        item.split(/\s+/).forEach((name) => {
          hash[name] = true;
        });
      }
    }
  }
}
function hydrationSpecifier2(hydrate) {
  return `astro/client/${hydrate}.js`;
}
function serializeProps2(value) {
  return (0, import_serialize_javascript60.default)(value);
}
function extractDirectives2(inputProps) {
  let extracted = {
    hydration: null,
    props: {}
  };
  for (const [key2, value] of Object.entries(inputProps)) {
    if (key2.startsWith("client:")) {
      if (!extracted.hydration) {
        extracted.hydration = {
          directive: "",
          value: "",
          componentUrl: "",
          componentExport: { value: "" }
        };
      }
      switch (key2) {
        case "client:component-path": {
          extracted.hydration.componentUrl = value;
          break;
        }
        case "client:component-export": {
          extracted.hydration.componentExport.value = value;
          break;
        }
        case "client:component-hydration": {
          break;
        }
        default: {
          extracted.hydration.directive = key2.split(":")[1];
          extracted.hydration.value = value;
          if (HydrationDirectives.indexOf(extracted.hydration.directive) < 0) {
            throw new Error(`Error: invalid hydration directive "${key2}". Supported hydration methods: ${HydrationDirectives.map((d2) => `"client:${d2}"`).join(", ")}`);
          }
          if (extracted.hydration.directive === "media" && typeof extracted.hydration.value !== "string") {
            throw new Error('Error: Media query must be provided for "client:media", similar to client:media="(max-width: 600px)"');
          }
          break;
        }
      }
    } else if (key2 === "class:list") {
      extracted.props[key2.slice(0, -5)] = serializeListValue2(value);
    } else {
      extracted.props[key2] = value;
    }
  }
  return extracted;
}
async function generateHydrateScript2(scriptOptions, metadata59) {
  const { renderer, result, astroId, props } = scriptOptions;
  const { hydrate, componentUrl, componentExport } = metadata59;
  if (!componentExport) {
    throw new Error(`Unable to resolve a componentExport for "${metadata59.displayName}"! Please open an issue.`);
  }
  const hydrationSource = renderer.clientEntrypoint ? `const [{ ${componentExport.value}: Component }, { default: hydrate }] = await Promise.all([import("${await result.resolve(componentUrl)}"), import("${await result.resolve(renderer.clientEntrypoint)}")]);
  return (el, children) => hydrate(el)(Component, ${serializeProps2(props)}, children, ${JSON.stringify({ client: hydrate })});
` : `await import("${await result.resolve(componentUrl)}");
  return () => {};
`;
  const hydrationScript = {
    props: { type: "module", "data-astro-component-hydration": true },
    children: `import setup from '${await result.resolve(hydrationSpecifier2(hydrate))}';
${`import '${await result.resolve("astro:scripts/before-hydration.js")}';`}
setup("${astroId}", {name:"${metadata59.displayName}",${metadata59.hydrateArgs ? `value: ${JSON.stringify(metadata59.hydrateArgs)}` : ""}}, async () => {
  ${hydrationSource}
});
`
  };
  return hydrationScript;
}
function bitwise(str) {
  let hash = 0;
  if (str.length === 0)
    return hash;
  for (let i3 = 0; i3 < str.length; i3++) {
    const ch = str.charCodeAt(i3);
    hash = (hash << 5) - hash + ch;
    hash = hash & hash;
  }
  return hash;
}
function shorthash2(text8) {
  let num;
  let result = "";
  let integer = bitwise(text8);
  const sign = integer < 0 ? "Z" : "";
  integer = Math.abs(integer);
  while (integer >= binary2) {
    num = integer % binary2;
    integer = Math.floor(integer / binary2);
    result = dictionary2[num] + result;
  }
  if (integer > 0) {
    result = dictionary2[integer] + result;
  }
  return sign + result;
}
function createMetadata2(filePathname, options) {
  return new Metadata(filePathname, options);
}
async function _render2(child) {
  child = await child;
  if (child instanceof HTMLString2) {
    return child;
  } else if (Array.isArray(child)) {
    return markHTMLString2((await Promise.all(child.map((value) => _render2(value)))).join(""));
  } else if (typeof child === "function") {
    return _render2(child());
  } else if (typeof child === "string") {
    return markHTMLString2(escapeHTML2(child));
  } else if (!child && child !== 0)
    ;
  else if (child instanceof AstroComponent2 || Object.prototype.toString.call(child) === "[object AstroComponent]") {
    return markHTMLString2(await renderAstroComponent2(child));
  } else {
    return child;
  }
}
function isAstroComponent2(obj) {
  return typeof obj === "object" && Object.prototype.toString.call(obj) === "[object AstroComponent]";
}
async function render2(htmlParts, ...expressions) {
  return new AstroComponent2(htmlParts, expressions);
}
function createComponent2(cb) {
  cb.isAstroComponentFactory = true;
  return cb;
}
async function renderSlot2(_result2, slotted, fallback) {
  if (slotted) {
    return await _render2(slotted);
  }
  return fallback;
}
function guessRenderers(componentUrl) {
  const extname2 = componentUrl == null ? void 0 : componentUrl.split(".").pop();
  switch (extname2) {
    case "svelte":
      return ["@astrojs/svelte"];
    case "vue":
      return ["@astrojs/vue"];
    case "jsx":
    case "tsx":
      return ["@astrojs/react", "@astrojs/preact"];
    default:
      return ["@astrojs/react", "@astrojs/preact", "@astrojs/vue", "@astrojs/svelte"];
  }
}
function formatList(values) {
  if (values.length === 1) {
    return values[0];
  }
  return `${values.slice(0, -1).join(", ")} or ${values[values.length - 1]}`;
}
async function renderComponent(result, displayName, Component, _props, slots = {}) {
  var _a8;
  Component = await Component;
  if (Component === Fragment2) {
    const children22 = await renderSlot2(result, slots == null ? void 0 : slots.default);
    if (children22 == null) {
      return children22;
    }
    return markHTMLString2(children22);
  }
  if (Component && Component.isAstroComponentFactory) {
    const output = await renderToString2(result, Component, _props, slots);
    return markHTMLString2(output);
  }
  if (Component === null && !_props["client:only"]) {
    throw new Error(`Unable to render ${displayName} because it is ${Component}!
Did you forget to import the component or is it possible there is a typo?`);
  }
  const { renderers: renderers2 } = result._metadata;
  const metadata59 = { displayName };
  const { hydration, props } = extractDirectives2(_props);
  let html6 = "";
  if (hydration) {
    metadata59.hydrate = hydration.directive;
    metadata59.hydrateArgs = hydration.value;
    metadata59.componentExport = hydration.componentExport;
    metadata59.componentUrl = hydration.componentUrl;
  }
  const probableRendererNames = guessRenderers(metadata59.componentUrl);
  if (Array.isArray(renderers2) && renderers2.length === 0 && typeof Component !== "string" && !componentIsHTMLElement(Component)) {
    const message = `Unable to render ${metadata59.displayName}!

There are no \`integrations\` set in your \`astro.config.mjs\` file.
Did you mean to add ${formatList(probableRendererNames.map((r3) => "`" + r3 + "`"))}?`;
    throw new Error(message);
  }
  const children2 = await renderSlot2(result, slots == null ? void 0 : slots.default);
  let renderer;
  if (metadata59.hydrate !== "only") {
    let error3;
    for (const r3 of renderers2) {
      try {
        if (await r3.ssr.check(Component, props, children2)) {
          renderer = r3;
          break;
        }
      } catch (e3) {
        error3 ?? (error3 = e3);
      }
    }
    if (error3) {
      throw error3;
    }
    if (!renderer && typeof HTMLElement === "function" && componentIsHTMLElement(Component)) {
      const output = renderHTMLElement(result, Component, _props, slots);
      return output;
    }
  } else {
    if (metadata59.hydrateArgs) {
      const rendererName = metadata59.hydrateArgs;
      renderer = renderers2.filter(({ name }) => name === `@astrojs/${rendererName}` || name === rendererName)[0];
    }
    if (!renderer && renderers2.length === 1) {
      renderer = renderers2[0];
    }
    if (!renderer) {
      const extname2 = (_a8 = metadata59.componentUrl) == null ? void 0 : _a8.split(".").pop();
      renderer = renderers2.filter(({ name }) => name === `@astrojs/${extname2}` || name === extname2)[0];
    }
  }
  if (!renderer) {
    if (metadata59.hydrate === "only") {
      throw new Error(`Unable to render ${metadata59.displayName}!

Using the \`client:only\` hydration strategy, Astro needs a hint to use the correct renderer.
Did you mean to pass <${metadata59.displayName} client:only="${probableRendererNames.map((r3) => r3.replace("@astrojs/", "")).join("|")}" />
`);
    } else if (typeof Component !== "string") {
      const matchingRenderers = renderers2.filter((r3) => probableRendererNames.includes(r3.name));
      const plural = renderers2.length > 1;
      if (matchingRenderers.length === 0) {
        throw new Error(`Unable to render ${metadata59.displayName}!

There ${plural ? "are" : "is"} ${renderers2.length} renderer${plural ? "s" : ""} configured in your \`astro.config.mjs\` file,
but ${plural ? "none were" : "it was not"} able to server-side render ${metadata59.displayName}.

Did you mean to enable ${formatList(probableRendererNames.map((r3) => "`" + r3 + "`"))}?`);
      } else if (matchingRenderers.length === 1) {
        renderer = matchingRenderers[0];
        ({ html: html6 } = await renderer.ssr.renderToStaticMarkup(Component, props, children2, metadata59));
      } else {
        throw new Error(`Unable to render ${metadata59.displayName}!

This component likely uses ${formatList(probableRendererNames)},
but Astro encountered an error during server-side rendering.

Please ensure that ${metadata59.displayName}:
1. Does not unconditionally access browser-specific globals like \`window\` or \`document\`.
   If this is unavoidable, use the \`client:only\` hydration directive.
2. Does not conditionally return \`null\` or \`undefined\` when rendered on the server.

If you're still stuck, please open an issue on GitHub or join us at https://astro.build/chat.`);
      }
    }
  } else {
    if (metadata59.hydrate === "only") {
      html6 = await renderSlot2(result, slots == null ? void 0 : slots.fallback);
    } else {
      ({ html: html6 } = await renderer.ssr.renderToStaticMarkup(Component, props, children2, metadata59));
    }
  }
  if (!html6 && typeof Component === "string") {
    html6 = await renderAstroComponent2(await render2`<${Component}${internalSpreadAttributes2(props)}${markHTMLString2((children2 == null || children2 == "") && voidElementNames2.test(Component) ? `/>` : `>${children2 == null ? "" : children2}</${Component}>`)}`);
  }
  if (!hydration) {
    return markHTMLString2(html6.replace(/\<\/?astro-fragment\>/g, ""));
  }
  const astroId = shorthash2(`<!--${metadata59.componentExport.value}:${metadata59.componentUrl}-->
${html6}
${serializeProps2(props)}`);
  result.scripts.add(await generateHydrateScript2({ renderer, result, astroId, props }, metadata59));
  const needsAstroTemplate = children2 && !/<\/?astro-fragment\>/.test(html6);
  const template = needsAstroTemplate ? `<template data-astro-template>${children2}</template>` : "";
  return markHTMLString2(`<astro-root ssr uid="${astroId}"${needsAstroTemplate ? " tmpl" : ""}>${html6 ?? ""}${template}</astro-root>`);
}
function createDeprecatedFetchContentFn() {
  return () => {
    throw new Error("Deprecated: Astro.fetchContent() has been replaced with Astro.glob().");
  };
}
function createAstroGlobFn() {
  const globHandler = (importMetaGlobResult, globValue) => {
    let allEntries = [...Object.values(importMetaGlobResult)];
    if (allEntries.length === 0) {
      throw new Error(`Astro.glob(${JSON.stringify(globValue())}) - no matches found.`);
    }
    return Promise.all(allEntries.map((fn) => fn()));
  };
  return globHandler;
}
function createAstro(filePathname, _site, projectRootStr) {
  const site = new URL(_site);
  const url59 = new URL(filePathname, site);
  const projectRoot = new URL(projectRootStr);
  return {
    site,
    fetchContent: createDeprecatedFetchContentFn(),
    glob: createAstroGlobFn(),
    resolve(...segments) {
      let resolved = segments.reduce((u3, segment) => new URL(segment, u3), url59).pathname;
      if (resolved.startsWith(projectRoot.pathname)) {
        resolved = "/" + resolved.slice(projectRoot.pathname.length);
      }
      return resolved;
    }
  };
}
function addAttribute3(value, key2, shouldEscape = true) {
  if (value == null) {
    return "";
  }
  if (value === false) {
    if (htmlEnumAttributes2.test(key2) || svgEnumAttributes2.test(key2)) {
      return markHTMLString2(` ${key2}="false"`);
    }
    return "";
  }
  if (STATIC_DIRECTIVES2.has(key2)) {
    console.warn(`[astro] The "${key2}" directive cannot be applied dynamically at runtime. It will not be rendered as an attribute.

Make sure to use the static attribute syntax (\`${key2}={value}\`) instead of the dynamic spread syntax (\`{...{ "${key2}": value }}\`).`);
    return "";
  }
  if (key2 === "class:list") {
    return markHTMLString2(` ${key2.slice(0, -5)}="${toAttributeString2(serializeListValue2(value))}"`);
  }
  if (value === true && (key2.startsWith("data-") || htmlBooleanAttributes2.test(key2))) {
    return markHTMLString2(` ${key2}`);
  } else {
    return markHTMLString2(` ${key2}="${toAttributeString2(value, shouldEscape)}"`);
  }
}
function internalSpreadAttributes2(values, shouldEscape = true) {
  let output = "";
  for (const [key2, value] of Object.entries(values)) {
    output += addAttribute3(value, key2, shouldEscape);
  }
  return markHTMLString2(output);
}
async function renderToString2(result, componentFactory, props, children2) {
  const Component = await componentFactory(result, props, children2);
  if (!isAstroComponent2(Component)) {
    const response = Component;
    throw response;
  }
  let template = await renderAstroComponent2(Component);
  return template;
}
async function renderAstroComponent2(component) {
  let template = [];
  for await (const value of component) {
    if (value || value === 0) {
      template.push(value);
    }
  }
  return markHTMLString2(await _render2(template));
}
function componentIsHTMLElement(Component) {
  return typeof HTMLElement !== "undefined" && HTMLElement.isPrototypeOf(Component);
}
async function renderHTMLElement(result, constructor, props, slots) {
  const name = getHTMLElementName(constructor);
  let attrHTML = "";
  for (const attr in props) {
    attrHTML += ` ${attr}="${toAttributeString2(await props[attr])}"`;
  }
  return markHTMLString2(`<${name}${attrHTML}>${await renderSlot2(result, slots == null ? void 0 : slots.default)}</${name}>`);
}
function getHTMLElementName(constructor) {
  const definedName = customElements.getName(constructor);
  if (definedName)
    return definedName;
  const assignedName = constructor.name.replace(/^HTML|Element$/g, "").replace(/[A-Z]/g, "-$&").toLowerCase().replace(/^-/, "html-");
  return assignedName;
}
function FlagUA() {
  return ssr(_tmpl$$g, ssrHydrationKey());
}
function FlagUS() {
  return ssr(_tmpl$2$7, ssrHydrationKey());
}
function FlagES() {
  return ssr(_tmpl$3$4, ssrHydrationKey());
}
function FlagPL() {
  return ssr(_tmpl$4$2, ssrHydrationKey());
}
function FlagRU() {
  return ssr(_tmpl$5$1, ssrHydrationKey());
}
function FlagTR() {
  return ssr(_tmpl$6$1, ssrHydrationKey());
}
function LangPicker() {
  const [lang, setLang] = createSignal(ELangs.en);
  const [restPath, setrestPath] = createSignal("");
  const [isOpen, setIsOpen] = createSignal(false);
  createEffect(() => {
    const langPath = window.location.pathname.split("/");
    const restPath2 = window.location.pathname.split(langPath[1])[1];
    setLang("/" + langPath[1]);
    setrestPath(restPath2);
  });
  return ssr(_tmpl$$f, ssrHydrationKey() + ssrAttribute("class", escape2(styles.langPicker, true), false), ssrAttribute("class", escape2(styles.langPicker__button, true), false), lang().replace("/", "") === ELangs.es && escape2(createComponent(FlagES, {})), lang().replace("/", "") === ELangs.pl && escape2(createComponent(FlagPL, {})), lang().replace("/", "") === ELangs.ru && escape2(createComponent(FlagRU, {})), lang().replace("/", "") === ELangs.tr && escape2(createComponent(FlagTR, {})), lang().replace("/", "") === ELangs.ua && escape2(createComponent(FlagUA, {})), lang().replace("/", "") === ELangs.en && escape2(createComponent(FlagUS, {})), `${escape2(styles.langPicker__picker, true) || ""} ${isOpen() ? escape2(escape2(styles.langPicker__picker_show, true), true) : ""}`, lang() === ELangs.es ? escape2(styles.langPicker__pickerflag_active, true) : "", "/" + escape2(ELangs.es, true) + escape2(restPath(), true), escape2(createComponent(FlagES, {})), lang() === ELangs.pl ? escape2(styles.langPicker__pickerflag_active, true) : "", "/" + escape2(ELangs.pl, true) + escape2(restPath(), true), escape2(createComponent(FlagPL, {})), lang() === ELangs.ru ? escape2(styles.langPicker__pickerflag_active, true) : "", "/" + escape2(ELangs.ru, true) + escape2(restPath(), true), escape2(createComponent(FlagRU, {})), lang() === ELangs.tr ? escape2(styles.langPicker__pickerflag_active, true) : "", "/" + escape2(ELangs.tr, true) + escape2(restPath(), true), escape2(createComponent(FlagTR, {})), lang() === ELangs.ua ? escape2(styles.langPicker__pickerflag_active, true) : "", "/" + escape2(ELangs.ua, true) + escape2(restPath(), true), escape2(createComponent(FlagUA, {})), "/" + escape2(ELangs.en, true) + escape2(restPath(), true), lang() === ELangs.en ? escape2(styles.langPicker__pickerflag_active, true) : "", escape2(createComponent(FlagUS, {})));
}
function Counter$1(props) {
  let elem;
  const [number2, setNumber] = createSignal(0);
  const step = props.countTo > 1e3 ? 100 : props.countTo > 100 ? 10 : 1;
  function start3() {
    const int = setInterval(() => {
      if (number2() < props.countTo) {
        setNumber(number2() + step);
      } else
        clearInterval(int);
    }, 50);
  }
  onMount(() => {
    window.addEventListener("scroll", () => {
      if (window.pageYOffset > elem.getBoundingClientRect().y) {
        start3();
      } else
        setNumber(0);
    });
  });
  return ssr(_tmpl$$e, ssrHydrationKey() + ssrAttribute("class", escape2(styles$1.counter, true), false), ssrAttribute("class", escape2(styles$1.counter__title, true), false), escape2(props.title), ssrAttribute("class", escape2(styles$1.counter__count, true), false), props.format && escape2(props.format) + " ", escape2(number2()));
}
function EmailInput(props) {
  const [isError, setIsError] = createSignal(false);
  createEffect(() => {
    if (store.validation.email.errMsg && store.validation.email.touched) {
      setIsError(true);
    } else {
      setIsError(false);
    }
  });
  return ssr(_tmpl$$d, ssrHydrationKey() + ssrAttribute("class", escape2(styles$3.input__wrp, true), false), ssrAttribute("class", escape2(styles$3.label, true), false), escape2(props.name) ?? "Email", ssrAttribute("class", escape2(styles$3.input_req, true), false), `${escape2(styles$3.input, true) || ""} ${isError() ? escape2(escape2(styles$3.error, true), true) : ""}`, isError() && escape2(ssr(_tmpl$2$6, ssrHydrationKey() + ssrAttribute("class", escape2(styles$3.errMsg, true), false), escape2(store.validation.email.errMsg))));
}
function NameInput(props) {
  const [isError, setIsError] = createSignal(false);
  createEffect(() => {
    if (store.validation.name.errMsg && store.validation.name.touched) {
      setIsError(true);
    } else {
      setIsError(false);
    }
  });
  return ssr(_tmpl$$c, ssrHydrationKey() + ssrAttribute("class", escape2(styles$2.input__wrp, true), false), ssrAttribute("class", escape2(styles$2.label, true), false), escape2(props.name) ?? "Name", ssrAttribute("class", escape2(styles$2.input_req, true), false), `${escape2(styles$2.input, true) || ""} ${isError() ? escape2(escape2(styles$2.error, true), true) : ""}`, isError() && escape2(ssr(_tmpl$2$5, ssrHydrationKey() + ssrAttribute("class", escape2(styles$2.errMsg, true), false), escape2(store.validation.name.errMsg))));
}
function Textarea(props) {
  return ssr(_tmpl$$b, ssrHydrationKey() + ssrAttribute("class", escape2(styles$12.label, true), false), escape2(props.label), ssrAttribute("class", escape2(styles$12.input, true), false));
}
function TextInput(props) {
  return ssr(_tmpl$$a, ssrHydrationKey() + ssrAttribute("class", escape2(styles4.label, true), false), escape2(props.label), ssrAttribute("name", escape2(props.label, true), false) + ssrAttribute("class", escape2(styles4.input, true), false));
}
function FormSubmit(props) {
  const [location2, setLocation] = createSignal({});
  const [isLoading, setIsLoading] = createSignal(false);
  const [isFormSended, setIsFormSended] = createSignal(false);
  const [err, setErr] = createSignal("");
  createEffect(() => {
    setLocation(window.location.origin);
  });
  return ssr(_tmpl$$9, ssrHydrationKey() + ssrAttribute("class", escape2(styles3.form, true), false), ssrAttribute("class", escape2(styles3.form__wrp, true), false), escape2(createComponent(NameInput, {
    get name() {
      return props.fields.name;
    }
  })), escape2(createComponent(EmailInput, {
    get name() {
      return props.fields.email;
    }
  })), escape2(createComponent(TextInput, {
    get label() {
      return props.fields.phone;
    }
  })), escape2(createComponent(TextInput, {
    get label() {
      return props.fields.subj;
    }
  })), escape2(createComponent(Textarea, {
    get label() {
      return props.fields.textArea;
    }
  })), ssrAttribute("tabindex", -1, false) + ssrAttribute("class", escape2(styles3.hiddenInput, true), false), ssrAttribute("value", escape2(location2().toString(), true), false), ssrAttribute("class", escape2(styles3.form__SubmitBtn, true), false), !isLoading() && escape2(props.fields.btnText), isLoading() && escape2(props.fields.loading), isFormSended() && escape2(ssr(_tmpl$2$4, ssrHydrationKey() + ssrAttribute("class", escape2(styles3.success, true), false), escape2(props.fields.sucMsg))), err() && escape2(ssr(_tmpl$2$4, ssrHydrationKey() + ssrAttribute("class", escape2(styles3.error, true), false), escape2(props.fields.fetchErr))));
}
async function getStaticPaths$b() {
  const services = await Astro$b.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
  return services.map((service) => {
    return {
      params: { slug: service.frontmatter.slug },
      props: {
        content: service.Content,
        title: service.frontmatter.title,
        titleDesc: service.frontmatter.titleDesc,
        desc: service.frontmatter.desc,
        values: service.frontmatter.values,
        content: service.Content,
        articles: service.frontmatter.articles,
        heroBtn: service.frontmatter.heroBtn,
        viewBtn: service.frontmatter.viewBtn
      }
    };
  });
}
function Counter(props) {
  const name = props.label;
  if (!Array.isArray(store[props.group]))
    return ssr(_tmpl$$8, ssrHydrationKey());
  const [curEl] = store[props.group].filter((i3) => i3.name === name) ?? [];
  return ssr(_tmpl$2$3, ssrHydrationKey() + ssrAttribute("class", escape2(styles$32.counter, true), false), ssrAttribute("class", escape2(styles$32.counter__label, true), false), ssrAttribute("class", escape2(styles$32.counter__labelText, true), false), escape2(props.label), props.tooltipInfo && escape2(ssr(_tmpl$3$3, ssrHydrationKey() + ssrAttribute("class", escape2(styles$32.label__tooltip, true), false), ssrAttribute("class", escape2(styles$32.label__tooltipInfo, true), false), escape2(props.tooltipInfo))), ssrAttribute("class", escape2(styles$32.counter__counter, true), false), ssrAttribute("class", escape2(styles$32.counter__btn, true), false), ssrAttribute("disabled", !(curEl == null ? void 0 : curEl.value), true), ssrAttribute("class", escape2(styles$32.counter__input, true), false), ssrAttribute("name", escape2(props.label, true), false) + ssrAttribute("value", escape2(curEl == null ? void 0 : curEl.value, true), false), ssrAttribute("class", escape2(styles$32.counter__btn, true), false));
}
function Radio(props) {
  return ssr(_tmpl$$7, ssrHydrationKey() + ssrAttribute("class", escape2(styles$22.radio__label, true), false), ssrAttribute("class", escape2(styles$22.radio__input, true), false) + ssrAttribute("name", escape2(props.name, true), false) + ssrAttribute("value", escape2(props.label, true), false), ssrAttribute("class", escape2(styles$22.radio__box, true), false), ssrAttribute("class", escape2(styles$22.radio__focus, true), false), ssrAttribute("class", escape2(styles$22.radio__mark, true), false), escape2(props.label));
}
function* range(stop, step = 1) {
  for (let i3 = 0; i3 < stop; i3 += step) {
    yield i3;
  }
}
function mounthValue(n2, isMob) {
  let text8 = n2 === 0 ? `${n2 + 1} month` : `${n2 + 1} months`;
  isMob ? text8 = `${n2 + 1} m` : text8;
  return text8;
}
function TimeRange(_a8) {
  var _b = _a8, {
    duration = 24
  } = _b, props = __objRest(_b, [
    "duration"
  ]);
  const [checked, setChecked] = createSignal();
  return ssr(_tmpl$$6, ssrHydrationKey(), escape2(Array.from(range(duration)).map((n2) => {
    return ssr(_tmpl$2$2, ssrHydrationKey(), `timerange__item ${(n2 + 1) % 6 === 0 ? "timerange__item_every" : ""} ${checked() > n2 ? "timerange__item_checked" : ""}`, escape2(mounthValue(n2)), escape2(n2, true) + 1);
  })), escape2(Array.from(range(duration)).map((n2) => {
    const isNotEverySix = (n2 + 1) % 6;
    if (isNotEverySix && n2 !== 0)
      return;
    let monthString;
    let monthStringMob;
    if (n2 === 0 || !isNotEverySix) {
      monthString = mounthValue(n2);
      monthStringMob = mounthValue(n2, true);
    }
    return [ssr(_tmpl$3$2, ssrHydrationKey(), escape2(monthString)), ssr(_tmpl$4$1, ssrHydrationKey(), escape2(monthStringMob))];
  })));
}
function Team(props) {
  return ssr(_tmpl$$5, ssrHydrationKey() + ssrAttribute("class", escape2(styles$13.formSection, true), false), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__clear, true), false), ssrAttribute("class", escape2(styles$13.formSection__fieldset, true), false), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(store.frameworks.map((i3) => createComponent(Counter, {
    get label() {
      return i3.name;
    },
    get tooltipInfo() {
      return i3.tooltip;
    },
    get value() {
      return i3.value;
    },
    group: "frameworks"
  }))), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(store.langs.map((i3) => createComponent(Counter, {
    get label() {
      return i3.name;
    },
    get tooltipInfo() {
      return i3.tooltip;
    },
    get value() {
      return i3.value;
    },
    group: "langs"
  }))), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(store.mobiles.map((i3) => createComponent(Counter, {
    get label() {
      return i3.name;
    },
    get tooltipInfo() {
      return i3.tooltip;
    },
    get value() {
      return i3.value;
    },
    group: "mobiles"
  }))), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(store.db.map((i3) => createComponent(Counter, {
    get label() {
      return i3.name;
    },
    get tooltipInfo() {
      return i3.tooltip;
    },
    get value() {
      return i3.value;
    },
    group: "db"
  }))), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__clear, true), false), `${escape2(styles$13.formSection__fieldset, true)} ${escape2(styles$13.formSection__fieldsetGrid, true)}`, escape2(store.specs.map((i3) => createComponent(Counter, {
    get label() {
      return i3.name;
    },
    get value() {
      return i3.value;
    },
    group: "specs"
  }))), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__clear, true), false), ssrAttribute("class", escape2(styles$13.formSection__fieldset, true), false), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(createComponent(Radio, {
    name: "industry",
    label: "Financial Services"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Media & Entertainment"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "iGaming"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Automotive"
  })), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(createComponent(Radio, {
    name: "industry",
    label: "eCommerce"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Enterprise"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Logistics"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Manufacturing"
  })), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(createComponent(Radio, {
    name: "industry",
    label: "Travel & Hospitality"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Real Estate"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "eLearning"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Aviation"
  })), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(createComponent(Radio, {
    name: "industry",
    label: "Telecom"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Healthcare"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Retail"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Other"
  })), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__clear, true), false), ssrAttribute("class", escape2(styles$13.formSection__duration, true), false), escape2(createComponent(TimeRange, {})), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__contacts, true), false), escape2(createComponent(NameInput, {})), escape2(createComponent(EmailInput, {})), escape2(createComponent(TextInput, {
    label: "Phone number"
  })));
}
function Checkbox(props) {
  return ssr(_tmpl$$4, ssrHydrationKey() + ssrAttribute("class", escape2(styles5.checkbox__label, true), false), ssrAttribute("class", escape2(styles5.checkbox__input, true), false) + ssrAttribute("name", escape2(props.category, true), false) + ssrAttribute("value", escape2(props.label, true), false), ssrAttribute("class", escape2(styles5.checkbox__box, true), false), ssrAttribute("class", escape2(styles5.checkbox__focus, true), false), ssrAttribute("class", escape2(styles5.checkbox__mark, true), false), escape2(props.label));
}
function Custom(props) {
  return ssr(_tmpl$$3, ssrHydrationKey() + ssrAttribute("class", escape2(styles$13.formSection, true), false), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__clear, true), false), ssrAttribute("class", escape2(styles$13.formSection__fieldset, true), false), escape2(createComponent(Checkbox, {
    category: "develop-solution",
    label: "Desktop"
  })), escape2(createComponent(Checkbox, {
    category: "develop-solution",
    label: "Mobile"
  })), escape2(createComponent(Checkbox, {
    category: "develop-solution",
    label: "Web"
  })), escape2(createComponent(Checkbox, {
    category: "develop-solution",
    label: "Consultancy needed"
  })), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__clear, true), false), ssrAttribute("class", escape2(styles$13.formSection__fieldset, true), false), escape2(createComponent(Radio, {
    name: "stage",
    label: "Idea"
  })), escape2(createComponent(Radio, {
    name: "stage",
    label: "Prototype/Specification"
  })), escape2(createComponent(Radio, {
    name: "stage",
    label: "Designed solution"
  })), escape2(createComponent(Radio, {
    name: "stage",
    label: "MVP"
  })), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__clear, true), false), ssrAttribute("class", escape2(styles$13.formSection__fieldset, true), false), escape2(createComponent(Checkbox, {
    category: "specialist",
    label: "Project Manager"
  })), escape2(createComponent(Checkbox, {
    category: "specialist",
    label: "Business Analyst"
  })), escape2(createComponent(Checkbox, {
    category: "specialist",
    label: "UI/UX Designer"
  })), escape2(createComponent(Checkbox, {
    category: "specialist",
    label: "Architect"
  })), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__clear, true), false), ssrAttribute("class", escape2(styles$13.formSection__fieldset, true), false), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(createComponent(Radio, {
    name: "industry",
    label: "Financial Services"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Media & Entertainment"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "iGaming"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Automotive"
  })), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(createComponent(Radio, {
    name: "industry",
    label: "eCommerce"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Enterprise"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Logistics"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Manufacturing"
  })), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(createComponent(Radio, {
    name: "industry",
    label: "Travel & Hospitality"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Real Estate"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "eLearning"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Aviation"
  })), ssrAttribute("class", escape2(styles$13.formSection__itemsBlock, true), false), escape2(createComponent(Radio, {
    name: "industry",
    label: "Telecom"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Healthcare"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Retail"
  })), escape2(createComponent(Radio, {
    name: "industry",
    label: "Other"
  })), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__caption, true), false), ssrAttribute("class", escape2(styles$13.formSection__clear, true), false), ssrAttribute("class", escape2(styles$13.formSection__duration, true), false), escape2(createComponent(TimeRange, {})), ssrAttribute("class", escape2(styles$13.formSection__header, true), false), ssrAttribute("class", escape2(styles$13.formSection__contacts, true), false), escape2(createComponent(NameInput, {})), escape2(createComponent(EmailInput, {})), escape2(createComponent(TextInput, {
    label: "Phone number"
  })));
}
function DontKnow(props) {
  return ssr(_tmpl$$2, ssrHydrationKey() + ssrAttribute("class", escape2(styles$13.formSection, true), false), ssrAttribute("class", escape2(styles$13.fieldset_textInput, true), false), escape2(createComponent(NameInput, {})), escape2(createComponent(EmailInput, {})), escape2(createComponent(TextInput, {
    label: "Phone number"
  })), escape2(createComponent(TextInput, {
    label: "Subject"
  })), escape2(createComponent(Textarea, {
    label: "Message (optional)"
  })));
}
function Form() {
  const [tab, setTab] = createSignal(EForms.custom);
  const [isLoading, setIsLoading] = createSignal(false);
  const [err, setErr] = createSignal("");
  const [location2, setLocation] = createSignal({});
  const [isFormSended, setIsFormSended] = createSignal(false);
  createEffect(() => {
    setLocation(window.location.origin);
    console.log("location", location2());
  });
  const emailRefCallback = (el) => {
  };
  return ssr(_tmpl$$1, ssrHydrationKey() + ssrAttribute("class", escape2(styles$4.form, true), false), ssrAttribute("class", escape2(styles$4.form__header, true), false), ssrAttribute("class", escape2(styles$4.form__headerWrp, true), false), ssrAttribute("class", escape2(styles$4.form__headerTitle, true), false), ssrAttribute("class", escape2(styles$4.form__selectors, true), false), `${escape2(styles$4.form__selectBtn, true) || ""} ${tab() === EForms.custom ? escape2(escape2(styles$4.form__selectBtn_active, true), true) : ""}`, `${escape2(styles$4.form__selectBtn, true) || ""} ${tab() === EForms.team ? escape2(escape2(styles$4.form__selectBtn_active, true), true) : ""}`, `${escape2(styles$4.form__selectBtn, true) || ""} ${tab() === EForms.dontKnow ? escape2(escape2(styles$4.form__selectBtn_active, true), true) : ""}`, ssrAttribute("class", escape2(styles$4.form__form, true), false), tab() === EForms.custom && escape2(createComponent(Custom, {
    emailRefCallback
  })), tab() === EForms.team && escape2(createComponent(Team, {
    emailRefCallback
  })), tab() === EForms.dontKnow && escape2(createComponent(DontKnow, {
    emailRefCallback
  })), ssrAttribute("class", escape2(styles$4.form__SubmitBtn, true), false), !isLoading() && "Get price", isLoading() && "Sending...", err() && escape2(ssr(_tmpl$2$1, ssrHydrationKey() + ssrAttribute("class", escape2(styles$4.error, true), false), escape2(err()))), isFormSended() && escape2(ssr(_tmpl$3$1, ssrHydrationKey() + ssrAttribute("class", escape2(styles$4.success, true), false))));
}
async function getStaticPaths$a() {
  const projects = await Astro$a.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
  return projects.map((project) => {
    return {
      params: { slug: project.frontmatter.slug },
      props: {
        content: project.Content,
        title: project.frontmatter.title,
        img: project.frontmatter.img,
        phases: project.frontmatter.phases,
        bullets: project.frontmatter.bullets,
        result: project.frontmatter.result
      }
    };
  });
}
function Projects(props) {
  const [sort, setSort] = createSignal(props.projects);
  const [active, setActive] = createSignal(ETags.all);
  const [path, setPath] = createSignal();
  createEffect(() => {
    const url59 = decodeURI(window.location.search).replace("?", "");
    setPath(url59);
    if (!path()) {
      setSort(props.projects);
      setActive(ETags.all);
    } else {
      setSort(props.projects.filter((i3) => i3.tags.some((el) => el === path())));
      setActive(path());
    }
  });
  return ssr(_tmpl$, ssrHydrationKey() + ssrAttribute("class", escape2(styles6.project, true), false), ssrAttribute("class", escape2(styles6.project__controlsWrp, true), false), ssrAttribute("class", escape2(styles6.project__controls, true), false), `${escape2(styles6.project__control, true) || ""} ${active() === ETags.all ? escape2(escape2(styles6.project__control_active, true), true) : ""}`, escape2(props.allBtnTitle), escape2(props.servicesNames.map((i3) => ssr(_tmpl$2, ssrHydrationKey(), `${escape2(styles6.project__control, true) || ""} ${active() === i3.name ? escape2(escape2(styles6.project__control_active, true), true) : ""}`, escape2(i3.name)))), ssrAttribute("class", escape2(styles6.project__projects, true), false), ssrAttribute("class", escape2(styles6.project__list, true), false), escape2(sort().map((i3) => ssr(_tmpl$3, ssrHydrationKey() + ssrAttribute("class", escape2(styles6.project__item, true), false), i3.img ? escape2(ssr(_tmpl$4, ssrHydrationKey() + ssrAttribute("class", escape2(styles6.item__img, true), false) + ssrAttribute("src", escape2(i3.img, true), false) + ssrAttribute("alt", escape2(i3.title, true), false))) : escape2(ssr(_tmpl$5, ssrHydrationKey() + ssrAttribute("class", escape2(styles6.item__img, true), false), ssrAttribute("alt", escape2(i3.title, true), false))), ssrAttribute("class", escape2(styles6.item__header, true), false), `/${escape2(props.langHref, true)}/work/${escape2(i3.slug, true)}`, ssrAttribute("class", escape2(styles6.item__link, true), false), escape2(i3.title), ssrAttribute("class", escape2(styles6.list__countsWrp, true), false), `${escape2(styles6.list__counts, true)} ${escape2(styles6.list__counts_devs, true)}`, `${escape2(i3.developers)} developers`, `${escape2(styles6.list__counts, true)} ${escape2(styles6.list__counts_time, true)}`, `${escape2(i3.months)} months`, ssrAttribute("class", escape2(styles6.item__tags, true), false), escape2(i3.tags.map((t3) => {
    return ssr(_tmpl$6, ssrHydrationKey() + ssrAttribute("class", escape2(styles6.tag, true), false), escape2(t3));
  })), ssrAttribute("class", escape2(styles6.item__desc, true), false), escape2(i3.desc), ssrAttribute("class", escape2(styles6.item__link_mob, true), false), `/${escape2(props.langHref, true)}/work/${escape2(i3.slug, true)}`, escape2(props.learnMoreText)))));
}
async function getStaticPaths$9() {
  const services = await Astro$9.glob({ "/public/assets/content/es/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_b31d322e(), chunk_b31d322e_exports)), "/public/assets/content/es/services/automation.md": () => Promise.resolve().then(() => (init_chunk_e89ab15e(), chunk_e89ab15e_exports)), "/public/assets/content/es/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_553bc06b(), chunk_553bc06b_exports)), "/public/assets/content/es/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_3c563026(), chunk_3c563026_exports)), "/public/assets/content/es/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_165e007d(), chunk_165e007d_exports)) }, () => "/public/assets/content/es/services/*.md");
  return services.map((service) => {
    return {
      params: { slug: service.frontmatter.slug },
      props: {
        content: service.Content,
        title: service.frontmatter.title,
        titleDesc: service.frontmatter.titleDesc,
        desc: service.frontmatter.desc,
        values: service.frontmatter.values,
        content: service.Content,
        articles: service.frontmatter.articles,
        heroBtn: service.frontmatter.heroBtn,
        viewBtn: service.frontmatter.viewBtn
      }
    };
  });
}
async function getStaticPaths$8() {
  const projects = await Astro$8.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
  return projects.map((project) => {
    return {
      params: { slug: project.frontmatter.slug },
      props: {
        content: project.Content,
        title: project.frontmatter.title,
        img: project.frontmatter.img,
        phases: project.frontmatter.phases,
        bullets: project.frontmatter.bullets,
        result: project.frontmatter.result
      }
    };
  });
}
async function getStaticPaths$7() {
  const services = await Astro$7.glob({ "/public/assets/content/pl/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_7ab29271(), chunk_7ab29271_exports)), "/public/assets/content/pl/services/automation.md": () => Promise.resolve().then(() => (init_chunk_10e50542(), chunk_10e50542_exports)), "/public/assets/content/pl/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_2b4629e3(), chunk_2b4629e3_exports)), "/public/assets/content/pl/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_67f22cca(), chunk_67f22cca_exports)), "/public/assets/content/pl/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_d3d93e58(), chunk_d3d93e58_exports)) }, () => "/public/assets/content/pl/services/*.md");
  return services.map((service) => {
    return {
      params: { slug: service.frontmatter.slug },
      props: {
        content: service.Content,
        title: service.frontmatter.title,
        titleDesc: service.frontmatter.titleDesc,
        desc: service.frontmatter.desc,
        values: service.frontmatter.values,
        content: service.Content,
        articles: service.frontmatter.articles,
        heroBtn: service.frontmatter.heroBtn,
        viewBtn: service.frontmatter.viewBtn
      }
    };
  });
}
async function getStaticPaths$6() {
  const projects = await Astro$6.glob({ "/public/assets/content/pl/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_0da3919e(), chunk_0da3919e_exports)), "/public/assets/content/pl/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_2e94afe0(), chunk_2e94afe0_exports)), "/public/assets/content/pl/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_7d2c8f1b(), chunk_7d2c8f1b_exports)), "/public/assets/content/pl/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_31893b22(), chunk_31893b22_exports)), "/public/assets/content/pl/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_726d82cf(), chunk_726d82cf_exports)) }, () => "/public/assets/content/pl/projects/*.md");
  return projects.map((project) => {
    return {
      params: { slug: project.frontmatter.slug },
      props: {
        content: project.Content,
        title: project.frontmatter.title,
        img: project.frontmatter.img,
        phases: project.frontmatter.phases,
        bullets: project.frontmatter.bullets,
        result: project.frontmatter.result
      }
    };
  });
}
async function getStaticPaths$5() {
  const services = await Astro$5.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
  return services.map((service) => {
    return {
      params: { slug: service.frontmatter.slug },
      props: {
        content: service.Content,
        title: service.frontmatter.title,
        titleDesc: service.frontmatter.titleDesc,
        desc: service.frontmatter.desc,
        values: service.frontmatter.values,
        content: service.Content,
        articles: service.frontmatter.articles,
        heroBtn: service.frontmatter.heroBtn,
        viewBtn: service.frontmatter.viewBtn
      }
    };
  });
}
async function getStaticPaths$4() {
  const projects = await Astro$4.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
  return projects.map((project) => {
    return {
      params: { slug: project.frontmatter.slug },
      props: {
        content: project.Content,
        title: project.frontmatter.title,
        img: project.frontmatter.img,
        phases: project.frontmatter.phases,
        bullets: project.frontmatter.bullets,
        result: project.frontmatter.result
      }
    };
  });
}
async function getStaticPaths$3() {
  const services = await Astro$3.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
  return services.map((service) => {
    return {
      params: { slug: service.frontmatter.slug },
      props: {
        content: service.Content,
        title: service.frontmatter.title,
        titleDesc: service.frontmatter.titleDesc,
        desc: service.frontmatter.desc,
        values: service.frontmatter.values,
        content: service.Content,
        articles: service.frontmatter.articles,
        heroBtn: service.frontmatter.heroBtn,
        viewBtn: service.frontmatter.viewBtn
      }
    };
  });
}
async function getStaticPaths$2() {
  const projects = await Astro$2.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
  return projects.map((project) => {
    return {
      params: { slug: project.frontmatter.slug },
      props: {
        content: project.Content,
        title: project.frontmatter.title,
        img: project.frontmatter.img,
        phases: project.frontmatter.phases,
        bullets: project.frontmatter.bullets,
        result: project.frontmatter.result
      }
    };
  });
}
async function getStaticPaths$1() {
  const services = await Astro$1.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
  return services.map((service) => {
    return {
      params: { slug: service.frontmatter.slug },
      props: {
        content: service.Content,
        title: service.frontmatter.title,
        titleDesc: service.frontmatter.titleDesc,
        desc: service.frontmatter.desc,
        values: service.frontmatter.values,
        content: service.Content,
        articles: service.frontmatter.articles,
        heroBtn: service.frontmatter.heroBtn,
        viewBtn: service.frontmatter.viewBtn
      }
    };
  });
}
async function getStaticPaths() {
  const projects = await Astro.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
  return projects.map((project) => {
    return {
      params: { slug: project.frontmatter.slug },
      props: {
        content: project.Content,
        title: project.frontmatter.title,
        img: project.frontmatter.img,
        phases: project.frontmatter.phases,
        bullets: project.frontmatter.bullets,
        result: project.frontmatter.result
      }
    };
  });
}
function Mime$1() {
  this._types = /* @__PURE__ */ Object.create(null);
  this._extensions = /* @__PURE__ */ Object.create(null);
  for (let i3 = 0; i3 < arguments.length; i3++) {
    this.define(arguments[i3]);
  }
  this.define = this.define.bind(this);
  this.getType = this.getType.bind(this);
  this.getExtension = this.getExtension.bind(this);
}
function assertPath2(path) {
  if (typeof path !== "string") {
    throw new TypeError("Path must be a string. Received " + JSON.stringify(path));
  }
}
function normalizeStringPosix(path, allowAboveRoot) {
  var res = "";
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code2;
  for (var i3 = 0; i3 <= path.length; ++i3) {
    if (i3 < path.length)
      code2 = path.charCodeAt(i3);
    else if (code2 === 47)
      break;
    else
      code2 = 47;
    if (code2 === 47) {
      if (lastSlash === i3 - 1 || dots === 1)
        ;
      else if (lastSlash !== i3 - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf("/");
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = "";
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf("/");
              }
              lastSlash = i3;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = "";
            lastSegmentLength = 0;
            lastSlash = i3;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += "/..";
          else
            res = "..";
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += "/" + path.slice(lastSlash + 1, i3);
        else
          res = path.slice(lastSlash + 1, i3);
        lastSegmentLength = i3 - lastSlash - 1;
      }
      lastSlash = i3;
      dots = 0;
    } else if (code2 === 46 && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}
function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base2 = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
  if (!dir) {
    return base2;
  }
  if (dir === pathObject.root) {
    return dir + base2;
  }
  return dir + sep + base2;
}
function lexer(str) {
  var tokens = [];
  var i3 = 0;
  while (i3 < str.length) {
    var char = str[i3];
    if (char === "*" || char === "+" || char === "?") {
      tokens.push({ type: "MODIFIER", index: i3, value: str[i3++] });
      continue;
    }
    if (char === "\\") {
      tokens.push({ type: "ESCAPED_CHAR", index: i3++, value: str[i3++] });
      continue;
    }
    if (char === "{") {
      tokens.push({ type: "OPEN", index: i3, value: str[i3++] });
      continue;
    }
    if (char === "}") {
      tokens.push({ type: "CLOSE", index: i3, value: str[i3++] });
      continue;
    }
    if (char === ":") {
      var name = "";
      var j = i3 + 1;
      while (j < str.length) {
        var code2 = str.charCodeAt(j);
        if (code2 >= 48 && code2 <= 57 || code2 >= 65 && code2 <= 90 || code2 >= 97 && code2 <= 122 || code2 === 95) {
          name += str[j++];
          continue;
        }
        break;
      }
      if (!name)
        throw new TypeError("Missing parameter name at ".concat(i3));
      tokens.push({ type: "NAME", index: i3, value: name });
      i3 = j;
      continue;
    }
    if (char === "(") {
      var count = 1;
      var pattern = "";
      var j = i3 + 1;
      if (str[j] === "?") {
        throw new TypeError('Pattern cannot start with "?" at '.concat(j));
      }
      while (j < str.length) {
        if (str[j] === "\\") {
          pattern += str[j++] + str[j++];
          continue;
        }
        if (str[j] === ")") {
          count--;
          if (count === 0) {
            j++;
            break;
          }
        } else if (str[j] === "(") {
          count++;
          if (str[j + 1] !== "?") {
            throw new TypeError("Capturing groups are not allowed at ".concat(j));
          }
        }
        pattern += str[j++];
      }
      if (count)
        throw new TypeError("Unbalanced pattern at ".concat(i3));
      if (!pattern)
        throw new TypeError("Missing pattern at ".concat(i3));
      tokens.push({ type: "PATTERN", index: i3, value: pattern });
      i3 = j;
      continue;
    }
    tokens.push({ type: "CHAR", index: i3, value: str[i3++] });
  }
  tokens.push({ type: "END", index: i3, value: "" });
  return tokens;
}
function parse7(str, options) {
  if (options === void 0) {
    options = {};
  }
  var tokens = lexer(str);
  var _a8 = options.prefixes, prefixes = _a8 === void 0 ? "./" : _a8;
  var defaultPattern = "[^".concat(escapeString(options.delimiter || "/#?"), "]+?");
  var result = [];
  var key2 = 0;
  var i3 = 0;
  var path = "";
  var tryConsume = function(type) {
    if (i3 < tokens.length && tokens[i3].type === type)
      return tokens[i3++].value;
  };
  var mustConsume = function(type) {
    var value2 = tryConsume(type);
    if (value2 !== void 0)
      return value2;
    var _a9 = tokens[i3], nextType = _a9.type, index2 = _a9.index;
    throw new TypeError("Unexpected ".concat(nextType, " at ").concat(index2, ", expected ").concat(type));
  };
  var consumeText = function() {
    var result2 = "";
    var value2;
    while (value2 = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR")) {
      result2 += value2;
    }
    return result2;
  };
  while (i3 < tokens.length) {
    var char = tryConsume("CHAR");
    var name = tryConsume("NAME");
    var pattern = tryConsume("PATTERN");
    if (name || pattern) {
      var prefix = char || "";
      if (prefixes.indexOf(prefix) === -1) {
        path += prefix;
        prefix = "";
      }
      if (path) {
        result.push(path);
        path = "";
      }
      result.push({
        name: name || key2++,
        prefix,
        suffix: "",
        pattern: pattern || defaultPattern,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    var value = char || tryConsume("ESCAPED_CHAR");
    if (value) {
      path += value;
      continue;
    }
    if (path) {
      result.push(path);
      path = "";
    }
    var open = tryConsume("OPEN");
    if (open) {
      var prefix = consumeText();
      var name_1 = tryConsume("NAME") || "";
      var pattern_1 = tryConsume("PATTERN") || "";
      var suffix = consumeText();
      mustConsume("CLOSE");
      result.push({
        name: name_1 || (pattern_1 ? key2++ : ""),
        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
        prefix,
        suffix,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    mustConsume("END");
  }
  return result;
}
function compile(str, options) {
  return tokensToFunction(parse7(str, options), options);
}
function tokensToFunction(tokens, options) {
  if (options === void 0) {
    options = {};
  }
  var reFlags = flags(options);
  var _a8 = options.encode, encode2 = _a8 === void 0 ? function(x3) {
    return x3;
  } : _a8, _b = options.validate, validate = _b === void 0 ? true : _b;
  var matches = tokens.map(function(token) {
    if (typeof token === "object") {
      return new RegExp("^(?:".concat(token.pattern, ")$"), reFlags);
    }
  });
  return function(data3) {
    var path = "";
    for (var i3 = 0; i3 < tokens.length; i3++) {
      var token = tokens[i3];
      if (typeof token === "string") {
        path += token;
        continue;
      }
      var value = data3 ? data3[token.name] : void 0;
      var optional = token.modifier === "?" || token.modifier === "*";
      var repeat = token.modifier === "*" || token.modifier === "+";
      if (Array.isArray(value)) {
        if (!repeat) {
          throw new TypeError('Expected "'.concat(token.name, '" to not repeat, but got an array'));
        }
        if (value.length === 0) {
          if (optional)
            continue;
          throw new TypeError('Expected "'.concat(token.name, '" to not be empty'));
        }
        for (var j = 0; j < value.length; j++) {
          var segment = encode2(value[j], token);
          if (validate && !matches[i3].test(segment)) {
            throw new TypeError('Expected all "'.concat(token.name, '" to match "').concat(token.pattern, '", but got "').concat(segment, '"'));
          }
          path += token.prefix + segment + token.suffix;
        }
        continue;
      }
      if (typeof value === "string" || typeof value === "number") {
        var segment = encode2(String(value), token);
        if (validate && !matches[i3].test(segment)) {
          throw new TypeError('Expected "'.concat(token.name, '" to match "').concat(token.pattern, '", but got "').concat(segment, '"'));
        }
        path += token.prefix + segment + token.suffix;
        continue;
      }
      if (optional)
        continue;
      var typeOfMessage = repeat ? "an array" : "a string";
      throw new TypeError('Expected "'.concat(token.name, '" to be ').concat(typeOfMessage));
    }
    return path;
  };
}
function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
function flags(options) {
  return options && options.sensitive ? "" : "i";
}
function getRouteGenerator2(segments, addTrailingSlash) {
  const template = segments.map((segment) => {
    return segment[0].spread ? `/:${segment[0].content.slice(3)}(.*)?` : "/" + segment.map((part) => {
      if (part)
        return part.dynamic ? `:${part.content}` : part.content.normalize().replace(/\?/g, "%3F").replace(/#/g, "%23").replace(/%5B/g, "[").replace(/%5D/g, "]").replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    }).join("");
  }).join("");
  const trailing = addTrailingSlash !== "never" && segments.length ? "/" : "";
  const toPath = compile(template + trailing);
  return toPath;
}
function deserializeRouteData2(rawRouteData) {
  return {
    type: rawRouteData.type,
    pattern: new RegExp(rawRouteData.pattern),
    params: rawRouteData.params,
    component: rawRouteData.component,
    generate: getRouteGenerator2(rawRouteData.segments, rawRouteData._meta.trailingSlash),
    pathname: rawRouteData.pathname || void 0,
    segments: rawRouteData.segments
  };
}
function deserializeManifest2(serializedManifest) {
  const routes = [];
  for (const serializedRoute of serializedManifest.routes) {
    routes.push(__spreadProps6(__spreadValues8({}, serializedRoute), {
      routeData: deserializeRouteData2(serializedRoute.routeData)
    }));
    const route = serializedRoute;
    route.routeData = deserializeRouteData2(serializedRoute.routeData);
  }
  const assets = new Set(serializedManifest.assets);
  return __spreadProps6(__spreadValues8({}, serializedManifest), {
    assets,
    routes
  });
}
var import_serialize_javascript60, _renderer0, replace2, ca2, esca2, pe2, escape3, escapeHTML2, HTMLString2, markHTMLString2, HydrationDirectives, dictionary2, binary2, Metadata, voidElementNames2, htmlBooleanAttributes2, htmlEnumAttributes2, svgEnumAttributes2, AstroComponent2, Fragment2, toAttributeString2, STATIC_DIRECTIVES2, __freeze, __defProp$1, __template, _a7, $$metadata$S, $$Astro$S, $$Index$6, $$file$S, $$url$S, _page0, ELangs, $$module4$2, $$metadata$R, $$Astro$R, $$Container, $$file$R, $$url$R, $$module5$3, $$metadata$Q, $$Astro$Q, $$Footer, $$file$Q, $$url$Q, $$module4$1, $$metadata$P, $$Astro$P, $$Logo, $$file$P, $$url$P, $$module1$4, _tmpl$$g, _tmpl$2$7, _tmpl$3$4, _tmpl$4$2, _tmpl$5$1, _tmpl$6$1, _tmpl$$f, $$module2$7, $$module8$1, $$module8, $$metadata$O, $$Astro$O, $$Header, $$file$O, $$url$O, $$module5$2, ETags, $$module2$6, $$metadata$N, $$Astro$N, $$Layout, $$file$N, $$url$N, $$module6$1, $$module1$3, $$metadata$M, $$Astro$M, $$MainTitle, $$file$M, $$url$M, $$module1$2, $$metadata$L, $$Astro$L, $$Button, $$file$L, $$url$L, $$module2$5, $$metadata$K, $$Astro$K, $$Hero, $$file$K, $$url$K, $$module2$4, _tmpl$$e, $$module3$3, $$metadata$J, $$Astro$J, $$About$6, $$file$J, $$url$J, $$module3$2, $$metadata$I, $$Astro$I, $$Section, $$file$I, $$url$I, $$module2$3, $$metadata$H, $$Astro$H, $$Map, $$file$H, $$url$H, $$module4, $$metadata$G, $$Astro$G, $$How, $$file$G, $$url$G, $$module5$1, $$metadata$F, $$Astro$F, $$Services, $$file$F, $$url$F, $$module6, $$metadata$E, $$Astro$E, $$Technologies, $$file$E, $$url$E, $$module7$1, store, setStore, _tmpl$$d, _tmpl$2$6, _tmpl$$c, _tmpl$2$5, _tmpl$$b, _tmpl$$a, _tmpl$$9, _tmpl$2$4, $$module1$1, $$metadata$D, $$Astro$D, $$FormSection, $$file$D, $$url$D, $$module2$2, $$metadata$C, $$Astro$C, $$CallbackForm, $$file$C, $$url$C, $$module1, $$metadata$B, $$Astro$B, $$Index$5, $$file$B, $$url$B, _page1, $$metadata$A, $$Astro$A, Astro$b, $$slug$b, $$file$A, $$url$A, _page2, $$metadata$z, $$Astro$z, $$AboutCard, $$file$z, $$url$z, $$module2$1, $$metadata$y, $$Astro$y, $$Breadcrums, $$file$y, $$url$y, $$module2, $$metadata$x, $$Astro$x, $$About$5, $$file$x, $$url$x, _page3, EForms, _tmpl$$8, _tmpl$2$3, _tmpl$3$3, _tmpl$$7, _tmpl$$6, _tmpl$2$2, _tmpl$3$2, _tmpl$4$1, _tmpl$$5, _tmpl$$4, _tmpl$$3, _tmpl$$2, _tmpl$$1, _tmpl$2$1, _tmpl$3$1, $$module3$1, $$metadata$w, $$Astro$w, $$Brief$5, $$file$w, $$url$w, _page4, EPhases, $$module5, $$module7, $$metadata$v, $$Astro$v, Astro$a, $$slug$a, $$file$v, $$url$v, _page5, _tmpl$, _tmpl$2, _tmpl$3, _tmpl$4, _tmpl$5, _tmpl$6, $$module3, $$metadata$u, $$Astro$u, $$Work$5, $$file$u, $$url$u, _page6, $$metadata$t, $$Astro$t, $$Index$4, $$file$t, $$url$t, _page7, $$metadata$s, $$Astro$s, Astro$9, $$slug$9, $$file$s, $$url$s, _page8, $$metadata$r, $$Astro$r, $$About$4, $$file$r, $$url$r, _page9, $$metadata$q, $$Astro$q, $$Brief$4, $$file$q, $$url$q, _page10, $$metadata$p, $$Astro$p, Astro$8, $$slug$8, $$file$p, $$url$p, _page11, $$metadata$o, $$Astro$o, $$Work$4, $$file$o, $$url$o, _page12, $$metadata$n, $$Astro$n, $$Index$3, $$file$n, $$url$n, _page13, $$metadata$m, $$Astro$m, Astro$7, $$slug$7, $$file$m, $$url$m, _page14, $$metadata$l, $$Astro$l, $$About$3, $$file$l, $$url$l, _page15, $$metadata$k, $$Astro$k, $$Brief$3, $$file$k, $$url$k, _page16, $$metadata$j, $$Astro$j, Astro$6, $$slug$6, $$file$j, $$url$j, _page17, $$metadata$i, $$Astro$i, $$Work$3, $$file$i, $$url$i, _page18, $$metadata$h, $$Astro$h, $$Index$2, $$file$h, $$url$h, _page19, $$metadata$g, $$Astro$g, Astro$5, $$slug$5, $$file$g, $$url$g, _page20, $$metadata$f, $$Astro$f, $$About$2, $$file$f, $$url$f, _page21, $$metadata$e, $$Astro$e, $$Brief$2, $$file$e, $$url$e, _page22, $$metadata$d, $$Astro$d, Astro$4, $$slug$4, $$file$d, $$url$d, _page23, $$metadata$c, $$Astro$c, $$Work$2, $$file$c, $$url$c, _page24, $$metadata$b, $$Astro$b, $$Index$1, $$file$b, $$url$b, _page25, $$metadata$a, $$Astro$a, Astro$3, $$slug$3, $$file$a, $$url$a, _page26, $$metadata$9, $$Astro$9, $$About$1, $$file$9, $$url$9, _page27, $$metadata$8, $$Astro$8, $$Brief$1, $$file$8, $$url$8, _page28, $$metadata$7, $$Astro$7, Astro$2, $$slug$2, $$file$7, $$url$7, _page29, $$metadata$6, $$Astro$6, $$Work$1, $$file$6, $$url$6, _page30, $$metadata$5, $$Astro$5, $$Index, $$file$5, $$url$5, _page31, $$metadata$4, $$Astro$4, Astro$1, $$slug$1, $$file$4, $$url$4, _page32, $$metadata$3, $$Astro$3, $$About, $$file$3, $$url$3, _page33, $$metadata$2, $$Astro$2, $$Brief, $$file$2, $$url$2, _page34, $$metadata$1, $$Astro$1, Astro, $$slug, $$file$1, $$url$1, _page35, $$metadata59, $$Astro59, $$Work, $$file, $$url, _page36, pageMap, renderers, commonjsGlobal, Mime_1, standard, other, Mime, eastasianwidth, SCRIPT_EXTENSIONS2, posix, STYLE_EXTENSIONS2, util$1, types4, shams$1, hasSymbols$2, shams, origSymbol, hasSymbolSham, hasSymbols$1, ERROR_MESSAGE, slice, toStr$3, funcType, implementation$1, implementation, functionBind, bind$1, src, undefined$1, $SyntaxError, $Function, $TypeError, getEvalledConstructor, $gOPD$1, throwTypeError, ThrowTypeError, hasSymbols2, getProto$1, needsEval, TypedArray, INTRINSICS, doEval, LEGACY_ALIASES, bind2, hasOwn3, $concat, $spliceApply, $replace, $strSlice, $exec, rePropName, reEscapeChar, stringToPath, getBaseIntrinsic, getIntrinsic, callBind$1, GetIntrinsic$1, callBind, $indexOf$1, callBound$3, hasToStringTag$4, callBound$2, $toString$2, isStandardArguments, isLegacyArguments, supportsStandardArguments, isArguments3, toStr$2, fnToStr$1, isFnRegex, hasToStringTag$3, getProto, getGeneratorFunc, GeneratorFunction, isGeneratorFunction, fnToStr, reflectApply, badArrayLike, isCallableMarker, constructorRegex, isES6ClassFn, tryFunctionObject, toStr$1, fnClass, genClass, hasToStringTag$2, documentDotAll, isCallable$1, isCallable3, toStr, hasOwnProperty3, forEachArray, forEachString, forEachObject, forEach$2, forEach_1, possibleNames, g$2, availableTypedArrays$2, GetIntrinsic2, $gOPD, getOwnPropertyDescriptor, forEach$1, availableTypedArrays$1, callBound$1, $toString$1, hasToStringTag$1, g$1, typedArrays$1, $indexOf, $slice$1, toStrTags$1, gOPD$1, getPrototypeOf$1, tryTypedArrays$1, isTypedArray$1, forEach2, availableTypedArrays2, callBound, $toString, hasToStringTag, g2, typedArrays, $slice, toStrTags, gOPD, getPrototypeOf, tryTypedArrays, isTypedArray2, whichTypedArray, isBuffer2, inherits, inherits_browser, util, __defProp8, __defProps6, __getOwnPropDescs6, __getOwnPropSymbols9, __hasOwnProp9, __propIsEnum9, __defNormalProp8, __spreadValues8, __spreadProps6, _manifest2, _args, _exports, handler, _start2;
var init_entry = __esm({
  ".netlify/functions-internal/entry.mjs"() {
    init_netlify_functions();
    init_server3();
    import_serialize_javascript60 = __toESM(require_serialize_javascript(), 1);
    init_chunk_3826580f();
    init_server2();
    init_chunk_67acf695();
    init_chunk_2fcc1150();
    init_server4();
    init_chunk_fa1fc0bc();
    init_chunk_dbf05238();
    init_chunk_90110aa4();
    _renderer0 = {
      check,
      renderToStaticMarkup
    };
    ({ replace: replace2 } = "");
    ca2 = /[&<>'"]/g;
    esca2 = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      "'": "&#39;",
      '"': "&quot;"
    };
    pe2 = (m3) => esca2[m3];
    escape3 = (es) => replace2.call(es, ca2, pe2);
    escapeHTML2 = escape3;
    HTMLString2 = class extends String {
    };
    markHTMLString2 = (value) => {
      if (value instanceof HTMLString2) {
        return value;
      }
      if (typeof value === "string") {
        return new HTMLString2(value);
      }
      return value;
    };
    HydrationDirectives = ["load", "idle", "media", "visible", "only"];
    dictionary2 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXY";
    binary2 = dictionary2.length;
    Metadata = class {
      constructor(filePathname, opts) {
        this.modules = opts.modules;
        this.hoisted = opts.hoisted;
        this.hydratedComponents = opts.hydratedComponents;
        this.clientOnlyComponents = opts.clientOnlyComponents;
        this.hydrationDirectives = opts.hydrationDirectives;
        this.mockURL = new URL(filePathname, "http://example.com");
        this.metadataCache = /* @__PURE__ */ new Map();
      }
      resolvePath(specifier) {
        return specifier.startsWith(".") ? new URL(specifier, this.mockURL).pathname : specifier;
      }
      getPath(Component) {
        const metadata59 = this.getComponentMetadata(Component);
        return (metadata59 == null ? void 0 : metadata59.componentUrl) || null;
      }
      getExport(Component) {
        const metadata59 = this.getComponentMetadata(Component);
        return (metadata59 == null ? void 0 : metadata59.componentExport) || null;
      }
      *hydratedComponentPaths() {
        const found = /* @__PURE__ */ new Set();
        for (const metadata59 of this.deepMetadata()) {
          for (const component of metadata59.hydratedComponents) {
            const path = metadata59.getPath(component);
            if (path && !found.has(path)) {
              found.add(path);
              yield path;
            }
          }
        }
      }
      *clientOnlyComponentPaths() {
        const found = /* @__PURE__ */ new Set();
        for (const metadata59 of this.deepMetadata()) {
          for (const component of metadata59.clientOnlyComponents) {
            const path = metadata59.resolvePath(component);
            if (path && !found.has(path)) {
              found.add(path);
              yield path;
            }
          }
        }
      }
      *hydrationDirectiveSpecifiers() {
        const found = /* @__PURE__ */ new Set();
        for (const metadata59 of this.deepMetadata()) {
          for (const directive of metadata59.hydrationDirectives) {
            if (!found.has(directive)) {
              found.add(directive);
              yield hydrationSpecifier2(directive);
            }
          }
        }
      }
      *hoistedScriptPaths() {
        for (const metadata59 of this.deepMetadata()) {
          let i3 = 0, pathname = metadata59.mockURL.pathname;
          while (i3 < metadata59.hoisted.length) {
            yield `${pathname.replace("/@fs", "")}?astro&type=script&index=${i3}`;
            i3++;
          }
        }
      }
      *deepMetadata() {
        yield this;
        const seen = /* @__PURE__ */ new Set();
        for (const { module: mod } of this.modules) {
          if (typeof mod.$$metadata !== "undefined") {
            const md = mod.$$metadata;
            for (const childMetdata of md.deepMetadata()) {
              if (!seen.has(childMetdata)) {
                seen.add(childMetdata);
                yield childMetdata;
              }
            }
          }
        }
      }
      getComponentMetadata(Component) {
        if (this.metadataCache.has(Component)) {
          return this.metadataCache.get(Component);
        }
        const metadata59 = this.findComponentMetadata(Component);
        this.metadataCache.set(Component, metadata59);
        return metadata59;
      }
      findComponentMetadata(Component) {
        const isCustomElement = typeof Component === "string";
        for (const { module: module2, specifier } of this.modules) {
          const id = this.resolvePath(specifier);
          for (const [key2, value] of Object.entries(module2)) {
            if (isCustomElement) {
              if (key2 === "tagName" && Component === value) {
                return {
                  componentExport: key2,
                  componentUrl: id
                };
              }
            } else if (Component === value) {
              return {
                componentExport: key2,
                componentUrl: id
              };
            }
          }
        }
        return null;
      }
    };
    voidElementNames2 = /^(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;
    htmlBooleanAttributes2 = /^(allowfullscreen|async|autofocus|autoplay|controls|default|defer|disabled|disablepictureinpicture|disableremoteplayback|formnovalidate|hidden|loop|nomodule|novalidate|open|playsinline|readonly|required|reversed|scoped|seamless|itemscope)$/i;
    htmlEnumAttributes2 = /^(contenteditable|draggable|spellcheck|value)$/i;
    svgEnumAttributes2 = /^(autoReverse|externalResourcesRequired|focusable|preserveAlpha)$/i;
    AstroComponent2 = class {
      constructor(htmlParts, expressions) {
        this.htmlParts = htmlParts;
        this.expressions = expressions;
      }
      get [Symbol.toStringTag]() {
        return "AstroComponent";
      }
      *[Symbol.iterator]() {
        const { htmlParts, expressions } = this;
        for (let i3 = 0; i3 < htmlParts.length; i3++) {
          const html6 = htmlParts[i3];
          const expression = expressions[i3];
          yield markHTMLString2(html6);
          yield _render2(expression);
        }
      }
    };
    Fragment2 = Symbol("Astro.Fragment");
    toAttributeString2 = (value, shouldEscape = true) => shouldEscape ? String(value).replace(/&/g, "&#38;").replace(/"/g, "&#34;") : value;
    STATIC_DIRECTIVES2 = /* @__PURE__ */ new Set(["set:html", "set:text"]);
    __freeze = Object.freeze;
    __defProp$1 = Object.defineProperty;
    __template = (cooked, raw3) => __freeze(__defProp$1(cooked, "raw", { value: __freeze(raw3 || cooked.slice()) }));
    $$metadata$S = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/index.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$S = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/index.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Index$6 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$S, $$props, $$slots);
      Astro2.self = $$Index$6;
      return render2(_a7 || (_a7 = __template(["<script>\n	window.location.pathname = `/en/`;\n<\/script>"], ["<script>\n	window.location.pathname = \\`/en/\\`;\n<\/script>"])));
    });
    $$file$S = "C:/work-projects/pireactor/main-site/src/pages/index.astro";
    $$url$S = "";
    _page0 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$S,
      "default": $$Index$6,
      file: $$file$S,
      url: $$url$S
    }, Symbol.toStringTag, { value: "Module" }));
    ELangs = /* @__PURE__ */ ((ELangs2) => {
      ELangs2["en"] = "en";
      ELangs2["es"] = "es";
      ELangs2["ua"] = "ua";
      ELangs2["tr"] = "tr";
      ELangs2["pl"] = "pl";
      ELangs2["ru"] = "ru";
      return ELangs2;
    })(ELangs || {});
    $$module4$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      ELangs
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$R = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/layouts/Container.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$R = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/layouts/Container.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Container = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$R, $$props, $$slots);
      Astro2.self = $$Container;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<div class="container astro-YYEPTAQJ">
  ${renderSlot2($$result, $$slots["default"])}
</div>`;
    });
    $$file$R = "C:/work-projects/pireactor/main-site/src/layouts/Container.astro";
    $$url$R = void 0;
    $$module5$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$R,
      "default": $$Container,
      file: $$file$R,
      url: $$url$R
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$Q = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/layouts/Footer.astro", { modules: [{ module: $$module5$3, specifier: "./Container.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$Q = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/layouts/Footer.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Footer = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$Q, $$props, $$slots);
      Astro2.self = $$Footer;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<footer class="footer astro-HYTLXZK7">
  ${renderComponent($$result, "Container", $$Container, { "class": "astro-HYTLXZK7" }, { "default": () => render2`<div class="footer__footer astro-HYTLXZK7">
      <small class="astro-HYTLXZK7">&copy; 2022 Pireactor - All Rights Reserved</small>
      <div class="footer__locations astro-HYTLXZK7">New York, Kyiv, Gdansk</div>
      <a href="mailto: info@pireactor.io" class="footer__mail astro-HYTLXZK7">
        <svg class="footer__mail-pic astro-HYTLXZK7" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M19 18.981H5C4.46957 18.981 3.96086 18.7703 3.58579 18.3953C3.21071 18.0202 3 17.5115 3 16.981V7.01904C3 6.48861 3.21071 5.9799 3.58579 5.60483C3.96086 5.22976 4.46957 5.01904 5 5.01904H19C19.5304 5.01904 20.0391 5.22976 20.4142 5.60483C20.7893 5.9799 21 6.48861 21 7.01904V16.982C20.9997 17.5123 20.7889 18.0208 20.4139 18.3956C20.0388 18.7705 19.5303 18.981 19 18.981V18.981Z" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="astro-HYTLXZK7"></path>
          <path d="M17 9L12 12L7 9" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="astro-HYTLXZK7"></path>
        </svg>
        info@pireactor.io
      </a>
      <ul class="footer__socials astro-HYTLXZK7">
        <li class="footer__socials-item astro-HYTLXZK7">
          <a class="footer__socials-link astro-HYTLXZK7" href="http://" aria-label="facebook">
            <svg width="14" height="24" viewBox="0 0 14 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="astro-HYTLXZK7">
              <path d="M10.9281 3.98438H13.1875V0.16875C12.7984 0.117187 11.4578 0 9.89688 0C6.63906 0 4.40781 1.9875 4.40781 5.63906V9H0.8125V13.2656H4.40781V24H8.81406V13.2656H12.2641L12.8125 9H8.81406V6.06094C8.81406 4.82812 9.15625 3.98438 10.9281 3.98438Z" fill="white" class="astro-HYTLXZK7"></path>
            </svg>
          </a>
        </li>
        <li class="footer__socials-item astro-HYTLXZK7">
          <a class="footer__socials-link astro-HYTLXZK7" href="http://" aria-label="twitter">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="astro-HYTLXZK7">
              <path d="M21.533 7.11175C21.5482 7.32494 21.5482 7.53817 21.5482 7.75136C21.5482 14.2539 16.599 21.7463 7.5533 21.7463C4.76648 21.7463 2.17767 20.9391 0 19.5382C0.395953 19.5838 0.776625 19.5991 1.18781 19.5991C3.48727 19.5991 5.60405 18.8224 7.29441 17.4976C5.13197 17.4519 3.31978 16.0356 2.69541 14.0864C3 14.132 3.30455 14.1625 3.62438 14.1625C4.06598 14.1625 4.50764 14.1016 4.91878 13.995C2.66498 13.5381 0.974578 11.5585 0.974578 9.16759V9.1067C1.62938 9.47219 2.39086 9.70061 3.19791 9.73103C1.87303 8.84777 1.00505 7.34017 1.00505 5.63458C1.00505 4.72089 1.24866 3.88333 1.67508 3.15236C4.09641 6.13713 7.73602 8.08633 11.8172 8.29956C11.7411 7.93408 11.6954 7.55341 11.6954 7.17269C11.6954 4.462 13.8883 2.25391 16.6141 2.25391C18.0304 2.25391 19.3095 2.84781 20.208 3.8072C21.3197 3.59402 22.3857 3.18283 23.3299 2.61939C22.9643 3.76155 22.1877 4.72094 21.1674 5.33003C22.1573 5.22348 23.1167 4.94931 23.9999 4.56864C23.33 5.54322 22.4924 6.4112 21.533 7.11175Z" fill="white" class="astro-HYTLXZK7"></path>
            </svg>

          </a>
        </li>
        <li class="footer__socials-item astro-HYTLXZK7">
          <a class="footer__socials-link astro-HYTLXZK7" href="http://" aria-label="linkedin">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="astro-HYTLXZK7">
              <path d="M6.20051 22.4953H1.8468V8.47813H6.20051V22.4953ZM4.02131 6.56606C2.62944 6.56606 1.5 5.41319 1.5 4.02131C1.5 2.62944 2.62944 1.5 4.02131 1.5C5.41319 1.5 6.54262 2.62944 6.54262 4.02131C6.54262 5.41319 5.41319 6.56606 4.02131 6.56606ZM22.4953 22.4953H18.151V15.6718C18.151 14.0456 18.1182 11.9602 15.8874 11.9602C13.6239 11.9602 13.2771 13.727 13.2771 15.5547V22.4953H8.92803V8.47813H13.1037V10.3902H13.1646C13.7457 9.28889 15.1657 8.12665 17.284 8.12665C21.6892 8.12665 22.5 11.0276 22.5 14.7955V22.4953H22.4953Z" fill="white" class="astro-HYTLXZK7"></path>
            </svg>
          </a>
        </li>
      </ul>
    </div>` })}
</footer>`;
    });
    $$file$Q = "C:/work-projects/pireactor/main-site/src/layouts/Footer.astro";
    $$url$Q = void 0;
    $$module4$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$Q,
      "default": $$Footer,
      file: $$file$Q,
      url: $$url$Q
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$P = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/Logo.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$P = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/Logo.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Logo = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$P, $$props, $$slots);
      Astro2.self = $$Logo;
      const { langHref } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<a${addAttribute3("/" + langHref, "href")} class="header__logo logo astro-IPBBBIB3" aria-label="Logo">
  <svg class="logo__img astro-IPBBBIB3" width="36" height="64" viewBox="0 0 36 64" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect width="27.4291" height="42.2732" rx="5" transform="matrix(0.867831 0.49686 3.77346e-05 1 0.458984 7.2851)" fill="url(#paint0_linear_510_685)" class="astro-IPBBBIB3"></rect>
    <rect width="27.4291" height="42.2732" rx="5" transform="matrix(0.867831 0.49686 3.77346e-05 1 6.11133 4.0491)" fill="url(#paint1_linear_510_685)" class="astro-IPBBBIB3"></rect>
    <rect width="27.4291" height="42.2732" rx="5" transform="matrix(0.867831 0.49686 3.77346e-05 1 11.7637 0.813263)" fill="url(#paint2_linear_510_685)" class="astro-IPBBBIB3"></rect>
    <defs class="astro-IPBBBIB3">
      <linearGradient id="paint0_linear_510_685" x1="11.9475" y1="-14.9122" x2="31.2009" y2="43.7327" gradientUnits="userSpaceOnUse" class="astro-IPBBBIB3">
        <stop stop-color="#F100AE" class="astro-IPBBBIB3"></stop>
        <stop offset="1" stop-color="#FF0BF5" stop-opacity="0" class="astro-IPBBBIB3"></stop>
      </linearGradient>
      <linearGradient id="paint1_linear_510_685" x1="9.15457" y1="-12.4268" x2="45.3355" y2="24.5134" gradientUnits="userSpaceOnUse" class="astro-IPBBBIB3">
        <stop stop-color="#FF005C" class="astro-IPBBBIB3"></stop>
        <stop offset="1" stop-color="#666666" stop-opacity="0" class="astro-IPBBBIB3"></stop>
        <stop offset="1" stop-color="#FF005C" stop-opacity="0" class="astro-IPBBBIB3"></stop>
      </linearGradient>
      <linearGradient id="paint2_linear_510_685" x1="13.7145" y1="0" x2="13.7145" y2="42.2732" gradientUnits="userSpaceOnUse" class="astro-IPBBBIB3">
        <stop stop-color="#00DDEB" class="astro-IPBBBIB3"></stop>
        <stop offset="1" stop-color="#0057FF" stop-opacity="0" class="astro-IPBBBIB3"></stop>
      </linearGradient>
    </defs>
  </svg>
  <svg width="196" height="29" viewBox="0 0 196 29" fill="none" xmlns="http://www.w3.org/2000/svg" class="astro-IPBBBIB3">
    <path d="M0.131836 28.3492H2.92412V17.2368H8.9615C16.0177 17.2368 18.5836 13.0837 18.5836 8.968C18.5836 5.82511 17.1497 0.661785 8.9615 0.661785H0.131836V28.3492ZM2.92412 3.16861H8.99923C13.9801 3.16861 15.7913 6.01218 15.7913 8.968C15.7913 11.849 13.9801 14.73 8.99923 14.73H2.92412V3.16861Z" fill="white" class="astro-IPBBBIB3"></path>
    <path d="M22.5379 28.3492H25.3302V0.661785H22.5379V28.3492Z" fill="white" class="astro-IPBBBIB3"></path>
    <path d="M30.1772 28.3492H32.9695V3.16861H37.988C44.5914 3.16861 46.2894 6.49858 46.2894 9.4544C46.2894 15.7402 39.5728 15.815 37.988 15.815H35.7617L45.2329 28.3492H48.7044L40.8558 18.0225C45.8366 17.6858 49.0817 14.2062 49.0817 9.71631C49.0817 7.43397 48.478 0.661785 37.988 0.661785H30.1772V28.3492Z" fill="white" class="astro-IPBBBIB3"></path>
    <path d="M53.0974 28.3492H68.4172V25.8423H55.8897V15.6654H68.0022V13.1585H55.8897V3.16861H68.4172V0.661785H53.0974V28.3492Z" fill="white" class="astro-IPBBBIB3"></path>
    <path d="M70.9504 28.3492H73.9691L78.0066 19.0702H90.9869L95.0244 28.3492H98.0431L86.0816 0.661785H82.9874L70.9504 28.3492ZM79.1008 16.5633L84.5345 3.87951L89.8926 16.5633H79.1008Z" fill="white" class="astro-IPBBBIB3"></path>
    <path d="M126.34 7.73329C124.001 2.94412 119.284 0.175385 113.473 0.175385C105.398 0.175385 98.9832 6.19926 98.9832 14.4306C98.9832 22.8865 105.511 28.8356 113.699 28.8356C119.171 28.8356 123.85 25.9546 126.453 21.128H123.133C120.869 24.7199 117.095 26.3287 113.699 26.3287C107.058 26.3287 101.775 21.2402 101.775 14.4306C101.775 8.10745 106.492 2.68221 113.511 2.68221C119.51 2.68221 122.265 6.57341 123.019 7.73329H126.34Z" fill="white" class="astro-IPBBBIB3"></path>
    <path d="M134.735 28.3492H137.527V3.16861H143.904V0.661785H128.358V3.16861H134.735V28.3492Z" fill="white" class="astro-IPBBBIB3"></path>
    <path d="M157.883 0.175385C149.582 0.175385 143.092 6.27409 143.092 14.5803C143.092 22.8865 149.657 28.8356 157.883 28.8356C166.185 28.8356 172.675 22.662 172.675 14.3558C172.675 6.12443 166.222 0.175385 157.883 0.175385ZM157.921 26.3287C151.204 26.3287 145.884 21.5396 145.884 14.5803C145.884 7.69587 151.091 2.68221 157.921 2.68221C164.638 2.68221 169.883 7.47138 169.883 14.3558C169.883 21.2777 164.713 26.3287 157.921 26.3287Z" fill="white" class="astro-IPBBBIB3"></path>
    <path d="M177.095 28.3492H179.887V3.16861H184.906C191.509 3.16861 193.207 6.49858 193.207 9.4544C193.207 15.7402 186.491 15.815 184.906 15.815H182.68L192.151 28.3492H195.622L187.774 18.0225C192.754 17.6858 196 14.2062 196 9.71631C196 7.43397 195.396 0.661785 184.906 0.661785H177.095V28.3492Z" fill="white" class="astro-IPBBBIB3"></path>
  </svg>
</a>`;
    });
    $$file$P = "C:/work-projects/pireactor/main-site/src/components/Logo.astro";
    $$url$P = void 0;
    $$module1$4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$P,
      "default": $$Logo,
      file: $$file$P,
      url: $$url$P
    }, Symbol.toStringTag, { value: "Module" }));
    _tmpl$$g = ["<svg", ' width="28" height="20" viewBox="0 0 28 20" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="28" height="20" rx="2" fill="white"></rect><mask id="mask0_258_201" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="28" height="20"><rect width="28" height="20" rx="2" fill="white"></rect></mask><g mask="url(#mask0_258_201)"><path fill-rule="evenodd" clip-rule="evenodd" d="M0 10.6667H28V0H0V10.6667Z" fill="#156DD1"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M0 20H28V10.6667H0V20Z" fill="#FFD948"></path></g></svg>'];
    _tmpl$2$7 = ["<svg", ' width="28" height="20" viewBox="0 0 28 20" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="28" height="20" rx="2" fill="white"></rect><mask id="mask0_258_206" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="28" height="20"><rect width="28" height="20" rx="2" fill="white"></rect></mask><g mask="url(#mask0_258_206)"><path fill-rule="evenodd" clip-rule="evenodd" d="M28 0H0V1.33333H28V0ZM28 2.66667H0V4H28V2.66667ZM0 5.33333H28V6.66667H0V5.33333ZM28 8H0V9.33333H28V8ZM0 10.6667H28V12H0V10.6667ZM28 13.3333H0V14.6667H28V13.3333ZM0 16H28V17.3333H0V16ZM28 18.6667H0V20H28V18.6667Z" fill="#D02F44"></path><rect width="12" height="9.33333" fill="#46467F"></rect><g filter="url(#filter0_d_258_206)"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.66671 2.00001C2.66671 2.3682 2.36823 2.66668 2.00004 2.66668C1.63185 2.66668 1.33337 2.3682 1.33337 2.00001C1.33337 1.63182 1.63185 1.33334 2.00004 1.33334C2.36823 1.33334 2.66671 1.63182 2.66671 2.00001ZM5.33337 2.00001C5.33337 2.3682 5.0349 2.66668 4.66671 2.66668C4.29852 2.66668 4.00004 2.3682 4.00004 2.00001C4.00004 1.63182 4.29852 1.33334 4.66671 1.33334C5.0349 1.33334 5.33337 1.63182 5.33337 2.00001ZM7.33337 2.66668C7.70156 2.66668 8.00004 2.3682 8.00004 2.00001C8.00004 1.63182 7.70156 1.33334 7.33337 1.33334C6.96518 1.33334 6.66671 1.63182 6.66671 2.00001C6.66671 2.3682 6.96518 2.66668 7.33337 2.66668ZM10.6667 2.00001C10.6667 2.3682 10.3682 2.66668 10 2.66668C9.63185 2.66668 9.33337 2.3682 9.33337 2.00001C9.33337 1.63182 9.63185 1.33334 10 1.33334C10.3682 1.33334 10.6667 1.63182 10.6667 2.00001ZM3.33337 4.00001C3.70156 4.00001 4.00004 3.70153 4.00004 3.33334C4.00004 2.96515 3.70156 2.66668 3.33337 2.66668C2.96518 2.66668 2.66671 2.96515 2.66671 3.33334C2.66671 3.70153 2.96518 4.00001 3.33337 4.00001ZM6.66671 3.33334C6.66671 3.70153 6.36823 4.00001 6.00004 4.00001C5.63185 4.00001 5.33337 3.70153 5.33337 3.33334C5.33337 2.96515 5.63185 2.66668 6.00004 2.66668C6.36823 2.66668 6.66671 2.96515 6.66671 3.33334ZM8.66671 4.00001C9.0349 4.00001 9.33337 3.70153 9.33337 3.33334C9.33337 2.96515 9.0349 2.66668 8.66671 2.66668C8.29852 2.66668 8.00004 2.96515 8.00004 3.33334C8.00004 3.70153 8.29852 4.00001 8.66671 4.00001ZM10.6667 4.66668C10.6667 5.03487 10.3682 5.33334 10 5.33334C9.63185 5.33334 9.33337 5.03487 9.33337 4.66668C9.33337 4.29849 9.63185 4.00001 10 4.00001C10.3682 4.00001 10.6667 4.29849 10.6667 4.66668ZM7.33337 5.33334C7.70156 5.33334 8.00004 5.03487 8.00004 4.66668C8.00004 4.29849 7.70156 4.00001 7.33337 4.00001C6.96518 4.00001 6.66671 4.29849 6.66671 4.66668C6.66671 5.03487 6.96518 5.33334 7.33337 5.33334ZM5.33337 4.66668C5.33337 5.03487 5.0349 5.33334 4.66671 5.33334C4.29852 5.33334 4.00004 5.03487 4.00004 4.66668C4.00004 4.29849 4.29852 4.00001 4.66671 4.00001C5.0349 4.00001 5.33337 4.29849 5.33337 4.66668ZM2.00004 5.33334C2.36823 5.33334 2.66671 5.03487 2.66671 4.66668C2.66671 4.29849 2.36823 4.00001 2.00004 4.00001C1.63185 4.00001 1.33337 4.29849 1.33337 4.66668C1.33337 5.03487 1.63185 5.33334 2.00004 5.33334ZM4.00004 6.00001C4.00004 6.3682 3.70156 6.66668 3.33337 6.66668C2.96518 6.66668 2.66671 6.3682 2.66671 6.00001C2.66671 5.63182 2.96518 5.33334 3.33337 5.33334C3.70156 5.33334 4.00004 5.63182 4.00004 6.00001ZM6.00004 6.66668C6.36823 6.66668 6.66671 6.3682 6.66671 6.00001C6.66671 5.63182 6.36823 5.33334 6.00004 5.33334C5.63185 5.33334 5.33337 5.63182 5.33337 6.00001C5.33337 6.3682 5.63185 6.66668 6.00004 6.66668ZM9.33337 6.00001C9.33337 6.3682 9.0349 6.66668 8.66671 6.66668C8.29852 6.66668 8.00004 6.3682 8.00004 6.00001C8.00004 5.63182 8.29852 5.33334 8.66671 5.33334C9.0349 5.33334 9.33337 5.63182 9.33337 6.00001ZM10 8.00001C10.3682 8.00001 10.6667 7.70153 10.6667 7.33334C10.6667 6.96515 10.3682 6.66668 10 6.66668C9.63185 6.66668 9.33337 6.96515 9.33337 7.33334C9.33337 7.70153 9.63185 8.00001 10 8.00001ZM8.00004 7.33334C8.00004 7.70153 7.70156 8.00001 7.33337 8.00001C6.96518 8.00001 6.66671 7.70153 6.66671 7.33334C6.66671 6.96515 6.96518 6.66668 7.33337 6.66668C7.70156 6.66668 8.00004 6.96515 8.00004 7.33334ZM4.66671 8.00001C5.0349 8.00001 5.33337 7.70153 5.33337 7.33334C5.33337 6.96515 5.0349 6.66668 4.66671 6.66668C4.29852 6.66668 4.00004 6.96515 4.00004 7.33334C4.00004 7.70153 4.29852 8.00001 4.66671 8.00001ZM2.66671 7.33334C2.66671 7.70153 2.36823 8.00001 2.00004 8.00001C1.63185 8.00001 1.33337 7.70153 1.33337 7.33334C1.33337 6.96515 1.63185 6.66668 2.00004 6.66668C2.36823 6.66668 2.66671 6.96515 2.66671 7.33334Z" fill="url(#paint0_linear_258_206)"></path></g></g><defs><filter id="filter0_d_258_206" x="1.33337" y="1.33334" width="9.33337" height="7.66666" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix><feOffset dy="1"></feOffset><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.06 0"></feColorMatrix><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_258_206"></feBlend><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_258_206" result="shape"></feBlend></filter><linearGradient id="paint0_linear_258_206" x1="1.33337" y1="1.33334" x2="1.33337" y2="8.00001" gradientUnits="userSpaceOnUse"><stop stop-color="white"></stop><stop offset="1" stop-color="#F0F0F0"></stop></linearGradient></defs></svg>'];
    _tmpl$3$4 = ["<svg", ' width="28" height="20" viewBox="0 0 28 20" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="28" height="20" rx="2" fill="white"></rect><mask id="mask0_258_255" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="28" height="20"><rect width="28" height="20" rx="2" fill="white"></rect></mask><g mask="url(#mask0_258_255)"><path fill-rule="evenodd" clip-rule="evenodd" d="M0 5.33333H28V0H0V5.33333Z" fill="#DD172C"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M0 20H28V14.6667H0V20Z" fill="#DD172C"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M0 14.6667H28V5.33334H0V14.6667Z" fill="#FFD133"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M7.33337 9.33333H8.66671V10H7.33337V9.33333Z" fill="#FFEDB1"></path><path d="M6.05898 9.36101C6.04278 9.16667 6.19615 8.99999 6.39116 8.99999H8.27543C8.47044 8.99999 8.6238 9.16666 8.60761 9.36101L8.43633 11.4164C8.39314 11.9347 7.95987 12.3333 7.43978 12.3333H7.2268C6.70671 12.3333 6.27345 11.9347 6.23026 11.4164L6.05898 9.36101Z" stroke="#A41517" stroke-width="0.666667"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M6 10H8.66667V10.6667H8L7.33333 12L6.66667 10.6667H6V10Z" fill="#A41517"></path><rect x="4" y="8" width="1.33333" height="4.66667" rx="0.666667" fill="#A41517"></rect><rect x="9.33337" y="8" width="1.33333" height="4.66667" rx="0.666667" fill="#A41517"></rect><path d="M6 7.73332C6 7.14422 6.47756 6.66666 7.06667 6.66666H7.6C8.1891 6.66666 8.66667 7.14422 8.66667 7.73332C8.66667 7.8806 8.54728 7.99999 8.4 7.99999H6.26667C6.11939 7.99999 6 7.8806 6 7.73332Z" fill="#A41517"></path></g></svg>'];
    _tmpl$4$2 = ["<svg", ' width="28" height="20" viewBox="0 0 28 20" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x="0.25" y="0.25" width="27.5" height="19.5" rx="1.75" fill="white" stroke="#F5F5F5" stroke-width="0.5"></rect><mask id="mask0_258_246" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="28" height="20"><rect x="0.25" y="0.25" width="27.5" height="19.5" rx="1.75" fill="white" stroke="white" stroke-width="0.5"></rect></mask><g mask="url(#mask0_258_246)"><path fill-rule="evenodd" clip-rule="evenodd" d="M0 20H28V9.33334H0V20Z" fill="#EB2A50"></path></g></svg>'];
    _tmpl$5$1 = ["<svg", ' width="28" height="20" viewBox="0 0 28 20" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x="0.25" y="0.25" width="27.5" height="19.5" rx="1.75" fill="white" stroke="#F5F5F5" stroke-width="0.5"></rect><mask id="mask0_258_250" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="28" height="20"><rect x="0.25" y="0.25" width="27.5" height="19.5" rx="1.75" fill="white" stroke="white" stroke-width="0.5"></rect></mask><g mask="url(#mask0_258_250)"><path fill-rule="evenodd" clip-rule="evenodd" d="M0 13.3333H28V6.66666H0V13.3333Z" fill="#0C47B7"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M0 20H28V13.3333H0V20Z" fill="#E53B35"></path></g></svg>'];
    _tmpl$6$1 = ["<svg", ' width="28" height="20" viewBox="0 0 28 20" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="28" height="20" rx="2" fill="white"></rect><mask id="mask0_258_238" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="28" height="20"><rect width="28" height="20" rx="2" fill="white"></rect></mask><g mask="url(#mask0_258_238)"><rect width="28" height="20" fill="#E92434"></rect><path fill-rule="evenodd" clip-rule="evenodd" d="M19.0209 10.7684L17.7961 12.2533L17.8795 10.3302L16.0887 9.62423L17.9435 9.1093L18.0615 7.18799L19.1244 8.79287L20.9882 8.31142L19.7903 9.81822L20.8241 11.442L19.0209 10.7684Z" fill="white"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M17.4027 13.6841C16.3048 15.0935 14.5916 16 12.6666 16C9.35292 16 6.66663 13.3137 6.66663 10C6.66663 6.68629 9.35292 4 12.6666 4C14.5916 4 16.3048 4.90649 17.4027 6.31588C16.5555 5.70011 15.4903 5.33333 14.3333 5.33333C11.5719 5.33333 9.33329 7.42267 9.33329 10C9.33329 12.5773 11.5719 14.6667 14.3333 14.6667C15.4903 14.6667 16.5555 14.2999 17.4027 13.6841Z" fill="white"></path></g></svg>'];
    _tmpl$$f = ["<div", '><button type="button"', ' aria-label="open lang picker"><!--#-->', "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", '<!--/--></button><div class="', '"><a aria-label="choose Spanish" class="', '" href="', '">', '</a><a aria-label="choose Polish" class="', '" href="', '">', '</a><a aria-label="choose Russian" class="', '" href="', '">', '</a><a aria-label="choose Turkish" class="', '" href="', '">', '</a><a aria-label="choose Ukranian" class="', '" href="', '">', '</a><a aria-label="choose English" href="', '" class="', '">', "</a></div></div>"];
    $$module2$7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      LangPicker
    }, Symbol.toStringTag, { value: "Module" }));
    $$module8$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null
    }, Symbol.toStringTag, { value: "Module" }));
    $$module8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$O = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/layouts/Header.astro", { modules: [{ module: $$module1$4, specifier: "../components/Logo.astro", assert: {} }, { module: $$module2$7, specifier: "../components/solid/LangPicker", assert: {} }, { module: $$module4$2, specifier: "../enums/ELangs", assert: {} }, { module: $$module8$1, specifier: "../models/ContentModel", assert: {} }, { module: $$module8, specifier: "../models/ServicesModel", assert: {} }, { module: $$module5$3, specifier: "./Container.astro", assert: {} }], hydratedComponents: [LangPicker], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [{ type: "inline", value: `
  const burgerEl = document.querySelector(".burger");
  const menuEl = document.querySelector(".js-h-menu");
  const closeBtnEl = document.querySelector(".js-close")
  function handleClick() {
    menuEl.classList.toggle("header__menu_active");
  }
  burgerEl.addEventListener("click", handleClick)
  closeBtnEl.addEventListener("click", handleClick)
` }] });
    $$Astro$O = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/layouts/Header.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Header = createComponent2(async ($$result, $$props, $$slots) => {
      var _a8, _b;
      const Astro2 = $$result.createAstro($$Astro$O, $$props, $$slots);
      Astro2.self = $$Header;
      const { lang } = Astro2.props;
      const unsortServices = lang === ELangs.es ? await Astro2.glob({ "/public/assets/content/es/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_b31d322e(), chunk_b31d322e_exports)), "/public/assets/content/es/services/automation.md": () => Promise.resolve().then(() => (init_chunk_e89ab15e(), chunk_e89ab15e_exports)), "/public/assets/content/es/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_553bc06b(), chunk_553bc06b_exports)), "/public/assets/content/es/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_3c563026(), chunk_3c563026_exports)), "/public/assets/content/es/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_165e007d(), chunk_165e007d_exports)) }, () => "/public/assets/content/es/services/*.md") : lang === ELangs.pl ? await Astro2.glob({ "/public/assets/content/pl/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_7ab29271(), chunk_7ab29271_exports)), "/public/assets/content/pl/services/automation.md": () => Promise.resolve().then(() => (init_chunk_10e50542(), chunk_10e50542_exports)), "/public/assets/content/pl/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_2b4629e3(), chunk_2b4629e3_exports)), "/public/assets/content/pl/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_67f22cca(), chunk_67f22cca_exports)), "/public/assets/content/pl/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_d3d93e58(), chunk_d3d93e58_exports)) }, () => "/public/assets/content/pl/services/*.md") : lang === ELangs.ru ? await Astro2.glob({ "/public/assets/content/ru/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_554d4dc5(), chunk_554d4dc5_exports)), "/public/assets/content/ru/services/automation.md": () => Promise.resolve().then(() => (init_chunk_e38eb8e6(), chunk_e38eb8e6_exports)), "/public/assets/content/ru/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_9ece0295(), chunk_9ece0295_exports)), "/public/assets/content/ru/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_2d3f63a8(), chunk_2d3f63a8_exports)), "/public/assets/content/ru/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_39677201(), chunk_39677201_exports)) }, () => "/public/assets/content/ru/services/*.md") : lang === ELangs.tr ? await Astro2.glob({ "/public/assets/content/tr/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_9d601bcb(), chunk_9d601bcb_exports)), "/public/assets/content/tr/services/automation.md": () => Promise.resolve().then(() => (init_chunk_0a29b555(), chunk_0a29b555_exports)), "/public/assets/content/tr/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_7363e747(), chunk_7363e747_exports)), "/public/assets/content/tr/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d8c09329(), chunk_d8c09329_exports)), "/public/assets/content/tr/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_873f2a22(), chunk_873f2a22_exports)) }, () => "/public/assets/content/tr/services/*.md") : lang === ELangs.ua ? await Astro2.glob({ "/public/assets/content/ua/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_52e3bf1b(), chunk_52e3bf1b_exports)), "/public/assets/content/ua/services/automation.md": () => Promise.resolve().then(() => (init_chunk_343126a2(), chunk_343126a2_exports)), "/public/assets/content/ua/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_1c6f6212(), chunk_1c6f6212_exports)), "/public/assets/content/ua/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_2e67f1fb(), chunk_2e67f1fb_exports)), "/public/assets/content/ua/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_1e8278ce(), chunk_1e8278ce_exports)) }, () => "/public/assets/content/ua/services/*.md") : await Astro2.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
      const [content3] = lang === ELangs.es ? await Astro2.glob({ "/public/assets/content/es/content.md": () => Promise.resolve().then(() => (init_chunk_a70b9817(), chunk_a70b9817_exports)) }, () => "/public/assets/content/es/*.md") : lang === ELangs.pl ? await Astro2.glob({ "/public/assets/content/pl/content.md": () => Promise.resolve().then(() => (init_chunk_7554dae3(), chunk_7554dae3_exports)) }, () => "/public/assets/content/pl/*.md") : lang === ELangs.ru ? await Astro2.glob({ "/public/assets/content/ru/content.md": () => Promise.resolve().then(() => (init_chunk_ad1611b2(), chunk_ad1611b2_exports)) }, () => "/public/assets/content/ru/*.md") : lang === ELangs.tr ? await Astro2.glob({ "/public/assets/content/tr/content.md": () => Promise.resolve().then(() => (init_chunk_ccb8540d(), chunk_ccb8540d_exports)) }, () => "/public/assets/content/tr/*.md") : lang === ELangs.ua ? await Astro2.glob({ "/public/assets/content/ua/content.md": () => Promise.resolve().then(() => (init_chunk_76ad3dcc(), chunk_76ad3dcc_exports)) }, () => "/public/assets/content/ua/*.md") : await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const services = unsortServices.sort((a2, b2) => a2.frontmatter.id - b2.frontmatter.id);
      const navLink = (_a8 = Astro2.canonicalURL) == null ? void 0 : _a8.pathname.split("/")[2];
      (_b = Astro2.canonicalURL) == null ? void 0 : _b.origin;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<header class="header js-header astro-O2IIFYM7">
  ${renderComponent($$result, "Container", $$Container, { "class": "astro-O2IIFYM7" }, { "default": () => render2`<div class="header__wrp astro-O2IIFYM7">
      ${renderComponent($$result, "Logo", $$Logo, { "langHref": lang, "class": "astro-O2IIFYM7" })}
      <div class="header__menu js-h-menu astro-O2IIFYM7">
        <button type="button" class="header__menu-close-btn js-close astro-O2IIFYM7" aria-label="close menu"></button>
        <nav class="header__nav nav astro-O2IIFYM7">
          <ul class="nav__list astro-O2IIFYM7">
            <li${addAttribute3(`nav__list-item ${navLink === "about" ? "nav__list-item_active" : ""} astro-O2IIFYM7`, "class")}>
              <a${addAttribute3(`/${lang}/about`, "href")} class="nav__link astro-O2IIFYM7">${content3.frontmatter.nav.about}</a>
            </li>
            <li${addAttribute3(`nav__list-item ${navLink === "work" ? "nav__list-item_active" : ""} astro-O2IIFYM7`, "class")}>
              <a${addAttribute3(`/${lang}/work`, "href")} class="nav__link astro-O2IIFYM7">${content3.frontmatter.nav.work}</a>
            </li>
            <li${addAttribute3(`nav__list-item nav__list-item_services ${navLink === "services" ? "nav__list-item_active" : ""} astro-O2IIFYM7`, "class")}${addAttribute3(0, "tabindex")}>
              <a${addAttribute3(`/${lang}/#services`, "href")} class="nav__link astro-O2IIFYM7"${addAttribute3(-1, "tabindex")}>${content3.frontmatter.nav.services}</a>
              <ul class="nav__submenu submenu astro-O2IIFYM7">
                ${services.map((i3) => render2`<li class="submenu__item astro-O2IIFYM7">
                  <a${addAttribute3(`/${lang}/services/${i3.frontmatter.slug}`, "href")} class="submenu__link astro-O2IIFYM7">${i3.frontmatter.title}</a>
                </li>`)}
              </ul>
            </li>
          </ul>
        </nav>
        ${renderComponent($$result, "LangPicker", LangPicker, { "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$O.getPath(LangPicker), "client:component-export": $$metadata$O.getExport(LangPicker), "class": "astro-O2IIFYM7" })}
        <a href="/#callback-form" class="header__btn astro-O2IIFYM7" type="button">${content3.frontmatter.nav.btn}</a>
      </div>

      <button class="header__burger burger js-burger astro-O2IIFYM7" aria-label="open nav menu">
      </button>
    </div>` })}
</header>


`;
    });
    $$file$O = "C:/work-projects/pireactor/main-site/src/layouts/Header.astro";
    $$url$O = void 0;
    $$module5$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$O,
      "default": $$Header,
      file: $$file$O,
      url: $$url$O
    }, Symbol.toStringTag, { value: "Module" }));
    ETags = /* @__PURE__ */ ((ETags2) => {
      ETags2[ETags2["all"] = 0] = "all";
      ETags2["automation"] = "Automation";
      ETags2["blockchain"] = "Blockchain";
      ETags2["srategy"] = "Global Strategy";
      ETags2["wallets"] = "Wallets and Exchanges";
      ETags2["architecture"] = "Architecture";
      return ETags2;
    })(ETags || {});
    $$module2$6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      ETags
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$N = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/layouts/Layout.astro", { modules: [{ module: $$module4$2, specifier: "../enums/ELangs", assert: {} }, { module: $$module2$6, specifier: "../enums/ETags", assert: {} }, { module: $$module8$1, specifier: "../models/ContentModel", assert: {} }, { module: $$module4$1, specifier: "./Footer.astro", assert: {} }, { module: $$module5$2, specifier: "./Header.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$N = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/layouts/Layout.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Layout = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$N, $$props, $$slots);
      Astro2.self = $$Layout;
      const { title, lang } = Astro2.props;
      const [content3] = lang === ELangs.es ? await Astro2.glob({ "/public/assets/content/es/content.md": () => Promise.resolve().then(() => (init_chunk_a70b9817(), chunk_a70b9817_exports)) }, () => "/public/assets/content/es/*.md") : lang === ELangs.pl ? await Astro2.glob({ "/public/assets/content/pl/content.md": () => Promise.resolve().then(() => (init_chunk_7554dae3(), chunk_7554dae3_exports)) }, () => "/public/assets/content/pl/*.md") : lang === ELangs.ru ? await Astro2.glob({ "/public/assets/content/ru/content.md": () => Promise.resolve().then(() => (init_chunk_ad1611b2(), chunk_ad1611b2_exports)) }, () => "/public/assets/content/ru/*.md") : lang === ELangs.tr ? await Astro2.glob({ "/public/assets/content/tr/content.md": () => Promise.resolve().then(() => (init_chunk_ccb8540d(), chunk_ccb8540d_exports)) }, () => "/public/assets/content/tr/*.md") : lang === ELangs.ua ? await Astro2.glob({ "/public/assets/content/ua/content.md": () => Promise.resolve().then(() => (init_chunk_76ad3dcc(), chunk_76ad3dcc_exports)) }, () => "/public/assets/content/ua/*.md") : await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<!DOCTYPE html><html${addAttribute3(content3.frontmatter.lang, "lang")} class="astro-Y5DKIR4G">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width">
  <meta name="description"${addAttribute3(content3.frontmatter.description, "content")}>
  <link rel="icon" type="image/x-icon" href="/favicon.ico">
  <link rel="preload" href="/assets/fonts/AvantGardeCTT/AvantGardeCTT-Bold.woff2" as="font" type="font/woff2" crossorigin>
  <link rel="preload" href="/assets/fonts/AvantGardeCTT/AvantGardeCTT-Bold.woff2" as="font" type="font/woff2" crossorigin>
  <link rel="preload" href="/assets/fonts/PlusJakartaSans/PlusJakartaSans-Bold.woff2" as="font" type="font/woff2" crossorigin>
  <title>${title}</title>

<!--astro:head--></head>
<body>
  ${renderComponent($$result, "Header", $$Header, { "lang": lang, "class": "astro-Y5DKIR4G" })}
  <main class="astro-Y5DKIR4G">
    ${renderSlot2($$result, $$slots["default"])}
  </main>
  ${renderComponent($$result, "Footer", $$Footer, { "class": "astro-Y5DKIR4G" })}
</body></html>`;
    });
    $$file$N = "C:/work-projects/pireactor/main-site/src/layouts/Layout.astro";
    $$url$N = void 0;
    $$module6$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$N,
      "default": $$Layout,
      file: $$file$N,
      url: $$url$N
    }, Symbol.toStringTag, { value: "Module" }));
    $$module1$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$M = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/MainTitle.astro", { modules: [{ module: $$module1$3, specifier: "astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$M = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/MainTitle.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$MainTitle = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$M, $$props, $$slots);
      Astro2.self = $$MainTitle;
      const { redLine, title } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<h1 class="astro-OAQUZD2W">
  <span class="redline astro-OAQUZD2W">${redLine}</span>
  <span class="title astro-OAQUZD2W">${title}</span>
</h1>`;
    });
    $$file$M = "C:/work-projects/pireactor/main-site/src/components/MainTitle.astro";
    $$url$M = void 0;
    $$module1$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$M,
      "default": $$MainTitle,
      file: $$file$M,
      url: $$url$M
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$L = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/Button.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$L = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/Button.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Button = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$L, $$props, $$slots);
      Astro2.self = $$Button;
      const { title, path } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<a${addAttribute3(path, "href")} class="astro-MRLPDWE2">${title}</a>`;
    });
    $$file$L = "C:/work-projects/pireactor/main-site/src/components/shared/Button.astro";
    $$url$L = void 0;
    $$module2$5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$L,
      "default": $$Button,
      file: $$file$L,
      url: $$url$L
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$K = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/main/Hero.astro", { modules: [{ module: $$module1$2, specifier: "../MainTitle.astro", assert: {} }, { module: $$module2$5, specifier: "../shared/Button.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$K = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/main/Hero.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Hero = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$K, $$props, $$slots);
      Astro2.self = $$Hero;
      const { redLine, title, path, btnText } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<section class="hero astro-SKTS2BG5">
  ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": redLine, "title": title, "class": "astro-SKTS2BG5" })}
  <div class="btn-wrp astro-SKTS2BG5">
    ${renderComponent($$result, "Button", $$Button, { "title": btnText, "path": path, "class": "astro-SKTS2BG5" })}
  </div>
</section>`;
    });
    $$file$K = "C:/work-projects/pireactor/main-site/src/components/main/Hero.astro";
    $$url$K = void 0;
    $$module2$4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$K,
      "default": $$Hero,
      file: $$file$K,
      url: $$url$K
    }, Symbol.toStringTag, { value: "Module" }));
    _tmpl$$e = ["<div", "><span", ">", "</span><span", "><!--#-->", "<!--/--><!--#-->", "<!--/--></span></div>"];
    $$module3$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      Counter: Counter$1
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$J = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/main/About.astro", { modules: [{ module: $$module3$3, specifier: "../solid/Counter", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$J = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/main/About.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$About$6 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$J, $$props, $$slots);
      Astro2.self = $$About$6;
      const { desc, counters, title } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<section class="about astro-YLWAF5LM">
  <h2 class="about__title astro-YLWAF5LM"${addAttribute3(title, "aria-label")}></h2>
  <p class="about__desc astro-YLWAF5LM">
    ${desc}
  </p>
  <div class="about__numbers astro-YLWAF5LM">
    ${counters.map((el) => render2`${renderComponent($$result, "Counter", Counter$1, { "title": el.title, "countTo": el.value, "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$J.getPath(Counter$1), "client:component-export": $$metadata$J.getExport(Counter$1), "class": "astro-YLWAF5LM" })}`)}
  </div>
</section>`;
    });
    $$file$J = "C:/work-projects/pireactor/main-site/src/components/main/About.astro";
    $$url$J = void 0;
    $$module3$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$J,
      "default": $$About$6,
      file: $$file$J,
      url: $$url$J
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$I = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/Section.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$I = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/Section.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Section = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$I, $$props, $$slots);
      Astro2.self = $$Section;
      const { title } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<section class="astro-Y4SDXZ7Z">
  <h2 class="astro-Y4SDXZ7Z">${title}</h2>
  ${renderSlot2($$result, $$slots["default"])}
</section>`;
    });
    $$file$I = "C:/work-projects/pireactor/main-site/src/components/shared/Section.astro";
    $$url$I = void 0;
    $$module2$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$I,
      "default": $$Section,
      file: $$file$I,
      url: $$url$I
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$H = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/main/Map.astro", { modules: [{ module: $$module2$3, specifier: "../shared/Section.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$H = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/main/Map.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Map = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$H, $$props, $$slots);
      Astro2.self = $$Map;
      const { title } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Section", $$Section, { "title": title, "class": "astro-6IJS25CO" }, { "default": () => render2`<img src="/assets/img/main/map.webp" alt="" srcset="/assets/img/main/map.webp" class="astro-6IJS25CO">` })}`;
    });
    $$file$H = "C:/work-projects/pireactor/main-site/src/components/main/Map.astro";
    $$url$H = void 0;
    $$module4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$H,
      "default": $$Map,
      file: $$file$H,
      url: $$url$H
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$G = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/main/How.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$G = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/main/How.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$How = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$G, $$props, $$slots);
      Astro2.self = $$How;
      const { content: content3 } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<section class="how-it-goes astro-M6GSX77H">
  <h2 class="astro-M6GSX77H">${content3.title}</h2>
  <ul class="how-it-goes__list astro-M6GSX77H">
    ${content3.list.map((i3) => render2`<li${addAttribute3(`how-it-goes__item how-it-goes__item_${i3.class.toLowerCase()} astro-M6GSX77H`, "class")}>
        <h3 class="how-it-goes__title astro-M6GSX77H">${i3.title}</h3>
        <p class="how-it-goes__desc astro-M6GSX77H">
          ${i3.desc}
        </p>
      </li>`)}
  </ul>
</section>`;
    });
    $$file$G = "C:/work-projects/pireactor/main-site/src/components/main/How.astro";
    $$url$G = void 0;
    $$module5$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$G,
      "default": $$How,
      file: $$file$G,
      url: $$url$G
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$F = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/main/Services.astro", { modules: [{ module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module8, specifier: "../../models/ServicesModel", assert: {} }, { module: $$module2$3, specifier: "../shared/Section.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$F = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/main/Services.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Services = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$F, $$props, $$slots);
      Astro2.self = $$Services;
      const { title, lang } = Astro2.props;
      const unsortServices = lang === ELangs.es ? await Astro2.glob({ "/public/assets/content/es/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_b31d322e(), chunk_b31d322e_exports)), "/public/assets/content/es/services/automation.md": () => Promise.resolve().then(() => (init_chunk_e89ab15e(), chunk_e89ab15e_exports)), "/public/assets/content/es/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_553bc06b(), chunk_553bc06b_exports)), "/public/assets/content/es/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_3c563026(), chunk_3c563026_exports)), "/public/assets/content/es/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_165e007d(), chunk_165e007d_exports)) }, () => "/public/assets/content/es/services/*.md") : lang === ELangs.pl ? await Astro2.glob({ "/public/assets/content/pl/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_7ab29271(), chunk_7ab29271_exports)), "/public/assets/content/pl/services/automation.md": () => Promise.resolve().then(() => (init_chunk_10e50542(), chunk_10e50542_exports)), "/public/assets/content/pl/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_2b4629e3(), chunk_2b4629e3_exports)), "/public/assets/content/pl/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_67f22cca(), chunk_67f22cca_exports)), "/public/assets/content/pl/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_d3d93e58(), chunk_d3d93e58_exports)) }, () => "/public/assets/content/pl/services/*.md") : lang === ELangs.ru ? await Astro2.glob({ "/public/assets/content/ru/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_554d4dc5(), chunk_554d4dc5_exports)), "/public/assets/content/ru/services/automation.md": () => Promise.resolve().then(() => (init_chunk_e38eb8e6(), chunk_e38eb8e6_exports)), "/public/assets/content/ru/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_9ece0295(), chunk_9ece0295_exports)), "/public/assets/content/ru/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_2d3f63a8(), chunk_2d3f63a8_exports)), "/public/assets/content/ru/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_39677201(), chunk_39677201_exports)) }, () => "/public/assets/content/ru/services/*.md") : lang === ELangs.tr ? await Astro2.glob({ "/public/assets/content/tr/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_9d601bcb(), chunk_9d601bcb_exports)), "/public/assets/content/tr/services/automation.md": () => Promise.resolve().then(() => (init_chunk_0a29b555(), chunk_0a29b555_exports)), "/public/assets/content/tr/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_7363e747(), chunk_7363e747_exports)), "/public/assets/content/tr/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d8c09329(), chunk_d8c09329_exports)), "/public/assets/content/tr/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_873f2a22(), chunk_873f2a22_exports)) }, () => "/public/assets/content/tr/services/*.md") : lang === ELangs.ua ? await Astro2.glob({ "/public/assets/content/ua/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_52e3bf1b(), chunk_52e3bf1b_exports)), "/public/assets/content/ua/services/automation.md": () => Promise.resolve().then(() => (init_chunk_343126a2(), chunk_343126a2_exports)), "/public/assets/content/ua/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_1c6f6212(), chunk_1c6f6212_exports)), "/public/assets/content/ua/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_2e67f1fb(), chunk_2e67f1fb_exports)), "/public/assets/content/ua/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_1e8278ce(), chunk_1e8278ce_exports)) }, () => "/public/assets/content/ua/services/*.md") : await Astro2.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
      const services = unsortServices.sort((a2, b2) => a2.frontmatter.id - b2.frontmatter.id);
      function setClass(id) {
        switch (id) {
          case 1:
            return "services__item_strategy";
          case 2:
            return "services__item_architecture";
          case 3:
            return "services__item_automation";
          case 4:
            return "services__item_blockchain";
          case 5:
            return "services__item_wallets";
          default:
            return "";
        }
      }
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Section", $$Section, { "title": title, "class": "astro-SFQ3TLW7" }, { "default": () => render2`<div class="services__wrp astro-SFQ3TLW7">
    <ul class="services__list astro-SFQ3TLW7">
      ${services.map((i3) => render2`<li${addAttribute3(`services__item ${setClass(i3.frontmatter.id)} astro-SFQ3TLW7`, "class")}>
        <a${addAttribute3(`/services/${i3.frontmatter.slug}`, "href")} class="astro-SFQ3TLW7">
          <h3 class="services__title astro-SFQ3TLW7">${i3.frontmatter.title}</h3>
        </a>
        <p class="services__desc astro-SFQ3TLW7">${i3.frontmatter.desc}</p>
      </li>`)}
    </ul>
  </div>` })}`;
    });
    $$file$F = "C:/work-projects/pireactor/main-site/src/components/main/Services.astro";
    $$url$F = void 0;
    $$module6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$F,
      "default": $$Services,
      file: $$file$F,
      url: $$url$F
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$E = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/main/Technologies.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$E = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/main/Technologies.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Technologies = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$E, $$props, $$slots);
      Astro2.self = $$Technologies;
      const { title, desc } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<section class="astro-VBTKETK4">
  <h2 class="title astro-VBTKETK4">${title}</h2>
  <p class="subtitle astro-VBTKETK4">${desc}</p>
  <ul class="techs__list astro-VBTKETK4">
    <li class="techs__item techs__item_frontend astro-VBTKETK4">
      <h3 class="techs__title astro-VBTKETK4">Front end</h3>
      <p class="techs__desc astro-VBTKETK4">Typescript, GraphQL, Flutter, React, Angular</p>
    </li>
    <li class="techs__item techs__item_backend astro-VBTKETK4">
      <h3 class="techs__title astro-VBTKETK4">Backend</h3>
      <p class="techs__desc astro-VBTKETK4">Go, Rust, C</p>
    </li>
    <li class="techs__item techs__item_design astro-VBTKETK4">
      <h3 class="techs__title astro-VBTKETK4">UX/UI Design</h3>
      <p class="techs__desc astro-VBTKETK4">Figma, Adobe Ilustrator</p>
    </li>
    <li class="techs__item techs__item_data astro-VBTKETK4">
      <h3 class="techs__title astro-VBTKETK4">Databses</h3>
      <p class="techs__desc astro-VBTKETK4">PostgreSQL, MarkLogic, MongoDB, Reddis</p>
    </li>
    <li class="techs__item techs__item_ml astro-VBTKETK4">
      <h3 class="techs__title astro-VBTKETK4">ML and Big Data</h3>
      <p class="techs__desc astro-VBTKETK4">TensorFlow, PyTorch</p>
    </li>
    <li class="techs__item techs__item_cloud astro-VBTKETK4">
      <h3 class="techs__title astro-VBTKETK4">Cloud + Containers</h3>
      <p class="techs__desc astro-VBTKETK4">AWS, Docker, Kubernetes</p>
    </li>
  </ul>
</section>`;
    });
    $$file$E = "C:/work-projects/pireactor/main-site/src/components/main/Technologies.astro";
    $$url$E = void 0;
    $$module7$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$E,
      "default": $$Technologies,
      file: $$file$E,
      url: $$url$E
    }, Symbol.toStringTag, { value: "Module" }));
    [store, setStore] = createStore({
      validation: {
        name: {
          touched: false,
          errMsg: "This field is required"
        },
        email: {
          touched: false,
          errMsg: "This field is required"
        }
      },
      frameworks: [
        {
          name: "Vue.js",
          value: 0,
          tooltip: ""
        },
        {
          name: "Angular",
          value: 0,
          tooltip: ""
        },
        {
          name: "React.js",
          value: 0,
          tooltip: ""
        },
        {
          name: "JavaScript",
          value: 0,
          tooltip: ""
        }
      ],
      langs: [
        {
          name: ".NET",
          value: 0,
          tooltip: ""
        },
        {
          name: "Java",
          value: 0,
          tooltip: ""
        },
        {
          name: "Python",
          value: 0,
          tooltip: ""
        },
        {
          name: "Scala",
          value: 0,
          tooltip: ""
        },
        {
          name: "Ruby",
          value: 0,
          tooltip: ""
        },
        {
          name: "C++",
          value: 0,
          tooltip: ""
        },
        {
          name: "Node.js",
          value: 0,
          tooltip: ""
        },
        {
          name: "Golang",
          value: 0,
          tooltip: ""
        },
        {
          name: "PHP",
          value: 0,
          tooltip: ""
        }
      ],
      mobiles: [
        {
          name: "Android",
          value: 0,
          tooltip: ""
        },
        {
          name: "React Native",
          value: 0,
          tooltip: ""
        },
        {
          name: "iOS",
          value: 0,
          tooltip: ""
        },
        {
          name: "Xamarin",
          value: 0,
          tooltip: ""
        },
        {
          name: "Ionic",
          value: 0,
          tooltip: ""
        },
        {
          name: "Flutter",
          value: 0,
          tooltip: ""
        }
      ],
      db: [
        {
          name: "PostgreSQL",
          value: 0,
          tooltip: ""
        },
        {
          name: "MySQL",
          value: 0,
          tooltip: ""
        },
        {
          name: "Oracle",
          value: 0,
          tooltip: ""
        },
        {
          name: "MS Azure SQL DB",
          value: 0,
          tooltip: ""
        },
        {
          name: "MsSQL",
          value: 0,
          tooltip: ""
        },
        {
          name: "NoSQL",
          value: 0,
          tooltip: ""
        }
      ],
      specs: [
        {
          name: "Project Manager",
          value: 0
        },
        {
          name: "UI/UX Designer",
          value: 0
        },
        {
          name: "Business Analyst",
          value: 0
        },
        {
          name: "DevOps Specialist",
          value: 0
        },
        {
          name: "QA/QA Automation Engineer",
          value: 0
        },
        {
          name: "Support Specialist",
          value: 0
        },
        {
          name: "IT Security Specialist",
          value: 0
        },
        {
          name: "Solution Architects",
          value: 0
        }
      ]
    });
    _tmpl$$d = ["<div", "><label", "><span><!--#-->", "<!--/--><span", '>\xA0*</span></span><input name="Email" class="', '" type="email"></label><!--#-->', "<!--/--></div>"];
    _tmpl$2$6 = ["<span", ">", "</span>"];
    _tmpl$$c = ["<div", "><label", "><span><!--#-->", "<!--/--><span", '>\xA0*</span></span><input name="Name" class="', '" type="text"></label><!--#-->', "<!--/--></div>"];
    _tmpl$2$5 = ["<span", ">", "</span>"];
    _tmpl$$b = ["<label", "><!--#-->", "<!--/--><textarea", ' placeholder="Describe your project" rows="10"></textarea></label>'];
    _tmpl$$a = ["<label", "><!--#-->", "<!--/--><input", ' type="text"></label>'];
    _tmpl$$9 = ["<form", "><div", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></div><!--#-->", "<!--/--><input", ' name="form-link" type="text"', "><button", "><!--#-->", "<!--/--><!--#-->", "<!--/--></button><!--#-->", "<!--/--><!--#-->", "<!--/--></form>"];
    _tmpl$2$4 = ["<div", ">", "</div>"];
    $$module1$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      FormSubmit
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$D = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/FormSection.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$D = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/FormSection.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$FormSection = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$D, $$props, $$slots);
      Astro2.self = $$FormSection;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<section class="form__wrp astro-ZVU2EJ5F">
  ${renderSlot2($$result, $$slots["default"])}
</section>`;
    });
    $$file$D = "C:/work-projects/pireactor/main-site/src/components/shared/FormSection.astro";
    $$url$D = void 0;
    $$module2$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$D,
      "default": $$FormSection,
      file: $$file$D,
      url: $$url$D
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$C = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/CallbackForm.astro", { modules: [{ module: $$module1$1, specifier: "../solid/FormSubmit", assert: {} }, { module: $$module2$2, specifier: "./FormSection.astro", assert: {} }], hydratedComponents: [FormSubmit], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$C = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/CallbackForm.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$CallbackForm = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$C, $$props, $$slots);
      Astro2.self = $$CallbackForm;
      const props = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<div class="container_mvp astro-4XMJONMF">
  ${renderComponent($$result, "FormSection", $$FormSection, { "class": "astro-4XMJONMF" }, { "default": () => render2`<div class="mvp astro-4XMJONMF">
      <h2 class="title astro-4XMJONMF">${props.title}</h2>
      <p class="subtitle astro-4XMJONMF">${props.desc}</p>
          ${renderComponent($$result, "FormSubmit", FormSubmit, { "client:load": true, "fields": props.fields, "client:component-hydration": "load", "client:component-path": $$metadata$C.getPath(FormSubmit), "client:component-export": $$metadata$C.getExport(FormSubmit), "class": "astro-4XMJONMF" })}
      </div>` })}
</div>`;
    });
    $$file$C = "C:/work-projects/pireactor/main-site/src/components/shared/CallbackForm.astro";
    $$url$C = void 0;
    $$module1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$C,
      "default": $$CallbackForm,
      file: $$file$C,
      url: $$url$C
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$B = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/index.astro", { modules: [{ module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module2$4, specifier: "../../components/main/Hero.astro", assert: {} }, { module: $$module3$2, specifier: "../../components/main/About.astro", assert: {} }, { module: $$module4, specifier: "../../components/main/Map.astro", assert: {} }, { module: $$module5$1, specifier: "../../components/main/How.astro", assert: {} }, { module: $$module6, specifier: "../../components/main/Services.astro", assert: {} }, { module: $$module7$1, specifier: "../../components/main/Technologies.astro", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module1, specifier: "../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$B = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/index.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Index$5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$B, $$props, $$slots);
      Astro2.self = $$Index$5;
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": content3.frontmatter.title, "lang": ELangs.en, "class": "astro-REHVHBA2" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-REHVHBA2" }, { "default": () => {
        var _a8;
        return render2`${renderComponent($$result, "Hero", $$Hero, { "redLine": (_a8 = content3.frontmatter) == null ? void 0 : _a8.index.hero.redline, "title": content3.frontmatter.index.hero.title, "path": "#callback-form", "btnText": content3.frontmatter.index.hero.btnText, "class": "astro-REHVHBA2" })}${renderComponent($$result, "About", $$About$6, { "counters": content3.frontmatter.counters, "desc": content3.frontmatter.index.desc, "title": "About", "class": "astro-REHVHBA2" })}${renderComponent($$result, "Map", $$Map, { "title": content3.frontmatter.index.mapTitle, "class": "astro-REHVHBA2" })}`;
      } })}${renderComponent($$result, "How", $$How, { "content": content3.frontmatter.howSection, "class": "astro-REHVHBA2" })}${renderComponent($$result, "Container", $$Container, { "class": "astro-REHVHBA2" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="services-wrp astro-REHVHBA2" id="services">
      ${renderComponent($$result, "Services", $$Services, { "title": content3.frontmatter.services.title, "lang": ELangs.en, "class": "astro-REHVHBA2" })}
    </div>${renderComponent($$result, "Technologies", $$Technologies, { "title": content3 == null ? void 0 : content3.frontmatter.tech.title, "desc": content3 == null ? void 0 : content3.frontmatter.tech.desc, "class": "astro-REHVHBA2" })}<div id="callback-form" class="astro-REHVHBA2">
      ${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-REHVHBA2" })}
    </div>`;
      } })}` })}`;
    });
    $$file$B = "C:/work-projects/pireactor/main-site/src/pages/en/index.astro";
    $$url$B = "/en";
    _page1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$B,
      "default": $$Index$5,
      file: $$file$B,
      url: $$url$B
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$A = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/services/[slug].astro", { modules: [{ module: $$module1$2, specifier: "../../../components/MainTitle.astro", assert: {} }, { module: $$module2$5, specifier: "../../../components/shared/Button.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8, specifier: "../../../models/ServicesModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$A = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/services/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$b = $$Astro$A;
    $$slug$b = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$A, $$props, $$slots);
      Astro2.self = $$slug$b;
      const props = Astro2.props;
      const uri = encodeURI(`/en/work/?${props.title}`);
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-WWB66DLJ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-WWB66DLJ" }, { "default": () => render2`<section class="hero astro-WWB66DLJ">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": props.title, "class": "astro-WWB66DLJ" })}
        <p class="astro-WWB66DLJ">
          ${props.titleDesc}
        </p>
        ${renderComponent($$result, "Button", $$Button, { "title": props.heroBtn, "path": "/en/#callback-form", "class": "astro-WWB66DLJ" })}
    </section><section class="desc astro-WWB66DLJ">
      <h2 class="astro-WWB66DLJ">About</h2>
      <div class="desc__wrp astro-WWB66DLJ">
        <p class="astro-WWB66DLJ">${props.desc}</p>
        <div class="desc__counter astro-WWB66DLJ">
          ${props.values.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "client:component-hydration": "load", "client:component-path": $$metadata$A.getPath(Counter$1), "client:component-export": $$metadata$A.getExport(Counter$1), "class": "astro-WWB66DLJ" })}`)}
        </div>
      </div>
    </section>${props.articles.map((i3) => render2`<section class="article astro-WWB66DLJ">
      <h3 class="article__title astro-WWB66DLJ">${i3.title}</h3>
      <div class="article__wrp astro-WWB66DLJ">
        <img class="article__img astro-WWB66DLJ"${addAttribute3(i3.img, "src")}${addAttribute3(i3.title, "alt")}>
        <p class="article__desc astro-WWB66DLJ">${i3.desc}</p>
      </div>
    </section>`)}<div class="article__view astro-WWB66DLJ">
      ${renderComponent($$result, "Button", $$Button, { "path": uri, "title": props.viewBtn, "class": "astro-WWB66DLJ" })}
    </div>` })}` })}`;
    });
    $$file$A = "C:/work-projects/pireactor/main-site/src/pages/en/services/[slug].astro";
    $$url$A = "/en/services/[slug]";
    _page2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      getStaticPaths: getStaticPaths$b,
      $$metadata: $$metadata$A,
      "default": $$slug$b,
      file: $$file$A,
      url: $$url$A
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$z = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/AboutCard.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$z = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/AboutCard.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$AboutCard = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$z, $$props, $$slots);
      Astro2.self = $$AboutCard;
      const { desc, name, linkT, linkLI, imgSource, info } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<li class="leads-card astro-4BYQG4UF">
  <div class="leads-card__img-wrp astro-4BYQG4UF">
    <img class="leads-card__img astro-4BYQG4UF"${addAttribute3(imgSource, "src")} alt="John Vermazen">
    <span class="leads-card__desc astro-4BYQG4UF">${desc}</span>
  </div>
  <div class="leads-card__info-wrp astro-4BYQG4UF">
    <div class="leads-card__header astro-4BYQG4UF">
      <h3 class="leads-card__name astro-4BYQG4UF">${name}</h3>
      <ul class="leads-card__socials astro-4BYQG4UF">
        <li class="astro-4BYQG4UF">
          <a class="leads-card__link astro-4BYQG4UF"${addAttribute3(linkT, "href")} target="_blank" rel="noopener noreferrer">
            <svg width="20" height="18" viewBox="0 0 20 18" fill="none" xmlns="http://www.w3.org/2000/svg" class="astro-4BYQG4UF">
              <path d="M17.9441 4.92638C17.9568 5.10403 17.9568 5.28173 17.9568 5.45938C17.9568 10.8781 13.8325 17.1218 6.29441 17.1218C3.97207 17.1218 1.81473 16.4492 0 15.2817C0.329961 15.3198 0.647187 15.3325 0.989844 15.3325C2.90605 15.3325 4.67004 14.6853 6.07867 13.5812C4.27664 13.5431 2.76648 12.3629 2.24617 10.7386C2.5 10.7766 2.75379 10.802 3.02031 10.802C3.38832 10.802 3.75637 10.7512 4.09898 10.6624C2.22082 10.2817 0.812148 8.63196 0.812148 6.63958V6.58884C1.35781 6.89341 1.99238 7.08376 2.66492 7.10911C1.56086 6.37306 0.837539 5.11673 0.837539 3.6954C0.837539 2.93399 1.04055 2.23603 1.3959 1.62688C3.41367 4.11419 6.44668 5.73853 9.84766 5.91622C9.78422 5.61165 9.74613 5.29442 9.74613 4.97716C9.74613 2.71825 11.5736 0.878174 13.8451 0.878174C15.0253 0.878174 16.0913 1.3731 16.84 2.17259C17.7664 1.99493 18.6547 1.65228 19.4416 1.18274C19.137 2.13454 18.4898 2.93403 17.6395 3.44161C18.4644 3.35282 19.2639 3.12435 19.9999 2.80712C19.4416 3.61927 18.7436 4.34259 17.9441 4.92638Z" fill="#FF35C7" class="astro-4BYQG4UF"></path>
            </svg>
          </a>
        </li>
        <li class="astro-4BYQG4UF">
          <a class="leads-card__link astro-4BYQG4UF"${addAttribute3(linkLI, "href")} target="_blank" rel="noopener noreferrer">
            <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg" class="astro-4BYQG4UF">
              <path d="M4.16709 17.7461H0.538998V6.06511H4.16709V17.7461ZM2.35109 4.47171C1.1912 4.47171 0.25 3.51099 0.25 2.35109C0.25 1.1912 1.1912 0.25 2.35109 0.25C3.51099 0.25 4.45219 1.1912 4.45219 2.35109C4.45219 3.51099 3.51099 4.47171 2.35109 4.47171ZM17.7461 17.7461H14.1258V12.0599C14.1258 10.7047 14.0985 8.96681 12.2395 8.96681C10.3532 8.96681 10.0642 10.4391 10.0642 11.9622V17.7461H6.44002V6.06511H9.91972V7.6585H9.97049C10.4548 6.74074 11.6381 5.77221 13.4033 5.77221C17.0744 5.77221 17.75 8.18964 17.75 11.3296V17.7461H17.7461Z" fill="#FF35C7" class="astro-4BYQG4UF"></path>
            </svg>
          </a>
        </li>
      </ul>
    </div>
    <p class="astro-4BYQG4UF">${info}</p>
  </div>
</li>`;
    });
    $$file$z = "C:/work-projects/pireactor/main-site/src/components/shared/AboutCard.astro";
    $$url$z = void 0;
    $$module2$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$z,
      "default": $$AboutCard,
      file: $$file$z,
      url: $$url$z
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$y = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/Breadcrums.astro", { modules: [{ module: $$module1$3, specifier: "astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$y = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/components/shared/Breadcrums.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Breadcrums = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$y, $$props, $$slots);
      Astro2.self = $$Breadcrums;
      const { currentPath } = Astro2.props;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`<div class="breacrums astro-5DLJLZES">
  <a href="/" class="breacrums__main-link astro-5DLJLZES">Homepage</a>
  <span class="breacrums__current astro-5DLJLZES">${currentPath}</span>
</div>`;
    });
    $$file$y = "C:/work-projects/pireactor/main-site/src/components/shared/Breadcrums.astro";
    $$url$y = void 0;
    $$module2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$y,
      "default": $$Breadcrums,
      file: $$file$y,
      url: $$url$y
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$x = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/about.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2$1, specifier: "../../components/shared/AboutCard.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$3, specifier: "../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$x = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/about.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$About$5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$x, $$props, $$slots);
      Astro2.self = $$About$5;
      const leads = await Astro2.glob({ "/public/assets/content/en/leads/AlexAlejandre.md": () => Promise.resolve().then(() => (init_chunk_5790b932(), chunk_5790b932_exports)), "/public/assets/content/en/leads/JohnVermazenSt.md": () => Promise.resolve().then(() => (init_chunk_e09586c6(), chunk_e09586c6_exports)), "/public/assets/content/en/leads/JustynaBorwik.md": () => Promise.resolve().then(() => (init_chunk_6b16a774(), chunk_6b16a774_exports)), "/public/assets/content/en/leads/StevenVermazen.md": () => Promise.resolve().then(() => (init_chunk_6c0c45b4(), chunk_6c0c45b4_exports)) }, () => "/public/assets/content/en/leads/*.md");
      const sortLeads = leads.sort((a2, b2) => a2.frontmatter.id - b2.frontmatter.id);
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "About Us", "lang": ELangs.en, "class": "astro-KVNL2NNH" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-KVNL2NNH" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "About Us", "class": "astro-KVNL2NNH" })}<section class="hero astro-KVNL2NNH">
      ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": content3 == null ? void 0 : content3.frontmatter.about.hero.redline, "title": content3 == null ? void 0 : content3.frontmatter.about.hero.title, "class": "astro-KVNL2NNH" })}
      <p class="about__desc astro-KVNL2NNH">
        ${content3 == null ? void 0 : content3.frontmatter.about.desc}
      </p>
    </section>${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.counterTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="about__counter astro-KVNL2NNH">
        ${content3.frontmatter.counters.map((el) => render2`${renderComponent($$result, "Counter", Counter$1, { "title": el.title, "countTo": el.value, "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$x.getPath(Counter$1), "client:component-export": $$metadata$x.getExport(Counter$1), "class": "astro-KVNL2NNH" })}`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3.frontmatter.about.whoWeAreTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="about__who astro-KVNL2NNH">
        ${content3.frontmatter.about.text.map((i3) => render2`<p class="astro-KVNL2NNH">${i3}</p>`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.leadsTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="leads astro-KVNL2NNH">
        <ul class="leads-list astro-KVNL2NNH">
          ${sortLeads.map((lead) => render2`${renderComponent($$result, "AboutCard", $$AboutCard, { "desc": lead.frontmatter.desc, "imgSource": lead.frontmatter.imgSource, "name": lead.frontmatter.name, "info": lead.frontmatter.info, "linkLI": lead.frontmatter.linkLI, "linkT": lead.frontmatter.linkT, "class": "astro-KVNL2NNH" })}`)}
        </ul>
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.locationsTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<ul class="location astro-KVNL2NNH">
        ${content3.frontmatter.about.locations.map((i3) => render2`<li class="location__item astro-KVNL2NNH">
          <img${addAttribute3(i3.img, "src")}${addAttribute3(i3.name, "alt")} class="location__img astro-KVNL2NNH">
          ${i3.name}
        </li>`)}
      </ul>` })}` })}` })}`;
    });
    $$file$x = "C:/work-projects/pireactor/main-site/src/pages/en/about.astro";
    $$url$x = "/en/about";
    _page3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$x,
      "default": $$About$5,
      file: $$file$x,
      url: $$url$x
    }, Symbol.toStringTag, { value: "Module" }));
    EForms = /* @__PURE__ */ ((EForms2) => {
      EForms2["custom"] = "custom";
      EForms2["team"] = "team";
      EForms2["dontKnow"] = "dontKnow";
      return EForms2;
    })(EForms || {});
    _tmpl$$8 = ["<div", ">no data</div>"];
    _tmpl$2$3 = ["<div", "><div", "><span", ">", "</span><!--#-->", "<!--/--></div><div", "><button", ' type="button"', '><svg width="12" height="3" viewBox="0 0 12 3" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 1.5H11" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button><input size="2"', ' type="number"', "><button", ' type="button"><svg width="12" height="13" viewBox="0 0 12 13" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 1.5V11.5" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M1 6.5H11" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button></div></div>'];
    _tmpl$3$3 = ["<div", '><svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7.99974 14.5027C11.3149 14.5027 14.0024 11.8152 14.0024 8.50001C14.0024 5.18483 11.3149 2.49734 7.99974 2.49734C4.68456 2.49734 1.99707 5.18483 1.99707 8.50001C1.99707 11.8152 4.68456 14.5027 7.99974 14.5027Z" stroke="#FF79DA" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M7.33301 10.834H8.87301" stroke="#FF79DA" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8.1062 10.8347V8H7.33887" stroke="#FF79DA" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8.06673 5.99668C8.06673 6.02965 8.05696 6.06187 8.03864 6.08928C8.02033 6.11669 7.9943 6.13805 7.96385 6.15066C7.93339 6.16328 7.89988 6.16658 7.86755 6.16015C7.83522 6.15372 7.80552 6.13784 7.78221 6.11454C7.75891 6.09123 7.74303 6.06153 7.7366 6.0292C7.73017 5.99687 7.73347 5.96336 7.74609 5.9329C7.7587 5.90245 7.78006 5.87642 7.80747 5.85811C7.83488 5.83979 7.8671 5.83002 7.90007 5.83002" stroke="#FF79DA" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M7.89941 5.83002C7.94362 5.83002 7.98601 5.84758 8.01726 5.87883C8.04852 5.91009 8.06608 5.95248 8.06608 5.99668" stroke="#FF79DA" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg><div', ">", "</div></div>"];
    _tmpl$$7 = ["<label", '><input type="radio"', "><svg", ' viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><circle', ' cx="10" cy="10" r="9.5" fill="#1D1F1F" stroke="#F100AE"></circle><circle', ' cx="10" cy="10" r="8" fill="#F100AE"></circle></svg><!--#-->', "<!--/--></label>"];
    _tmpl$$6 = ["<div", ' class="timerange"><div class="timerange__scale">', '</div><div class="timerange__legend">', "</div></div>"];
    _tmpl$2$2 = ["<div", ' class="', '"><div class="timerange__tooltip">', '</div><label><input type="radio" class="timerange__input" name="duration" value="', '"><svg class="timerange__box" viewBox="0 0 16 16" fill="none"><circle class="timerange__focus" cx="8" cy="8.00098" r="7.5" fill="white"></circle></svg></label></div>'];
    _tmpl$3$2 = ["<span", ' class="timerange__label">', "</span>"];
    _tmpl$4$1 = ["<span", ' class="timerange__label timerange__label_mob">', "</span>"];
    _tmpl$$5 = ["<div", "><div", "><h3", '>1. Specify the tech stack and the number of developers you need per each technology</h3><button type="button"', ">Clear all</button></div><fieldset", "><div", ">", "</div><div", ">", "</div><div", ">", "</div><div", ">", "</div></fieldset><div", "><h3", '>2. Extra specialists you need to add to the team</h3><button type="button"', '>Clear all</button></div><fieldset class="', '">', "</fieldset><div", "><h3", '>3. Please, specify your business industry</h3><button type="button"', '>Clear all</button></div><fieldset id="industry"', "><div", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></div><div", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></div><div", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></div><div", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></div></fieldset><div", "><h3", '>4. What is the expected duration of your project?</h3><button type="button"', ">Clear all</button></div><div", ">", "</div><div", "><h3", ">5. Contacts</h3></div><fieldset", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></fieldset></div>"];
    _tmpl$$4 = ["<label", '><input type="checkbox"', "><svg", ' width="20" height="20" viewBox="0 0 20 20"><rect', ' width="20" height="20" rx="4"></rect><path', ' d="M15.3337 6.33331L8.00033 13.6666L4.66699 10.3333" stroke-linecap="round" stroke-linejoin="round"></path></svg><!--#-->', "<!--/--></label>"];
    _tmpl$$3 = ["<div", "><div", "><h3", '>1. What type of software solution would you like to develop with Andersen?</h3><button type="button"', ">Clear all</button></div><fieldset", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></fieldset><div", "><h3", '>2. What is the current stage of your software development process?</h3><button type="button"', '>Clear all</button></div><fieldset id="stage"', "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></fieldset><div", "><h3", '>3. Do you need a professional consultation from any of the specialists below?</h3><button type="button"', ">Clear all</button></div><fieldset", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></fieldset><div", "><h3", '>4. Please, specify your business industry</h3><button type="button"', '>Clear all</button></div><fieldset id="industry"', "><div", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></div><div", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></div><div", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></div><div", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></div></fieldset><div", "><h3", '>5. What is the expected duration of your project?</h3><button type="button"', ">Clear all</button></div><div", ">", "</div><div", "><h3>6. Contacts</h3></div><fieldset", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></fieldset></div>"];
    _tmpl$$2 = ["<div", "><fieldset", "><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--></fieldset><!--#-->", "<!--/--></div>"];
    _tmpl$$1 = ["<div", "><div", "><div", "><h2", ">Request an IT project cost estimate</h2><div", '><button class="', '">custom software development</button><button class="', '">team augmentation</button><button class="', `">i don't know what I need</button></div></div></div><form`, ' enctype="multipart/form-data" method="post"><!--#-->', "<!--/--><!--#-->", "<!--/--><!--#-->", "<!--/--><button", ' type="submit"><!--#-->', "<!--/--><!--#-->", "<!--/--></button><!--#-->", "<!--/--><!--#-->", "<!--/--></form></div>"];
    _tmpl$2$1 = ["<div", ">", "</div>"];
    _tmpl$3$1 = ["<div", ">The form was sent successfully</div>"];
    $$module3$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      Form
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$w = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/brief.astro", { modules: [{ module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$2, specifier: "../../components/shared/FormSection.astro", assert: {} }, { module: $$module3$1, specifier: "../../components/solid/Form", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }], hydratedComponents: [Form], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$w = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/brief.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Brief$5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$w, $$props, $$slots);
      Astro2.self = $$Brief$5;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Brief", "lang": ELangs.en, "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Brief", "class": "astro-ERY3GRSQ" })}${renderComponent($$result, "FormSection", $$FormSection, { "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Form", Form, { "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$w.getPath(Form), "client:component-export": $$metadata$w.getExport(Form), "class": "astro-ERY3GRSQ" })}` })}` })}` })}`;
    });
    $$file$w = "C:/work-projects/pireactor/main-site/src/pages/en/brief.astro";
    $$url$w = "/en/brief";
    _page4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$w,
      "default": $$Brief$5,
      file: $$file$w,
      url: $$url$w
    }, Symbol.toStringTag, { value: "Module" }));
    EPhases = /* @__PURE__ */ ((EPhases2) => {
      EPhases2["dev"] = "Development phase";
      EPhases2["rel"] = "Project\u2019s release";
      EPhases2["sup"] = "Support & Improvements";
      return EPhases2;
    })(EPhases || {});
    $$module5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      EPhases
    }, Symbol.toStringTag, { value: "Module" }));
    $$module7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$v = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/work/[slug].astro", { modules: [{ module: $$module1, specifier: "../../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module2$3, specifier: "../../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5, specifier: "../../../enums/EPhases", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../../models/ContentModel", assert: {} }, { module: $$module7, specifier: "../../../models/ProjectModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$v = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/work/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$a = $$Astro$v;
    $$slug$a = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$v, $$props, $$slots);
      Astro2.self = $$slug$a;
      const props = Astro2.props;
      function phasesClass(item) {
        switch (item) {
          case EPhases.dev:
            return "stages__item_dev";
          case EPhases.rel:
            return "stages__item_rel";
          case EPhases.sup:
            return "stages__item_sup";
        }
      }
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-2CQBPXFM" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-2CQBPXFM" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="hero astro-2CQBPXFM"${addAttribute3(`--url: url("${props.img}")`, "style")}>
      <h1 class="astro-2CQBPXFM">${props.title}</h1>
    </div>${renderComponent($$result, "Section", $$Section, { "title": "Stages of project", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="stages__list astro-2CQBPXFM">
        ${props.phases.map((i3) => render2`<li${addAttribute3(`stages__item ${phasesClass(i3.icon)} astro-2CQBPXFM`, "class")}>
          <div class="stages__title astro-2CQBPXFM">${i3.name}</div>
          <div class="stages__period astro-2CQBPXFM">${i3.period}</div>
        </li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Application functionality", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="bullets astro-2CQBPXFM">
        ${props.bullets.map((i3) => render2`<li class="bullets__item astro-2CQBPXFM">${i3}</li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Solution", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="solution astro-2CQBPXFM">
        ${renderComponent($$result, "props.content", props.content, { "class": "astro-2CQBPXFM" })}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": "Results", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="counter astro-2CQBPXFM">
        ${props.result.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "format": i3.format, "client:component-hydration": "load", "client:component-path": $$metadata$v.getPath(Counter$1), "client:component-export": $$metadata$v.getExport(Counter$1), "class": "astro-2CQBPXFM" })}`)}
      </div>` })}${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-2CQBPXFM" })}`;
      } })}` })}`;
    });
    $$file$v = "C:/work-projects/pireactor/main-site/src/pages/en/work/[slug].astro";
    $$url$v = "/en/work/[slug]";
    _page5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$v,
      getStaticPaths: getStaticPaths$a,
      "default": $$slug$a,
      file: $$file$v,
      url: $$url$v
    }, Symbol.toStringTag, { value: "Module" }));
    _tmpl$ = ["<div", "><div", "><div", '><button class="', '"><svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.00003 4.50001C12.418 6.71001 17.79 12.082 20 16.5C22.209 20.918 20.418 22.71 16 20.5C11.582 18.29 6.20903 12.918 4.00003 8.50001C1.79003 4.08201 3.58203 2.29101 8.00003 4.50001Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M16 4.50001C20.418 2.29101 22.209 4.08201 20 8.50001C17.79 12.918 12.418 18.29 8.00003 20.5C3.58203 22.709 1.79003 20.918 4.00003 16.5C6.20903 12.082 11.582 6.71001 16 4.50001Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.2502 12.625C12.2502 12.5918 12.2371 12.5601 12.2136 12.5366C12.1902 12.5132 12.1584 12.5 12.1252 12.5C12.0921 12.5 12.0603 12.5132 12.0369 12.5366C12.0134 12.5601 12.0002 12.5918 12.0002 12.625C12.0002 12.6582 12.0134 12.6899 12.0369 12.7134C12.0603 12.7368 12.0921 12.75 12.1252 12.75C12.1584 12.75 12.1902 12.7368 12.2136 12.7134C12.2371 12.6899 12.2502 12.6582 12.2502 12.625" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg><!--#-->', "<!--/--></button><!--#-->", "<!--/--></div></div><div", "><ul", ">", "</ul></div></div>"];
    _tmpl$2 = ["<button", ' class="', '"><svg width="24" height="19" viewBox="0 0 24 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.99809 17.503C6.33496 17.503 5.69897 17.2397 5.22997 16.7708C4.76097 16.302 4.49736 15.6661 4.49709 15.003V12C4.49683 11.3369 4.23321 10.701 3.76421 10.2322C3.29521 9.76337 2.65923 9.50001 1.99609 9.50001C2.65923 9.49974 3.29511 9.23613 3.76392 8.76713C4.23273 8.29813 4.49609 7.66214 4.49609 6.99901V3.99801C4.49609 3.66949 4.56082 3.34419 4.68657 3.04069C4.81232 2.73719 4.99663 2.46143 5.22897 2.22918C5.46132 1.99693 5.73714 1.81273 6.0407 1.6871C6.34425 1.56147 6.66957 1.49688 6.99809 1.49701" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M17.002 1.49701C17.6651 1.49701 18.3011 1.76037 18.7701 2.22918C19.2391 2.69799 19.5027 3.33388 19.503 3.99701V7.00001C19.5032 7.66314 19.7668 8.29903 20.2358 8.76784C20.7048 9.23665 21.3408 9.50001 22.004 9.50001C21.3408 9.50027 20.7049 9.76389 20.2361 10.2329C19.7673 10.7019 19.504 11.3379 19.504 12.001V15.002C19.504 15.3305 19.4392 15.6558 19.3135 15.9593C19.1877 16.2628 19.0034 16.5386 18.7711 16.7708C18.5387 17.0031 18.2629 17.1873 17.9594 17.3129C17.6558 17.4385 17.3305 17.5031 17.002 17.503" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.0502 9.57301C12.0502 9.56644 12.0489 9.55994 12.0464 9.55388C12.0439 9.54781 12.0402 9.5423 12.0356 9.53765C12.0309 9.53301 12.0254 9.52933 12.0193 9.52682C12.0133 9.5243 12.0068 9.52301 12.0002 9.52301C11.9936 9.52301 11.9871 9.5243 11.9811 9.52682C11.975 9.52933 11.9695 9.53301 11.9648 9.53765C11.9602 9.5423 11.9565 9.54781 11.954 9.55388C11.9515 9.55994 11.9502 9.56644 11.9502 9.57301C11.9502 9.58627 11.9555 9.59899 11.9648 9.60837C11.9742 9.61774 11.9869 9.62301 12.0002 9.62301C12.0135 9.62301 12.0262 9.61774 12.0356 9.60837C12.0449 9.59899 12.0502 9.58627 12.0502 9.57301" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8.6 9.57301C8.6 9.56644 8.59871 9.55994 8.59619 9.55388C8.59368 9.54781 8.59 9.5423 8.58536 9.53765C8.58071 9.53301 8.5752 9.52933 8.56913 9.52682C8.56307 9.5243 8.55657 9.52301 8.55 9.52301C8.54343 9.52301 8.53693 9.5243 8.53087 9.52682C8.5248 9.52933 8.51929 9.53301 8.51464 9.53765C8.51 9.5423 8.50632 9.54781 8.50381 9.55388C8.50129 9.55994 8.5 9.56644 8.5 9.57301C8.5 9.58627 8.50527 9.59899 8.51464 9.60837C8.52402 9.61774 8.53674 9.62301 8.55 9.62301C8.56326 9.62301 8.57598 9.61774 8.58536 9.60837C8.59473 9.59899 8.6 9.58627 8.6 9.57301" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M15.0512 9.57301C15.0512 9.55975 15.0459 9.54703 15.0365 9.53765C15.0271 9.52828 15.0144 9.52301 15.0012 9.52301C14.9879 9.52301 14.9752 9.52828 14.9658 9.53765C14.9564 9.54703 14.9512 9.55975 14.9512 9.57301C14.9512 9.58627 14.9564 9.59899 14.9658 9.60837C14.9752 9.61774 14.9879 9.62301 15.0012 9.62301C15.0144 9.62301 15.0271 9.61774 15.0365 9.60837C15.0459 9.59899 15.0512 9.58627 15.0512 9.57301" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg><!--#-->', "<!--/--></button>"];
    _tmpl$3 = ["<li", "><!--#-->", "<!--/--><div", '><a href="', '"', "><h3>", "</h3></a><div", '><span class="', '">', '</span><span class="', '">', "</span></div></div><ul", ">", "</ul><p", ">", "</p><a", ' href="', '">', "</a></li>"];
    _tmpl$4 = ["<img", ">"];
    _tmpl$5 = ["<img", ' src="https://via.placeholder.com/150/000000/808080?text=NoImage"', ">"];
    _tmpl$6 = ["<li", ">", "</li>"];
    $$module3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      Projects
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$u = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/work.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module3, specifier: "../../components/solid/Projects", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module7, specifier: "../../models/ProjectModel", assert: {} }, { module: $$module8, specifier: "../../models/ServicesModel", assert: {} }], hydratedComponents: [Projects], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$u = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/en/work.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Work$5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$u, $$props, $$slots);
      Astro2.self = $$Work$5;
      const projectsRaw = await Astro2.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
      const projects = projectsRaw.map((i3) => {
        return {
          desc: i3.frontmatter.desc,
          developers: i3.frontmatter.developers,
          months: i3.frontmatter.months,
          phases: i3.frontmatter.phases,
          slug: i3.frontmatter.slug,
          title: i3.frontmatter.title,
          tags: i3.frontmatter.tags,
          img: i3.frontmatter.img
        };
      });
      const url59 = Astro2.request.url;
      const services = await Astro2.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
      const servicesNames = services.map((i3) => ({
        name: i3.frontmatter.title
      }));
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Portfolio", "lang": ELangs.en, "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Portfolio", "class": "astro-SMR3IJSC" })}<section class="hero astro-SMR3IJSC">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": "Explore", "title": "our Work", "class": "astro-SMR3IJSC" })}
        <p class="hero__desc astro-SMR3IJSC">
          We apply modern technologies to unlock new markets, expand your business opportunities and bring you one step closer to success. We combine developpers with designers,
          translators with copywriters, all subject matter experts in their fields, implementing what works. 
        </p>
    </section>${renderComponent($$result, "Projects", Projects, { "client:load": true, "servicesNames": servicesNames, "projects": projects, "url": url59, "allBtnTitle": "All Projects", "learnMoreText": "More Information", "langHref": ELangs.en, "client:component-hydration": "load", "client:component-path": $$metadata$u.getPath(Projects), "client:component-export": $$metadata$u.getExport(Projects), "class": "astro-SMR3IJSC" })}` })}` })}

`;
    });
    $$file$u = "C:/work-projects/pireactor/main-site/src/pages/en/work.astro";
    $$url$u = "/en/work";
    _page6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$u,
      "default": $$Work$5,
      file: $$file$u,
      url: $$url$u
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$t = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/index.astro", { modules: [{ module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module2$4, specifier: "../../components/main/Hero.astro", assert: {} }, { module: $$module3$2, specifier: "../../components/main/About.astro", assert: {} }, { module: $$module4, specifier: "../../components/main/Map.astro", assert: {} }, { module: $$module5$1, specifier: "../../components/main/How.astro", assert: {} }, { module: $$module6, specifier: "../../components/main/Services.astro", assert: {} }, { module: $$module7$1, specifier: "../../components/main/Technologies.astro", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module1, specifier: "../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$t = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/index.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Index$4 = createComponent2(async ($$result, $$props, $$slots) => {
      var _a8;
      const Astro2 = $$result.createAstro($$Astro$t, $$props, $$slots);
      Astro2.self = $$Index$4;
      const [content3] = await Astro2.glob({ "/public/assets/content/es/content.md": () => Promise.resolve().then(() => (init_chunk_a70b9817(), chunk_a70b9817_exports)) }, () => "/public/assets/content/es/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": (_a8 = content3.frontmatter) == null ? void 0 : _a8.title, "lang": ELangs.es, "class": "astro-H25IZ5QQ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-H25IZ5QQ" }, { "default": () => {
        var _a9;
        return render2`${renderComponent($$result, "Hero", $$Hero, { "redLine": (_a9 = content3.frontmatter) == null ? void 0 : _a9.index.hero.redline, "title": content3.frontmatter.index.hero.title, "path": "#callback-form", "btnText": content3.frontmatter.index.hero.btnText, "class": "astro-H25IZ5QQ" })}${renderComponent($$result, "About", $$About$6, { "counters": content3.frontmatter.counters, "desc": content3.frontmatter.index.desc, "title": "About", "class": "astro-H25IZ5QQ" })}${renderComponent($$result, "Map", $$Map, { "title": content3.frontmatter.index.mapTitle, "class": "astro-H25IZ5QQ" })}`;
      } })}${renderComponent($$result, "How", $$How, { "content": content3.frontmatter.howSection, "class": "astro-H25IZ5QQ" })}${renderComponent($$result, "Container", $$Container, { "class": "astro-H25IZ5QQ" }, { "default": () => {
        var _a9, _b, _c;
        return render2`<div class="services-wrp astro-H25IZ5QQ" id="services">
      ${renderComponent($$result, "Services", $$Services, { "title": content3.frontmatter.services.title, "lang": ELangs.en, "class": "astro-H25IZ5QQ" })}
    </div>${renderComponent($$result, "Technologies", $$Technologies, { "title": content3 == null ? void 0 : content3.frontmatter.tech.title, "desc": content3 == null ? void 0 : content3.frontmatter.tech.desc, "class": "astro-H25IZ5QQ" })}<div id="callback-form" class="astro-H25IZ5QQ">
      ${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a9 = content3.frontmatter) == null ? void 0 : _a9.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-H25IZ5QQ" })}
    </div>`;
      } })}` })}`;
    });
    $$file$t = "C:/work-projects/pireactor/main-site/src/pages/es/index.astro";
    $$url$t = "/es";
    _page7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$t,
      "default": $$Index$4,
      file: $$file$t,
      url: $$url$t
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$s = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/services/[slug].astro", { modules: [{ module: $$module1$2, specifier: "../../../components/MainTitle.astro", assert: {} }, { module: $$module2$5, specifier: "../../../components/shared/Button.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8, specifier: "../../../models/ServicesModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$s = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/services/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$9 = $$Astro$s;
    $$slug$9 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$s, $$props, $$slots);
      Astro2.self = $$slug$9;
      const props = Astro2.props;
      const uri = encodeURI(`/en/work/?${props.title}`);
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-SO5VML57" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-SO5VML57" }, { "default": () => render2`<section class="hero astro-SO5VML57">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": props.title, "class": "astro-SO5VML57" })}
        <p class="astro-SO5VML57">
          ${props.titleDesc}
        </p>
        ${renderComponent($$result, "Button", $$Button, { "title": props.heroBtn, "path": "/en/#callback-form", "class": "astro-SO5VML57" })}
    </section><section class="desc astro-SO5VML57">
      <h2 class="astro-SO5VML57">About</h2>
      <div class="desc__wrp astro-SO5VML57">
        <p class="astro-SO5VML57">${props.desc}</p>
        <div class="desc__counter astro-SO5VML57">
          ${props.values.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "client:component-hydration": "load", "client:component-path": $$metadata$s.getPath(Counter$1), "client:component-export": $$metadata$s.getExport(Counter$1), "class": "astro-SO5VML57" })}`)}
        </div>
      </div>
    </section>${props.articles.map((i3) => render2`<section class="article astro-SO5VML57">
      <h3 class="article__title astro-SO5VML57">${i3.title}</h3>
      <div class="article__wrp astro-SO5VML57">
        <img class="article__img astro-SO5VML57"${addAttribute3(i3.img, "src")}${addAttribute3(i3.title, "alt")}>
        <p class="article__desc astro-SO5VML57">${i3.desc}</p>
      </div>
    </section>`)}<div class="article__view astro-SO5VML57">
      ${renderComponent($$result, "Button", $$Button, { "path": uri, "title": props.viewBtn, "class": "astro-SO5VML57" })}
    </div>` })}` })}`;
    });
    $$file$s = "C:/work-projects/pireactor/main-site/src/pages/es/services/[slug].astro";
    $$url$s = "/es/services/[slug]";
    _page8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      getStaticPaths: getStaticPaths$9,
      $$metadata: $$metadata$s,
      "default": $$slug$9,
      file: $$file$s,
      url: $$url$s
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$r = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/about.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2$1, specifier: "../../components/shared/AboutCard.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$3, specifier: "../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$r = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/about.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$About$4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$r, $$props, $$slots);
      Astro2.self = $$About$4;
      const leads = await Astro2.glob({ "/public/assets/content/es/leads/AlexAlejandre.md": () => Promise.resolve().then(() => (init_chunk_efd8f2e3(), chunk_efd8f2e3_exports)), "/public/assets/content/es/leads/JohnVermazenSt.md": () => Promise.resolve().then(() => (init_chunk_c3803efd(), chunk_c3803efd_exports)), "/public/assets/content/es/leads/JustynaBorwik.md": () => Promise.resolve().then(() => (init_chunk_3f76bef5(), chunk_3f76bef5_exports)), "/public/assets/content/es/leads/StevenVermazen.md": () => Promise.resolve().then(() => (init_chunk_2e39d252(), chunk_2e39d252_exports)) }, () => "/public/assets/content/es/leads/*.md");
      const sortLeads = leads.sort((a2, b2) => a2.frontmatter.id - b2.frontmatter.id);
      const [content3] = await Astro2.glob({ "/public/assets/content/es/content.md": () => Promise.resolve().then(() => (init_chunk_a70b9817(), chunk_a70b9817_exports)) }, () => "/public/assets/content/es/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "About Us", "lang": ELangs.es, "class": "astro-T4H4SLQZ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-T4H4SLQZ" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "About Us", "class": "astro-T4H4SLQZ" })}<section class="hero astro-T4H4SLQZ">
      ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": content3 == null ? void 0 : content3.frontmatter.about.hero.redline, "title": content3 == null ? void 0 : content3.frontmatter.about.hero.title, "class": "astro-T4H4SLQZ" })}
      <p class="about__desc astro-T4H4SLQZ">
        ${content3 == null ? void 0 : content3.frontmatter.about.desc}
      </p>
    </section>${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.counterTitle, "class": "astro-T4H4SLQZ" }, { "default": () => render2`<div class="about__counter astro-T4H4SLQZ">
        ${content3.frontmatter.counters.map((el) => render2`${renderComponent($$result, "Counter", Counter$1, { "title": el.title, "countTo": el.value, "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$r.getPath(Counter$1), "client:component-export": $$metadata$r.getExport(Counter$1), "class": "astro-T4H4SLQZ" })}`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3.frontmatter.about.whoWeAreTitle, "class": "astro-T4H4SLQZ" }, { "default": () => render2`<div class="about__who astro-T4H4SLQZ">
        ${content3.frontmatter.about.text.map((i3) => render2`<p class="astro-T4H4SLQZ">${i3}</p>`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.leadsTitle, "class": "astro-T4H4SLQZ" }, { "default": () => render2`<div class="leads astro-T4H4SLQZ">
        <ul class="leads-list astro-T4H4SLQZ">
          ${sortLeads.map((lead) => render2`${renderComponent($$result, "AboutCard", $$AboutCard, { "desc": lead.frontmatter.desc, "imgSource": lead.frontmatter.imgSource, "name": lead.frontmatter.name, "info": lead.frontmatter.info, "linkLI": lead.frontmatter.linkLI, "linkT": lead.frontmatter.linkT, "class": "astro-T4H4SLQZ" })}`)}
        </ul>
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.locationsTitle, "class": "astro-T4H4SLQZ" }, { "default": () => render2`<ul class="location astro-T4H4SLQZ">
        ${content3.frontmatter.about.locations.map((i3) => render2`<li class="location__item astro-T4H4SLQZ">
          <img${addAttribute3(i3.img, "src")}${addAttribute3(i3.name, "alt")} class="location__img astro-T4H4SLQZ">
          ${i3.name}
        </li>`)}
      </ul>` })}` })}` })}`;
    });
    $$file$r = "C:/work-projects/pireactor/main-site/src/pages/es/about.astro";
    $$url$r = "/es/about";
    _page9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$r,
      "default": $$About$4,
      file: $$file$r,
      url: $$url$r
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$q = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/brief.astro", { modules: [{ module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$2, specifier: "../../components/shared/FormSection.astro", assert: {} }, { module: $$module3$1, specifier: "../../components/solid/Form", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }], hydratedComponents: [Form], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$q = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/brief.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Brief$4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$q, $$props, $$slots);
      Astro2.self = $$Brief$4;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Brief", "lang": ELangs.es, "class": "astro-O43VOKX4" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-O43VOKX4" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Brief", "class": "astro-O43VOKX4" })}${renderComponent($$result, "FormSection", $$FormSection, { "class": "astro-O43VOKX4" }, { "default": () => render2`${renderComponent($$result, "Form", Form, { "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$q.getPath(Form), "client:component-export": $$metadata$q.getExport(Form), "class": "astro-O43VOKX4" })}` })}` })}` })}`;
    });
    $$file$q = "C:/work-projects/pireactor/main-site/src/pages/es/brief.astro";
    $$url$q = "/es/brief";
    _page10 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$q,
      "default": $$Brief$4,
      file: $$file$q,
      url: $$url$q
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$p = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/work/[slug].astro", { modules: [{ module: $$module1, specifier: "../../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module2$3, specifier: "../../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5, specifier: "../../../enums/EPhases", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../../models/ContentModel", assert: {} }, { module: $$module7, specifier: "../../../models/ProjectModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$p = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/work/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$8 = $$Astro$p;
    $$slug$8 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$p, $$props, $$slots);
      Astro2.self = $$slug$8;
      const props = Astro2.props;
      function phasesClass(item) {
        switch (item) {
          case EPhases.dev:
            return "stages__item_dev";
          case EPhases.rel:
            return "stages__item_rel";
          case EPhases.sup:
            return "stages__item_sup";
        }
      }
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-2CQBPXFM" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-2CQBPXFM" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="hero astro-2CQBPXFM"${addAttribute3(`--url: url("${props.img}")`, "style")}>
      <h1 class="astro-2CQBPXFM">${props.title}</h1>
    </div>${renderComponent($$result, "Section", $$Section, { "title": "Stages of project", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="stages__list astro-2CQBPXFM">
        ${props.phases.map((i3) => render2`<li${addAttribute3(`stages__item ${phasesClass(i3.icon)} astro-2CQBPXFM`, "class")}>
          <div class="stages__title astro-2CQBPXFM">${i3.name}</div>
          <div class="stages__period astro-2CQBPXFM">${i3.period}</div>
        </li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Application functionality", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="bullets astro-2CQBPXFM">
        ${props.bullets.map((i3) => render2`<li class="bullets__item astro-2CQBPXFM">${i3}</li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Solution", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="solution astro-2CQBPXFM">
        ${renderComponent($$result, "props.content", props.content, { "class": "astro-2CQBPXFM" })}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": "Results", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="counter astro-2CQBPXFM">
        ${props.result.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "format": i3.format, "client:component-hydration": "load", "client:component-path": $$metadata$p.getPath(Counter$1), "client:component-export": $$metadata$p.getExport(Counter$1), "class": "astro-2CQBPXFM" })}`)}
      </div>` })}${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-2CQBPXFM" })}`;
      } })}` })}`;
    });
    $$file$p = "C:/work-projects/pireactor/main-site/src/pages/es/work/[slug].astro";
    $$url$p = "/es/work/[slug]";
    _page11 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$p,
      getStaticPaths: getStaticPaths$8,
      "default": $$slug$8,
      file: $$file$p,
      url: $$url$p
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$o = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/work.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module3, specifier: "../../components/solid/Projects", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module7, specifier: "../../models/ProjectModel", assert: {} }, { module: $$module8, specifier: "../../models/ServicesModel", assert: {} }], hydratedComponents: [Projects], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$o = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/es/work.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Work$4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$o, $$props, $$slots);
      Astro2.self = $$Work$4;
      const projectsRaw = await Astro2.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
      const projects = projectsRaw.map((i3) => {
        return {
          desc: i3.frontmatter.desc,
          developers: i3.frontmatter.developers,
          months: i3.frontmatter.months,
          phases: i3.frontmatter.phases,
          slug: i3.frontmatter.slug,
          title: i3.frontmatter.title,
          tags: i3.frontmatter.tags,
          img: i3.frontmatter.img
        };
      });
      const url59 = Astro2.request.url;
      const services = await Astro2.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
      const servicesNames = services.map((i3) => ({
        name: i3.frontmatter.title
      }));
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Portfolio", "lang": ELangs.en, "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Portfolio", "class": "astro-SMR3IJSC" })}<section class="hero astro-SMR3IJSC">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": "Explore", "title": "our Work", "class": "astro-SMR3IJSC" })}
        <p class="hero__desc astro-SMR3IJSC">
          We apply modern technologies to unlock new markets, expand your business opportunities and bring you one step closer to success. We combine developpers with designers,
          translators with copywriters, all subject matter experts in their fields, implementing what works. 
        </p>
    </section>${renderComponent($$result, "Projects", Projects, { "client:load": true, "servicesNames": servicesNames, "projects": projects, "url": url59, "allBtnTitle": "All Projects", "learnMoreText": "More Information", "langHref": ELangs.en, "client:component-hydration": "load", "client:component-path": $$metadata$o.getPath(Projects), "client:component-export": $$metadata$o.getExport(Projects), "class": "astro-SMR3IJSC" })}` })}` })}

`;
    });
    $$file$o = "C:/work-projects/pireactor/main-site/src/pages/es/work.astro";
    $$url$o = "/es/work";
    _page12 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$o,
      "default": $$Work$4,
      file: $$file$o,
      url: $$url$o
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$n = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/index.astro", { modules: [{ module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module2$4, specifier: "../../components/main/Hero.astro", assert: {} }, { module: $$module3$2, specifier: "../../components/main/About.astro", assert: {} }, { module: $$module4, specifier: "../../components/main/Map.astro", assert: {} }, { module: $$module5$1, specifier: "../../components/main/How.astro", assert: {} }, { module: $$module6, specifier: "../../components/main/Services.astro", assert: {} }, { module: $$module7$1, specifier: "../../components/main/Technologies.astro", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module1, specifier: "../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$n = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/index.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Index$3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$n, $$props, $$slots);
      Astro2.self = $$Index$3;
      const [content3] = await Astro2.glob({ "/public/assets/content/pl/content.md": () => Promise.resolve().then(() => (init_chunk_7554dae3(), chunk_7554dae3_exports)) }, () => "/public/assets/content/pl/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": content3.frontmatter.title, "lang": ELangs.pl, "class": "astro-JR5A7WNZ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-JR5A7WNZ" }, { "default": () => {
        var _a8;
        return render2`${renderComponent($$result, "Hero", $$Hero, { "redLine": (_a8 = content3.frontmatter) == null ? void 0 : _a8.index.hero.redline, "title": content3.frontmatter.index.hero.title, "path": "pl/#callback-form", "btnText": content3.frontmatter.index.hero.btnText, "class": "astro-JR5A7WNZ" })}${renderComponent($$result, "About", $$About$6, { "counters": content3.frontmatter.counters, "desc": content3.frontmatter.index.desc, "title": "About", "class": "astro-JR5A7WNZ" })}${renderComponent($$result, "Map", $$Map, { "title": content3.frontmatter.index.mapTitle, "class": "astro-JR5A7WNZ" })}`;
      } })}${renderComponent($$result, "How", $$How, { "content": content3.frontmatter.howSection, "class": "astro-JR5A7WNZ" })}${renderComponent($$result, "Container", $$Container, { "class": "astro-JR5A7WNZ" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="services-wrp astro-JR5A7WNZ" id="services">
      ${renderComponent($$result, "Services", $$Services, { "title": content3.frontmatter.services.title, "lang": ELangs.en, "class": "astro-JR5A7WNZ" })}
    </div>${renderComponent($$result, "Technologies", $$Technologies, { "title": content3 == null ? void 0 : content3.frontmatter.tech.title, "desc": content3 == null ? void 0 : content3.frontmatter.tech.desc, "class": "astro-JR5A7WNZ" })}<div id="callback-form" class="astro-JR5A7WNZ">
      ${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-JR5A7WNZ" })}
    </div>`;
      } })}` })}`;
    });
    $$file$n = "C:/work-projects/pireactor/main-site/src/pages/pl/index.astro";
    $$url$n = "/pl";
    _page13 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$n,
      "default": $$Index$3,
      file: $$file$n,
      url: $$url$n
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$m = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/services/[slug].astro", { modules: [{ module: $$module1$2, specifier: "../../../components/MainTitle.astro", assert: {} }, { module: $$module2$5, specifier: "../../../components/shared/Button.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8, specifier: "../../../models/ServicesModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$m = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/services/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$7 = $$Astro$m;
    $$slug$7 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$m, $$props, $$slots);
      Astro2.self = $$slug$7;
      const props = Astro2.props;
      const uri = encodeURI(`/pl/work/?${props.title}`);
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-RBKQJOES" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-RBKQJOES" }, { "default": () => render2`<section class="hero astro-RBKQJOES">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": props.title, "class": "astro-RBKQJOES" })}
        <p class="astro-RBKQJOES">
          ${props.titleDesc}
        </p>
        ${renderComponent($$result, "Button", $$Button, { "title": props.heroBtn, "path": "/pl/#callback-form", "class": "astro-RBKQJOES" })}
    </section><section class="desc astro-RBKQJOES">
      <h2 class="astro-RBKQJOES">About</h2>
      <div class="desc__wrp astro-RBKQJOES">
        <p class="astro-RBKQJOES">${props.desc}</p>
        <div class="desc__counter astro-RBKQJOES">
          ${props.values.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "client:component-hydration": "load", "client:component-path": $$metadata$m.getPath(Counter$1), "client:component-export": $$metadata$m.getExport(Counter$1), "class": "astro-RBKQJOES" })}`)}
        </div>
      </div>
    </section>${props.articles.map((i3) => render2`<section class="article astro-RBKQJOES">
      <h3 class="article__title astro-RBKQJOES">${i3.title}</h3>
      <div class="article__wrp astro-RBKQJOES">
        <img class="article__img astro-RBKQJOES"${addAttribute3(i3.img, "src")}${addAttribute3(i3.title, "alt")}>
        <p class="article__desc astro-RBKQJOES">${i3.desc}</p>
      </div>
    </section>`)}<div class="article__view astro-RBKQJOES">
      ${renderComponent($$result, "Button", $$Button, { "path": uri, "title": props.viewBtn, "class": "astro-RBKQJOES" })}
    </div>` })}` })}`;
    });
    $$file$m = "C:/work-projects/pireactor/main-site/src/pages/pl/services/[slug].astro";
    $$url$m = "/pl/services/[slug]";
    _page14 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      getStaticPaths: getStaticPaths$7,
      $$metadata: $$metadata$m,
      "default": $$slug$7,
      file: $$file$m,
      url: $$url$m
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$l = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/about.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2$1, specifier: "../../components/shared/AboutCard.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$3, specifier: "../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$l = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/about.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$About$3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$l, $$props, $$slots);
      Astro2.self = $$About$3;
      const leads = await Astro2.glob({ "/public/assets/content/pl/leads/AlexAlejandre.md": () => Promise.resolve().then(() => (init_chunk_41e9167d(), chunk_41e9167d_exports)), "/public/assets/content/pl/leads/JohnVermazenSt.md": () => Promise.resolve().then(() => (init_chunk_68fc1448(), chunk_68fc1448_exports)), "/public/assets/content/pl/leads/JustynaBorwik.md": () => Promise.resolve().then(() => (init_chunk_03a6dc40(), chunk_03a6dc40_exports)), "/public/assets/content/pl/leads/StevenVermazen.md": () => Promise.resolve().then(() => (init_chunk_6cf3c4a4(), chunk_6cf3c4a4_exports)) }, () => "/public/assets/content/pl/leads/*.md");
      const sortLeads = leads.sort((a2, b2) => a2.frontmatter.id - b2.frontmatter.id);
      const [content3] = await Astro2.glob({ "/public/assets/content/pl/content.md": () => Promise.resolve().then(() => (init_chunk_7554dae3(), chunk_7554dae3_exports)) }, () => "/public/assets/content/pl/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "About Us", "lang": ELangs.en, "class": "astro-4D4O3JD4" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-4D4O3JD4" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "About Us", "class": "astro-4D4O3JD4" })}<section class="hero astro-4D4O3JD4">
      ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": content3 == null ? void 0 : content3.frontmatter.about.hero.redline, "title": content3 == null ? void 0 : content3.frontmatter.about.hero.title, "class": "astro-4D4O3JD4" })}
      <p class="about__desc astro-4D4O3JD4">
        ${content3 == null ? void 0 : content3.frontmatter.about.desc}
      </p>
    </section>${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.counterTitle, "class": "astro-4D4O3JD4" }, { "default": () => render2`<div class="about__counter astro-4D4O3JD4">
        ${content3.frontmatter.counters.map((el) => render2`${renderComponent($$result, "Counter", Counter$1, { "title": el.title, "countTo": el.value, "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$l.getPath(Counter$1), "client:component-export": $$metadata$l.getExport(Counter$1), "class": "astro-4D4O3JD4" })}`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3.frontmatter.about.whoWeAreTitle, "class": "astro-4D4O3JD4" }, { "default": () => render2`<div class="about__who astro-4D4O3JD4">
        ${content3.frontmatter.about.text.map((i3) => render2`<p class="astro-4D4O3JD4">${i3}</p>`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.leadsTitle, "class": "astro-4D4O3JD4" }, { "default": () => render2`<div class="leads astro-4D4O3JD4">
        <ul class="leads-list astro-4D4O3JD4">
          ${sortLeads.map((lead) => render2`${renderComponent($$result, "AboutCard", $$AboutCard, { "desc": lead.frontmatter.desc, "imgSource": lead.frontmatter.imgSource, "name": lead.frontmatter.name, "info": lead.frontmatter.info, "linkLI": lead.frontmatter.linkLI, "linkT": lead.frontmatter.linkT, "class": "astro-4D4O3JD4" })}`)}
        </ul>
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.locationsTitle, "class": "astro-4D4O3JD4" }, { "default": () => render2`<ul class="location astro-4D4O3JD4">
        ${content3.frontmatter.about.locations.map((i3) => render2`<li class="location__item astro-4D4O3JD4">
          <img${addAttribute3(i3.img, "src")}${addAttribute3(i3.name, "alt")} class="location__img astro-4D4O3JD4">
          ${i3.name}
        </li>`)}
      </ul>` })}` })}` })}`;
    });
    $$file$l = "C:/work-projects/pireactor/main-site/src/pages/pl/about.astro";
    $$url$l = "/pl/about";
    _page15 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$l,
      "default": $$About$3,
      file: $$file$l,
      url: $$url$l
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$k = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/brief.astro", { modules: [{ module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$2, specifier: "../../components/shared/FormSection.astro", assert: {} }, { module: $$module3$1, specifier: "../../components/solid/Form", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }], hydratedComponents: [Form], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$k = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/brief.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Brief$3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$k, $$props, $$slots);
      Astro2.self = $$Brief$3;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Brief", "lang": ELangs.pl, "class": "astro-E3BCZCCX" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-E3BCZCCX" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Brief", "class": "astro-E3BCZCCX" })}${renderComponent($$result, "FormSection", $$FormSection, { "class": "astro-E3BCZCCX" }, { "default": () => render2`${renderComponent($$result, "Form", Form, { "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$k.getPath(Form), "client:component-export": $$metadata$k.getExport(Form), "class": "astro-E3BCZCCX" })}` })}` })}` })}`;
    });
    $$file$k = "C:/work-projects/pireactor/main-site/src/pages/pl/brief.astro";
    $$url$k = "/pl/brief";
    _page16 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$k,
      "default": $$Brief$3,
      file: $$file$k,
      url: $$url$k
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$j = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/work/[slug].astro", { modules: [{ module: $$module1, specifier: "../../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module2$3, specifier: "../../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5, specifier: "../../../enums/EPhases", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../../models/ContentModel", assert: {} }, { module: $$module7, specifier: "../../../models/ProjectModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$j = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/work/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$6 = $$Astro$j;
    $$slug$6 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$j, $$props, $$slots);
      Astro2.self = $$slug$6;
      const props = Astro2.props;
      function phasesClass(item) {
        switch (item) {
          case EPhases.dev:
            return "stages__item_dev";
          case EPhases.rel:
            return "stages__item_rel";
          case EPhases.sup:
            return "stages__item_sup";
        }
      }
      const [content3] = await Astro2.glob({ "/public/assets/content/pl/content.md": () => Promise.resolve().then(() => (init_chunk_7554dae3(), chunk_7554dae3_exports)) }, () => "/public/assets/content/pl/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.pl, "class": "astro-KIAHOJOA" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-KIAHOJOA" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="hero astro-KIAHOJOA"${addAttribute3(`--url: url("${props.img}")`, "style")}>
      <h1 class="astro-KIAHOJOA">${props.title}</h1>
    </div>${renderComponent($$result, "Section", $$Section, { "title": "Stages of project", "class": "astro-KIAHOJOA" }, { "default": () => render2`<ul class="stages__list astro-KIAHOJOA">
        ${props.phases.map((i3) => render2`<li${addAttribute3(`stages__item ${phasesClass(i3.icon)} astro-KIAHOJOA`, "class")}>
          <div class="stages__title astro-KIAHOJOA">${i3.name}</div>
          <div class="stages__period astro-KIAHOJOA">${i3.period}</div>
        </li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Application functionality", "class": "astro-KIAHOJOA" }, { "default": () => render2`<ul class="bullets astro-KIAHOJOA">
        ${props.bullets.map((i3) => render2`<li class="bullets__item astro-KIAHOJOA">${i3}</li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Solution", "class": "astro-KIAHOJOA" }, { "default": () => render2`<div class="solution astro-KIAHOJOA">
        ${renderComponent($$result, "props.content", props.content, { "class": "astro-KIAHOJOA" })}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": "Results", "class": "astro-KIAHOJOA" }, { "default": () => render2`<div class="counter astro-KIAHOJOA">
        ${props.result.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "format": i3.format, "client:component-hydration": "load", "client:component-path": $$metadata$j.getPath(Counter$1), "client:component-export": $$metadata$j.getExport(Counter$1), "class": "astro-KIAHOJOA" })}`)}
      </div>` })}${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-KIAHOJOA" })}`;
      } })}` })}`;
    });
    $$file$j = "C:/work-projects/pireactor/main-site/src/pages/pl/work/[slug].astro";
    $$url$j = "/pl/work/[slug]";
    _page17 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$j,
      getStaticPaths: getStaticPaths$6,
      "default": $$slug$6,
      file: $$file$j,
      url: $$url$j
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$i = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/work.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module3, specifier: "../../components/solid/Projects", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module7, specifier: "../../models/ProjectModel", assert: {} }, { module: $$module8, specifier: "../../models/ServicesModel", assert: {} }], hydratedComponents: [Projects], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$i = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/pl/work.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Work$3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$i, $$props, $$slots);
      Astro2.self = $$Work$3;
      const projectsRaw = await Astro2.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
      const projects = projectsRaw.map((i3) => {
        return {
          desc: i3.frontmatter.desc,
          developers: i3.frontmatter.developers,
          months: i3.frontmatter.months,
          phases: i3.frontmatter.phases,
          slug: i3.frontmatter.slug,
          title: i3.frontmatter.title,
          tags: i3.frontmatter.tags,
          img: i3.frontmatter.img
        };
      });
      const url59 = Astro2.request.url;
      const services = await Astro2.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
      const servicesNames = services.map((i3) => ({
        name: i3.frontmatter.title
      }));
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Portfolio", "lang": ELangs.en, "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Portfolio", "class": "astro-SMR3IJSC" })}<section class="hero astro-SMR3IJSC">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": "Explore", "title": "our Work", "class": "astro-SMR3IJSC" })}
        <p class="hero__desc astro-SMR3IJSC">
          We apply modern technologies to unlock new markets, expand your business opportunities and bring you one step closer to success. We combine developpers with designers,
          translators with copywriters, all subject matter experts in their fields, implementing what works. 
        </p>
    </section>${renderComponent($$result, "Projects", Projects, { "client:load": true, "servicesNames": servicesNames, "projects": projects, "url": url59, "allBtnTitle": "All Projects", "learnMoreText": "More Information", "langHref": ELangs.en, "client:component-hydration": "load", "client:component-path": $$metadata$i.getPath(Projects), "client:component-export": $$metadata$i.getExport(Projects), "class": "astro-SMR3IJSC" })}` })}` })}

`;
    });
    $$file$i = "C:/work-projects/pireactor/main-site/src/pages/pl/work.astro";
    $$url$i = "/pl/work";
    _page18 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$i,
      "default": $$Work$3,
      file: $$file$i,
      url: $$url$i
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$h = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/index.astro", { modules: [{ module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module2$4, specifier: "../../components/main/Hero.astro", assert: {} }, { module: $$module3$2, specifier: "../../components/main/About.astro", assert: {} }, { module: $$module4, specifier: "../../components/main/Map.astro", assert: {} }, { module: $$module5$1, specifier: "../../components/main/How.astro", assert: {} }, { module: $$module6, specifier: "../../components/main/Services.astro", assert: {} }, { module: $$module7$1, specifier: "../../components/main/Technologies.astro", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module1, specifier: "../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$h = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/index.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Index$2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$h, $$props, $$slots);
      Astro2.self = $$Index$2;
      const [content3] = await Astro2.glob({ "/public/assets/content/ru/content.md": () => Promise.resolve().then(() => (init_chunk_ad1611b2(), chunk_ad1611b2_exports)) }, () => "/public/assets/content/ru/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": content3.frontmatter.title, "lang": ELangs.ru, "class": "astro-RHUMQJB3" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-RHUMQJB3" }, { "default": () => {
        var _a8;
        return render2`${renderComponent($$result, "Hero", $$Hero, { "redLine": (_a8 = content3.frontmatter) == null ? void 0 : _a8.index.hero.redline, "title": content3.frontmatter.index.hero.title, "path": "#callback-form", "btnText": content3.frontmatter.index.hero.btnText, "class": "astro-RHUMQJB3" })}${renderComponent($$result, "About", $$About$6, { "counters": content3.frontmatter.counters, "desc": content3.frontmatter.index.desc, "title": "About", "class": "astro-RHUMQJB3" })}${renderComponent($$result, "Map", $$Map, { "title": content3.frontmatter.index.mapTitle, "class": "astro-RHUMQJB3" })}`;
      } })}${renderComponent($$result, "How", $$How, { "content": content3.frontmatter.howSection, "class": "astro-RHUMQJB3" })}${renderComponent($$result, "Container", $$Container, { "class": "astro-RHUMQJB3" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="services-wrp astro-RHUMQJB3" id="services">
      ${renderComponent($$result, "Services", $$Services, { "title": content3.frontmatter.services.title, "lang": ELangs.en, "class": "astro-RHUMQJB3" })}
    </div>${renderComponent($$result, "Technologies", $$Technologies, { "title": content3 == null ? void 0 : content3.frontmatter.tech.title, "desc": content3 == null ? void 0 : content3.frontmatter.tech.desc, "class": "astro-RHUMQJB3" })}<div id="callback-form" class="astro-RHUMQJB3">
      ${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-RHUMQJB3" })}
    </div>`;
      } })}` })}`;
    });
    $$file$h = "C:/work-projects/pireactor/main-site/src/pages/ru/index.astro";
    $$url$h = "/ru";
    _page19 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$h,
      "default": $$Index$2,
      file: $$file$h,
      url: $$url$h
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$g = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/services/[slug].astro", { modules: [{ module: $$module1$2, specifier: "../../../components/MainTitle.astro", assert: {} }, { module: $$module2$5, specifier: "../../../components/shared/Button.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8, specifier: "../../../models/ServicesModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$g = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/services/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$5 = $$Astro$g;
    $$slug$5 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$g, $$props, $$slots);
      Astro2.self = $$slug$5;
      const props = Astro2.props;
      const uri = encodeURI(`/en/work/?${props.title}`);
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-WWB66DLJ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-WWB66DLJ" }, { "default": () => render2`<section class="hero astro-WWB66DLJ">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": props.title, "class": "astro-WWB66DLJ" })}
        <p class="astro-WWB66DLJ">
          ${props.titleDesc}
        </p>
        ${renderComponent($$result, "Button", $$Button, { "title": props.heroBtn, "path": "/en/#callback-form", "class": "astro-WWB66DLJ" })}
    </section><section class="desc astro-WWB66DLJ">
      <h2 class="astro-WWB66DLJ">About</h2>
      <div class="desc__wrp astro-WWB66DLJ">
        <p class="astro-WWB66DLJ">${props.desc}</p>
        <div class="desc__counter astro-WWB66DLJ">
          ${props.values.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "client:component-hydration": "load", "client:component-path": $$metadata$g.getPath(Counter$1), "client:component-export": $$metadata$g.getExport(Counter$1), "class": "astro-WWB66DLJ" })}`)}
        </div>
      </div>
    </section>${props.articles.map((i3) => render2`<section class="article astro-WWB66DLJ">
      <h3 class="article__title astro-WWB66DLJ">${i3.title}</h3>
      <div class="article__wrp astro-WWB66DLJ">
        <img class="article__img astro-WWB66DLJ"${addAttribute3(i3.img, "src")}${addAttribute3(i3.title, "alt")}>
        <p class="article__desc astro-WWB66DLJ">${i3.desc}</p>
      </div>
    </section>`)}<div class="article__view astro-WWB66DLJ">
      ${renderComponent($$result, "Button", $$Button, { "path": uri, "title": props.viewBtn, "class": "astro-WWB66DLJ" })}
    </div>` })}` })}`;
    });
    $$file$g = "C:/work-projects/pireactor/main-site/src/pages/ru/services/[slug].astro";
    $$url$g = "/ru/services/[slug]";
    _page20 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      getStaticPaths: getStaticPaths$5,
      $$metadata: $$metadata$g,
      "default": $$slug$5,
      file: $$file$g,
      url: $$url$g
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$f = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/about.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2$1, specifier: "../../components/shared/AboutCard.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$3, specifier: "../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$f = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/about.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$About$2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$f, $$props, $$slots);
      Astro2.self = $$About$2;
      const leads = await Astro2.glob({ "/public/assets/content/en/leads/AlexAlejandre.md": () => Promise.resolve().then(() => (init_chunk_5790b932(), chunk_5790b932_exports)), "/public/assets/content/en/leads/JohnVermazenSt.md": () => Promise.resolve().then(() => (init_chunk_e09586c6(), chunk_e09586c6_exports)), "/public/assets/content/en/leads/JustynaBorwik.md": () => Promise.resolve().then(() => (init_chunk_6b16a774(), chunk_6b16a774_exports)), "/public/assets/content/en/leads/StevenVermazen.md": () => Promise.resolve().then(() => (init_chunk_6c0c45b4(), chunk_6c0c45b4_exports)) }, () => "/public/assets/content/en/leads/*.md");
      const sortLeads = leads.sort((a2, b2) => a2.frontmatter.id - b2.frontmatter.id);
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "About Us", "lang": ELangs.en, "class": "astro-KVNL2NNH" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-KVNL2NNH" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "About Us", "class": "astro-KVNL2NNH" })}<section class="hero astro-KVNL2NNH">
      ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": content3 == null ? void 0 : content3.frontmatter.about.hero.redline, "title": content3 == null ? void 0 : content3.frontmatter.about.hero.title, "class": "astro-KVNL2NNH" })}
      <p class="about__desc astro-KVNL2NNH">
        ${content3 == null ? void 0 : content3.frontmatter.about.desc}
      </p>
    </section>${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.counterTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="about__counter astro-KVNL2NNH">
        ${content3.frontmatter.counters.map((el) => render2`${renderComponent($$result, "Counter", Counter$1, { "title": el.title, "countTo": el.value, "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$f.getPath(Counter$1), "client:component-export": $$metadata$f.getExport(Counter$1), "class": "astro-KVNL2NNH" })}`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3.frontmatter.about.whoWeAreTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="about__who astro-KVNL2NNH">
        ${content3.frontmatter.about.text.map((i3) => render2`<p class="astro-KVNL2NNH">${i3}</p>`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.leadsTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="leads astro-KVNL2NNH">
        <ul class="leads-list astro-KVNL2NNH">
          ${sortLeads.map((lead) => render2`${renderComponent($$result, "AboutCard", $$AboutCard, { "desc": lead.frontmatter.desc, "imgSource": lead.frontmatter.imgSource, "name": lead.frontmatter.name, "info": lead.frontmatter.info, "linkLI": lead.frontmatter.linkLI, "linkT": lead.frontmatter.linkT, "class": "astro-KVNL2NNH" })}`)}
        </ul>
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.locationsTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<ul class="location astro-KVNL2NNH">
        ${content3.frontmatter.about.locations.map((i3) => render2`<li class="location__item astro-KVNL2NNH">
          <img${addAttribute3(i3.img, "src")}${addAttribute3(i3.name, "alt")} class="location__img astro-KVNL2NNH">
          ${i3.name}
        </li>`)}
      </ul>` })}` })}` })}`;
    });
    $$file$f = "C:/work-projects/pireactor/main-site/src/pages/ru/about.astro";
    $$url$f = "/ru/about";
    _page21 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$f,
      "default": $$About$2,
      file: $$file$f,
      url: $$url$f
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$e = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/brief.astro", { modules: [{ module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$2, specifier: "../../components/shared/FormSection.astro", assert: {} }, { module: $$module3$1, specifier: "../../components/solid/Form", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }], hydratedComponents: [Form], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$e = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/brief.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Brief$2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$e, $$props, $$slots);
      Astro2.self = $$Brief$2;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Brief", "lang": ELangs.en, "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Brief", "class": "astro-ERY3GRSQ" })}${renderComponent($$result, "FormSection", $$FormSection, { "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Form", Form, { "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$e.getPath(Form), "client:component-export": $$metadata$e.getExport(Form), "class": "astro-ERY3GRSQ" })}` })}` })}` })}`;
    });
    $$file$e = "C:/work-projects/pireactor/main-site/src/pages/ru/brief.astro";
    $$url$e = "/ru/brief";
    _page22 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$e,
      "default": $$Brief$2,
      file: $$file$e,
      url: $$url$e
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$d = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/work/[slug].astro", { modules: [{ module: $$module1, specifier: "../../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module2$3, specifier: "../../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5, specifier: "../../../enums/EPhases", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../../models/ContentModel", assert: {} }, { module: $$module7, specifier: "../../../models/ProjectModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$d = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/work/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$4 = $$Astro$d;
    $$slug$4 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$d, $$props, $$slots);
      Astro2.self = $$slug$4;
      const props = Astro2.props;
      function phasesClass(item) {
        switch (item) {
          case EPhases.dev:
            return "stages__item_dev";
          case EPhases.rel:
            return "stages__item_rel";
          case EPhases.sup:
            return "stages__item_sup";
        }
      }
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-2CQBPXFM" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-2CQBPXFM" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="hero astro-2CQBPXFM"${addAttribute3(`--url: url("${props.img}")`, "style")}>
      <h1 class="astro-2CQBPXFM">${props.title}</h1>
    </div>${renderComponent($$result, "Section", $$Section, { "title": "Stages of project", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="stages__list astro-2CQBPXFM">
        ${props.phases.map((i3) => render2`<li${addAttribute3(`stages__item ${phasesClass(i3.icon)} astro-2CQBPXFM`, "class")}>
          <div class="stages__title astro-2CQBPXFM">${i3.name}</div>
          <div class="stages__period astro-2CQBPXFM">${i3.period}</div>
        </li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Application functionality", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="bullets astro-2CQBPXFM">
        ${props.bullets.map((i3) => render2`<li class="bullets__item astro-2CQBPXFM">${i3}</li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Solution", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="solution astro-2CQBPXFM">
        ${renderComponent($$result, "props.content", props.content, { "class": "astro-2CQBPXFM" })}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": "Results", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="counter astro-2CQBPXFM">
        ${props.result.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "format": i3.format, "client:component-hydration": "load", "client:component-path": $$metadata$d.getPath(Counter$1), "client:component-export": $$metadata$d.getExport(Counter$1), "class": "astro-2CQBPXFM" })}`)}
      </div>` })}${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-2CQBPXFM" })}`;
      } })}` })}`;
    });
    $$file$d = "C:/work-projects/pireactor/main-site/src/pages/ru/work/[slug].astro";
    $$url$d = "/ru/work/[slug]";
    _page23 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$d,
      getStaticPaths: getStaticPaths$4,
      "default": $$slug$4,
      file: $$file$d,
      url: $$url$d
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$c = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/work.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module3, specifier: "../../components/solid/Projects", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module7, specifier: "../../models/ProjectModel", assert: {} }, { module: $$module8, specifier: "../../models/ServicesModel", assert: {} }], hydratedComponents: [Projects], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$c = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ru/work.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Work$2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$c, $$props, $$slots);
      Astro2.self = $$Work$2;
      const projectsRaw = await Astro2.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
      const projects = projectsRaw.map((i3) => {
        return {
          desc: i3.frontmatter.desc,
          developers: i3.frontmatter.developers,
          months: i3.frontmatter.months,
          phases: i3.frontmatter.phases,
          slug: i3.frontmatter.slug,
          title: i3.frontmatter.title,
          tags: i3.frontmatter.tags,
          img: i3.frontmatter.img
        };
      });
      const url59 = Astro2.request.url;
      const services = await Astro2.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
      const servicesNames = services.map((i3) => ({
        name: i3.frontmatter.title
      }));
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Portfolio", "lang": ELangs.en, "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Portfolio", "class": "astro-SMR3IJSC" })}<section class="hero astro-SMR3IJSC">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": "Explore", "title": "our Work", "class": "astro-SMR3IJSC" })}
        <p class="hero__desc astro-SMR3IJSC">
          We apply modern technologies to unlock new markets, expand your business opportunities and bring you one step closer to success. We combine developpers with designers,
          translators with copywriters, all subject matter experts in their fields, implementing what works. 
        </p>
    </section>${renderComponent($$result, "Projects", Projects, { "client:load": true, "servicesNames": servicesNames, "projects": projects, "url": url59, "allBtnTitle": "All Projects", "learnMoreText": "More Information", "langHref": ELangs.en, "client:component-hydration": "load", "client:component-path": $$metadata$c.getPath(Projects), "client:component-export": $$metadata$c.getExport(Projects), "class": "astro-SMR3IJSC" })}` })}` })}

`;
    });
    $$file$c = "C:/work-projects/pireactor/main-site/src/pages/ru/work.astro";
    $$url$c = "/ru/work";
    _page24 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$c,
      "default": $$Work$2,
      file: $$file$c,
      url: $$url$c
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$b = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/index.astro", { modules: [{ module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module2$4, specifier: "../../components/main/Hero.astro", assert: {} }, { module: $$module3$2, specifier: "../../components/main/About.astro", assert: {} }, { module: $$module4, specifier: "../../components/main/Map.astro", assert: {} }, { module: $$module5$1, specifier: "../../components/main/How.astro", assert: {} }, { module: $$module6, specifier: "../../components/main/Services.astro", assert: {} }, { module: $$module7$1, specifier: "../../components/main/Technologies.astro", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module1, specifier: "../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$b = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/index.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Index$1 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$b, $$props, $$slots);
      Astro2.self = $$Index$1;
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": content3.frontmatter.title, "lang": ELangs.en, "class": "astro-REHVHBA2" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-REHVHBA2" }, { "default": () => {
        var _a8;
        return render2`${renderComponent($$result, "Hero", $$Hero, { "redLine": (_a8 = content3.frontmatter) == null ? void 0 : _a8.index.hero.redline, "title": content3.frontmatter.index.hero.title, "path": "#callback-form", "btnText": content3.frontmatter.index.hero.btnText, "class": "astro-REHVHBA2" })}${renderComponent($$result, "About", $$About$6, { "counters": content3.frontmatter.counters, "desc": content3.frontmatter.index.desc, "title": "About", "class": "astro-REHVHBA2" })}${renderComponent($$result, "Map", $$Map, { "title": content3.frontmatter.index.mapTitle, "class": "astro-REHVHBA2" })}`;
      } })}${renderComponent($$result, "How", $$How, { "content": content3.frontmatter.howSection, "class": "astro-REHVHBA2" })}${renderComponent($$result, "Container", $$Container, { "class": "astro-REHVHBA2" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="services-wrp astro-REHVHBA2" id="services">
      ${renderComponent($$result, "Services", $$Services, { "title": content3.frontmatter.services.title, "lang": ELangs.en, "class": "astro-REHVHBA2" })}
    </div>${renderComponent($$result, "Technologies", $$Technologies, { "title": content3 == null ? void 0 : content3.frontmatter.tech.title, "desc": content3 == null ? void 0 : content3.frontmatter.tech.desc, "class": "astro-REHVHBA2" })}<div id="callback-form" class="astro-REHVHBA2">
      ${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-REHVHBA2" })}
    </div>`;
      } })}` })}`;
    });
    $$file$b = "C:/work-projects/pireactor/main-site/src/pages/tr/index.astro";
    $$url$b = "/tr";
    _page25 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$b,
      "default": $$Index$1,
      file: $$file$b,
      url: $$url$b
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$a = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/services/[slug].astro", { modules: [{ module: $$module1$2, specifier: "../../../components/MainTitle.astro", assert: {} }, { module: $$module2$5, specifier: "../../../components/shared/Button.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8, specifier: "../../../models/ServicesModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$a = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/services/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$3 = $$Astro$a;
    $$slug$3 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$a, $$props, $$slots);
      Astro2.self = $$slug$3;
      const props = Astro2.props;
      const uri = encodeURI(`/en/work/?${props.title}`);
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-WWB66DLJ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-WWB66DLJ" }, { "default": () => render2`<section class="hero astro-WWB66DLJ">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": props.title, "class": "astro-WWB66DLJ" })}
        <p class="astro-WWB66DLJ">
          ${props.titleDesc}
        </p>
        ${renderComponent($$result, "Button", $$Button, { "title": props.heroBtn, "path": "/en/#callback-form", "class": "astro-WWB66DLJ" })}
    </section><section class="desc astro-WWB66DLJ">
      <h2 class="astro-WWB66DLJ">About</h2>
      <div class="desc__wrp astro-WWB66DLJ">
        <p class="astro-WWB66DLJ">${props.desc}</p>
        <div class="desc__counter astro-WWB66DLJ">
          ${props.values.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "client:component-hydration": "load", "client:component-path": $$metadata$a.getPath(Counter$1), "client:component-export": $$metadata$a.getExport(Counter$1), "class": "astro-WWB66DLJ" })}`)}
        </div>
      </div>
    </section>${props.articles.map((i3) => render2`<section class="article astro-WWB66DLJ">
      <h3 class="article__title astro-WWB66DLJ">${i3.title}</h3>
      <div class="article__wrp astro-WWB66DLJ">
        <img class="article__img astro-WWB66DLJ"${addAttribute3(i3.img, "src")}${addAttribute3(i3.title, "alt")}>
        <p class="article__desc astro-WWB66DLJ">${i3.desc}</p>
      </div>
    </section>`)}<div class="article__view astro-WWB66DLJ">
      ${renderComponent($$result, "Button", $$Button, { "path": uri, "title": props.viewBtn, "class": "astro-WWB66DLJ" })}
    </div>` })}` })}`;
    });
    $$file$a = "C:/work-projects/pireactor/main-site/src/pages/tr/services/[slug].astro";
    $$url$a = "/tr/services/[slug]";
    _page26 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      getStaticPaths: getStaticPaths$3,
      $$metadata: $$metadata$a,
      "default": $$slug$3,
      file: $$file$a,
      url: $$url$a
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$9 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/about.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2$1, specifier: "../../components/shared/AboutCard.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$3, specifier: "../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$9 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/about.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$About$1 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$9, $$props, $$slots);
      Astro2.self = $$About$1;
      const leads = await Astro2.glob({ "/public/assets/content/en/leads/AlexAlejandre.md": () => Promise.resolve().then(() => (init_chunk_5790b932(), chunk_5790b932_exports)), "/public/assets/content/en/leads/JohnVermazenSt.md": () => Promise.resolve().then(() => (init_chunk_e09586c6(), chunk_e09586c6_exports)), "/public/assets/content/en/leads/JustynaBorwik.md": () => Promise.resolve().then(() => (init_chunk_6b16a774(), chunk_6b16a774_exports)), "/public/assets/content/en/leads/StevenVermazen.md": () => Promise.resolve().then(() => (init_chunk_6c0c45b4(), chunk_6c0c45b4_exports)) }, () => "/public/assets/content/en/leads/*.md");
      const sortLeads = leads.sort((a2, b2) => a2.frontmatter.id - b2.frontmatter.id);
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "About Us", "lang": ELangs.en, "class": "astro-KVNL2NNH" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-KVNL2NNH" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "About Us", "class": "astro-KVNL2NNH" })}<section class="hero astro-KVNL2NNH">
      ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": content3 == null ? void 0 : content3.frontmatter.about.hero.redline, "title": content3 == null ? void 0 : content3.frontmatter.about.hero.title, "class": "astro-KVNL2NNH" })}
      <p class="about__desc astro-KVNL2NNH">
        ${content3 == null ? void 0 : content3.frontmatter.about.desc}
      </p>
    </section>${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.counterTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="about__counter astro-KVNL2NNH">
        ${content3.frontmatter.counters.map((el) => render2`${renderComponent($$result, "Counter", Counter$1, { "title": el.title, "countTo": el.value, "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$9.getPath(Counter$1), "client:component-export": $$metadata$9.getExport(Counter$1), "class": "astro-KVNL2NNH" })}`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3.frontmatter.about.whoWeAreTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="about__who astro-KVNL2NNH">
        ${content3.frontmatter.about.text.map((i3) => render2`<p class="astro-KVNL2NNH">${i3}</p>`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.leadsTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="leads astro-KVNL2NNH">
        <ul class="leads-list astro-KVNL2NNH">
          ${sortLeads.map((lead) => render2`${renderComponent($$result, "AboutCard", $$AboutCard, { "desc": lead.frontmatter.desc, "imgSource": lead.frontmatter.imgSource, "name": lead.frontmatter.name, "info": lead.frontmatter.info, "linkLI": lead.frontmatter.linkLI, "linkT": lead.frontmatter.linkT, "class": "astro-KVNL2NNH" })}`)}
        </ul>
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.locationsTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<ul class="location astro-KVNL2NNH">
        ${content3.frontmatter.about.locations.map((i3) => render2`<li class="location__item astro-KVNL2NNH">
          <img${addAttribute3(i3.img, "src")}${addAttribute3(i3.name, "alt")} class="location__img astro-KVNL2NNH">
          ${i3.name}
        </li>`)}
      </ul>` })}` })}` })}`;
    });
    $$file$9 = "C:/work-projects/pireactor/main-site/src/pages/tr/about.astro";
    $$url$9 = "/tr/about";
    _page27 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$9,
      "default": $$About$1,
      file: $$file$9,
      url: $$url$9
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$8 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/brief.astro", { modules: [{ module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$2, specifier: "../../components/shared/FormSection.astro", assert: {} }, { module: $$module3$1, specifier: "../../components/solid/Form", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }], hydratedComponents: [Form], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$8 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/brief.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Brief$1 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$8, $$props, $$slots);
      Astro2.self = $$Brief$1;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Brief", "lang": ELangs.en, "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Brief", "class": "astro-ERY3GRSQ" })}${renderComponent($$result, "FormSection", $$FormSection, { "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Form", Form, { "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$8.getPath(Form), "client:component-export": $$metadata$8.getExport(Form), "class": "astro-ERY3GRSQ" })}` })}` })}` })}`;
    });
    $$file$8 = "C:/work-projects/pireactor/main-site/src/pages/tr/brief.astro";
    $$url$8 = "/tr/brief";
    _page28 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$8,
      "default": $$Brief$1,
      file: $$file$8,
      url: $$url$8
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$7 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/work/[slug].astro", { modules: [{ module: $$module1, specifier: "../../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module2$3, specifier: "../../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5, specifier: "../../../enums/EPhases", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../../models/ContentModel", assert: {} }, { module: $$module7, specifier: "../../../models/ProjectModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$7 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/work/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$2 = $$Astro$7;
    $$slug$2 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$7, $$props, $$slots);
      Astro2.self = $$slug$2;
      const props = Astro2.props;
      function phasesClass(item) {
        switch (item) {
          case EPhases.dev:
            return "stages__item_dev";
          case EPhases.rel:
            return "stages__item_rel";
          case EPhases.sup:
            return "stages__item_sup";
        }
      }
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-2CQBPXFM" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-2CQBPXFM" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="hero astro-2CQBPXFM"${addAttribute3(`--url: url("${props.img}")`, "style")}>
      <h1 class="astro-2CQBPXFM">${props.title}</h1>
    </div>${renderComponent($$result, "Section", $$Section, { "title": "Stages of project", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="stages__list astro-2CQBPXFM">
        ${props.phases.map((i3) => render2`<li${addAttribute3(`stages__item ${phasesClass(i3.icon)} astro-2CQBPXFM`, "class")}>
          <div class="stages__title astro-2CQBPXFM">${i3.name}</div>
          <div class="stages__period astro-2CQBPXFM">${i3.period}</div>
        </li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Application functionality", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="bullets astro-2CQBPXFM">
        ${props.bullets.map((i3) => render2`<li class="bullets__item astro-2CQBPXFM">${i3}</li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Solution", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="solution astro-2CQBPXFM">
        ${renderComponent($$result, "props.content", props.content, { "class": "astro-2CQBPXFM" })}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": "Results", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="counter astro-2CQBPXFM">
        ${props.result.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "format": i3.format, "client:component-hydration": "load", "client:component-path": $$metadata$7.getPath(Counter$1), "client:component-export": $$metadata$7.getExport(Counter$1), "class": "astro-2CQBPXFM" })}`)}
      </div>` })}${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-2CQBPXFM" })}`;
      } })}` })}`;
    });
    $$file$7 = "C:/work-projects/pireactor/main-site/src/pages/tr/work/[slug].astro";
    $$url$7 = "/tr/work/[slug]";
    _page29 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$7,
      getStaticPaths: getStaticPaths$2,
      "default": $$slug$2,
      file: $$file$7,
      url: $$url$7
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$6 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/work.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module3, specifier: "../../components/solid/Projects", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module7, specifier: "../../models/ProjectModel", assert: {} }, { module: $$module8, specifier: "../../models/ServicesModel", assert: {} }], hydratedComponents: [Projects], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$6 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/tr/work.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Work$1 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$6, $$props, $$slots);
      Astro2.self = $$Work$1;
      const projectsRaw = await Astro2.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
      const projects = projectsRaw.map((i3) => {
        return {
          desc: i3.frontmatter.desc,
          developers: i3.frontmatter.developers,
          months: i3.frontmatter.months,
          phases: i3.frontmatter.phases,
          slug: i3.frontmatter.slug,
          title: i3.frontmatter.title,
          tags: i3.frontmatter.tags,
          img: i3.frontmatter.img
        };
      });
      const url59 = Astro2.request.url;
      const services = await Astro2.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
      const servicesNames = services.map((i3) => ({
        name: i3.frontmatter.title
      }));
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Portfolio", "lang": ELangs.en, "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Portfolio", "class": "astro-SMR3IJSC" })}<section class="hero astro-SMR3IJSC">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": "Explore", "title": "our Work", "class": "astro-SMR3IJSC" })}
        <p class="hero__desc astro-SMR3IJSC">
          We apply modern technologies to unlock new markets, expand your business opportunities and bring you one step closer to success. We combine developpers with designers,
          translators with copywriters, all subject matter experts in their fields, implementing what works. 
        </p>
    </section>${renderComponent($$result, "Projects", Projects, { "client:load": true, "servicesNames": servicesNames, "projects": projects, "url": url59, "allBtnTitle": "All Projects", "learnMoreText": "More Information", "langHref": ELangs.en, "client:component-hydration": "load", "client:component-path": $$metadata$6.getPath(Projects), "client:component-export": $$metadata$6.getExport(Projects), "class": "astro-SMR3IJSC" })}` })}` })}

`;
    });
    $$file$6 = "C:/work-projects/pireactor/main-site/src/pages/tr/work.astro";
    $$url$6 = "/tr/work";
    _page30 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$6,
      "default": $$Work$1,
      file: $$file$6,
      url: $$url$6
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$5 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/index.astro", { modules: [{ module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module2$4, specifier: "../../components/main/Hero.astro", assert: {} }, { module: $$module3$2, specifier: "../../components/main/About.astro", assert: {} }, { module: $$module4, specifier: "../../components/main/Map.astro", assert: {} }, { module: $$module5$1, specifier: "../../components/main/How.astro", assert: {} }, { module: $$module6, specifier: "../../components/main/Services.astro", assert: {} }, { module: $$module7$1, specifier: "../../components/main/Technologies.astro", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module1, specifier: "../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
    $$Astro$5 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/index.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Index = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$5, $$props, $$slots);
      Astro2.self = $$Index;
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": content3.frontmatter.title, "lang": ELangs.en, "class": "astro-REHVHBA2" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-REHVHBA2" }, { "default": () => {
        var _a8;
        return render2`${renderComponent($$result, "Hero", $$Hero, { "redLine": (_a8 = content3.frontmatter) == null ? void 0 : _a8.index.hero.redline, "title": content3.frontmatter.index.hero.title, "path": "#callback-form", "btnText": content3.frontmatter.index.hero.btnText, "class": "astro-REHVHBA2" })}${renderComponent($$result, "About", $$About$6, { "counters": content3.frontmatter.counters, "desc": content3.frontmatter.index.desc, "title": "About", "class": "astro-REHVHBA2" })}${renderComponent($$result, "Map", $$Map, { "title": content3.frontmatter.index.mapTitle, "class": "astro-REHVHBA2" })}`;
      } })}${renderComponent($$result, "How", $$How, { "content": content3.frontmatter.howSection, "class": "astro-REHVHBA2" })}${renderComponent($$result, "Container", $$Container, { "class": "astro-REHVHBA2" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="services-wrp astro-REHVHBA2" id="services">
      ${renderComponent($$result, "Services", $$Services, { "title": content3.frontmatter.services.title, "lang": ELangs.en, "class": "astro-REHVHBA2" })}
    </div>${renderComponent($$result, "Technologies", $$Technologies, { "title": content3 == null ? void 0 : content3.frontmatter.tech.title, "desc": content3 == null ? void 0 : content3.frontmatter.tech.desc, "class": "astro-REHVHBA2" })}<div id="callback-form" class="astro-REHVHBA2">
      ${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-REHVHBA2" })}
    </div>`;
      } })}` })}`;
    });
    $$file$5 = "C:/work-projects/pireactor/main-site/src/pages/ua/index.astro";
    $$url$5 = "/ua";
    _page31 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$5,
      "default": $$Index,
      file: $$file$5,
      url: $$url$5
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$4 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/services/[slug].astro", { modules: [{ module: $$module1$2, specifier: "../../../components/MainTitle.astro", assert: {} }, { module: $$module2$5, specifier: "../../../components/shared/Button.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8, specifier: "../../../models/ServicesModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$4 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/services/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro$1 = $$Astro$4;
    $$slug$1 = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$4, $$props, $$slots);
      Astro2.self = $$slug$1;
      const props = Astro2.props;
      const uri = encodeURI(`/en/work/?${props.title}`);
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-WWB66DLJ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-WWB66DLJ" }, { "default": () => render2`<section class="hero astro-WWB66DLJ">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": props.title, "class": "astro-WWB66DLJ" })}
        <p class="astro-WWB66DLJ">
          ${props.titleDesc}
        </p>
        ${renderComponent($$result, "Button", $$Button, { "title": props.heroBtn, "path": "/en/#callback-form", "class": "astro-WWB66DLJ" })}
    </section><section class="desc astro-WWB66DLJ">
      <h2 class="astro-WWB66DLJ">About</h2>
      <div class="desc__wrp astro-WWB66DLJ">
        <p class="astro-WWB66DLJ">${props.desc}</p>
        <div class="desc__counter astro-WWB66DLJ">
          ${props.values.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "client:component-hydration": "load", "client:component-path": $$metadata$4.getPath(Counter$1), "client:component-export": $$metadata$4.getExport(Counter$1), "class": "astro-WWB66DLJ" })}`)}
        </div>
      </div>
    </section>${props.articles.map((i3) => render2`<section class="article astro-WWB66DLJ">
      <h3 class="article__title astro-WWB66DLJ">${i3.title}</h3>
      <div class="article__wrp astro-WWB66DLJ">
        <img class="article__img astro-WWB66DLJ"${addAttribute3(i3.img, "src")}${addAttribute3(i3.title, "alt")}>
        <p class="article__desc astro-WWB66DLJ">${i3.desc}</p>
      </div>
    </section>`)}<div class="article__view astro-WWB66DLJ">
      ${renderComponent($$result, "Button", $$Button, { "path": uri, "title": props.viewBtn, "class": "astro-WWB66DLJ" })}
    </div>` })}` })}`;
    });
    $$file$4 = "C:/work-projects/pireactor/main-site/src/pages/ua/services/[slug].astro";
    $$url$4 = "/ua/services/[slug]";
    _page32 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      getStaticPaths: getStaticPaths$1,
      $$metadata: $$metadata$4,
      "default": $$slug$1,
      file: $$file$4,
      url: $$url$4
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$3 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/about.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2$1, specifier: "../../components/shared/AboutCard.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$3, specifier: "../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../models/ContentModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$3 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/about.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$About = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$3, $$props, $$slots);
      Astro2.self = $$About;
      const leads = await Astro2.glob({ "/public/assets/content/en/leads/AlexAlejandre.md": () => Promise.resolve().then(() => (init_chunk_5790b932(), chunk_5790b932_exports)), "/public/assets/content/en/leads/JohnVermazenSt.md": () => Promise.resolve().then(() => (init_chunk_e09586c6(), chunk_e09586c6_exports)), "/public/assets/content/en/leads/JustynaBorwik.md": () => Promise.resolve().then(() => (init_chunk_6b16a774(), chunk_6b16a774_exports)), "/public/assets/content/en/leads/StevenVermazen.md": () => Promise.resolve().then(() => (init_chunk_6c0c45b4(), chunk_6c0c45b4_exports)) }, () => "/public/assets/content/en/leads/*.md");
      const sortLeads = leads.sort((a2, b2) => a2.frontmatter.id - b2.frontmatter.id);
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "About Us", "lang": ELangs.en, "class": "astro-KVNL2NNH" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-KVNL2NNH" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "About Us", "class": "astro-KVNL2NNH" })}<section class="hero astro-KVNL2NNH">
      ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": content3 == null ? void 0 : content3.frontmatter.about.hero.redline, "title": content3 == null ? void 0 : content3.frontmatter.about.hero.title, "class": "astro-KVNL2NNH" })}
      <p class="about__desc astro-KVNL2NNH">
        ${content3 == null ? void 0 : content3.frontmatter.about.desc}
      </p>
    </section>${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.counterTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="about__counter astro-KVNL2NNH">
        ${content3.frontmatter.counters.map((el) => render2`${renderComponent($$result, "Counter", Counter$1, { "title": el.title, "countTo": el.value, "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$3.getPath(Counter$1), "client:component-export": $$metadata$3.getExport(Counter$1), "class": "astro-KVNL2NNH" })}`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3.frontmatter.about.whoWeAreTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="about__who astro-KVNL2NNH">
        ${content3.frontmatter.about.text.map((i3) => render2`<p class="astro-KVNL2NNH">${i3}</p>`)}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.leadsTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<div class="leads astro-KVNL2NNH">
        <ul class="leads-list astro-KVNL2NNH">
          ${sortLeads.map((lead) => render2`${renderComponent($$result, "AboutCard", $$AboutCard, { "desc": lead.frontmatter.desc, "imgSource": lead.frontmatter.imgSource, "name": lead.frontmatter.name, "info": lead.frontmatter.info, "linkLI": lead.frontmatter.linkLI, "linkT": lead.frontmatter.linkT, "class": "astro-KVNL2NNH" })}`)}
        </ul>
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": content3 == null ? void 0 : content3.frontmatter.about.locationsTitle, "class": "astro-KVNL2NNH" }, { "default": () => render2`<ul class="location astro-KVNL2NNH">
        ${content3.frontmatter.about.locations.map((i3) => render2`<li class="location__item astro-KVNL2NNH">
          <img${addAttribute3(i3.img, "src")}${addAttribute3(i3.name, "alt")} class="location__img astro-KVNL2NNH">
          ${i3.name}
        </li>`)}
      </ul>` })}` })}` })}`;
    });
    $$file$3 = "C:/work-projects/pireactor/main-site/src/pages/ua/about.astro";
    $$url$3 = "/ua/about";
    _page33 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$3,
      "default": $$About,
      file: $$file$3,
      url: $$url$3
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$2 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/brief.astro", { modules: [{ module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module2$2, specifier: "../../components/shared/FormSection.astro", assert: {} }, { module: $$module3$1, specifier: "../../components/solid/Form", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }], hydratedComponents: [Form], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$2 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/brief.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Brief = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
      Astro2.self = $$Brief;
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Brief", "lang": ELangs.en, "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Brief", "class": "astro-ERY3GRSQ" })}${renderComponent($$result, "FormSection", $$FormSection, { "class": "astro-ERY3GRSQ" }, { "default": () => render2`${renderComponent($$result, "Form", Form, { "client:load": true, "client:component-hydration": "load", "client:component-path": $$metadata$2.getPath(Form), "client:component-export": $$metadata$2.getExport(Form), "class": "astro-ERY3GRSQ" })}` })}` })}` })}`;
    });
    $$file$2 = "C:/work-projects/pireactor/main-site/src/pages/ua/brief.astro";
    $$url$2 = "/ua/brief";
    _page34 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$2,
      "default": $$Brief,
      file: $$file$2,
      url: $$url$2
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata$1 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/work/[slug].astro", { modules: [{ module: $$module1, specifier: "../../../components/shared/CallbackForm.astro", assert: {} }, { module: $$module2$3, specifier: "../../../components/shared/Section.astro", assert: {} }, { module: $$module3$3, specifier: "../../../components/solid/Counter", assert: {} }, { module: $$module4$2, specifier: "../../../enums/ELangs", assert: {} }, { module: $$module5, specifier: "../../../enums/EPhases", assert: {} }, { module: $$module5$3, specifier: "../../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../../layouts/Layout.astro", assert: {} }, { module: $$module8$1, specifier: "../../../models/ContentModel", assert: {} }, { module: $$module7, specifier: "../../../models/ProjectModel", assert: {} }], hydratedComponents: [Counter$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro$1 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/work/[slug].astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    Astro = $$Astro$1;
    $$slug = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
      Astro2.self = $$slug;
      const props = Astro2.props;
      function phasesClass(item) {
        switch (item) {
          case EPhases.dev:
            return "stages__item_dev";
          case EPhases.rel:
            return "stages__item_rel";
          case EPhases.sup:
            return "stages__item_sup";
        }
      }
      const [content3] = await Astro2.glob({ "/public/assets/content/en/content.md": () => Promise.resolve().then(() => (init_chunk_c9d3957c(), chunk_c9d3957c_exports)) }, () => "/public/assets/content/en/*.md");
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": props.title, "lang": ELangs.en, "class": "astro-2CQBPXFM" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-2CQBPXFM" }, { "default": () => {
        var _a8, _b, _c;
        return render2`<div class="hero astro-2CQBPXFM"${addAttribute3(`--url: url("${props.img}")`, "style")}>
      <h1 class="astro-2CQBPXFM">${props.title}</h1>
    </div>${renderComponent($$result, "Section", $$Section, { "title": "Stages of project", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="stages__list astro-2CQBPXFM">
        ${props.phases.map((i3) => render2`<li${addAttribute3(`stages__item ${phasesClass(i3.icon)} astro-2CQBPXFM`, "class")}>
          <div class="stages__title astro-2CQBPXFM">${i3.name}</div>
          <div class="stages__period astro-2CQBPXFM">${i3.period}</div>
        </li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Application functionality", "class": "astro-2CQBPXFM" }, { "default": () => render2`<ul class="bullets astro-2CQBPXFM">
        ${props.bullets.map((i3) => render2`<li class="bullets__item astro-2CQBPXFM">${i3}</li>`)}
      </ul>` })}${renderComponent($$result, "Section", $$Section, { "title": "Solution", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="solution astro-2CQBPXFM">
        ${renderComponent($$result, "props.content", props.content, { "class": "astro-2CQBPXFM" })}
      </div>` })}${renderComponent($$result, "Section", $$Section, { "title": "Results", "class": "astro-2CQBPXFM" }, { "default": () => render2`<div class="counter astro-2CQBPXFM">
        ${props.result.map((i3) => render2`${renderComponent($$result, "Counter", Counter$1, { "client:load": true, "countTo": i3.value, "title": i3.name, "format": i3.format, "client:component-hydration": "load", "client:component-path": $$metadata$1.getPath(Counter$1), "client:component-export": $$metadata$1.getExport(Counter$1), "class": "astro-2CQBPXFM" })}`)}
      </div>` })}${renderComponent($$result, "CallbackForm", $$CallbackForm, { "desc": (_a8 = content3.frontmatter) == null ? void 0 : _a8.form.desc, "title": (_b = content3.frontmatter) == null ? void 0 : _b.form.title, "fields": (_c = content3.frontmatter) == null ? void 0 : _c.form.fields, "class": "astro-2CQBPXFM" })}`;
      } })}` })}`;
    });
    $$file$1 = "C:/work-projects/pireactor/main-site/src/pages/ua/work/[slug].astro";
    $$url$1 = "/ua/work/[slug]";
    _page35 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata$1,
      getStaticPaths,
      "default": $$slug,
      file: $$file$1,
      url: $$url$1
    }, Symbol.toStringTag, { value: "Module" }));
    $$metadata59 = createMetadata2("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/work.astro", { modules: [{ module: $$module1$2, specifier: "../../components/MainTitle.astro", assert: {} }, { module: $$module2, specifier: "../../components/shared/Breadcrums.astro", assert: {} }, { module: $$module3, specifier: "../../components/solid/Projects", assert: {} }, { module: $$module4$2, specifier: "../../enums/ELangs", assert: {} }, { module: $$module5$3, specifier: "../../layouts/Container.astro", assert: {} }, { module: $$module6$1, specifier: "../../layouts/Layout.astro", assert: {} }, { module: $$module7, specifier: "../../models/ProjectModel", assert: {} }, { module: $$module8, specifier: "../../models/ServicesModel", assert: {} }], hydratedComponents: [Projects], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["load"]), hoisted: [] });
    $$Astro59 = createAstro("/@fs/C:/work-projects/pireactor/main-site/src/pages/ua/work.astro", "http://localhost:3000/", "file:///C:/work-projects/pireactor/main-site/");
    $$Work = createComponent2(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro59, $$props, $$slots);
      Astro2.self = $$Work;
      const projectsRaw = await Astro2.glob({ "/public/assets/content/en/projects/Brewery.md": () => Promise.resolve().then(() => (init_chunk_c1a611e2(), chunk_c1a611e2_exports)), "/public/assets/content/en/projects/NewHope copy.md": () => Promise.resolve().then(() => (init_chunk_1fa0ae9a(), chunk_1fa0ae9a_exports)), "/public/assets/content/en/projects/NewHope.md": () => Promise.resolve().then(() => (init_chunk_8dce1602(), chunk_8dce1602_exports)), "/public/assets/content/en/projects/NewHope2.md": () => Promise.resolve().then(() => (init_chunk_f23f1ec4(), chunk_f23f1ec4_exports)), "/public/assets/content/en/projects/NewHope3.md": () => Promise.resolve().then(() => (init_chunk_b8b02486(), chunk_b8b02486_exports)) }, () => "/public/assets/content/en/projects/*.md");
      const projects = projectsRaw.map((i3) => {
        return {
          desc: i3.frontmatter.desc,
          developers: i3.frontmatter.developers,
          months: i3.frontmatter.months,
          phases: i3.frontmatter.phases,
          slug: i3.frontmatter.slug,
          title: i3.frontmatter.title,
          tags: i3.frontmatter.tags,
          img: i3.frontmatter.img
        };
      });
      const url59 = Astro2.request.url;
      const services = await Astro2.glob({ "/public/assets/content/en/services/architecture.md": () => Promise.resolve().then(() => (init_chunk_c6afcfdc(), chunk_c6afcfdc_exports)), "/public/assets/content/en/services/automation.md": () => Promise.resolve().then(() => (init_chunk_c98e4cd0(), chunk_c98e4cd0_exports)), "/public/assets/content/en/services/blockchain.md": () => Promise.resolve().then(() => (init_chunk_ec6459d7(), chunk_ec6459d7_exports)), "/public/assets/content/en/services/strategy.md": () => Promise.resolve().then(() => (init_chunk_d804232d(), chunk_d804232d_exports)), "/public/assets/content/en/services/wallets.md": () => Promise.resolve().then(() => (init_chunk_bf2e9b1c(), chunk_bf2e9b1c_exports)) }, () => "/public/assets/content/en/services/*.md");
      const servicesNames = services.map((i3) => ({
        name: i3.frontmatter.title
      }));
      const STYLES = [];
      for (const STYLE of STYLES)
        $$result.styles.add(STYLE);
      return render2`${renderComponent($$result, "Layout", $$Layout, { "title": "Portfolio", "lang": ELangs.en, "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Container", $$Container, { "class": "astro-SMR3IJSC" }, { "default": () => render2`${renderComponent($$result, "Breadcrums", $$Breadcrums, { "currentPath": "Portfolio", "class": "astro-SMR3IJSC" })}<section class="hero astro-SMR3IJSC">
        ${renderComponent($$result, "MainTitle", $$MainTitle, { "redLine": "Explore", "title": "our Work", "class": "astro-SMR3IJSC" })}
        <p class="hero__desc astro-SMR3IJSC">
          We apply modern technologies to unlock new markets, expand your business opportunities and bring you one step closer to success. We combine developpers with designers,
          translators with copywriters, all subject matter experts in their fields, implementing what works. 
        </p>
    </section>${renderComponent($$result, "Projects", Projects, { "client:load": true, "servicesNames": servicesNames, "projects": projects, "url": url59, "allBtnTitle": "All Projects", "learnMoreText": "More Information", "langHref": ELangs.en, "client:component-hydration": "load", "client:component-path": $$metadata59.getPath(Projects), "client:component-export": $$metadata59.getExport(Projects), "class": "astro-SMR3IJSC" })}` })}` })}

`;
    });
    $$file = "C:/work-projects/pireactor/main-site/src/pages/ua/work.astro";
    $$url = "/ua/work";
    _page36 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      $$metadata: $$metadata59,
      "default": $$Work,
      file: $$file,
      url: $$url
    }, Symbol.toStringTag, { value: "Module" }));
    pageMap = /* @__PURE__ */ new Map([["src/pages/index.astro", _page0], ["src/pages/en/index.astro", _page1], ["src/pages/en/services/[slug].astro", _page2], ["src/pages/en/about.astro", _page3], ["src/pages/en/brief.astro", _page4], ["src/pages/en/work/[slug].astro", _page5], ["src/pages/en/work.astro", _page6], ["src/pages/es/index.astro", _page7], ["src/pages/es/services/[slug].astro", _page8], ["src/pages/es/about.astro", _page9], ["src/pages/es/brief.astro", _page10], ["src/pages/es/work/[slug].astro", _page11], ["src/pages/es/work.astro", _page12], ["src/pages/pl/index.astro", _page13], ["src/pages/pl/services/[slug].astro", _page14], ["src/pages/pl/about.astro", _page15], ["src/pages/pl/brief.astro", _page16], ["src/pages/pl/work/[slug].astro", _page17], ["src/pages/pl/work.astro", _page18], ["src/pages/ru/index.astro", _page19], ["src/pages/ru/services/[slug].astro", _page20], ["src/pages/ru/about.astro", _page21], ["src/pages/ru/brief.astro", _page22], ["src/pages/ru/work/[slug].astro", _page23], ["src/pages/ru/work.astro", _page24], ["src/pages/tr/index.astro", _page25], ["src/pages/tr/services/[slug].astro", _page26], ["src/pages/tr/about.astro", _page27], ["src/pages/tr/brief.astro", _page28], ["src/pages/tr/work/[slug].astro", _page29], ["src/pages/tr/work.astro", _page30], ["src/pages/ua/index.astro", _page31], ["src/pages/ua/services/[slug].astro", _page32], ["src/pages/ua/about.astro", _page33], ["src/pages/ua/brief.astro", _page34], ["src/pages/ua/work/[slug].astro", _page35], ["src/pages/ua/work.astro", _page36]]);
    renderers = [Object.assign({ "name": "@astrojs/solid-js", "clientEntrypoint": "@astrojs/solid-js/client.js", "serverEntrypoint": "@astrojs/solid-js/server.js", "jsxImportSource": "solid-js" }, { ssr: _renderer0 })];
    commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
    Mime$1.prototype.define = function(typeMap, force) {
      for (let type in typeMap) {
        let extensions = typeMap[type].map(function(t3) {
          return t3.toLowerCase();
        });
        type = type.toLowerCase();
        for (let i3 = 0; i3 < extensions.length; i3++) {
          const ext = extensions[i3];
          if (ext[0] === "*") {
            continue;
          }
          if (!force && ext in this._types) {
            throw new Error('Attempt to change mapping for "' + ext + '" extension from "' + this._types[ext] + '" to "' + type + '". Pass `force=true` to allow this, otherwise remove "' + ext + '" from the list of extensions for "' + type + '".');
          }
          this._types[ext] = type;
        }
        if (force || !this._extensions[type]) {
          const ext = extensions[0];
          this._extensions[type] = ext[0] !== "*" ? ext : ext.substr(1);
        }
      }
    };
    Mime$1.prototype.getType = function(path) {
      path = String(path);
      let last = path.replace(/^.*[/\\]/, "").toLowerCase();
      let ext = last.replace(/^.*\./, "").toLowerCase();
      let hasPath = last.length < path.length;
      let hasDot = ext.length < last.length - 1;
      return (hasDot || !hasPath) && this._types[ext] || null;
    };
    Mime$1.prototype.getExtension = function(type) {
      type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
      return type && this._extensions[type.toLowerCase()] || null;
    };
    Mime_1 = Mime$1;
    standard = { "application/andrew-inset": ["ez"], "application/applixware": ["aw"], "application/atom+xml": ["atom"], "application/atomcat+xml": ["atomcat"], "application/atomdeleted+xml": ["atomdeleted"], "application/atomsvc+xml": ["atomsvc"], "application/atsc-dwd+xml": ["dwd"], "application/atsc-held+xml": ["held"], "application/atsc-rsat+xml": ["rsat"], "application/bdoc": ["bdoc"], "application/calendar+xml": ["xcs"], "application/ccxml+xml": ["ccxml"], "application/cdfx+xml": ["cdfx"], "application/cdmi-capability": ["cdmia"], "application/cdmi-container": ["cdmic"], "application/cdmi-domain": ["cdmid"], "application/cdmi-object": ["cdmio"], "application/cdmi-queue": ["cdmiq"], "application/cu-seeme": ["cu"], "application/dash+xml": ["mpd"], "application/davmount+xml": ["davmount"], "application/docbook+xml": ["dbk"], "application/dssc+der": ["dssc"], "application/dssc+xml": ["xdssc"], "application/ecmascript": ["es", "ecma"], "application/emma+xml": ["emma"], "application/emotionml+xml": ["emotionml"], "application/epub+zip": ["epub"], "application/exi": ["exi"], "application/express": ["exp"], "application/fdt+xml": ["fdt"], "application/font-tdpfr": ["pfr"], "application/geo+json": ["geojson"], "application/gml+xml": ["gml"], "application/gpx+xml": ["gpx"], "application/gxf": ["gxf"], "application/gzip": ["gz"], "application/hjson": ["hjson"], "application/hyperstudio": ["stk"], "application/inkml+xml": ["ink", "inkml"], "application/ipfix": ["ipfix"], "application/its+xml": ["its"], "application/java-archive": ["jar", "war", "ear"], "application/java-serialized-object": ["ser"], "application/java-vm": ["class"], "application/javascript": ["js", "mjs"], "application/json": ["json", "map"], "application/json5": ["json5"], "application/jsonml+json": ["jsonml"], "application/ld+json": ["jsonld"], "application/lgr+xml": ["lgr"], "application/lost+xml": ["lostxml"], "application/mac-binhex40": ["hqx"], "application/mac-compactpro": ["cpt"], "application/mads+xml": ["mads"], "application/manifest+json": ["webmanifest"], "application/marc": ["mrc"], "application/marcxml+xml": ["mrcx"], "application/mathematica": ["ma", "nb", "mb"], "application/mathml+xml": ["mathml"], "application/mbox": ["mbox"], "application/mediaservercontrol+xml": ["mscml"], "application/metalink+xml": ["metalink"], "application/metalink4+xml": ["meta4"], "application/mets+xml": ["mets"], "application/mmt-aei+xml": ["maei"], "application/mmt-usd+xml": ["musd"], "application/mods+xml": ["mods"], "application/mp21": ["m21", "mp21"], "application/mp4": ["mp4s", "m4p"], "application/msword": ["doc", "dot"], "application/mxf": ["mxf"], "application/n-quads": ["nq"], "application/n-triples": ["nt"], "application/node": ["cjs"], "application/octet-stream": ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"], "application/oda": ["oda"], "application/oebps-package+xml": ["opf"], "application/ogg": ["ogx"], "application/omdoc+xml": ["omdoc"], "application/onenote": ["onetoc", "onetoc2", "onetmp", "onepkg"], "application/oxps": ["oxps"], "application/p2p-overlay+xml": ["relo"], "application/patch-ops-error+xml": ["xer"], "application/pdf": ["pdf"], "application/pgp-encrypted": ["pgp"], "application/pgp-signature": ["asc", "sig"], "application/pics-rules": ["prf"], "application/pkcs10": ["p10"], "application/pkcs7-mime": ["p7m", "p7c"], "application/pkcs7-signature": ["p7s"], "application/pkcs8": ["p8"], "application/pkix-attr-cert": ["ac"], "application/pkix-cert": ["cer"], "application/pkix-crl": ["crl"], "application/pkix-pkipath": ["pkipath"], "application/pkixcmp": ["pki"], "application/pls+xml": ["pls"], "application/postscript": ["ai", "eps", "ps"], "application/provenance+xml": ["provx"], "application/pskc+xml": ["pskcxml"], "application/raml+yaml": ["raml"], "application/rdf+xml": ["rdf", "owl"], "application/reginfo+xml": ["rif"], "application/relax-ng-compact-syntax": ["rnc"], "application/resource-lists+xml": ["rl"], "application/resource-lists-diff+xml": ["rld"], "application/rls-services+xml": ["rs"], "application/route-apd+xml": ["rapd"], "application/route-s-tsid+xml": ["sls"], "application/route-usd+xml": ["rusd"], "application/rpki-ghostbusters": ["gbr"], "application/rpki-manifest": ["mft"], "application/rpki-roa": ["roa"], "application/rsd+xml": ["rsd"], "application/rss+xml": ["rss"], "application/rtf": ["rtf"], "application/sbml+xml": ["sbml"], "application/scvp-cv-request": ["scq"], "application/scvp-cv-response": ["scs"], "application/scvp-vp-request": ["spq"], "application/scvp-vp-response": ["spp"], "application/sdp": ["sdp"], "application/senml+xml": ["senmlx"], "application/sensml+xml": ["sensmlx"], "application/set-payment-initiation": ["setpay"], "application/set-registration-initiation": ["setreg"], "application/shf+xml": ["shf"], "application/sieve": ["siv", "sieve"], "application/smil+xml": ["smi", "smil"], "application/sparql-query": ["rq"], "application/sparql-results+xml": ["srx"], "application/srgs": ["gram"], "application/srgs+xml": ["grxml"], "application/sru+xml": ["sru"], "application/ssdl+xml": ["ssdl"], "application/ssml+xml": ["ssml"], "application/swid+xml": ["swidtag"], "application/tei+xml": ["tei", "teicorpus"], "application/thraud+xml": ["tfi"], "application/timestamped-data": ["tsd"], "application/toml": ["toml"], "application/trig": ["trig"], "application/ttml+xml": ["ttml"], "application/ubjson": ["ubj"], "application/urc-ressheet+xml": ["rsheet"], "application/urc-targetdesc+xml": ["td"], "application/voicexml+xml": ["vxml"], "application/wasm": ["wasm"], "application/widget": ["wgt"], "application/winhlp": ["hlp"], "application/wsdl+xml": ["wsdl"], "application/wspolicy+xml": ["wspolicy"], "application/xaml+xml": ["xaml"], "application/xcap-att+xml": ["xav"], "application/xcap-caps+xml": ["xca"], "application/xcap-diff+xml": ["xdf"], "application/xcap-el+xml": ["xel"], "application/xcap-ns+xml": ["xns"], "application/xenc+xml": ["xenc"], "application/xhtml+xml": ["xhtml", "xht"], "application/xliff+xml": ["xlf"], "application/xml": ["xml", "xsl", "xsd", "rng"], "application/xml-dtd": ["dtd"], "application/xop+xml": ["xop"], "application/xproc+xml": ["xpl"], "application/xslt+xml": ["*xsl", "xslt"], "application/xspf+xml": ["xspf"], "application/xv+xml": ["mxml", "xhvml", "xvml", "xvm"], "application/yang": ["yang"], "application/yin+xml": ["yin"], "application/zip": ["zip"], "audio/3gpp": ["*3gpp"], "audio/adpcm": ["adp"], "audio/amr": ["amr"], "audio/basic": ["au", "snd"], "audio/midi": ["mid", "midi", "kar", "rmi"], "audio/mobile-xmf": ["mxmf"], "audio/mp3": ["*mp3"], "audio/mp4": ["m4a", "mp4a"], "audio/mpeg": ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"], "audio/ogg": ["oga", "ogg", "spx", "opus"], "audio/s3m": ["s3m"], "audio/silk": ["sil"], "audio/wav": ["wav"], "audio/wave": ["*wav"], "audio/webm": ["weba"], "audio/xm": ["xm"], "font/collection": ["ttc"], "font/otf": ["otf"], "font/ttf": ["ttf"], "font/woff": ["woff"], "font/woff2": ["woff2"], "image/aces": ["exr"], "image/apng": ["apng"], "image/avif": ["avif"], "image/bmp": ["bmp"], "image/cgm": ["cgm"], "image/dicom-rle": ["drle"], "image/emf": ["emf"], "image/fits": ["fits"], "image/g3fax": ["g3"], "image/gif": ["gif"], "image/heic": ["heic"], "image/heic-sequence": ["heics"], "image/heif": ["heif"], "image/heif-sequence": ["heifs"], "image/hej2k": ["hej2"], "image/hsj2": ["hsj2"], "image/ief": ["ief"], "image/jls": ["jls"], "image/jp2": ["jp2", "jpg2"], "image/jpeg": ["jpeg", "jpg", "jpe"], "image/jph": ["jph"], "image/jphc": ["jhc"], "image/jpm": ["jpm"], "image/jpx": ["jpx", "jpf"], "image/jxr": ["jxr"], "image/jxra": ["jxra"], "image/jxrs": ["jxrs"], "image/jxs": ["jxs"], "image/jxsc": ["jxsc"], "image/jxsi": ["jxsi"], "image/jxss": ["jxss"], "image/ktx": ["ktx"], "image/ktx2": ["ktx2"], "image/png": ["png"], "image/sgi": ["sgi"], "image/svg+xml": ["svg", "svgz"], "image/t38": ["t38"], "image/tiff": ["tif", "tiff"], "image/tiff-fx": ["tfx"], "image/webp": ["webp"], "image/wmf": ["wmf"], "message/disposition-notification": ["disposition-notification"], "message/global": ["u8msg"], "message/global-delivery-status": ["u8dsn"], "message/global-disposition-notification": ["u8mdn"], "message/global-headers": ["u8hdr"], "message/rfc822": ["eml", "mime"], "model/3mf": ["3mf"], "model/gltf+json": ["gltf"], "model/gltf-binary": ["glb"], "model/iges": ["igs", "iges"], "model/mesh": ["msh", "mesh", "silo"], "model/mtl": ["mtl"], "model/obj": ["obj"], "model/step+xml": ["stpx"], "model/step+zip": ["stpz"], "model/step-xml+zip": ["stpxz"], "model/stl": ["stl"], "model/vrml": ["wrl", "vrml"], "model/x3d+binary": ["*x3db", "x3dbz"], "model/x3d+fastinfoset": ["x3db"], "model/x3d+vrml": ["*x3dv", "x3dvz"], "model/x3d+xml": ["x3d", "x3dz"], "model/x3d-vrml": ["x3dv"], "text/cache-manifest": ["appcache", "manifest"], "text/calendar": ["ics", "ifb"], "text/coffeescript": ["coffee", "litcoffee"], "text/css": ["css"], "text/csv": ["csv"], "text/html": ["html", "htm", "shtml"], "text/jade": ["jade"], "text/jsx": ["jsx"], "text/less": ["less"], "text/markdown": ["markdown", "md"], "text/mathml": ["mml"], "text/mdx": ["mdx"], "text/n3": ["n3"], "text/plain": ["txt", "text", "conf", "def", "list", "log", "in", "ini"], "text/richtext": ["rtx"], "text/rtf": ["*rtf"], "text/sgml": ["sgml", "sgm"], "text/shex": ["shex"], "text/slim": ["slim", "slm"], "text/spdx": ["spdx"], "text/stylus": ["stylus", "styl"], "text/tab-separated-values": ["tsv"], "text/troff": ["t", "tr", "roff", "man", "me", "ms"], "text/turtle": ["ttl"], "text/uri-list": ["uri", "uris", "urls"], "text/vcard": ["vcard"], "text/vtt": ["vtt"], "text/xml": ["*xml"], "text/yaml": ["yaml", "yml"], "video/3gpp": ["3gp", "3gpp"], "video/3gpp2": ["3g2"], "video/h261": ["h261"], "video/h263": ["h263"], "video/h264": ["h264"], "video/iso.segment": ["m4s"], "video/jpeg": ["jpgv"], "video/jpm": ["*jpm", "jpgm"], "video/mj2": ["mj2", "mjp2"], "video/mp2t": ["ts"], "video/mp4": ["mp4", "mp4v", "mpg4"], "video/mpeg": ["mpeg", "mpg", "mpe", "m1v", "m2v"], "video/ogg": ["ogv"], "video/quicktime": ["qt", "mov"], "video/webm": ["webm"] };
    other = { "application/prs.cww": ["cww"], "application/vnd.1000minds.decision-model+xml": ["1km"], "application/vnd.3gpp.pic-bw-large": ["plb"], "application/vnd.3gpp.pic-bw-small": ["psb"], "application/vnd.3gpp.pic-bw-var": ["pvb"], "application/vnd.3gpp2.tcap": ["tcap"], "application/vnd.3m.post-it-notes": ["pwn"], "application/vnd.accpac.simply.aso": ["aso"], "application/vnd.accpac.simply.imp": ["imp"], "application/vnd.acucobol": ["acu"], "application/vnd.acucorp": ["atc", "acutc"], "application/vnd.adobe.air-application-installer-package+zip": ["air"], "application/vnd.adobe.formscentral.fcdt": ["fcdt"], "application/vnd.adobe.fxp": ["fxp", "fxpl"], "application/vnd.adobe.xdp+xml": ["xdp"], "application/vnd.adobe.xfdf": ["xfdf"], "application/vnd.ahead.space": ["ahead"], "application/vnd.airzip.filesecure.azf": ["azf"], "application/vnd.airzip.filesecure.azs": ["azs"], "application/vnd.amazon.ebook": ["azw"], "application/vnd.americandynamics.acc": ["acc"], "application/vnd.amiga.ami": ["ami"], "application/vnd.android.package-archive": ["apk"], "application/vnd.anser-web-certificate-issue-initiation": ["cii"], "application/vnd.anser-web-funds-transfer-initiation": ["fti"], "application/vnd.antix.game-component": ["atx"], "application/vnd.apple.installer+xml": ["mpkg"], "application/vnd.apple.keynote": ["key"], "application/vnd.apple.mpegurl": ["m3u8"], "application/vnd.apple.numbers": ["numbers"], "application/vnd.apple.pages": ["pages"], "application/vnd.apple.pkpass": ["pkpass"], "application/vnd.aristanetworks.swi": ["swi"], "application/vnd.astraea-software.iota": ["iota"], "application/vnd.audiograph": ["aep"], "application/vnd.balsamiq.bmml+xml": ["bmml"], "application/vnd.blueice.multipass": ["mpm"], "application/vnd.bmi": ["bmi"], "application/vnd.businessobjects": ["rep"], "application/vnd.chemdraw+xml": ["cdxml"], "application/vnd.chipnuts.karaoke-mmd": ["mmd"], "application/vnd.cinderella": ["cdy"], "application/vnd.citationstyles.style+xml": ["csl"], "application/vnd.claymore": ["cla"], "application/vnd.cloanto.rp9": ["rp9"], "application/vnd.clonk.c4group": ["c4g", "c4d", "c4f", "c4p", "c4u"], "application/vnd.cluetrust.cartomobile-config": ["c11amc"], "application/vnd.cluetrust.cartomobile-config-pkg": ["c11amz"], "application/vnd.commonspace": ["csp"], "application/vnd.contact.cmsg": ["cdbcmsg"], "application/vnd.cosmocaller": ["cmc"], "application/vnd.crick.clicker": ["clkx"], "application/vnd.crick.clicker.keyboard": ["clkk"], "application/vnd.crick.clicker.palette": ["clkp"], "application/vnd.crick.clicker.template": ["clkt"], "application/vnd.crick.clicker.wordbank": ["clkw"], "application/vnd.criticaltools.wbs+xml": ["wbs"], "application/vnd.ctc-posml": ["pml"], "application/vnd.cups-ppd": ["ppd"], "application/vnd.curl.car": ["car"], "application/vnd.curl.pcurl": ["pcurl"], "application/vnd.dart": ["dart"], "application/vnd.data-vision.rdz": ["rdz"], "application/vnd.dbf": ["dbf"], "application/vnd.dece.data": ["uvf", "uvvf", "uvd", "uvvd"], "application/vnd.dece.ttml+xml": ["uvt", "uvvt"], "application/vnd.dece.unspecified": ["uvx", "uvvx"], "application/vnd.dece.zip": ["uvz", "uvvz"], "application/vnd.denovo.fcselayout-link": ["fe_launch"], "application/vnd.dna": ["dna"], "application/vnd.dolby.mlp": ["mlp"], "application/vnd.dpgraph": ["dpg"], "application/vnd.dreamfactory": ["dfac"], "application/vnd.ds-keypoint": ["kpxx"], "application/vnd.dvb.ait": ["ait"], "application/vnd.dvb.service": ["svc"], "application/vnd.dynageo": ["geo"], "application/vnd.ecowin.chart": ["mag"], "application/vnd.enliven": ["nml"], "application/vnd.epson.esf": ["esf"], "application/vnd.epson.msf": ["msf"], "application/vnd.epson.quickanime": ["qam"], "application/vnd.epson.salt": ["slt"], "application/vnd.epson.ssf": ["ssf"], "application/vnd.eszigno3+xml": ["es3", "et3"], "application/vnd.ezpix-album": ["ez2"], "application/vnd.ezpix-package": ["ez3"], "application/vnd.fdf": ["fdf"], "application/vnd.fdsn.mseed": ["mseed"], "application/vnd.fdsn.seed": ["seed", "dataless"], "application/vnd.flographit": ["gph"], "application/vnd.fluxtime.clip": ["ftc"], "application/vnd.framemaker": ["fm", "frame", "maker", "book"], "application/vnd.frogans.fnc": ["fnc"], "application/vnd.frogans.ltf": ["ltf"], "application/vnd.fsc.weblaunch": ["fsc"], "application/vnd.fujitsu.oasys": ["oas"], "application/vnd.fujitsu.oasys2": ["oa2"], "application/vnd.fujitsu.oasys3": ["oa3"], "application/vnd.fujitsu.oasysgp": ["fg5"], "application/vnd.fujitsu.oasysprs": ["bh2"], "application/vnd.fujixerox.ddd": ["ddd"], "application/vnd.fujixerox.docuworks": ["xdw"], "application/vnd.fujixerox.docuworks.binder": ["xbd"], "application/vnd.fuzzysheet": ["fzs"], "application/vnd.genomatix.tuxedo": ["txd"], "application/vnd.geogebra.file": ["ggb"], "application/vnd.geogebra.tool": ["ggt"], "application/vnd.geometry-explorer": ["gex", "gre"], "application/vnd.geonext": ["gxt"], "application/vnd.geoplan": ["g2w"], "application/vnd.geospace": ["g3w"], "application/vnd.gmx": ["gmx"], "application/vnd.google-apps.document": ["gdoc"], "application/vnd.google-apps.presentation": ["gslides"], "application/vnd.google-apps.spreadsheet": ["gsheet"], "application/vnd.google-earth.kml+xml": ["kml"], "application/vnd.google-earth.kmz": ["kmz"], "application/vnd.grafeq": ["gqf", "gqs"], "application/vnd.groove-account": ["gac"], "application/vnd.groove-help": ["ghf"], "application/vnd.groove-identity-message": ["gim"], "application/vnd.groove-injector": ["grv"], "application/vnd.groove-tool-message": ["gtm"], "application/vnd.groove-tool-template": ["tpl"], "application/vnd.groove-vcard": ["vcg"], "application/vnd.hal+xml": ["hal"], "application/vnd.handheld-entertainment+xml": ["zmm"], "application/vnd.hbci": ["hbci"], "application/vnd.hhe.lesson-player": ["les"], "application/vnd.hp-hpgl": ["hpgl"], "application/vnd.hp-hpid": ["hpid"], "application/vnd.hp-hps": ["hps"], "application/vnd.hp-jlyt": ["jlt"], "application/vnd.hp-pcl": ["pcl"], "application/vnd.hp-pclxl": ["pclxl"], "application/vnd.hydrostatix.sof-data": ["sfd-hdstx"], "application/vnd.ibm.minipay": ["mpy"], "application/vnd.ibm.modcap": ["afp", "listafp", "list3820"], "application/vnd.ibm.rights-management": ["irm"], "application/vnd.ibm.secure-container": ["sc"], "application/vnd.iccprofile": ["icc", "icm"], "application/vnd.igloader": ["igl"], "application/vnd.immervision-ivp": ["ivp"], "application/vnd.immervision-ivu": ["ivu"], "application/vnd.insors.igm": ["igm"], "application/vnd.intercon.formnet": ["xpw", "xpx"], "application/vnd.intergeo": ["i2g"], "application/vnd.intu.qbo": ["qbo"], "application/vnd.intu.qfx": ["qfx"], "application/vnd.ipunplugged.rcprofile": ["rcprofile"], "application/vnd.irepository.package+xml": ["irp"], "application/vnd.is-xpr": ["xpr"], "application/vnd.isac.fcs": ["fcs"], "application/vnd.jam": ["jam"], "application/vnd.jcp.javame.midlet-rms": ["rms"], "application/vnd.jisp": ["jisp"], "application/vnd.joost.joda-archive": ["joda"], "application/vnd.kahootz": ["ktz", "ktr"], "application/vnd.kde.karbon": ["karbon"], "application/vnd.kde.kchart": ["chrt"], "application/vnd.kde.kformula": ["kfo"], "application/vnd.kde.kivio": ["flw"], "application/vnd.kde.kontour": ["kon"], "application/vnd.kde.kpresenter": ["kpr", "kpt"], "application/vnd.kde.kspread": ["ksp"], "application/vnd.kde.kword": ["kwd", "kwt"], "application/vnd.kenameaapp": ["htke"], "application/vnd.kidspiration": ["kia"], "application/vnd.kinar": ["kne", "knp"], "application/vnd.koan": ["skp", "skd", "skt", "skm"], "application/vnd.kodak-descriptor": ["sse"], "application/vnd.las.las+xml": ["lasxml"], "application/vnd.llamagraphics.life-balance.desktop": ["lbd"], "application/vnd.llamagraphics.life-balance.exchange+xml": ["lbe"], "application/vnd.lotus-1-2-3": ["123"], "application/vnd.lotus-approach": ["apr"], "application/vnd.lotus-freelance": ["pre"], "application/vnd.lotus-notes": ["nsf"], "application/vnd.lotus-organizer": ["org"], "application/vnd.lotus-screencam": ["scm"], "application/vnd.lotus-wordpro": ["lwp"], "application/vnd.macports.portpkg": ["portpkg"], "application/vnd.mapbox-vector-tile": ["mvt"], "application/vnd.mcd": ["mcd"], "application/vnd.medcalcdata": ["mc1"], "application/vnd.mediastation.cdkey": ["cdkey"], "application/vnd.mfer": ["mwf"], "application/vnd.mfmp": ["mfm"], "application/vnd.micrografx.flo": ["flo"], "application/vnd.micrografx.igx": ["igx"], "application/vnd.mif": ["mif"], "application/vnd.mobius.daf": ["daf"], "application/vnd.mobius.dis": ["dis"], "application/vnd.mobius.mbk": ["mbk"], "application/vnd.mobius.mqy": ["mqy"], "application/vnd.mobius.msl": ["msl"], "application/vnd.mobius.plc": ["plc"], "application/vnd.mobius.txf": ["txf"], "application/vnd.mophun.application": ["mpn"], "application/vnd.mophun.certificate": ["mpc"], "application/vnd.mozilla.xul+xml": ["xul"], "application/vnd.ms-artgalry": ["cil"], "application/vnd.ms-cab-compressed": ["cab"], "application/vnd.ms-excel": ["xls", "xlm", "xla", "xlc", "xlt", "xlw"], "application/vnd.ms-excel.addin.macroenabled.12": ["xlam"], "application/vnd.ms-excel.sheet.binary.macroenabled.12": ["xlsb"], "application/vnd.ms-excel.sheet.macroenabled.12": ["xlsm"], "application/vnd.ms-excel.template.macroenabled.12": ["xltm"], "application/vnd.ms-fontobject": ["eot"], "application/vnd.ms-htmlhelp": ["chm"], "application/vnd.ms-ims": ["ims"], "application/vnd.ms-lrm": ["lrm"], "application/vnd.ms-officetheme": ["thmx"], "application/vnd.ms-outlook": ["msg"], "application/vnd.ms-pki.seccat": ["cat"], "application/vnd.ms-pki.stl": ["*stl"], "application/vnd.ms-powerpoint": ["ppt", "pps", "pot"], "application/vnd.ms-powerpoint.addin.macroenabled.12": ["ppam"], "application/vnd.ms-powerpoint.presentation.macroenabled.12": ["pptm"], "application/vnd.ms-powerpoint.slide.macroenabled.12": ["sldm"], "application/vnd.ms-powerpoint.slideshow.macroenabled.12": ["ppsm"], "application/vnd.ms-powerpoint.template.macroenabled.12": ["potm"], "application/vnd.ms-project": ["mpp", "mpt"], "application/vnd.ms-word.document.macroenabled.12": ["docm"], "application/vnd.ms-word.template.macroenabled.12": ["dotm"], "application/vnd.ms-works": ["wps", "wks", "wcm", "wdb"], "application/vnd.ms-wpl": ["wpl"], "application/vnd.ms-xpsdocument": ["xps"], "application/vnd.mseq": ["mseq"], "application/vnd.musician": ["mus"], "application/vnd.muvee.style": ["msty"], "application/vnd.mynfc": ["taglet"], "application/vnd.neurolanguage.nlu": ["nlu"], "application/vnd.nitf": ["ntf", "nitf"], "application/vnd.noblenet-directory": ["nnd"], "application/vnd.noblenet-sealer": ["nns"], "application/vnd.noblenet-web": ["nnw"], "application/vnd.nokia.n-gage.ac+xml": ["*ac"], "application/vnd.nokia.n-gage.data": ["ngdat"], "application/vnd.nokia.n-gage.symbian.install": ["n-gage"], "application/vnd.nokia.radio-preset": ["rpst"], "application/vnd.nokia.radio-presets": ["rpss"], "application/vnd.novadigm.edm": ["edm"], "application/vnd.novadigm.edx": ["edx"], "application/vnd.novadigm.ext": ["ext"], "application/vnd.oasis.opendocument.chart": ["odc"], "application/vnd.oasis.opendocument.chart-template": ["otc"], "application/vnd.oasis.opendocument.database": ["odb"], "application/vnd.oasis.opendocument.formula": ["odf"], "application/vnd.oasis.opendocument.formula-template": ["odft"], "application/vnd.oasis.opendocument.graphics": ["odg"], "application/vnd.oasis.opendocument.graphics-template": ["otg"], "application/vnd.oasis.opendocument.image": ["odi"], "application/vnd.oasis.opendocument.image-template": ["oti"], "application/vnd.oasis.opendocument.presentation": ["odp"], "application/vnd.oasis.opendocument.presentation-template": ["otp"], "application/vnd.oasis.opendocument.spreadsheet": ["ods"], "application/vnd.oasis.opendocument.spreadsheet-template": ["ots"], "application/vnd.oasis.opendocument.text": ["odt"], "application/vnd.oasis.opendocument.text-master": ["odm"], "application/vnd.oasis.opendocument.text-template": ["ott"], "application/vnd.oasis.opendocument.text-web": ["oth"], "application/vnd.olpc-sugar": ["xo"], "application/vnd.oma.dd2+xml": ["dd2"], "application/vnd.openblox.game+xml": ["obgx"], "application/vnd.openofficeorg.extension": ["oxt"], "application/vnd.openstreetmap.data+xml": ["osm"], "application/vnd.openxmlformats-officedocument.presentationml.presentation": ["pptx"], "application/vnd.openxmlformats-officedocument.presentationml.slide": ["sldx"], "application/vnd.openxmlformats-officedocument.presentationml.slideshow": ["ppsx"], "application/vnd.openxmlformats-officedocument.presentationml.template": ["potx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": ["xlsx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.template": ["xltx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.document": ["docx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.template": ["dotx"], "application/vnd.osgeo.mapguide.package": ["mgp"], "application/vnd.osgi.dp": ["dp"], "application/vnd.osgi.subsystem": ["esa"], "application/vnd.palm": ["pdb", "pqa", "oprc"], "application/vnd.pawaafile": ["paw"], "application/vnd.pg.format": ["str"], "application/vnd.pg.osasli": ["ei6"], "application/vnd.picsel": ["efif"], "application/vnd.pmi.widget": ["wg"], "application/vnd.pocketlearn": ["plf"], "application/vnd.powerbuilder6": ["pbd"], "application/vnd.previewsystems.box": ["box"], "application/vnd.proteus.magazine": ["mgz"], "application/vnd.publishare-delta-tree": ["qps"], "application/vnd.pvi.ptid1": ["ptid"], "application/vnd.quark.quarkxpress": ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"], "application/vnd.rar": ["rar"], "application/vnd.realvnc.bed": ["bed"], "application/vnd.recordare.musicxml": ["mxl"], "application/vnd.recordare.musicxml+xml": ["musicxml"], "application/vnd.rig.cryptonote": ["cryptonote"], "application/vnd.rim.cod": ["cod"], "application/vnd.rn-realmedia": ["rm"], "application/vnd.rn-realmedia-vbr": ["rmvb"], "application/vnd.route66.link66+xml": ["link66"], "application/vnd.sailingtracker.track": ["st"], "application/vnd.seemail": ["see"], "application/vnd.sema": ["sema"], "application/vnd.semd": ["semd"], "application/vnd.semf": ["semf"], "application/vnd.shana.informed.formdata": ["ifm"], "application/vnd.shana.informed.formtemplate": ["itp"], "application/vnd.shana.informed.interchange": ["iif"], "application/vnd.shana.informed.package": ["ipk"], "application/vnd.simtech-mindmapper": ["twd", "twds"], "application/vnd.smaf": ["mmf"], "application/vnd.smart.teacher": ["teacher"], "application/vnd.software602.filler.form+xml": ["fo"], "application/vnd.solent.sdkm+xml": ["sdkm", "sdkd"], "application/vnd.spotfire.dxp": ["dxp"], "application/vnd.spotfire.sfs": ["sfs"], "application/vnd.stardivision.calc": ["sdc"], "application/vnd.stardivision.draw": ["sda"], "application/vnd.stardivision.impress": ["sdd"], "application/vnd.stardivision.math": ["smf"], "application/vnd.stardivision.writer": ["sdw", "vor"], "application/vnd.stardivision.writer-global": ["sgl"], "application/vnd.stepmania.package": ["smzip"], "application/vnd.stepmania.stepchart": ["sm"], "application/vnd.sun.wadl+xml": ["wadl"], "application/vnd.sun.xml.calc": ["sxc"], "application/vnd.sun.xml.calc.template": ["stc"], "application/vnd.sun.xml.draw": ["sxd"], "application/vnd.sun.xml.draw.template": ["std"], "application/vnd.sun.xml.impress": ["sxi"], "application/vnd.sun.xml.impress.template": ["sti"], "application/vnd.sun.xml.math": ["sxm"], "application/vnd.sun.xml.writer": ["sxw"], "application/vnd.sun.xml.writer.global": ["sxg"], "application/vnd.sun.xml.writer.template": ["stw"], "application/vnd.sus-calendar": ["sus", "susp"], "application/vnd.svd": ["svd"], "application/vnd.symbian.install": ["sis", "sisx"], "application/vnd.syncml+xml": ["xsm"], "application/vnd.syncml.dm+wbxml": ["bdm"], "application/vnd.syncml.dm+xml": ["xdm"], "application/vnd.syncml.dmddf+xml": ["ddf"], "application/vnd.tao.intent-module-archive": ["tao"], "application/vnd.tcpdump.pcap": ["pcap", "cap", "dmp"], "application/vnd.tmobile-livetv": ["tmo"], "application/vnd.trid.tpt": ["tpt"], "application/vnd.triscape.mxs": ["mxs"], "application/vnd.trueapp": ["tra"], "application/vnd.ufdl": ["ufd", "ufdl"], "application/vnd.uiq.theme": ["utz"], "application/vnd.umajin": ["umj"], "application/vnd.unity": ["unityweb"], "application/vnd.uoml+xml": ["uoml"], "application/vnd.vcx": ["vcx"], "application/vnd.visio": ["vsd", "vst", "vss", "vsw"], "application/vnd.visionary": ["vis"], "application/vnd.vsf": ["vsf"], "application/vnd.wap.wbxml": ["wbxml"], "application/vnd.wap.wmlc": ["wmlc"], "application/vnd.wap.wmlscriptc": ["wmlsc"], "application/vnd.webturbo": ["wtb"], "application/vnd.wolfram.player": ["nbp"], "application/vnd.wordperfect": ["wpd"], "application/vnd.wqd": ["wqd"], "application/vnd.wt.stf": ["stf"], "application/vnd.xara": ["xar"], "application/vnd.xfdl": ["xfdl"], "application/vnd.yamaha.hv-dic": ["hvd"], "application/vnd.yamaha.hv-script": ["hvs"], "application/vnd.yamaha.hv-voice": ["hvp"], "application/vnd.yamaha.openscoreformat": ["osf"], "application/vnd.yamaha.openscoreformat.osfpvg+xml": ["osfpvg"], "application/vnd.yamaha.smaf-audio": ["saf"], "application/vnd.yamaha.smaf-phrase": ["spf"], "application/vnd.yellowriver-custom-menu": ["cmp"], "application/vnd.zul": ["zir", "zirz"], "application/vnd.zzazz.deck+xml": ["zaz"], "application/x-7z-compressed": ["7z"], "application/x-abiword": ["abw"], "application/x-ace-compressed": ["ace"], "application/x-apple-diskimage": ["*dmg"], "application/x-arj": ["arj"], "application/x-authorware-bin": ["aab", "x32", "u32", "vox"], "application/x-authorware-map": ["aam"], "application/x-authorware-seg": ["aas"], "application/x-bcpio": ["bcpio"], "application/x-bdoc": ["*bdoc"], "application/x-bittorrent": ["torrent"], "application/x-blorb": ["blb", "blorb"], "application/x-bzip": ["bz"], "application/x-bzip2": ["bz2", "boz"], "application/x-cbr": ["cbr", "cba", "cbt", "cbz", "cb7"], "application/x-cdlink": ["vcd"], "application/x-cfs-compressed": ["cfs"], "application/x-chat": ["chat"], "application/x-chess-pgn": ["pgn"], "application/x-chrome-extension": ["crx"], "application/x-cocoa": ["cco"], "application/x-conference": ["nsc"], "application/x-cpio": ["cpio"], "application/x-csh": ["csh"], "application/x-debian-package": ["*deb", "udeb"], "application/x-dgc-compressed": ["dgc"], "application/x-director": ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"], "application/x-doom": ["wad"], "application/x-dtbncx+xml": ["ncx"], "application/x-dtbook+xml": ["dtb"], "application/x-dtbresource+xml": ["res"], "application/x-dvi": ["dvi"], "application/x-envoy": ["evy"], "application/x-eva": ["eva"], "application/x-font-bdf": ["bdf"], "application/x-font-ghostscript": ["gsf"], "application/x-font-linux-psf": ["psf"], "application/x-font-pcf": ["pcf"], "application/x-font-snf": ["snf"], "application/x-font-type1": ["pfa", "pfb", "pfm", "afm"], "application/x-freearc": ["arc"], "application/x-futuresplash": ["spl"], "application/x-gca-compressed": ["gca"], "application/x-glulx": ["ulx"], "application/x-gnumeric": ["gnumeric"], "application/x-gramps-xml": ["gramps"], "application/x-gtar": ["gtar"], "application/x-hdf": ["hdf"], "application/x-httpd-php": ["php"], "application/x-install-instructions": ["install"], "application/x-iso9660-image": ["*iso"], "application/x-iwork-keynote-sffkey": ["*key"], "application/x-iwork-numbers-sffnumbers": ["*numbers"], "application/x-iwork-pages-sffpages": ["*pages"], "application/x-java-archive-diff": ["jardiff"], "application/x-java-jnlp-file": ["jnlp"], "application/x-keepass2": ["kdbx"], "application/x-latex": ["latex"], "application/x-lua-bytecode": ["luac"], "application/x-lzh-compressed": ["lzh", "lha"], "application/x-makeself": ["run"], "application/x-mie": ["mie"], "application/x-mobipocket-ebook": ["prc", "mobi"], "application/x-ms-application": ["application"], "application/x-ms-shortcut": ["lnk"], "application/x-ms-wmd": ["wmd"], "application/x-ms-wmz": ["wmz"], "application/x-ms-xbap": ["xbap"], "application/x-msaccess": ["mdb"], "application/x-msbinder": ["obd"], "application/x-mscardfile": ["crd"], "application/x-msclip": ["clp"], "application/x-msdos-program": ["*exe"], "application/x-msdownload": ["*exe", "*dll", "com", "bat", "*msi"], "application/x-msmediaview": ["mvb", "m13", "m14"], "application/x-msmetafile": ["*wmf", "*wmz", "*emf", "emz"], "application/x-msmoney": ["mny"], "application/x-mspublisher": ["pub"], "application/x-msschedule": ["scd"], "application/x-msterminal": ["trm"], "application/x-mswrite": ["wri"], "application/x-netcdf": ["nc", "cdf"], "application/x-ns-proxy-autoconfig": ["pac"], "application/x-nzb": ["nzb"], "application/x-perl": ["pl", "pm"], "application/x-pilot": ["*prc", "*pdb"], "application/x-pkcs12": ["p12", "pfx"], "application/x-pkcs7-certificates": ["p7b", "spc"], "application/x-pkcs7-certreqresp": ["p7r"], "application/x-rar-compressed": ["*rar"], "application/x-redhat-package-manager": ["rpm"], "application/x-research-info-systems": ["ris"], "application/x-sea": ["sea"], "application/x-sh": ["sh"], "application/x-shar": ["shar"], "application/x-shockwave-flash": ["swf"], "application/x-silverlight-app": ["xap"], "application/x-sql": ["sql"], "application/x-stuffit": ["sit"], "application/x-stuffitx": ["sitx"], "application/x-subrip": ["srt"], "application/x-sv4cpio": ["sv4cpio"], "application/x-sv4crc": ["sv4crc"], "application/x-t3vm-image": ["t3"], "application/x-tads": ["gam"], "application/x-tar": ["tar"], "application/x-tcl": ["tcl", "tk"], "application/x-tex": ["tex"], "application/x-tex-tfm": ["tfm"], "application/x-texinfo": ["texinfo", "texi"], "application/x-tgif": ["*obj"], "application/x-ustar": ["ustar"], "application/x-virtualbox-hdd": ["hdd"], "application/x-virtualbox-ova": ["ova"], "application/x-virtualbox-ovf": ["ovf"], "application/x-virtualbox-vbox": ["vbox"], "application/x-virtualbox-vbox-extpack": ["vbox-extpack"], "application/x-virtualbox-vdi": ["vdi"], "application/x-virtualbox-vhd": ["vhd"], "application/x-virtualbox-vmdk": ["vmdk"], "application/x-wais-source": ["src"], "application/x-web-app-manifest+json": ["webapp"], "application/x-x509-ca-cert": ["der", "crt", "pem"], "application/x-xfig": ["fig"], "application/x-xliff+xml": ["*xlf"], "application/x-xpinstall": ["xpi"], "application/x-xz": ["xz"], "application/x-zmachine": ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"], "audio/vnd.dece.audio": ["uva", "uvva"], "audio/vnd.digital-winds": ["eol"], "audio/vnd.dra": ["dra"], "audio/vnd.dts": ["dts"], "audio/vnd.dts.hd": ["dtshd"], "audio/vnd.lucent.voice": ["lvp"], "audio/vnd.ms-playready.media.pya": ["pya"], "audio/vnd.nuera.ecelp4800": ["ecelp4800"], "audio/vnd.nuera.ecelp7470": ["ecelp7470"], "audio/vnd.nuera.ecelp9600": ["ecelp9600"], "audio/vnd.rip": ["rip"], "audio/x-aac": ["aac"], "audio/x-aiff": ["aif", "aiff", "aifc"], "audio/x-caf": ["caf"], "audio/x-flac": ["flac"], "audio/x-m4a": ["*m4a"], "audio/x-matroska": ["mka"], "audio/x-mpegurl": ["m3u"], "audio/x-ms-wax": ["wax"], "audio/x-ms-wma": ["wma"], "audio/x-pn-realaudio": ["ram", "ra"], "audio/x-pn-realaudio-plugin": ["rmp"], "audio/x-realaudio": ["*ra"], "audio/x-wav": ["*wav"], "chemical/x-cdx": ["cdx"], "chemical/x-cif": ["cif"], "chemical/x-cmdf": ["cmdf"], "chemical/x-cml": ["cml"], "chemical/x-csml": ["csml"], "chemical/x-xyz": ["xyz"], "image/prs.btif": ["btif"], "image/prs.pti": ["pti"], "image/vnd.adobe.photoshop": ["psd"], "image/vnd.airzip.accelerator.azv": ["azv"], "image/vnd.dece.graphic": ["uvi", "uvvi", "uvg", "uvvg"], "image/vnd.djvu": ["djvu", "djv"], "image/vnd.dvb.subtitle": ["*sub"], "image/vnd.dwg": ["dwg"], "image/vnd.dxf": ["dxf"], "image/vnd.fastbidsheet": ["fbs"], "image/vnd.fpx": ["fpx"], "image/vnd.fst": ["fst"], "image/vnd.fujixerox.edmics-mmr": ["mmr"], "image/vnd.fujixerox.edmics-rlc": ["rlc"], "image/vnd.microsoft.icon": ["ico"], "image/vnd.ms-dds": ["dds"], "image/vnd.ms-modi": ["mdi"], "image/vnd.ms-photo": ["wdp"], "image/vnd.net-fpx": ["npx"], "image/vnd.pco.b16": ["b16"], "image/vnd.tencent.tap": ["tap"], "image/vnd.valve.source.texture": ["vtf"], "image/vnd.wap.wbmp": ["wbmp"], "image/vnd.xiff": ["xif"], "image/vnd.zbrush.pcx": ["pcx"], "image/x-3ds": ["3ds"], "image/x-cmu-raster": ["ras"], "image/x-cmx": ["cmx"], "image/x-freehand": ["fh", "fhc", "fh4", "fh5", "fh7"], "image/x-icon": ["*ico"], "image/x-jng": ["jng"], "image/x-mrsid-image": ["sid"], "image/x-ms-bmp": ["*bmp"], "image/x-pcx": ["*pcx"], "image/x-pict": ["pic", "pct"], "image/x-portable-anymap": ["pnm"], "image/x-portable-bitmap": ["pbm"], "image/x-portable-graymap": ["pgm"], "image/x-portable-pixmap": ["ppm"], "image/x-rgb": ["rgb"], "image/x-tga": ["tga"], "image/x-xbitmap": ["xbm"], "image/x-xpixmap": ["xpm"], "image/x-xwindowdump": ["xwd"], "message/vnd.wfa.wsc": ["wsc"], "model/vnd.collada+xml": ["dae"], "model/vnd.dwf": ["dwf"], "model/vnd.gdl": ["gdl"], "model/vnd.gtw": ["gtw"], "model/vnd.mts": ["mts"], "model/vnd.opengex": ["ogex"], "model/vnd.parasolid.transmit.binary": ["x_b"], "model/vnd.parasolid.transmit.text": ["x_t"], "model/vnd.sap.vds": ["vds"], "model/vnd.usdz+zip": ["usdz"], "model/vnd.valve.source.compiled-map": ["bsp"], "model/vnd.vtu": ["vtu"], "text/prs.lines.tag": ["dsc"], "text/vnd.curl": ["curl"], "text/vnd.curl.dcurl": ["dcurl"], "text/vnd.curl.mcurl": ["mcurl"], "text/vnd.curl.scurl": ["scurl"], "text/vnd.dvb.subtitle": ["sub"], "text/vnd.fly": ["fly"], "text/vnd.fmi.flexstor": ["flx"], "text/vnd.graphviz": ["gv"], "text/vnd.in3d.3dml": ["3dml"], "text/vnd.in3d.spot": ["spot"], "text/vnd.sun.j2me.app-descriptor": ["jad"], "text/vnd.wap.wml": ["wml"], "text/vnd.wap.wmlscript": ["wmls"], "text/x-asm": ["s", "asm"], "text/x-c": ["c", "cc", "cxx", "cpp", "h", "hh", "dic"], "text/x-component": ["htc"], "text/x-fortran": ["f", "for", "f77", "f90"], "text/x-handlebars-template": ["hbs"], "text/x-java-source": ["java"], "text/x-lua": ["lua"], "text/x-markdown": ["mkd"], "text/x-nfo": ["nfo"], "text/x-opml": ["opml"], "text/x-org": ["*org"], "text/x-pascal": ["p", "pas"], "text/x-processing": ["pde"], "text/x-sass": ["sass"], "text/x-scss": ["scss"], "text/x-setext": ["etx"], "text/x-sfv": ["sfv"], "text/x-suse-ymp": ["ymp"], "text/x-uuencode": ["uu"], "text/x-vcalendar": ["vcs"], "text/x-vcard": ["vcf"], "video/vnd.dece.hd": ["uvh", "uvvh"], "video/vnd.dece.mobile": ["uvm", "uvvm"], "video/vnd.dece.pd": ["uvp", "uvvp"], "video/vnd.dece.sd": ["uvs", "uvvs"], "video/vnd.dece.video": ["uvv", "uvvv"], "video/vnd.dvb.file": ["dvb"], "video/vnd.fvt": ["fvt"], "video/vnd.mpegurl": ["mxu", "m4u"], "video/vnd.ms-playready.media.pyv": ["pyv"], "video/vnd.uvvu.mp4": ["uvu", "uvvu"], "video/vnd.vivo": ["viv"], "video/x-f4v": ["f4v"], "video/x-fli": ["fli"], "video/x-flv": ["flv"], "video/x-m4v": ["m4v"], "video/x-matroska": ["mkv", "mk3d", "mks"], "video/x-mng": ["mng"], "video/x-ms-asf": ["asf", "asx"], "video/x-ms-vob": ["vob"], "video/x-ms-wm": ["wm"], "video/x-ms-wmv": ["wmv"], "video/x-ms-wmx": ["wmx"], "video/x-ms-wvx": ["wvx"], "video/x-msvideo": ["avi"], "video/x-sgi-movie": ["movie"], "video/x-smv": ["smv"], "x-conference/x-cooltalk": ["ice"] };
    Mime = Mime_1;
    new Mime(standard, other);
    if (typeof process !== "undefined") {
      process.env;
      process.stdout && process.stdout.isTTY;
    }
    eastasianwidth = { exports: {} };
    (function(module2) {
      var eaw = {};
      {
        module2.exports = eaw;
      }
      eaw.eastAsianWidth = function(character) {
        var x3 = character.charCodeAt(0);
        var y2 = character.length == 2 ? character.charCodeAt(1) : 0;
        var codePoint = x3;
        if (55296 <= x3 && x3 <= 56319 && (56320 <= y2 && y2 <= 57343)) {
          x3 &= 1023;
          y2 &= 1023;
          codePoint = x3 << 10 | y2;
          codePoint += 65536;
        }
        if (codePoint == 12288 || 65281 <= codePoint && codePoint <= 65376 || 65504 <= codePoint && codePoint <= 65510) {
          return "F";
        }
        if (codePoint == 8361 || 65377 <= codePoint && codePoint <= 65470 || 65474 <= codePoint && codePoint <= 65479 || 65482 <= codePoint && codePoint <= 65487 || 65490 <= codePoint && codePoint <= 65495 || 65498 <= codePoint && codePoint <= 65500 || 65512 <= codePoint && codePoint <= 65518) {
          return "H";
        }
        if (4352 <= codePoint && codePoint <= 4447 || 4515 <= codePoint && codePoint <= 4519 || 4602 <= codePoint && codePoint <= 4607 || 9001 <= codePoint && codePoint <= 9002 || 11904 <= codePoint && codePoint <= 11929 || 11931 <= codePoint && codePoint <= 12019 || 12032 <= codePoint && codePoint <= 12245 || 12272 <= codePoint && codePoint <= 12283 || 12289 <= codePoint && codePoint <= 12350 || 12353 <= codePoint && codePoint <= 12438 || 12441 <= codePoint && codePoint <= 12543 || 12549 <= codePoint && codePoint <= 12589 || 12593 <= codePoint && codePoint <= 12686 || 12688 <= codePoint && codePoint <= 12730 || 12736 <= codePoint && codePoint <= 12771 || 12784 <= codePoint && codePoint <= 12830 || 12832 <= codePoint && codePoint <= 12871 || 12880 <= codePoint && codePoint <= 13054 || 13056 <= codePoint && codePoint <= 19903 || 19968 <= codePoint && codePoint <= 42124 || 42128 <= codePoint && codePoint <= 42182 || 43360 <= codePoint && codePoint <= 43388 || 44032 <= codePoint && codePoint <= 55203 || 55216 <= codePoint && codePoint <= 55238 || 55243 <= codePoint && codePoint <= 55291 || 63744 <= codePoint && codePoint <= 64255 || 65040 <= codePoint && codePoint <= 65049 || 65072 <= codePoint && codePoint <= 65106 || 65108 <= codePoint && codePoint <= 65126 || 65128 <= codePoint && codePoint <= 65131 || 110592 <= codePoint && codePoint <= 110593 || 127488 <= codePoint && codePoint <= 127490 || 127504 <= codePoint && codePoint <= 127546 || 127552 <= codePoint && codePoint <= 127560 || 127568 <= codePoint && codePoint <= 127569 || 131072 <= codePoint && codePoint <= 194367 || 177984 <= codePoint && codePoint <= 196605 || 196608 <= codePoint && codePoint <= 262141) {
          return "W";
        }
        if (32 <= codePoint && codePoint <= 126 || 162 <= codePoint && codePoint <= 163 || 165 <= codePoint && codePoint <= 166 || codePoint == 172 || codePoint == 175 || 10214 <= codePoint && codePoint <= 10221 || 10629 <= codePoint && codePoint <= 10630) {
          return "Na";
        }
        if (codePoint == 161 || codePoint == 164 || 167 <= codePoint && codePoint <= 168 || codePoint == 170 || 173 <= codePoint && codePoint <= 174 || 176 <= codePoint && codePoint <= 180 || 182 <= codePoint && codePoint <= 186 || 188 <= codePoint && codePoint <= 191 || codePoint == 198 || codePoint == 208 || 215 <= codePoint && codePoint <= 216 || 222 <= codePoint && codePoint <= 225 || codePoint == 230 || 232 <= codePoint && codePoint <= 234 || 236 <= codePoint && codePoint <= 237 || codePoint == 240 || 242 <= codePoint && codePoint <= 243 || 247 <= codePoint && codePoint <= 250 || codePoint == 252 || codePoint == 254 || codePoint == 257 || codePoint == 273 || codePoint == 275 || codePoint == 283 || 294 <= codePoint && codePoint <= 295 || codePoint == 299 || 305 <= codePoint && codePoint <= 307 || codePoint == 312 || 319 <= codePoint && codePoint <= 322 || codePoint == 324 || 328 <= codePoint && codePoint <= 331 || codePoint == 333 || 338 <= codePoint && codePoint <= 339 || 358 <= codePoint && codePoint <= 359 || codePoint == 363 || codePoint == 462 || codePoint == 464 || codePoint == 466 || codePoint == 468 || codePoint == 470 || codePoint == 472 || codePoint == 474 || codePoint == 476 || codePoint == 593 || codePoint == 609 || codePoint == 708 || codePoint == 711 || 713 <= codePoint && codePoint <= 715 || codePoint == 717 || codePoint == 720 || 728 <= codePoint && codePoint <= 731 || codePoint == 733 || codePoint == 735 || 768 <= codePoint && codePoint <= 879 || 913 <= codePoint && codePoint <= 929 || 931 <= codePoint && codePoint <= 937 || 945 <= codePoint && codePoint <= 961 || 963 <= codePoint && codePoint <= 969 || codePoint == 1025 || 1040 <= codePoint && codePoint <= 1103 || codePoint == 1105 || codePoint == 8208 || 8211 <= codePoint && codePoint <= 8214 || 8216 <= codePoint && codePoint <= 8217 || 8220 <= codePoint && codePoint <= 8221 || 8224 <= codePoint && codePoint <= 8226 || 8228 <= codePoint && codePoint <= 8231 || codePoint == 8240 || 8242 <= codePoint && codePoint <= 8243 || codePoint == 8245 || codePoint == 8251 || codePoint == 8254 || codePoint == 8308 || codePoint == 8319 || 8321 <= codePoint && codePoint <= 8324 || codePoint == 8364 || codePoint == 8451 || codePoint == 8453 || codePoint == 8457 || codePoint == 8467 || codePoint == 8470 || 8481 <= codePoint && codePoint <= 8482 || codePoint == 8486 || codePoint == 8491 || 8531 <= codePoint && codePoint <= 8532 || 8539 <= codePoint && codePoint <= 8542 || 8544 <= codePoint && codePoint <= 8555 || 8560 <= codePoint && codePoint <= 8569 || codePoint == 8585 || 8592 <= codePoint && codePoint <= 8601 || 8632 <= codePoint && codePoint <= 8633 || codePoint == 8658 || codePoint == 8660 || codePoint == 8679 || codePoint == 8704 || 8706 <= codePoint && codePoint <= 8707 || 8711 <= codePoint && codePoint <= 8712 || codePoint == 8715 || codePoint == 8719 || codePoint == 8721 || codePoint == 8725 || codePoint == 8730 || 8733 <= codePoint && codePoint <= 8736 || codePoint == 8739 || codePoint == 8741 || 8743 <= codePoint && codePoint <= 8748 || codePoint == 8750 || 8756 <= codePoint && codePoint <= 8759 || 8764 <= codePoint && codePoint <= 8765 || codePoint == 8776 || codePoint == 8780 || codePoint == 8786 || 8800 <= codePoint && codePoint <= 8801 || 8804 <= codePoint && codePoint <= 8807 || 8810 <= codePoint && codePoint <= 8811 || 8814 <= codePoint && codePoint <= 8815 || 8834 <= codePoint && codePoint <= 8835 || 8838 <= codePoint && codePoint <= 8839 || codePoint == 8853 || codePoint == 8857 || codePoint == 8869 || codePoint == 8895 || codePoint == 8978 || 9312 <= codePoint && codePoint <= 9449 || 9451 <= codePoint && codePoint <= 9547 || 9552 <= codePoint && codePoint <= 9587 || 9600 <= codePoint && codePoint <= 9615 || 9618 <= codePoint && codePoint <= 9621 || 9632 <= codePoint && codePoint <= 9633 || 9635 <= codePoint && codePoint <= 9641 || 9650 <= codePoint && codePoint <= 9651 || 9654 <= codePoint && codePoint <= 9655 || 9660 <= codePoint && codePoint <= 9661 || 9664 <= codePoint && codePoint <= 9665 || 9670 <= codePoint && codePoint <= 9672 || codePoint == 9675 || 9678 <= codePoint && codePoint <= 9681 || 9698 <= codePoint && codePoint <= 9701 || codePoint == 9711 || 9733 <= codePoint && codePoint <= 9734 || codePoint == 9737 || 9742 <= codePoint && codePoint <= 9743 || 9748 <= codePoint && codePoint <= 9749 || codePoint == 9756 || codePoint == 9758 || codePoint == 9792 || codePoint == 9794 || 9824 <= codePoint && codePoint <= 9825 || 9827 <= codePoint && codePoint <= 9829 || 9831 <= codePoint && codePoint <= 9834 || 9836 <= codePoint && codePoint <= 9837 || codePoint == 9839 || 9886 <= codePoint && codePoint <= 9887 || 9918 <= codePoint && codePoint <= 9919 || 9924 <= codePoint && codePoint <= 9933 || 9935 <= codePoint && codePoint <= 9953 || codePoint == 9955 || 9960 <= codePoint && codePoint <= 9983 || codePoint == 10045 || codePoint == 10071 || 10102 <= codePoint && codePoint <= 10111 || 11093 <= codePoint && codePoint <= 11097 || 12872 <= codePoint && codePoint <= 12879 || 57344 <= codePoint && codePoint <= 63743 || 65024 <= codePoint && codePoint <= 65039 || codePoint == 65533 || 127232 <= codePoint && codePoint <= 127242 || 127248 <= codePoint && codePoint <= 127277 || 127280 <= codePoint && codePoint <= 127337 || 127344 <= codePoint && codePoint <= 127386 || 917760 <= codePoint && codePoint <= 917999 || 983040 <= codePoint && codePoint <= 1048573 || 1048576 <= codePoint && codePoint <= 1114109) {
          return "A";
        }
        return "N";
      };
      eaw.characterLength = function(character) {
        var code2 = this.eastAsianWidth(character);
        if (code2 == "F" || code2 == "W" || code2 == "A") {
          return 2;
        } else {
          return 1;
        }
      };
      function stringToArray(string3) {
        return string3.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]|[^\uD800-\uDFFF]/g) || [];
      }
      eaw.length = function(string3) {
        var characters2 = stringToArray(string3);
        var len = 0;
        for (var i3 = 0; i3 < characters2.length; i3++) {
          len = len + this.characterLength(characters2[i3]);
        }
        return len;
      };
      eaw.slice = function(text8, start3, end) {
        textLen = eaw.length(text8);
        start3 = start3 ? start3 : 0;
        end = end ? end : 1;
        if (start3 < 0) {
          start3 = textLen + start3;
        }
        if (end < 0) {
          end = textLen + end;
        }
        var result = "";
        var eawLen = 0;
        var chars2 = stringToArray(text8);
        for (var i3 = 0; i3 < chars2.length; i3++) {
          var char = chars2[i3];
          var charLen = eaw.length(char);
          if (eawLen >= start3 - (charLen == 2 ? 1 : 0)) {
            if (eawLen + charLen <= end) {
              result += char;
            } else {
              break;
            }
          }
          eawLen += charLen;
        }
        return result;
      };
    })(eastasianwidth);
    if (typeof process !== "undefined") {
      if (process.argv.includes("--verbose"))
        ;
      else if (process.argv.includes("--silent"))
        ;
      else
        ;
    }
    SCRIPT_EXTENSIONS2 = /* @__PURE__ */ new Set([".js", ".ts"]);
    new RegExp(`\\.(${Array.from(SCRIPT_EXTENSIONS2).map((s4) => s4.slice(1)).join("|")})($|\\?)`);
    posix = {
      resolve: function resolve() {
        var resolvedPath = "";
        var resolvedAbsolute = false;
        var cwd;
        for (var i3 = arguments.length - 1; i3 >= -1 && !resolvedAbsolute; i3--) {
          var path;
          if (i3 >= 0)
            path = arguments[i3];
          else {
            if (cwd === void 0)
              cwd = process.cwd();
            path = cwd;
          }
          assertPath2(path);
          if (path.length === 0) {
            continue;
          }
          resolvedPath = path + "/" + resolvedPath;
          resolvedAbsolute = path.charCodeAt(0) === 47;
        }
        resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);
        if (resolvedAbsolute) {
          if (resolvedPath.length > 0)
            return "/" + resolvedPath;
          else
            return "/";
        } else if (resolvedPath.length > 0) {
          return resolvedPath;
        } else {
          return ".";
        }
      },
      normalize: function normalize6(path) {
        assertPath2(path);
        if (path.length === 0)
          return ".";
        var isAbsolute2 = path.charCodeAt(0) === 47;
        var trailingSeparator = path.charCodeAt(path.length - 1) === 47;
        path = normalizeStringPosix(path, !isAbsolute2);
        if (path.length === 0 && !isAbsolute2)
          path = ".";
        if (path.length > 0 && trailingSeparator)
          path += "/";
        if (isAbsolute2)
          return "/" + path;
        return path;
      },
      isAbsolute: function isAbsolute(path) {
        assertPath2(path);
        return path.length > 0 && path.charCodeAt(0) === 47;
      },
      join: function join() {
        if (arguments.length === 0)
          return ".";
        var joined;
        for (var i3 = 0; i3 < arguments.length; ++i3) {
          var arg = arguments[i3];
          assertPath2(arg);
          if (arg.length > 0) {
            if (joined === void 0)
              joined = arg;
            else
              joined += "/" + arg;
          }
        }
        if (joined === void 0)
          return ".";
        return posix.normalize(joined);
      },
      relative: function relative(from, to) {
        assertPath2(from);
        assertPath2(to);
        if (from === to)
          return "";
        from = posix.resolve(from);
        to = posix.resolve(to);
        if (from === to)
          return "";
        var fromStart = 1;
        for (; fromStart < from.length; ++fromStart) {
          if (from.charCodeAt(fromStart) !== 47)
            break;
        }
        var fromEnd = from.length;
        var fromLen = fromEnd - fromStart;
        var toStart = 1;
        for (; toStart < to.length; ++toStart) {
          if (to.charCodeAt(toStart) !== 47)
            break;
        }
        var toEnd = to.length;
        var toLen = toEnd - toStart;
        var length = fromLen < toLen ? fromLen : toLen;
        var lastCommonSep = -1;
        var i3 = 0;
        for (; i3 <= length; ++i3) {
          if (i3 === length) {
            if (toLen > length) {
              if (to.charCodeAt(toStart + i3) === 47) {
                return to.slice(toStart + i3 + 1);
              } else if (i3 === 0) {
                return to.slice(toStart + i3);
              }
            } else if (fromLen > length) {
              if (from.charCodeAt(fromStart + i3) === 47) {
                lastCommonSep = i3;
              } else if (i3 === 0) {
                lastCommonSep = 0;
              }
            }
            break;
          }
          var fromCode = from.charCodeAt(fromStart + i3);
          var toCode = to.charCodeAt(toStart + i3);
          if (fromCode !== toCode)
            break;
          else if (fromCode === 47)
            lastCommonSep = i3;
        }
        var out = "";
        for (i3 = fromStart + lastCommonSep + 1; i3 <= fromEnd; ++i3) {
          if (i3 === fromEnd || from.charCodeAt(i3) === 47) {
            if (out.length === 0)
              out += "..";
            else
              out += "/..";
          }
        }
        if (out.length > 0)
          return out + to.slice(toStart + lastCommonSep);
        else {
          toStart += lastCommonSep;
          if (to.charCodeAt(toStart) === 47)
            ++toStart;
          return to.slice(toStart);
        }
      },
      _makeLong: function _makeLong(path) {
        return path;
      },
      dirname: function dirname(path) {
        assertPath2(path);
        if (path.length === 0)
          return ".";
        var code2 = path.charCodeAt(0);
        var hasRoot = code2 === 47;
        var end = -1;
        var matchedSlash = true;
        for (var i3 = path.length - 1; i3 >= 1; --i3) {
          code2 = path.charCodeAt(i3);
          if (code2 === 47) {
            if (!matchedSlash) {
              end = i3;
              break;
            }
          } else {
            matchedSlash = false;
          }
        }
        if (end === -1)
          return hasRoot ? "/" : ".";
        if (hasRoot && end === 1)
          return "//";
        return path.slice(0, end);
      },
      basename: function basename2(path, ext) {
        if (ext !== void 0 && typeof ext !== "string")
          throw new TypeError('"ext" argument must be a string');
        assertPath2(path);
        var start3 = 0;
        var end = -1;
        var matchedSlash = true;
        var i3;
        if (ext !== void 0 && ext.length > 0 && ext.length <= path.length) {
          if (ext.length === path.length && ext === path)
            return "";
          var extIdx = ext.length - 1;
          var firstNonSlashEnd = -1;
          for (i3 = path.length - 1; i3 >= 0; --i3) {
            var code2 = path.charCodeAt(i3);
            if (code2 === 47) {
              if (!matchedSlash) {
                start3 = i3 + 1;
                break;
              }
            } else {
              if (firstNonSlashEnd === -1) {
                matchedSlash = false;
                firstNonSlashEnd = i3 + 1;
              }
              if (extIdx >= 0) {
                if (code2 === ext.charCodeAt(extIdx)) {
                  if (--extIdx === -1) {
                    end = i3;
                  }
                } else {
                  extIdx = -1;
                  end = firstNonSlashEnd;
                }
              }
            }
          }
          if (start3 === end)
            end = firstNonSlashEnd;
          else if (end === -1)
            end = path.length;
          return path.slice(start3, end);
        } else {
          for (i3 = path.length - 1; i3 >= 0; --i3) {
            if (path.charCodeAt(i3) === 47) {
              if (!matchedSlash) {
                start3 = i3 + 1;
                break;
              }
            } else if (end === -1) {
              matchedSlash = false;
              end = i3 + 1;
            }
          }
          if (end === -1)
            return "";
          return path.slice(start3, end);
        }
      },
      extname: function extname(path) {
        assertPath2(path);
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var matchedSlash = true;
        var preDotState = 0;
        for (var i3 = path.length - 1; i3 >= 0; --i3) {
          var code2 = path.charCodeAt(i3);
          if (code2 === 47) {
            if (!matchedSlash) {
              startPart = i3 + 1;
              break;
            }
            continue;
          }
          if (end === -1) {
            matchedSlash = false;
            end = i3 + 1;
          }
          if (code2 === 46) {
            if (startDot === -1)
              startDot = i3;
            else if (preDotState !== 1)
              preDotState = 1;
          } else if (startDot !== -1) {
            preDotState = -1;
          }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
          return "";
        }
        return path.slice(startDot, end);
      },
      format: function format2(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
          throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
        }
        return _format("/", pathObject);
      },
      parse: function parse6(path) {
        assertPath2(path);
        var ret = { root: "", dir: "", base: "", ext: "", name: "" };
        if (path.length === 0)
          return ret;
        var code2 = path.charCodeAt(0);
        var isAbsolute2 = code2 === 47;
        var start3;
        if (isAbsolute2) {
          ret.root = "/";
          start3 = 1;
        } else {
          start3 = 0;
        }
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var matchedSlash = true;
        var i3 = path.length - 1;
        var preDotState = 0;
        for (; i3 >= start3; --i3) {
          code2 = path.charCodeAt(i3);
          if (code2 === 47) {
            if (!matchedSlash) {
              startPart = i3 + 1;
              break;
            }
            continue;
          }
          if (end === -1) {
            matchedSlash = false;
            end = i3 + 1;
          }
          if (code2 === 46) {
            if (startDot === -1)
              startDot = i3;
            else if (preDotState !== 1)
              preDotState = 1;
          } else if (startDot !== -1) {
            preDotState = -1;
          }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
          if (end !== -1) {
            if (startPart === 0 && isAbsolute2)
              ret.base = ret.name = path.slice(1, end);
            else
              ret.base = ret.name = path.slice(startPart, end);
          }
        } else {
          if (startPart === 0 && isAbsolute2) {
            ret.name = path.slice(1, startDot);
            ret.base = path.slice(1, end);
          } else {
            ret.name = path.slice(startPart, startDot);
            ret.base = path.slice(startPart, end);
          }
          ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0)
          ret.dir = path.slice(0, startPart - 1);
        else if (isAbsolute2)
          ret.dir = "/";
        return ret;
      },
      sep: "/",
      delimiter: ":",
      win32: null,
      posix: null
    };
    posix.posix = posix;
    STYLE_EXTENSIONS2 = /* @__PURE__ */ new Set([
      ".css",
      ".pcss",
      ".postcss",
      ".scss",
      ".sass",
      ".styl",
      ".stylus",
      ".less"
    ]);
    new RegExp(`\\.(${Array.from(STYLE_EXTENSIONS2).map((s4) => s4.slice(1)).join("|")})($|\\?)`);
    util$1 = {};
    types4 = {};
    shams$1 = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (sym in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
    hasSymbols$2 = shams$1;
    shams = function hasToStringTagShams() {
      return hasSymbols$2() && !!Symbol.toStringTag;
    };
    origSymbol = typeof Symbol !== "undefined" && Symbol;
    hasSymbolSham = shams$1;
    hasSymbols$1 = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
    ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    slice = Array.prototype.slice;
    toStr$3 = Object.prototype.toString;
    funcType = "[object Function]";
    implementation$1 = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr$3.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slice.call(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(this, args.concat(slice.call(arguments)));
          if (Object(result) === result) {
            return result;
          }
          return this;
        } else {
          return target.apply(that, args.concat(slice.call(arguments)));
        }
      };
      var boundLength = Math.max(0, target.length - args.length);
      var boundArgs = [];
      for (var i3 = 0; i3 < boundLength; i3++) {
        boundArgs.push("$" + i3);
      }
      bound = Function("binder", "return function (" + boundArgs.join(",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
    implementation = implementation$1;
    functionBind = Function.prototype.bind || implementation;
    bind$1 = functionBind;
    src = bind$1.call(Function.call, Object.prototype.hasOwnProperty);
    $SyntaxError = SyntaxError;
    $Function = Function;
    $TypeError = TypeError;
    getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e3) {
      }
    };
    $gOPD$1 = Object.getOwnPropertyDescriptor;
    if ($gOPD$1) {
      try {
        $gOPD$1({}, "");
      } catch (e3) {
        $gOPD$1 = null;
      }
    }
    throwTypeError = function() {
      throw new $TypeError();
    };
    ThrowTypeError = $gOPD$1 ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD$1(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    hasSymbols2 = hasSymbols$1();
    getProto$1 = Object.getPrototypeOf || function(x3) {
      return x3.__proto__;
    };
    needsEval = {};
    TypedArray = typeof Uint8Array === "undefined" ? undefined$1 : getProto$1(Uint8Array);
    INTRINSICS = {
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined$1 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined$1 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols2 ? getProto$1([][Symbol.iterator]()) : undefined$1,
      "%AsyncFromSyncIteratorPrototype%": undefined$1,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined$1 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined$1 : BigInt,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined$1 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": Error,
      "%eval%": eval,
      "%EvalError%": EvalError,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined$1 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined$1 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined$1 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined$1 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined$1 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined$1 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols2 ? getProto$1(getProto$1([][Symbol.iterator]())) : undefined$1,
      "%JSON%": typeof JSON === "object" ? JSON : undefined$1,
      "%Map%": typeof Map === "undefined" ? undefined$1 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols2 ? undefined$1 : getProto$1((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": Object,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined$1 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined$1 : Proxy,
      "%RangeError%": RangeError,
      "%ReferenceError%": ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined$1 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined$1 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols2 ? undefined$1 : getProto$1((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined$1 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols2 ? getProto$1(""[Symbol.iterator]()) : undefined$1,
      "%Symbol%": hasSymbols2 ? Symbol : undefined$1,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined$1 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined$1 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined$1 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined$1 : Uint32Array,
      "%URIError%": URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined$1 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined$1 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined$1 : WeakSet
    };
    doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen) {
          value = getProto$1(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    LEGACY_ALIASES = {
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    bind2 = functionBind;
    hasOwn3 = src;
    $concat = bind2.call(Function.call, Array.prototype.concat);
    $spliceApply = bind2.call(Function.apply, Array.prototype.splice);
    $replace = bind2.call(Function.call, String.prototype.replace);
    $strSlice = bind2.call(Function.call, String.prototype.slice);
    $exec = bind2.call(Function.call, RegExp.prototype.exec);
    rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    reEscapeChar = /\\(\\)?/g;
    stringToPath = function stringToPath2(string3) {
      var first = $strSlice(string3, 0, 1);
      var last = $strSlice(string3, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string3, rePropName, function(match, number2, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number2 || match;
      });
      return result;
    };
    getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn3(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn3(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    getIntrinsic = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/g, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i3 = 1, isOwn = true; i3 < parts.length; i3 += 1) {
        var part = parts[i3];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn3(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD$1 && i3 + 1 >= parts.length) {
            var desc = $gOPD$1(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn3(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
    callBind$1 = { exports: {} };
    (function(module2) {
      var bind3 = functionBind;
      var GetIntrinsic3 = getIntrinsic;
      var $apply = GetIntrinsic3("%Function.prototype.apply%");
      var $call = GetIntrinsic3("%Function.prototype.call%");
      var $reflectApply = GetIntrinsic3("%Reflect.apply%", true) || bind3.call($call, $apply);
      var $gOPD2 = GetIntrinsic3("%Object.getOwnPropertyDescriptor%", true);
      var $defineProperty = GetIntrinsic3("%Object.defineProperty%", true);
      var $max = GetIntrinsic3("%Math.max%");
      if ($defineProperty) {
        try {
          $defineProperty({}, "a", { value: 1 });
        } catch (e3) {
          $defineProperty = null;
        }
      }
      module2.exports = function callBind2(originalFunction) {
        var func = $reflectApply(bind3, $call, arguments);
        if ($gOPD2 && $defineProperty) {
          var desc = $gOPD2(func, "length");
          if (desc.configurable) {
            $defineProperty(func, "length", { value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) });
          }
        }
        return func;
      };
      var applyBind = function applyBind2() {
        return $reflectApply(bind3, $apply, arguments);
      };
      if ($defineProperty) {
        $defineProperty(module2.exports, "apply", { value: applyBind });
      } else {
        module2.exports.apply = applyBind;
      }
    })(callBind$1);
    GetIntrinsic$1 = getIntrinsic;
    callBind = callBind$1.exports;
    $indexOf$1 = callBind(GetIntrinsic$1("String.prototype.indexOf"));
    callBound$3 = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = GetIntrinsic$1(name, !!allowMissing);
      if (typeof intrinsic === "function" && $indexOf$1(name, ".prototype.") > -1) {
        return callBind(intrinsic);
      }
      return intrinsic;
    };
    hasToStringTag$4 = shams();
    callBound$2 = callBound$3;
    $toString$2 = callBound$2("Object.prototype.toString");
    isStandardArguments = function isArguments(value) {
      if (hasToStringTag$4 && value && typeof value === "object" && Symbol.toStringTag in value) {
        return false;
      }
      return $toString$2(value) === "[object Arguments]";
    };
    isLegacyArguments = function isArguments2(value) {
      if (isStandardArguments(value)) {
        return true;
      }
      return value !== null && typeof value === "object" && typeof value.length === "number" && value.length >= 0 && $toString$2(value) !== "[object Array]" && $toString$2(value.callee) === "[object Function]";
    };
    supportsStandardArguments = function() {
      return isStandardArguments(arguments);
    }();
    isStandardArguments.isLegacyArguments = isLegacyArguments;
    isArguments3 = supportsStandardArguments ? isStandardArguments : isLegacyArguments;
    toStr$2 = Object.prototype.toString;
    fnToStr$1 = Function.prototype.toString;
    isFnRegex = /^\s*(?:function)?\*/;
    hasToStringTag$3 = shams();
    getProto = Object.getPrototypeOf;
    getGeneratorFunc = function() {
      if (!hasToStringTag$3) {
        return false;
      }
      try {
        return Function("return function*() {}")();
      } catch (e3) {
      }
    };
    isGeneratorFunction = function isGeneratorFunction2(fn) {
      if (typeof fn !== "function") {
        return false;
      }
      if (isFnRegex.test(fnToStr$1.call(fn))) {
        return true;
      }
      if (!hasToStringTag$3) {
        var str = toStr$2.call(fn);
        return str === "[object GeneratorFunction]";
      }
      if (!getProto) {
        return false;
      }
      if (typeof GeneratorFunction === "undefined") {
        var generatorFunc = getGeneratorFunc();
        GeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;
      }
      return getProto(fn) === GeneratorFunction;
    };
    fnToStr = Function.prototype.toString;
    reflectApply = typeof Reflect === "object" && Reflect !== null && Reflect.apply;
    if (typeof reflectApply === "function" && typeof Object.defineProperty === "function") {
      try {
        badArrayLike = Object.defineProperty({}, "length", {
          get: function() {
            throw isCallableMarker;
          }
        });
        isCallableMarker = {};
        reflectApply(function() {
          throw 42;
        }, null, badArrayLike);
      } catch (_) {
        if (_ !== isCallableMarker) {
          reflectApply = null;
        }
      }
    } else {
      reflectApply = null;
    }
    constructorRegex = /^\s*class\b/;
    isES6ClassFn = function isES6ClassFunction(value) {
      try {
        var fnStr = fnToStr.call(value);
        return constructorRegex.test(fnStr);
      } catch (e3) {
        return false;
      }
    };
    tryFunctionObject = function tryFunctionToStr(value) {
      try {
        if (isES6ClassFn(value)) {
          return false;
        }
        fnToStr.call(value);
        return true;
      } catch (e3) {
        return false;
      }
    };
    toStr$1 = Object.prototype.toString;
    fnClass = "[object Function]";
    genClass = "[object GeneratorFunction]";
    hasToStringTag$2 = typeof Symbol === "function" && !!Symbol.toStringTag;
    documentDotAll = typeof document === "object" && typeof document.all === "undefined" && document.all !== void 0 ? document.all : {};
    isCallable$1 = reflectApply ? function isCallable(value) {
      if (value === documentDotAll) {
        return true;
      }
      if (!value) {
        return false;
      }
      if (typeof value !== "function" && typeof value !== "object") {
        return false;
      }
      if (typeof value === "function" && !value.prototype) {
        return true;
      }
      try {
        reflectApply(value, null, badArrayLike);
      } catch (e3) {
        if (e3 !== isCallableMarker) {
          return false;
        }
      }
      return !isES6ClassFn(value);
    } : function isCallable2(value) {
      if (value === documentDotAll) {
        return true;
      }
      if (!value) {
        return false;
      }
      if (typeof value !== "function" && typeof value !== "object") {
        return false;
      }
      if (typeof value === "function" && !value.prototype) {
        return true;
      }
      if (hasToStringTag$2) {
        return tryFunctionObject(value);
      }
      if (isES6ClassFn(value)) {
        return false;
      }
      var strClass = toStr$1.call(value);
      return strClass === fnClass || strClass === genClass;
    };
    isCallable3 = isCallable$1;
    toStr = Object.prototype.toString;
    hasOwnProperty3 = Object.prototype.hasOwnProperty;
    forEachArray = function forEachArray2(array, iterator, receiver) {
      for (var i3 = 0, len = array.length; i3 < len; i3++) {
        if (hasOwnProperty3.call(array, i3)) {
          if (receiver == null) {
            iterator(array[i3], i3, array);
          } else {
            iterator.call(receiver, array[i3], i3, array);
          }
        }
      }
    };
    forEachString = function forEachString2(string3, iterator, receiver) {
      for (var i3 = 0, len = string3.length; i3 < len; i3++) {
        if (receiver == null) {
          iterator(string3.charAt(i3), i3, string3);
        } else {
          iterator.call(receiver, string3.charAt(i3), i3, string3);
        }
      }
    };
    forEachObject = function forEachObject2(object, iterator, receiver) {
      for (var k2 in object) {
        if (hasOwnProperty3.call(object, k2)) {
          if (receiver == null) {
            iterator(object[k2], k2, object);
          } else {
            iterator.call(receiver, object[k2], k2, object);
          }
        }
      }
    };
    forEach$2 = function forEach(list3, iterator, thisArg) {
      if (!isCallable3(iterator)) {
        throw new TypeError("iterator must be a function");
      }
      var receiver;
      if (arguments.length >= 3) {
        receiver = thisArg;
      }
      if (toStr.call(list3) === "[object Array]") {
        forEachArray(list3, iterator, receiver);
      } else if (typeof list3 === "string") {
        forEachString(list3, iterator, receiver);
      } else {
        forEachObject(list3, iterator, receiver);
      }
    };
    forEach_1 = forEach$2;
    possibleNames = [
      "BigInt64Array",
      "BigUint64Array",
      "Float32Array",
      "Float64Array",
      "Int16Array",
      "Int32Array",
      "Int8Array",
      "Uint16Array",
      "Uint32Array",
      "Uint8Array",
      "Uint8ClampedArray"
    ];
    g$2 = typeof globalThis === "undefined" ? commonjsGlobal : globalThis;
    availableTypedArrays$2 = function availableTypedArrays() {
      var out = [];
      for (var i3 = 0; i3 < possibleNames.length; i3++) {
        if (typeof g$2[possibleNames[i3]] === "function") {
          out[out.length] = possibleNames[i3];
        }
      }
      return out;
    };
    GetIntrinsic2 = getIntrinsic;
    $gOPD = GetIntrinsic2("%Object.getOwnPropertyDescriptor%", true);
    if ($gOPD) {
      try {
        $gOPD([], "length");
      } catch (e3) {
        $gOPD = null;
      }
    }
    getOwnPropertyDescriptor = $gOPD;
    forEach$1 = forEach_1;
    availableTypedArrays$1 = availableTypedArrays$2;
    callBound$1 = callBound$3;
    $toString$1 = callBound$1("Object.prototype.toString");
    hasToStringTag$1 = shams();
    g$1 = typeof globalThis === "undefined" ? commonjsGlobal : globalThis;
    typedArrays$1 = availableTypedArrays$1();
    $indexOf = callBound$1("Array.prototype.indexOf", true) || function indexOf(array, value) {
      for (var i3 = 0; i3 < array.length; i3 += 1) {
        if (array[i3] === value) {
          return i3;
        }
      }
      return -1;
    };
    $slice$1 = callBound$1("String.prototype.slice");
    toStrTags$1 = {};
    gOPD$1 = getOwnPropertyDescriptor;
    getPrototypeOf$1 = Object.getPrototypeOf;
    if (hasToStringTag$1 && gOPD$1 && getPrototypeOf$1) {
      forEach$1(typedArrays$1, function(typedArray) {
        var arr = new g$1[typedArray]();
        if (Symbol.toStringTag in arr) {
          var proto = getPrototypeOf$1(arr);
          var descriptor = gOPD$1(proto, Symbol.toStringTag);
          if (!descriptor) {
            var superProto = getPrototypeOf$1(proto);
            descriptor = gOPD$1(superProto, Symbol.toStringTag);
          }
          toStrTags$1[typedArray] = descriptor.get;
        }
      });
    }
    tryTypedArrays$1 = function tryAllTypedArrays(value) {
      var anyTrue = false;
      forEach$1(toStrTags$1, function(getter, typedArray) {
        if (!anyTrue) {
          try {
            anyTrue = getter.call(value) === typedArray;
          } catch (e3) {
          }
        }
      });
      return anyTrue;
    };
    isTypedArray$1 = function isTypedArray(value) {
      if (!value || typeof value !== "object") {
        return false;
      }
      if (!hasToStringTag$1 || !(Symbol.toStringTag in value)) {
        var tag2 = $slice$1($toString$1(value), 8, -1);
        return $indexOf(typedArrays$1, tag2) > -1;
      }
      if (!gOPD$1) {
        return false;
      }
      return tryTypedArrays$1(value);
    };
    forEach2 = forEach_1;
    availableTypedArrays2 = availableTypedArrays$2;
    callBound = callBound$3;
    $toString = callBound("Object.prototype.toString");
    hasToStringTag = shams();
    g2 = typeof globalThis === "undefined" ? commonjsGlobal : globalThis;
    typedArrays = availableTypedArrays2();
    $slice = callBound("String.prototype.slice");
    toStrTags = {};
    gOPD = getOwnPropertyDescriptor;
    getPrototypeOf = Object.getPrototypeOf;
    if (hasToStringTag && gOPD && getPrototypeOf) {
      forEach2(typedArrays, function(typedArray) {
        if (typeof g2[typedArray] === "function") {
          var arr = new g2[typedArray]();
          if (Symbol.toStringTag in arr) {
            var proto = getPrototypeOf(arr);
            var descriptor = gOPD(proto, Symbol.toStringTag);
            if (!descriptor) {
              var superProto = getPrototypeOf(proto);
              descriptor = gOPD(superProto, Symbol.toStringTag);
            }
            toStrTags[typedArray] = descriptor.get;
          }
        }
      });
    }
    tryTypedArrays = function tryAllTypedArrays2(value) {
      var foundName = false;
      forEach2(toStrTags, function(getter, typedArray) {
        if (!foundName) {
          try {
            var name = getter.call(value);
            if (name === typedArray) {
              foundName = name;
            }
          } catch (e3) {
          }
        }
      });
      return foundName;
    };
    isTypedArray2 = isTypedArray$1;
    whichTypedArray = function whichTypedArray2(value) {
      if (!isTypedArray2(value)) {
        return false;
      }
      if (!hasToStringTag || !(Symbol.toStringTag in value)) {
        return $slice($toString(value), 8, -1);
      }
      return tryTypedArrays(value);
    };
    (function(exports) {
      var isArgumentsObject = isArguments3;
      var isGeneratorFunction$1 = isGeneratorFunction;
      var whichTypedArray$1 = whichTypedArray;
      var isTypedArray3 = isTypedArray$1;
      function uncurryThis(f4) {
        return f4.call.bind(f4);
      }
      var BigIntSupported = typeof BigInt !== "undefined";
      var SymbolSupported = typeof Symbol !== "undefined";
      var ObjectToString = uncurryThis(Object.prototype.toString);
      var numberValue = uncurryThis(Number.prototype.valueOf);
      var stringValue = uncurryThis(String.prototype.valueOf);
      var booleanValue = uncurryThis(Boolean.prototype.valueOf);
      if (BigIntSupported) {
        var bigIntValue = uncurryThis(BigInt.prototype.valueOf);
      }
      if (SymbolSupported) {
        var symbolValue = uncurryThis(Symbol.prototype.valueOf);
      }
      function checkBoxedPrimitive(value, prototypeValueOf) {
        if (typeof value !== "object") {
          return false;
        }
        try {
          prototypeValueOf(value);
          return true;
        } catch (e3) {
          return false;
        }
      }
      exports.isArgumentsObject = isArgumentsObject;
      exports.isGeneratorFunction = isGeneratorFunction$1;
      exports.isTypedArray = isTypedArray3;
      function isPromise(input2) {
        return typeof Promise !== "undefined" && input2 instanceof Promise || input2 !== null && typeof input2 === "object" && typeof input2.then === "function" && typeof input2.catch === "function";
      }
      exports.isPromise = isPromise;
      function isArrayBufferView(value) {
        if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
          return ArrayBuffer.isView(value);
        }
        return isTypedArray3(value) || isDataView(value);
      }
      exports.isArrayBufferView = isArrayBufferView;
      function isUint8Array(value) {
        return whichTypedArray$1(value) === "Uint8Array";
      }
      exports.isUint8Array = isUint8Array;
      function isUint8ClampedArray(value) {
        return whichTypedArray$1(value) === "Uint8ClampedArray";
      }
      exports.isUint8ClampedArray = isUint8ClampedArray;
      function isUint16Array(value) {
        return whichTypedArray$1(value) === "Uint16Array";
      }
      exports.isUint16Array = isUint16Array;
      function isUint32Array(value) {
        return whichTypedArray$1(value) === "Uint32Array";
      }
      exports.isUint32Array = isUint32Array;
      function isInt8Array(value) {
        return whichTypedArray$1(value) === "Int8Array";
      }
      exports.isInt8Array = isInt8Array;
      function isInt16Array(value) {
        return whichTypedArray$1(value) === "Int16Array";
      }
      exports.isInt16Array = isInt16Array;
      function isInt32Array(value) {
        return whichTypedArray$1(value) === "Int32Array";
      }
      exports.isInt32Array = isInt32Array;
      function isFloat32Array(value) {
        return whichTypedArray$1(value) === "Float32Array";
      }
      exports.isFloat32Array = isFloat32Array;
      function isFloat64Array(value) {
        return whichTypedArray$1(value) === "Float64Array";
      }
      exports.isFloat64Array = isFloat64Array;
      function isBigInt64Array(value) {
        return whichTypedArray$1(value) === "BigInt64Array";
      }
      exports.isBigInt64Array = isBigInt64Array;
      function isBigUint64Array(value) {
        return whichTypedArray$1(value) === "BigUint64Array";
      }
      exports.isBigUint64Array = isBigUint64Array;
      function isMapToString(value) {
        return ObjectToString(value) === "[object Map]";
      }
      isMapToString.working = typeof Map !== "undefined" && isMapToString(/* @__PURE__ */ new Map());
      function isMap(value) {
        if (typeof Map === "undefined") {
          return false;
        }
        return isMapToString.working ? isMapToString(value) : value instanceof Map;
      }
      exports.isMap = isMap;
      function isSetToString(value) {
        return ObjectToString(value) === "[object Set]";
      }
      isSetToString.working = typeof Set !== "undefined" && isSetToString(/* @__PURE__ */ new Set());
      function isSet(value) {
        if (typeof Set === "undefined") {
          return false;
        }
        return isSetToString.working ? isSetToString(value) : value instanceof Set;
      }
      exports.isSet = isSet;
      function isWeakMapToString(value) {
        return ObjectToString(value) === "[object WeakMap]";
      }
      isWeakMapToString.working = typeof WeakMap !== "undefined" && isWeakMapToString(/* @__PURE__ */ new WeakMap());
      function isWeakMap(value) {
        if (typeof WeakMap === "undefined") {
          return false;
        }
        return isWeakMapToString.working ? isWeakMapToString(value) : value instanceof WeakMap;
      }
      exports.isWeakMap = isWeakMap;
      function isWeakSetToString(value) {
        return ObjectToString(value) === "[object WeakSet]";
      }
      isWeakSetToString.working = typeof WeakSet !== "undefined" && isWeakSetToString(/* @__PURE__ */ new WeakSet());
      function isWeakSet(value) {
        return isWeakSetToString(value);
      }
      exports.isWeakSet = isWeakSet;
      function isArrayBufferToString(value) {
        return ObjectToString(value) === "[object ArrayBuffer]";
      }
      isArrayBufferToString.working = typeof ArrayBuffer !== "undefined" && isArrayBufferToString(new ArrayBuffer());
      function isArrayBuffer(value) {
        if (typeof ArrayBuffer === "undefined") {
          return false;
        }
        return isArrayBufferToString.working ? isArrayBufferToString(value) : value instanceof ArrayBuffer;
      }
      exports.isArrayBuffer = isArrayBuffer;
      function isDataViewToString(value) {
        return ObjectToString(value) === "[object DataView]";
      }
      isDataViewToString.working = typeof ArrayBuffer !== "undefined" && typeof DataView !== "undefined" && isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1));
      function isDataView(value) {
        if (typeof DataView === "undefined") {
          return false;
        }
        return isDataViewToString.working ? isDataViewToString(value) : value instanceof DataView;
      }
      exports.isDataView = isDataView;
      var SharedArrayBufferCopy = typeof SharedArrayBuffer !== "undefined" ? SharedArrayBuffer : void 0;
      function isSharedArrayBufferToString(value) {
        return ObjectToString(value) === "[object SharedArrayBuffer]";
      }
      function isSharedArrayBuffer(value) {
        if (typeof SharedArrayBufferCopy === "undefined") {
          return false;
        }
        if (typeof isSharedArrayBufferToString.working === "undefined") {
          isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());
        }
        return isSharedArrayBufferToString.working ? isSharedArrayBufferToString(value) : value instanceof SharedArrayBufferCopy;
      }
      exports.isSharedArrayBuffer = isSharedArrayBuffer;
      function isAsyncFunction(value) {
        return ObjectToString(value) === "[object AsyncFunction]";
      }
      exports.isAsyncFunction = isAsyncFunction;
      function isMapIterator(value) {
        return ObjectToString(value) === "[object Map Iterator]";
      }
      exports.isMapIterator = isMapIterator;
      function isSetIterator(value) {
        return ObjectToString(value) === "[object Set Iterator]";
      }
      exports.isSetIterator = isSetIterator;
      function isGeneratorObject(value) {
        return ObjectToString(value) === "[object Generator]";
      }
      exports.isGeneratorObject = isGeneratorObject;
      function isWebAssemblyCompiledModule(value) {
        return ObjectToString(value) === "[object WebAssembly.Module]";
      }
      exports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;
      function isNumberObject(value) {
        return checkBoxedPrimitive(value, numberValue);
      }
      exports.isNumberObject = isNumberObject;
      function isStringObject(value) {
        return checkBoxedPrimitive(value, stringValue);
      }
      exports.isStringObject = isStringObject;
      function isBooleanObject(value) {
        return checkBoxedPrimitive(value, booleanValue);
      }
      exports.isBooleanObject = isBooleanObject;
      function isBigIntObject(value) {
        return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);
      }
      exports.isBigIntObject = isBigIntObject;
      function isSymbolObject(value) {
        return SymbolSupported && checkBoxedPrimitive(value, symbolValue);
      }
      exports.isSymbolObject = isSymbolObject;
      function isBoxedPrimitive(value) {
        return isNumberObject(value) || isStringObject(value) || isBooleanObject(value) || isBigIntObject(value) || isSymbolObject(value);
      }
      exports.isBoxedPrimitive = isBoxedPrimitive;
      function isAnyArrayBuffer(value) {
        return typeof Uint8Array !== "undefined" && (isArrayBuffer(value) || isSharedArrayBuffer(value));
      }
      exports.isAnyArrayBuffer = isAnyArrayBuffer;
      ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(method) {
        Object.defineProperty(exports, method, {
          enumerable: false,
          value: function() {
            throw new Error(method + " is not supported in userland");
          }
        });
      });
    })(types4);
    isBuffer2 = function isBuffer3(arg) {
      return arg instanceof Buffer;
    };
    inherits = { exports: {} };
    inherits_browser = { exports: {} };
    if (typeof Object.create === "function") {
      inherits_browser.exports = function inherits2(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      inherits_browser.exports = function inherits2(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
    try {
      util = require("util");
      if (typeof util.inherits !== "function")
        throw "";
      inherits.exports = util.inherits;
    } catch (e3) {
      inherits.exports = inherits_browser.exports;
    }
    (function(exports) {
      var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors2(obj) {
        var keys3 = Object.keys(obj);
        var descriptors = {};
        for (var i3 = 0; i3 < keys3.length; i3++) {
          descriptors[keys3[i3]] = Object.getOwnPropertyDescriptor(obj, keys3[i3]);
        }
        return descriptors;
      };
      var formatRegExp = /%[sdj%]/g;
      exports.format = function(f4) {
        if (!isString2(f4)) {
          var objects = [];
          for (var i3 = 0; i3 < arguments.length; i3++) {
            objects.push(inspect(arguments[i3]));
          }
          return objects.join(" ");
        }
        var i3 = 1;
        var args = arguments;
        var len = args.length;
        var str = String(f4).replace(formatRegExp, function(x4) {
          if (x4 === "%%")
            return "%";
          if (i3 >= len)
            return x4;
          switch (x4) {
            case "%s":
              return String(args[i3++]);
            case "%d":
              return Number(args[i3++]);
            case "%j":
              try {
                return JSON.stringify(args[i3++]);
              } catch (_) {
                return "[Circular]";
              }
            default:
              return x4;
          }
        });
        for (var x3 = args[i3]; i3 < len; x3 = args[++i3]) {
          if (isNull(x3) || !isObject2(x3)) {
            str += " " + x3;
          } else {
            str += " " + inspect(x3);
          }
        }
        return str;
      };
      exports.deprecate = function(fn, msg) {
        if (typeof process !== "undefined" && process.noDeprecation === true) {
          return fn;
        }
        if (typeof process === "undefined") {
          return function() {
            return exports.deprecate(fn, msg).apply(this, arguments);
          };
        }
        var warned = false;
        function deprecated() {
          if (!warned) {
            if (process.throwDeprecation) {
              throw new Error(msg);
            } else if (process.traceDeprecation) {
              console.trace(msg);
            } else {
              console.error(msg);
            }
            warned = true;
          }
          return fn.apply(this, arguments);
        }
        return deprecated;
      };
      var debugs = {};
      var debugEnvRegex = /^$/;
      if (process.env.NODE_DEBUG) {
        var debugEnv = process.env.NODE_DEBUG;
        debugEnv = debugEnv.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase();
        debugEnvRegex = new RegExp("^" + debugEnv + "$", "i");
      }
      exports.debuglog = function(set) {
        set = set.toUpperCase();
        if (!debugs[set]) {
          if (debugEnvRegex.test(set)) {
            var pid = process.pid;
            debugs[set] = function() {
              var msg = exports.format.apply(exports, arguments);
              console.error("%s %d: %s", set, pid, msg);
            };
          } else {
            debugs[set] = function() {
            };
          }
        }
        return debugs[set];
      };
      function inspect(obj, opts) {
        var ctx = {
          seen: [],
          stylize: stylizeNoColor
        };
        if (arguments.length >= 3)
          ctx.depth = arguments[2];
        if (arguments.length >= 4)
          ctx.colors = arguments[3];
        if (isBoolean(opts)) {
          ctx.showHidden = opts;
        } else if (opts) {
          exports._extend(ctx, opts);
        }
        if (isUndefined(ctx.showHidden))
          ctx.showHidden = false;
        if (isUndefined(ctx.depth))
          ctx.depth = 2;
        if (isUndefined(ctx.colors))
          ctx.colors = false;
        if (isUndefined(ctx.customInspect))
          ctx.customInspect = true;
        if (ctx.colors)
          ctx.stylize = stylizeWithColor;
        return formatValue(ctx, obj, ctx.depth);
      }
      exports.inspect = inspect;
      inspect.colors = {
        "bold": [1, 22],
        "italic": [3, 23],
        "underline": [4, 24],
        "inverse": [7, 27],
        "white": [37, 39],
        "grey": [90, 39],
        "black": [30, 39],
        "blue": [34, 39],
        "cyan": [36, 39],
        "green": [32, 39],
        "magenta": [35, 39],
        "red": [31, 39],
        "yellow": [33, 39]
      };
      inspect.styles = {
        "special": "cyan",
        "number": "yellow",
        "boolean": "yellow",
        "undefined": "grey",
        "null": "bold",
        "string": "green",
        "date": "magenta",
        "regexp": "red"
      };
      function stylizeWithColor(str, styleType) {
        var style3 = inspect.styles[styleType];
        if (style3) {
          return "\x1B[" + inspect.colors[style3][0] + "m" + str + "\x1B[" + inspect.colors[style3][1] + "m";
        } else {
          return str;
        }
      }
      function stylizeNoColor(str, styleType) {
        return str;
      }
      function arrayToHash(array) {
        var hash = {};
        array.forEach(function(val, idx) {
          hash[val] = true;
        });
        return hash;
      }
      function formatValue(ctx, value, recurseTimes) {
        if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports.inspect && !(value.constructor && value.constructor.prototype === value)) {
          var ret = value.inspect(recurseTimes, ctx);
          if (!isString2(ret)) {
            ret = formatValue(ctx, ret, recurseTimes);
          }
          return ret;
        }
        var primitive = formatPrimitive(ctx, value);
        if (primitive) {
          return primitive;
        }
        var keys3 = Object.keys(value);
        var visibleKeys = arrayToHash(keys3);
        if (ctx.showHidden) {
          keys3 = Object.getOwnPropertyNames(value);
        }
        if (isError(value) && (keys3.indexOf("message") >= 0 || keys3.indexOf("description") >= 0)) {
          return formatError(value);
        }
        if (keys3.length === 0) {
          if (isFunction(value)) {
            var name = value.name ? ": " + value.name : "";
            return ctx.stylize("[Function" + name + "]", "special");
          }
          if (isRegExp(value)) {
            return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
          }
          if (isDate(value)) {
            return ctx.stylize(Date.prototype.toString.call(value), "date");
          }
          if (isError(value)) {
            return formatError(value);
          }
        }
        var base2 = "", array = false, braces = ["{", "}"];
        if (isArray2(value)) {
          array = true;
          braces = ["[", "]"];
        }
        if (isFunction(value)) {
          var n2 = value.name ? ": " + value.name : "";
          base2 = " [Function" + n2 + "]";
        }
        if (isRegExp(value)) {
          base2 = " " + RegExp.prototype.toString.call(value);
        }
        if (isDate(value)) {
          base2 = " " + Date.prototype.toUTCString.call(value);
        }
        if (isError(value)) {
          base2 = " " + formatError(value);
        }
        if (keys3.length === 0 && (!array || value.length == 0)) {
          return braces[0] + base2 + braces[1];
        }
        if (recurseTimes < 0) {
          if (isRegExp(value)) {
            return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
          } else {
            return ctx.stylize("[Object]", "special");
          }
        }
        ctx.seen.push(value);
        var output;
        if (array) {
          output = formatArray(ctx, value, recurseTimes, visibleKeys, keys3);
        } else {
          output = keys3.map(function(key2) {
            return formatProperty(ctx, value, recurseTimes, visibleKeys, key2, array);
          });
        }
        ctx.seen.pop();
        return reduceToSingleString(output, base2, braces);
      }
      function formatPrimitive(ctx, value) {
        if (isUndefined(value))
          return ctx.stylize("undefined", "undefined");
        if (isString2(value)) {
          var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
          return ctx.stylize(simple, "string");
        }
        if (isNumber(value))
          return ctx.stylize("" + value, "number");
        if (isBoolean(value))
          return ctx.stylize("" + value, "boolean");
        if (isNull(value))
          return ctx.stylize("null", "null");
      }
      function formatError(value) {
        return "[" + Error.prototype.toString.call(value) + "]";
      }
      function formatArray(ctx, value, recurseTimes, visibleKeys, keys3) {
        var output = [];
        for (var i3 = 0, l2 = value.length; i3 < l2; ++i3) {
          if (hasOwnProperty4(value, String(i3))) {
            output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i3), true));
          } else {
            output.push("");
          }
        }
        keys3.forEach(function(key2) {
          if (!key2.match(/^\d+$/)) {
            output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key2, true));
          }
        });
        return output;
      }
      function formatProperty(ctx, value, recurseTimes, visibleKeys, key2, array) {
        var name, str, desc;
        desc = Object.getOwnPropertyDescriptor(value, key2) || { value: value[key2] };
        if (desc.get) {
          if (desc.set) {
            str = ctx.stylize("[Getter/Setter]", "special");
          } else {
            str = ctx.stylize("[Getter]", "special");
          }
        } else {
          if (desc.set) {
            str = ctx.stylize("[Setter]", "special");
          }
        }
        if (!hasOwnProperty4(visibleKeys, key2)) {
          name = "[" + key2 + "]";
        }
        if (!str) {
          if (ctx.seen.indexOf(desc.value) < 0) {
            if (isNull(recurseTimes)) {
              str = formatValue(ctx, desc.value, null);
            } else {
              str = formatValue(ctx, desc.value, recurseTimes - 1);
            }
            if (str.indexOf("\n") > -1) {
              if (array) {
                str = str.split("\n").map(function(line) {
                  return "  " + line;
                }).join("\n").substr(2);
              } else {
                str = "\n" + str.split("\n").map(function(line) {
                  return "   " + line;
                }).join("\n");
              }
            }
          } else {
            str = ctx.stylize("[Circular]", "special");
          }
        }
        if (isUndefined(name)) {
          if (array && key2.match(/^\d+$/)) {
            return str;
          }
          name = JSON.stringify("" + key2);
          if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
            name = name.substr(1, name.length - 2);
            name = ctx.stylize(name, "name");
          } else {
            name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
            name = ctx.stylize(name, "string");
          }
        }
        return name + ": " + str;
      }
      function reduceToSingleString(output, base2, braces) {
        var length = output.reduce(function(prev, cur) {
          if (cur.indexOf("\n") >= 0)
            ;
          return prev + cur.replace(/\u001b\[\d\d?m/g, "").length + 1;
        }, 0);
        if (length > 60) {
          return braces[0] + (base2 === "" ? "" : base2 + "\n ") + " " + output.join(",\n  ") + " " + braces[1];
        }
        return braces[0] + base2 + " " + output.join(", ") + " " + braces[1];
      }
      exports.types = types4;
      function isArray2(ar) {
        return Array.isArray(ar);
      }
      exports.isArray = isArray2;
      function isBoolean(arg) {
        return typeof arg === "boolean";
      }
      exports.isBoolean = isBoolean;
      function isNull(arg) {
        return arg === null;
      }
      exports.isNull = isNull;
      function isNullOrUndefined(arg) {
        return arg == null;
      }
      exports.isNullOrUndefined = isNullOrUndefined;
      function isNumber(arg) {
        return typeof arg === "number";
      }
      exports.isNumber = isNumber;
      function isString2(arg) {
        return typeof arg === "string";
      }
      exports.isString = isString2;
      function isSymbol(arg) {
        return typeof arg === "symbol";
      }
      exports.isSymbol = isSymbol;
      function isUndefined(arg) {
        return arg === void 0;
      }
      exports.isUndefined = isUndefined;
      function isRegExp(re) {
        return isObject2(re) && objectToString(re) === "[object RegExp]";
      }
      exports.isRegExp = isRegExp;
      exports.types.isRegExp = isRegExp;
      function isObject2(arg) {
        return typeof arg === "object" && arg !== null;
      }
      exports.isObject = isObject2;
      function isDate(d2) {
        return isObject2(d2) && objectToString(d2) === "[object Date]";
      }
      exports.isDate = isDate;
      exports.types.isDate = isDate;
      function isError(e3) {
        return isObject2(e3) && (objectToString(e3) === "[object Error]" || e3 instanceof Error);
      }
      exports.isError = isError;
      exports.types.isNativeError = isError;
      function isFunction(arg) {
        return typeof arg === "function";
      }
      exports.isFunction = isFunction;
      function isPrimitive2(arg) {
        return arg === null || typeof arg === "boolean" || typeof arg === "number" || typeof arg === "string" || typeof arg === "symbol" || typeof arg === "undefined";
      }
      exports.isPrimitive = isPrimitive2;
      exports.isBuffer = isBuffer2;
      function objectToString(o2) {
        return Object.prototype.toString.call(o2);
      }
      function pad(n2) {
        return n2 < 10 ? "0" + n2.toString(10) : n2.toString(10);
      }
      var months = [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ];
      function timestamp() {
        var d2 = new Date();
        var time = [
          pad(d2.getHours()),
          pad(d2.getMinutes()),
          pad(d2.getSeconds())
        ].join(":");
        return [d2.getDate(), months[d2.getMonth()], time].join(" ");
      }
      exports.log = function() {
        console.log("%s - %s", timestamp(), exports.format.apply(exports, arguments));
      };
      exports.inherits = inherits.exports;
      exports._extend = function(origin, add) {
        if (!add || !isObject2(add))
          return origin;
        var keys3 = Object.keys(add);
        var i3 = keys3.length;
        while (i3--) {
          origin[keys3[i3]] = add[keys3[i3]];
        }
        return origin;
      };
      function hasOwnProperty4(obj, prop) {
        return Object.prototype.hasOwnProperty.call(obj, prop);
      }
      var kCustomPromisifiedSymbol = typeof Symbol !== "undefined" ? Symbol("util.promisify.custom") : void 0;
      exports.promisify = function promisify2(original) {
        if (typeof original !== "function")
          throw new TypeError('The "original" argument must be of type Function');
        if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
          var fn = original[kCustomPromisifiedSymbol];
          if (typeof fn !== "function") {
            throw new TypeError('The "util.promisify.custom" argument must be of type Function');
          }
          Object.defineProperty(fn, kCustomPromisifiedSymbol, {
            value: fn,
            enumerable: false,
            writable: false,
            configurable: true
          });
          return fn;
        }
        function fn() {
          var promiseResolve, promiseReject;
          var promise = new Promise(function(resolve2, reject) {
            promiseResolve = resolve2;
            promiseReject = reject;
          });
          var args = [];
          for (var i3 = 0; i3 < arguments.length; i3++) {
            args.push(arguments[i3]);
          }
          args.push(function(err, value) {
            if (err) {
              promiseReject(err);
            } else {
              promiseResolve(value);
            }
          });
          try {
            original.apply(this, args);
          } catch (err) {
            promiseReject(err);
          }
          return promise;
        }
        Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
        if (kCustomPromisifiedSymbol)
          Object.defineProperty(fn, kCustomPromisifiedSymbol, {
            value: fn,
            enumerable: false,
            writable: false,
            configurable: true
          });
        return Object.defineProperties(fn, getOwnPropertyDescriptors(original));
      };
      exports.promisify.custom = kCustomPromisifiedSymbol;
      function callbackifyOnRejected(reason, cb) {
        if (!reason) {
          var newReason = new Error("Promise was rejected with a falsy value");
          newReason.reason = reason;
          reason = newReason;
        }
        return cb(reason);
      }
      function callbackify(original) {
        if (typeof original !== "function") {
          throw new TypeError('The "original" argument must be of type Function');
        }
        function callbackified() {
          var args = [];
          for (var i3 = 0; i3 < arguments.length; i3++) {
            args.push(arguments[i3]);
          }
          var maybeCb = args.pop();
          if (typeof maybeCb !== "function") {
            throw new TypeError("The last argument must be of type Function");
          }
          var self2 = this;
          var cb = function() {
            return maybeCb.apply(self2, arguments);
          };
          original.apply(this, args).then(function(ret) {
            process.nextTick(cb.bind(null, null, ret));
          }, function(rej) {
            process.nextTick(callbackifyOnRejected.bind(null, rej, cb));
          });
        }
        Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
        Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));
        return callbackified;
      }
      exports.callbackify = callbackify;
    })(util$1);
    __defProp8 = Object.defineProperty;
    __defProps6 = Object.defineProperties;
    __getOwnPropDescs6 = Object.getOwnPropertyDescriptors;
    __getOwnPropSymbols9 = Object.getOwnPropertySymbols;
    __hasOwnProp9 = Object.prototype.hasOwnProperty;
    __propIsEnum9 = Object.prototype.propertyIsEnumerable;
    __defNormalProp8 = (obj, key2, value) => key2 in obj ? __defProp8(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
    __spreadValues8 = (a2, b2) => {
      for (var prop in b2 || (b2 = {}))
        if (__hasOwnProp9.call(b2, prop))
          __defNormalProp8(a2, prop, b2[prop]);
      if (__getOwnPropSymbols9)
        for (var prop of __getOwnPropSymbols9(b2)) {
          if (__propIsEnum9.call(b2, prop))
            __defNormalProp8(a2, prop, b2[prop]);
        }
      return a2;
    };
    __spreadProps6 = (a2, b2) => __defProps6(a2, __getOwnPropDescs6(b2));
    _manifest2 = Object.assign(deserializeManifest2({ "routes": [{ "file": "", "links": [], "scripts": [], "routeData": { "type": "page", "pattern": "^\\/$", "segments": [], "params": [], "component": "src/pages/index.astro", "pathname": "/", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.66de8b0c.css", "assets/asset.3ee6da18.css", "assets/asset.c0f0e941.css", "assets/asset.79d9a383.css", "assets/asset.713551ad.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/en\\/?$", "segments": [[{ "content": "en", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/en/index.astro", "pathname": "/en", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.4d9c5fa3.css", "assets/asset.65f3117a.css", "assets/asset.66de8b0c.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/en\\/services\\/([^/]+?)\\/?$", "segments": [[{ "content": "en", "dynamic": false, "spread": false }], [{ "content": "services", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/en/services/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.6d59f92f.css", "assets/asset.edf35b89.css", "assets/asset.cc80275b.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/en\\/about\\/?$", "segments": [[{ "content": "en", "dynamic": false, "spread": false }], [{ "content": "about", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/en/about.astro", "pathname": "/en/about", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.edf35b89.css", "assets/asset.337befd3.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/en\\/brief\\/?$", "segments": [[{ "content": "en", "dynamic": false, "spread": false }], [{ "content": "brief", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/en/brief.astro", "pathname": "/en/brief", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.3ee6da18.css", "assets/asset.04e4aca7.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/en\\/work\\/([^/]+?)\\/?$", "segments": [[{ "content": "en", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/en/work/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.edf35b89.css", "assets/asset.9fa0a0bb.css", "assets/asset.bbe8752c.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/en\\/work\\/?$", "segments": [[{ "content": "en", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/en/work.astro", "pathname": "/en/work", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.66de8b0c.css", "assets/asset.3ee6da18.css", "assets/asset.79d9a383.css", "assets/asset.c0f0e941.css", "assets/asset.713551ad.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/es\\/?$", "segments": [[{ "content": "es", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/es/index.astro", "pathname": "/es", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.4d9c5fa3.css", "assets/asset.66de8b0c.css", "assets/asset.20759893.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/es\\/services\\/([^/]+?)\\/?$", "segments": [[{ "content": "es", "dynamic": false, "spread": false }], [{ "content": "services", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/es/services/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.6d59f92f.css", "assets/asset.edf35b89.css", "assets/asset.79d9a383.css", "assets/asset.0d4cc372.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/es\\/about\\/?$", "segments": [[{ "content": "es", "dynamic": false, "spread": false }], [{ "content": "about", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/es/about.astro", "pathname": "/es/about", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.edf35b89.css", "assets/asset.337befd3.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/es\\/brief\\/?$", "segments": [[{ "content": "es", "dynamic": false, "spread": false }], [{ "content": "brief", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/es/brief.astro", "pathname": "/es/brief", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.3ee6da18.css", "assets/asset.04e4aca7.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/es\\/work\\/([^/]+?)\\/?$", "segments": [[{ "content": "es", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/es/work/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.edf35b89.css", "assets/asset.9fa0a0bb.css", "assets/asset.bbe8752c.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/es\\/work\\/?$", "segments": [[{ "content": "es", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/es/work.astro", "pathname": "/es/work", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.c0f0e941.css", "assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.66de8b0c.css", "assets/asset.3ee6da18.css", "assets/asset.79d9a383.css", "assets/asset.713551ad.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/pl\\/?$", "segments": [[{ "content": "pl", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/pl/index.astro", "pathname": "/pl", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.4d9c5fa3.css", "assets/asset.66de8b0c.css", "assets/asset.fe0f7d65.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/pl\\/services\\/([^/]+?)\\/?$", "segments": [[{ "content": "pl", "dynamic": false, "spread": false }], [{ "content": "services", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/pl/services/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.6d59f92f.css", "assets/asset.edf35b89.css", "assets/asset.79d9a383.css", "assets/asset.0e7e55c7.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/pl\\/about\\/?$", "segments": [[{ "content": "pl", "dynamic": false, "spread": false }], [{ "content": "about", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/pl/about.astro", "pathname": "/pl/about", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.edf35b89.css", "assets/asset.337befd3.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/pl\\/brief\\/?$", "segments": [[{ "content": "pl", "dynamic": false, "spread": false }], [{ "content": "brief", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/pl/brief.astro", "pathname": "/pl/brief", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.3ee6da18.css", "assets/asset.2e3c7375.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/pl\\/work\\/([^/]+?)\\/?$", "segments": [[{ "content": "pl", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/pl/work/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.edf35b89.css", "assets/asset.bbe8752c.css", "assets/asset.79d9a383.css", "assets/asset.9fa0a0bb.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/pl\\/work\\/?$", "segments": [[{ "content": "pl", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/pl/work.astro", "pathname": "/pl/work", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.c0f0e941.css", "assets/asset.66de8b0c.css", "assets/asset.3ee6da18.css", "assets/asset.79d9a383.css", "assets/asset.713551ad.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ru\\/?$", "segments": [[{ "content": "ru", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/ru/index.astro", "pathname": "/ru", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.4d9c5fa3.css", "assets/asset.66de8b0c.css", "assets/asset.79d9a383.css", "assets/asset.65f3117a.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ru\\/services\\/([^/]+?)\\/?$", "segments": [[{ "content": "ru", "dynamic": false, "spread": false }], [{ "content": "services", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/ru/services/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.6d59f92f.css", "assets/asset.edf35b89.css", "assets/asset.79d9a383.css", "assets/asset.cc80275b.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ru\\/about\\/?$", "segments": [[{ "content": "ru", "dynamic": false, "spread": false }], [{ "content": "about", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/ru/about.astro", "pathname": "/ru/about", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.edf35b89.css", "assets/asset.337befd3.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ru\\/brief\\/?$", "segments": [[{ "content": "ru", "dynamic": false, "spread": false }], [{ "content": "brief", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/ru/brief.astro", "pathname": "/ru/brief", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.3ee6da18.css", "assets/asset.04e4aca7.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ru\\/work\\/([^/]+?)\\/?$", "segments": [[{ "content": "ru", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/ru/work/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.edf35b89.css", "assets/asset.9fa0a0bb.css", "assets/asset.bbe8752c.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ru\\/work\\/?$", "segments": [[{ "content": "ru", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/ru/work.astro", "pathname": "/ru/work", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.66de8b0c.css", "assets/asset.3ee6da18.css", "assets/asset.79d9a383.css", "assets/asset.c0f0e941.css", "assets/asset.713551ad.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/tr\\/?$", "segments": [[{ "content": "tr", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/tr/index.astro", "pathname": "/tr", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.4d9c5fa3.css", "assets/asset.66de8b0c.css", "assets/asset.79d9a383.css", "assets/asset.65f3117a.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/tr\\/services\\/([^/]+?)\\/?$", "segments": [[{ "content": "tr", "dynamic": false, "spread": false }], [{ "content": "services", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/tr/services/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.cc80275b.css", "assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.6d59f92f.css", "assets/asset.edf35b89.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/tr\\/about\\/?$", "segments": [[{ "content": "tr", "dynamic": false, "spread": false }], [{ "content": "about", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/tr/about.astro", "pathname": "/tr/about", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.edf35b89.css", "assets/asset.337befd3.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/tr\\/brief\\/?$", "segments": [[{ "content": "tr", "dynamic": false, "spread": false }], [{ "content": "brief", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/tr/brief.astro", "pathname": "/tr/brief", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.04e4aca7.css", "assets/asset.3ee6da18.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/tr\\/work\\/([^/]+?)\\/?$", "segments": [[{ "content": "tr", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/tr/work/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.edf35b89.css", "assets/asset.9fa0a0bb.css", "assets/asset.bbe8752c.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/tr\\/work\\/?$", "segments": [[{ "content": "tr", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/tr/work.astro", "pathname": "/tr/work", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.66de8b0c.css", "assets/asset.3ee6da18.css", "assets/asset.79d9a383.css", "assets/asset.c0f0e941.css", "assets/asset.713551ad.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ua\\/?$", "segments": [[{ "content": "ua", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/ua/index.astro", "pathname": "/ua", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.4d9c5fa3.css", "assets/asset.66de8b0c.css", "assets/asset.65f3117a.css", "assets/asset.79d9a383.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ua\\/services\\/([^/]+?)\\/?$", "segments": [[{ "content": "ua", "dynamic": false, "spread": false }], [{ "content": "services", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/ua/services/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.6d59f92f.css", "assets/asset.edf35b89.css", "assets/asset.79d9a383.css", "assets/asset.cc80275b.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ua\\/about\\/?$", "segments": [[{ "content": "ua", "dynamic": false, "spread": false }], [{ "content": "about", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/ua/about.astro", "pathname": "/ua/about", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.edf35b89.css", "assets/asset.337befd3.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ua\\/brief\\/?$", "segments": [[{ "content": "ua", "dynamic": false, "spread": false }], [{ "content": "brief", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/ua/brief.astro", "pathname": "/ua/brief", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.f0d731c3.css", "assets/asset.0419d374.css", "assets/asset.4d9c5fa3.css", "assets/asset.c1cf99fc.css", "assets/asset.3ee6da18.css", "assets/asset.04e4aca7.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ua\\/work\\/([^/]+?)\\/?$", "segments": [[{ "content": "ua", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }]], "params": ["slug"], "component": "src/pages/ua/work/[slug].astro", "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": ["assets/asset.4d9c5fa3.css", "assets/asset.edf35b89.css", "assets/asset.bbe8752c.css", "assets/asset.79d9a383.css", "assets/asset.9fa0a0bb.css"], "scripts": ["entry.a7bbb060.js"], "routeData": { "type": "page", "pattern": "^\\/ua\\/work\\/?$", "segments": [[{ "content": "ua", "dynamic": false, "spread": false }], [{ "content": "work", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/ua/work.astro", "pathname": "/ua/work", "_meta": { "trailingSlash": "ignore" } } }], "base": "/", "markdown": { "mode": "mdx", "drafts": false, "syntaxHighlight": "shiki", "shikiConfig": { "langs": [], "theme": "github-dark", "wrap": false }, "remarkPlugins": [], "rehypePlugins": [] }, "pageMap": null, "renderers": [], "entryModules": { "@astrojs/solid-js/client.js": "entry.9c9d1692.js", "/@fs/C:/work-projects/pireactor/main-site/src/components/solid/LangPicker": "entry.4a1b77f9.js", "/@fs/C:/work-projects/pireactor/main-site/src/components/solid/Counter": "entry.736c6b9b.js", "/@fs/C:/work-projects/pireactor/main-site/src/components/solid/FormSubmit": "entry.e6a67f28.js", "astro/client/load.js": "entry.316778ed.js", "/astro/hoisted.js?q=0": "entry.a7bbb060.js", "/@fs/C:/work-projects/pireactor/main-site/src/components/solid/Form": "entry.e577ad92.js", "/@fs/C:/work-projects/pireactor/main-site/src/components/solid/Projects": "entry.dbd39899.js", "\0@astrojs-ssr-virtual-entry": "entry.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/content.md?mdImport": "chunks/chunk.c9d3957c.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/architecture.md?mdImport": "chunks/chunk.c6afcfdc.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/automation.md?mdImport": "chunks/chunk.c98e4cd0.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/blockchain.md?mdImport": "chunks/chunk.ec6459d7.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/strategy.md?mdImport": "chunks/chunk.d804232d.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/wallets.md?mdImport": "chunks/chunk.bf2e9b1c.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/AlexAlejandre.md?mdImport": "chunks/chunk.5790b932.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JohnVermazenSt.md?mdImport": "chunks/chunk.e09586c6.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JustynaBorwik.md?mdImport": "chunks/chunk.6b16a774.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/StevenVermazen.md?mdImport": "chunks/chunk.6c0c45b4.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/Brewery.md?mdImport": "chunks/chunk.c1a611e2.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope copy.md?mdImport": "chunks/chunk.1fa0ae9a.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope.md?mdImport": "chunks/chunk.8dce1602.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope2.md?mdImport": "chunks/chunk.f23f1ec4.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope3.md?mdImport": "chunks/chunk.b8b02486.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/content.md?mdImport": "chunks/chunk.a70b9817.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/architecture.md?mdImport": "chunks/chunk.b31d322e.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/automation.md?mdImport": "chunks/chunk.e89ab15e.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/blockchain.md?mdImport": "chunks/chunk.553bc06b.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/strategy.md?mdImport": "chunks/chunk.3c563026.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/wallets.md?mdImport": "chunks/chunk.165e007d.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/AlexAlejandre.md?mdImport": "chunks/chunk.efd8f2e3.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JohnVermazenSt.md?mdImport": "chunks/chunk.c3803efd.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JustynaBorwik.md?mdImport": "chunks/chunk.3f76bef5.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/StevenVermazen.md?mdImport": "chunks/chunk.2e39d252.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/content.md?mdImport": "chunks/chunk.7554dae3.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/architecture.md?mdImport": "chunks/chunk.7ab29271.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/automation.md?mdImport": "chunks/chunk.10e50542.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/blockchain.md?mdImport": "chunks/chunk.2b4629e3.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/strategy.md?mdImport": "chunks/chunk.67f22cca.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/wallets.md?mdImport": "chunks/chunk.d3d93e58.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/AlexAlejandre.md?mdImport": "chunks/chunk.41e9167d.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JohnVermazenSt.md?mdImport": "chunks/chunk.68fc1448.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JustynaBorwik.md?mdImport": "chunks/chunk.03a6dc40.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/StevenVermazen.md?mdImport": "chunks/chunk.6cf3c4a4.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/Brewery.md?mdImport": "chunks/chunk.0da3919e.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope copy.md?mdImport": "chunks/chunk.2e94afe0.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope.md?mdImport": "chunks/chunk.7d2c8f1b.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope2.md?mdImport": "chunks/chunk.31893b22.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope3.md?mdImport": "chunks/chunk.726d82cf.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/content.md?mdImport": "chunks/chunk.ad1611b2.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/content.md?mdImport": "chunks/chunk.ccb8540d.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/content.md?mdImport": "chunks/chunk.76ad3dcc.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/architecture.md?mdImport": "chunks/chunk.554d4dc5.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/automation.md?mdImport": "chunks/chunk.e38eb8e6.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/blockchain.md?mdImport": "chunks/chunk.9ece0295.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/strategy.md?mdImport": "chunks/chunk.2d3f63a8.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/wallets.md?mdImport": "chunks/chunk.39677201.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/architecture.md?mdImport": "chunks/chunk.9d601bcb.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/automation.md?mdImport": "chunks/chunk.0a29b555.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/blockchain.md?mdImport": "chunks/chunk.7363e747.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/strategy.md?mdImport": "chunks/chunk.d8c09329.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/wallets.md?mdImport": "chunks/chunk.873f2a22.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/architecture.md?mdImport": "chunks/chunk.52e3bf1b.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/automation.md?mdImport": "chunks/chunk.343126a2.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/blockchain.md?mdImport": "chunks/chunk.1c6f6212.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/strategy.md?mdImport": "chunks/chunk.2e67f1fb.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/wallets.md?mdImport": "chunks/chunk.1e8278ce.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/content.md": "chunks/chunk.5e16a30b.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/architecture.md": "chunks/chunk.3677723b.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/automation.md": "chunks/chunk.da1b1bde.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/blockchain.md": "chunks/chunk.9b8fee83.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/strategy.md": "chunks/chunk.72746ad1.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/services/wallets.md": "chunks/chunk.19b6c5b7.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/AlexAlejandre.md": "chunks/chunk.3c153e1e.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JohnVermazenSt.md": "chunks/chunk.7a3612d0.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/JustynaBorwik.md": "chunks/chunk.46294fba.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/leads/StevenVermazen.md": "chunks/chunk.4195bd29.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/Brewery.md": "chunks/chunk.2ba17b57.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope copy.md": "chunks/chunk.8f49727f.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope.md": "chunks/chunk.e3e3886d.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope2.md": "chunks/chunk.6ffd3df4.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/en/projects/NewHope3.md": "chunks/chunk.230d152d.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/content.md": "chunks/chunk.d1556035.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/architecture.md": "chunks/chunk.b863d8b9.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/automation.md": "chunks/chunk.1cb67a4f.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/blockchain.md": "chunks/chunk.568cb922.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/strategy.md": "chunks/chunk.14d8e118.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/services/wallets.md": "chunks/chunk.78b7c01d.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/AlexAlejandre.md": "chunks/chunk.6b6b6ee3.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JohnVermazenSt.md": "chunks/chunk.0048259b.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/JustynaBorwik.md": "chunks/chunk.63972846.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/es/leads/StevenVermazen.md": "chunks/chunk.36dcdcdf.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/content.md": "chunks/chunk.57376fd2.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/architecture.md": "chunks/chunk.0e9fcfce.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/automation.md": "chunks/chunk.dfd72786.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/blockchain.md": "chunks/chunk.b29fe0c0.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/strategy.md": "chunks/chunk.9f5a04b0.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/services/wallets.md": "chunks/chunk.21f33fcd.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/AlexAlejandre.md": "chunks/chunk.632e3996.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JohnVermazenSt.md": "chunks/chunk.d6e9935b.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/JustynaBorwik.md": "chunks/chunk.33615634.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/leads/StevenVermazen.md": "chunks/chunk.467e42e5.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/Brewery.md": "chunks/chunk.221beb90.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope copy.md": "chunks/chunk.44b418e6.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope.md": "chunks/chunk.a153f1a3.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope2.md": "chunks/chunk.23027b50.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/pl/projects/NewHope3.md": "chunks/chunk.a129f2f7.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/content.md": "chunks/chunk.0caf9a02.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/content.md": "chunks/chunk.a70c2eac.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/content.md": "chunks/chunk.e26d0b71.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/architecture.md": "chunks/chunk.aacb32d6.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/automation.md": "chunks/chunk.600d7c6f.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/blockchain.md": "chunks/chunk.6b97c041.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/strategy.md": "chunks/chunk.49fbd89e.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ru/services/wallets.md": "chunks/chunk.b4572d3d.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/architecture.md": "chunks/chunk.b63e5c2c.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/automation.md": "chunks/chunk.ce9b31c7.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/blockchain.md": "chunks/chunk.7fa87549.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/strategy.md": "chunks/chunk.45f8b216.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/tr/services/wallets.md": "chunks/chunk.444aaa1b.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/architecture.md": "chunks/chunk.0915290a.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/automation.md": "chunks/chunk.36eb4c82.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/blockchain.md": "chunks/chunk.6a4be6de.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/strategy.md": "chunks/chunk.d14f03b9.mjs", "C:/work-projects/pireactor/main-site/public/assets/content/ua/services/wallets.md": "chunks/chunk.e7391b23.mjs", "astro:scripts/before-hydration.js": "data:text/javascript;charset=utf-8,//[no before-hydration script]" }, "assets": ["/entry.316778ed.js", "/entry.4a1b77f9.js", "/entry.736c6b9b.js", "/entry.9c9d1692.js", "/entry.a7bbb060.js", "/entry.dbd39899.js", "/entry.e577ad92.js", "/entry.e6a67f28.js", "/favicon.ico", "/assets/asset.7ea2a113.css", "/chunks/chunk.779f1add.js", "/chunks/chunk.cb905574.js", "/chunks/chunk.d291af66.js", "/assets/content/en/content.md", "/assets/content/es/content.md", "/assets/content/pl/content.md", "/assets/content/ru/content.md", "/assets/content/tr/content.md", "/assets/content/ua/content.md", "/assets/fonts/AvantGardeCTT/AvantGardeCTT-Bold.woff", "/assets/fonts/AvantGardeCTT/AvantGardeCTT-Bold.woff2", "/assets/fonts/Inter/Inter-Bold.woff", "/assets/fonts/Inter/Inter-Bold.woff2", "/assets/fonts/Inter/Inter-Regular.woff", "/assets/fonts/Inter/Inter-Regular.woff2", "/assets/fonts/Inter/Inter-SemiBold.woff", "/assets/fonts/Inter/Inter-SemiBold.woff2", "/assets/fonts/PlusJakartaSans/PlusJakartaSans-Bold.woff", "/assets/fonts/PlusJakartaSans/PlusJakartaSans-Bold.woff2", "/assets/fonts/PlusJakartaSans/PlusJakartaSans-Medium.woff", "/assets/fonts/PlusJakartaSans/PlusJakartaSans-Medium.woff2", "/assets/fonts/PlusJakartaSans/PlusJakartaSans-Regular.woff", "/assets/fonts/PlusJakartaSans/PlusJakartaSans-Regular.woff2", "/assets/fonts/PlusJakartaSans/PlusJakartaSans-SemiBold.woff", "/assets/fonts/PlusJakartaSans/PlusJakartaSans-SemiBold.woff2", "/assets/img/about/about.svg", "/assets/img/footer/f.svg", "/assets/img/footer/in.svg", "/assets/img/footer/mail.svg", "/assets/img/footer/pin.svg", "/assets/img/footer/t.svg", "/assets/img/header/arrow.svg", "/assets/img/header/close.svg", "/assets/img/header/menu_btn.svg", "/assets/img/main/architecture.svg", "/assets/img/main/automation.svg", "/assets/img/main/backend.svg", "/assets/img/main/blockchain.svg", "/assets/img/main/building.svg", "/assets/img/main/cloud.svg", "/assets/img/main/data.svg", "/assets/img/main/defining.svg", "/assets/img/main/deployment.svg", "/assets/img/main/design.svg", "/assets/img/main/designing.svg", "/assets/img/main/frontend.svg", "/assets/img/main/how.webp", "/assets/img/main/how_mob.webp", "/assets/img/main/main.webp", "/assets/img/main/mainPage.svg", "/assets/img/main/maintenance.svg", "/assets/img/main/map.webp", "/assets/img/main/ml.svg", "/assets/img/main/planning.svg", "/assets/img/main/strategy.svg", "/assets/img/main/testing.svg", "/assets/img/main/wallets.svg", "/assets/img/project/check.svg", "/assets/img/project/d.svg", "/assets/img/works/clocks.svg", "/assets/img/works/des.svg", "/assets/img/works/dev.svg", "/assets/img/works/devs.svg", "/assets/img/works/star.svg", "/assets/img/works/star.webp", "/assets/img/works/strat.svg", "/assets/content/en/leads/AlexAlejandre.md", "/assets/content/en/leads/JohnVermazenSt.md", "/assets/content/en/leads/JustynaBorwik.md", "/assets/content/en/leads/StevenVermazen.md", "/assets/content/en/projects/Brewery.md", "/assets/content/en/projects/NewHope copy.md", "/assets/content/en/projects/NewHope.md", "/assets/content/en/projects/NewHope2.md", "/assets/content/en/projects/NewHope3.md", "/assets/content/en/services/architecture.md", "/assets/content/en/services/automation.md", "/assets/content/en/services/blockchain.md", "/assets/content/en/services/strategy.md", "/assets/content/en/services/wallets.md", "/assets/content/es/projects/Brewery.md", "/assets/content/es/projects/NewHope copy.md", "/assets/content/es/projects/NewHope.md", "/assets/content/es/projects/NewHope2.md", "/assets/content/es/projects/NewHope3.md", "/assets/content/es/services/architecture.md", "/assets/content/es/services/automation.md", "/assets/content/es/services/blockchain.md", "/assets/content/es/services/strategy.md", "/assets/content/es/services/wallets.md", "/assets/content/es/leads/AlexAlejandre.md", "/assets/content/es/leads/JohnVermazenSt.md", "/assets/content/es/leads/JustynaBorwik.md", "/assets/content/es/leads/StevenVermazen.md", "/assets/content/pl/leads/AlexAlejandre.md", "/assets/content/pl/leads/JohnVermazenSt.md", "/assets/content/pl/leads/JustynaBorwik.md", "/assets/content/pl/leads/StevenVermazen.md", "/assets/content/ru/leads/AlexAlejandre.md", "/assets/content/ru/leads/JohnVermazenSt.md", "/assets/content/ru/leads/JustynaBorwik.md", "/assets/content/ru/leads/StevenVermazen.md", "/assets/content/pl/services/architecture.md", "/assets/content/pl/services/automation.md", "/assets/content/pl/services/blockchain.md", "/assets/content/pl/services/strategy.md", "/assets/content/pl/services/wallets.md", "/assets/content/pl/projects/Brewery.md", "/assets/content/pl/projects/NewHope copy.md", "/assets/content/pl/projects/NewHope.md", "/assets/content/pl/projects/NewHope2.md", "/assets/content/pl/projects/NewHope3.md", "/assets/content/ru/projects/Brewery.md", "/assets/content/ru/projects/NewHope copy.md", "/assets/content/ru/projects/NewHope.md", "/assets/content/ru/projects/NewHope2.md", "/assets/content/ru/projects/NewHope3.md", "/assets/content/ru/services/architecture.md", "/assets/content/ru/services/automation.md", "/assets/content/ru/services/blockchain.md", "/assets/content/ru/services/strategy.md", "/assets/content/ru/services/wallets.md", "/assets/content/tr/leads/AlexAlejandre.md", "/assets/content/tr/leads/JohnVermazenSt.md", "/assets/content/tr/leads/JustynaBorwik.md", "/assets/content/tr/leads/StevenVermazen.md", "/assets/content/tr/projects/Brewery.md", "/assets/content/tr/projects/NewHope copy.md", "/assets/content/tr/projects/NewHope.md", "/assets/content/tr/projects/NewHope2.md", "/assets/content/tr/projects/NewHope3.md", "/assets/content/tr/services/architecture.md", "/assets/content/tr/services/automation.md", "/assets/content/tr/services/blockchain.md", "/assets/content/tr/services/strategy.md", "/assets/content/tr/services/wallets.md", "/assets/content/ua/leads/AlexAlejandre.md", "/assets/content/ua/leads/JohnVermazenSt.md", "/assets/content/ua/leads/JustynaBorwik.md", "/assets/content/ua/leads/StevenVermazen.md", "/assets/content/ua/projects/Brewery.md", "/assets/content/ua/projects/NewHope copy.md", "/assets/content/ua/projects/NewHope.md", "/assets/content/ua/projects/NewHope2.md", "/assets/content/ua/projects/NewHope3.md", "/assets/content/ua/services/architecture.md", "/assets/content/ua/services/automation.md", "/assets/content/ua/services/blockchain.md", "/assets/content/ua/services/strategy.md", "/assets/content/ua/services/wallets.md", "/assets/img/about/location/g.webp", "/assets/img/about/location/k.webp", "/assets/img/about/location/ny.webp", "/assets/img/about/team/1.webp", "/assets/img/about/team/2.webp", "/assets/img/about/team/3.webp", "/assets/img/about/team/4.webp", "/assets/asset.cc80275b.css", "/assets/asset.c0f0e941.css", "/assets/asset.f0d731c3.css", "/assets/asset.0419d374.css", "/assets/asset.4d9c5fa3.css", "/assets/asset.65f3117a.css", "/assets/asset.c1cf99fc.css", "/assets/asset.04e4aca7.css", "/assets/asset.6d59f92f.css", "/assets/asset.edf35b89.css", "/assets/asset.9fa0a0bb.css", "/assets/asset.66de8b0c.css", "/assets/asset.fe0f7d65.css", "/assets/asset.3ee6da18.css", "/assets/asset.bbe8752c.css", "/assets/asset.20759893.css", "/assets/asset.79d9a383.css", "/assets/asset.0d4cc372.css", "/assets/asset.337befd3.css", "/assets/asset.0e7e55c7.css", "/assets/asset.2e3c7375.css", "/assets/asset.713551ad.css"] }), {
      pageMap,
      renderers
    });
    _args = {};
    _exports = createExports(_manifest2, _args);
    handler = _exports["handler"];
    _start2 = "start";
    if (_start2 in netlify_functions_exports) {
      netlify_functions_exports[_start2](_manifest2, _args);
    }
  }
});
init_entry();
module.exports = __toCommonJS(entry_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  a,
  b,
  c,
  handler,
  r
});
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 *
 * @license MIT <https://opensource.org/licenses/MIT>
 * @author Lea Verou <https://lea.verou.me>
 * @namespace
 * @public
 */
/**
 * shortdash - https://github.com/bibig/node-shorthash
 *
 * @license
 *
 * (The MIT License)
 *
 * Copyright (c) 2013 Bibig <bibig@me.com>
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
//# sourceMappingURL=entry.js.map
